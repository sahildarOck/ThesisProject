revision_num,change_id,url,iteration_count,before_commit_id,after_commit_id,at_least_one_updated_java_file,T(created),T(merged),LOC changed,subject,message,cr_smell_lack_of_cr,cr_smell_ping_pong,cr_smell_sleeping_reviews,cr_smell_missing_context,cr_smell_large_changesets,cr_smell_review_buddies,at_least_one_cr_smell,code_smells_difference_count,is_increased
36099,I13427850a7993962bc6fdaba61fe314087255ac8,http://review.couchbase.org/#/c/36099,1,64d5934defa7f91411d1497785f66f521f0bbf54,4a3d5230be1f14664ccd2b1a85f63a6061408f1e,1,21/04/14,21/04/14,422,Adding separate response handling through a ringbuffer,"Adding separate response handling through a ringbuffer

Change-Id: I13427850a7993962bc6fdaba61fe314087255ac8",1,0,0,1,0,0,1,0,0
36134,If4d81f09e6e001eefb45d0367f360ac1e8d6d0b8,http://review.couchbase.org/#/c/36134,1,4a3d5230be1f14664ccd2b1a85f63a6061408f1e,f5bb525ce3d15fea9f8597216911d133e89d8a0e,1,22/04/14,22/04/14,755,Make cccp bootstrap work basically.,"Make cccp bootstrap work basically.

Change-Id: If4d81f09e6e001eefb45d0367f360ac1e8d6d0b8",1,0,0,1,1,0,1,1,1
36204,I9a8cac402bfbc18e7e9b3cbdbb9ad25d788ea25c,http://review.couchbase.org/#/c/36204,1,f5bb525ce3d15fea9f8597216911d133e89d8a0e,adcb5a7bd0b8a4cc02ce4658ad4e257dfef7b9d9,1,23/04/14,23/04/14,1038,"rxjava upgrade, msg refactoring.","rxjava upgrade, msg refactoring.

Change-Id: I9a8cac402bfbc18e7e9b3cbdbb9ad25d788ea25c",1,0,0,1,1,0,1,0,0
36211,I8c123087f8af137882690b7c76c528211b477532,http://review.couchbase.org/#/c/36211,1,adcb5a7bd0b8a4cc02ce4658ad4e257dfef7b9d9,e328aaf754c1d49adf0f902fa1e383403074ba52,1,23/04/14,23/04/14,150,make it pick up new configs (add).,"make it pick up new configs (add).

Change-Id: I8c123087f8af137882690b7c76c528211b477532",1,0,0,1,0,0,1,0,0
36214,Ic9eca3834efe2506287157c81a7cb6fa1e23283b,http://review.couchbase.org/#/c/36214,1,e328aaf754c1d49adf0f902fa1e383403074ba52,717f42848f7251b734ba7add70ed95a4826e9691,1,23/04/14,23/04/14,803,more binary operators and some integration tests.,"more binary operators and some integration tests.

Change-Id: Ic9eca3834efe2506287157c81a7cb6fa1e23283b",1,0,0,1,1,0,1,1,1
36215,I44b4b9b8986bb5e19e4f786095c2aa353593beed,http://review.couchbase.org/#/c/36215,2,717f42848f7251b734ba7add70ed95a4826e9691,3f117c6d69311b42b2ef1aff76f1a4a6211e6c9b,1,23/04/14,23/04/14,196,adding remove and cas to responses.,"adding remove and cas to responses.

Change-Id: I44b4b9b8986bb5e19e4f786095c2aa353593beed",1,0,0,1,0,0,1,0,0
36291,Ie25691671ef0c15b4960f5e10e88ae543287dc92,http://review.couchbase.org/#/c/36291,1,3f117c6d69311b42b2ef1aff76f1a4a6211e6c9b,48191e88cd2c75816c40361a81152c0d643dc270,1,25/04/14,25/04/14,420,add very simple view capabilities (no streaming yet).,"add very simple view capabilities (no streaming yet).

Change-Id: Ie25691671ef0c15b4960f5e10e88ae543287dc92",1,0,0,1,0,0,1,0,0
36742,Idbede19e87676bc1d8a0b5088f5386e993ab3ffd,http://review.couchbase.org/#/c/36742,1,48191e88cd2c75816c40361a81152c0d643dc270,797e45e1f47674e66a3b0ee8dc4bba8d223e87e8,1,06/05/14,06/05/14,346,Make simple json stream parsing work for views.,"Make simple json stream parsing work for views.

Change-Id: Idbede19e87676bc1d8a0b5088f5386e993ab3ffd",1,0,0,1,0,0,1,2,1
36841,I9f237849444548c4460add058ca83b5c9da7e270,http://review.couchbase.org/#/c/36841,1,797e45e1f47674e66a3b0ee8dc4bba8d223e87e8,52b2faa19303d5c4cab5469c2dd74c2f530b5cf4,1,08/05/14,08/05/14,476,Adding the SASL handler.,"Adding the SASL handler.

Change-Id: I9f237849444548c4460add058ca83b5c9da7e270",1,0,0,1,0,0,1,0,0
36886,I27a30835102e706b9b9bd4724c962b784f105bdc,http://review.couchbase.org/#/c/36886,1,52b2faa19303d5c4cab5469c2dd74c2f530b5cf4,70fb16dff8567a2d3df9f470ef630a0cdcd859da,1,09/05/14,09/05/14,374,Make sasl auth work automatically.,"Make sasl auth work automatically.

Change-Id: I27a30835102e706b9b9bd4724c962b784f105bdc",1,0,0,1,0,0,1,0,0
36896,Ie9b1828812aac820c8821cdc7b5a1d8fdf848241,http://review.couchbase.org/#/c/36896,1,70fb16dff8567a2d3df9f470ef630a0cdcd859da,9dbd5806261900a58b35c5b29980f61ebe930164,1,09/05/14,09/05/14,284,Adding per-node services.,"Adding per-node services.

Change-Id: Ie9b1828812aac820c8821cdc7b5a1d8fdf848241",1,0,0,1,0,0,1,0,0
37025,Ibbeb050bb9da4ccbf1e7c0ac1112b25668bbb8d4,http://review.couchbase.org/#/c/37025,1,9dbd5806261900a58b35c5b29980f61ebe930164,bbfa04e2d1ef500c891cc345d42cbcd5f37d2972,1,13/05/14,13/05/14,35,ensuring jdk1.6 compat,"ensuring jdk1.6 compat

Change-Id: Ibbeb050bb9da4ccbf1e7c0ac1112b25668bbb8d4",1,0,0,1,0,0,1,0,0
37034,I1defc4280530cba31418a5b8f91a50c282529f80,http://review.couchbase.org/#/c/37034,1,bbfa04e2d1ef500c891cc345d42cbcd5f37d2972,eb1bbf8e699cefd1ac42db832a7c3d063aec204f,1,13/05/14,13/05/14,133,Adding SSL support without certificate verification.,"Adding SSL support without certificate verification.

Change-Id: I1defc4280530cba31418a5b8f91a50c282529f80",1,0,0,1,0,0,1,0,0
37069,I05a845ab2097b3c27b0a2edf199f1c1459da8e83,http://review.couchbase.org/#/c/37069,1,eb1bbf8e699cefd1ac42db832a7c3d063aec204f,cc0625035a00e7898a45c91faaa4e0f2b27ed41b,1,14/05/14,20/05/14,87,Implement SSL certificate validation through the JKS.,"Implement SSL certificate validation through the JKS.

Change-Id: I05a845ab2097b3c27b0a2edf199f1c1459da8e83",1,0,1,1,0,0,1,0,0
37273,I8c08c4e0835403179e553d4879897cec5182a9a2,http://review.couchbase.org/#/c/37273,1,cc0625035a00e7898a45c91faaa4e0f2b27ed41b,3b1521a8529b33c768f3c9060dca468be42e4782,1,19/05/14,20/05/14,1031,optimizations.,"optimizations.

Change-Id: I8c08c4e0835403179e553d4879897cec5182a9a2",1,0,0,1,1,0,1,1,1
37302,Idac227ff21d43fe2c2a7e5532ce7c6c513a7b241,http://review.couchbase.org/#/c/37302,1,3b1521a8529b33c768f3c9060dca468be42e4782,2b9beee0693c6221d8763b5c882d71fa165cf536,1,20/05/14,20/05/14,2660,Backporting codec-memcache to 4.0 netty.,"Backporting codec-memcache to 4.0 netty.

Change-Id: Idac227ff21d43fe2c2a7e5532ce7c6c513a7b241",1,0,0,1,1,0,1,2,1
37309,Ieaf8e029fb7a32d9ce1acb95b621310cebc8599e,http://review.couchbase.org/#/c/37309,1,2b9beee0693c6221d8763b5c882d71fa165cf536,ae1bad879481073214fd5f8ac9464c37a343cc7a,1,20/05/14,20/05/14,42,Fixing build errors for java 6.,"Fixing build errors for java 6.

Change-Id: Ieaf8e029fb7a32d9ce1acb95b621310cebc8599e",1,0,0,1,0,0,1,0,0
37310,Ia545840c63ca3d89aa148bbd81a5b9b5ee95c1df,http://review.couchbase.org/#/c/37310,1,ae1bad879481073214fd5f8ac9464c37a343cc7a,b85aca6997d0db2c2a01e8dfafbf1c7fb5f06efb,1,20/05/14,20/05/14,6,docblock change.,"docblock change.

Change-Id: Ia545840c63ca3d89aa148bbd81a5b9b5ee95c1df",1,0,0,1,0,0,1,0,0
37313,I9cf93d92d81d4909ee29cb9c5b6529700b308d55,http://review.couchbase.org/#/c/37313,1,b85aca6997d0db2c2a01e8dfafbf1c7fb5f06efb,237ba4d76aac62bf00c137d8b9cbedcd61d5f1b6,1,20/05/14,20/05/14,314,adding support for disconnect.,"adding support for disconnect.

Change-Id: I9cf93d92d81d4909ee29cb9c5b6529700b308d55",1,0,0,1,0,0,1,0,0
37381,Id7a94cb142230a24060cb43563266c76d9ed48f8,http://review.couchbase.org/#/c/37381,2,237ba4d76aac62bf00c137d8b9cbedcd61d5f1b6,93023c94ddbcfcb2be2616921e4863ee6a3a23d9,1,21/05/14,21/05/14,536,Adding basic support for n1ql.,"Adding basic support for n1ql.

Change-Id: Id7a94cb142230a24060cb43563266c76d9ed48f8",1,0,0,1,1,0,1,0,0
37437,I21b19390eb4b880581046154bd52f110307525a0,http://review.couchbase.org/#/c/37437,1,93023c94ddbcfcb2be2616921e4863ee6a3a23d9,f188b6c7221873d3a72907b80c46accdbfec27b8,1,22/05/14,22/05/14,774,Adding support for:,"Adding support for:

	- Http bootstrap (terse and non-terse as fallback).
	- rebalance in support for carrier only through NMVB.

This is the first set of changes which will enable rebalance support.

Change-Id: I21b19390eb4b880581046154bd52f110307525a0",1,0,0,0,1,0,1,0,0
37491,Ie32d68962fcbce9d705bbfa2e3bd705c52face4c,http://review.couchbase.org/#/c/37491,1,f188b6c7221873d3a72907b80c46accdbfec27b8,8dd006a0c5bb249802e71f5d4b2a772dc146c206,1,23/05/14,23/05/14,144,more work on retry.,"more work on retry.

Change-Id: Ie32d68962fcbce9d705bbfa2e3bd705c52face4c",1,0,0,1,0,0,1,0,0
37499,If4d9482a2115b950ca5d35d17ee884a9cd727cbe,http://review.couchbase.org/#/c/37499,1,8dd006a0c5bb249802e71f5d4b2a772dc146c206,9803e64611102ec6b0daa9efed96475565617f18,1,23/05/14,23/05/14,5,fix memleaks and change artifact name,"fix memleaks and change artifact name

Change-Id: If4d9482a2115b950ca5d35d17ee884a9cd727cbe",1,0,0,1,0,0,1,0,0
37502,I5b21c265d414e93151a196f9eeaa0f6c87d636dc,http://review.couchbase.org/#/c/37502,1,9803e64611102ec6b0daa9efed96475565617f18,9fb273893121b18793655a38160f4693b288f454,0,23/05/14,23/05/14,69,source and javadoc gen.,"source and javadoc gen.

Change-Id: I5b21c265d414e93151a196f9eeaa0f6c87d636dc",1,0,0,1,0,0,1,NA,NA
37503,Ice39b1649c352a9ee15014f219278f1bda4383d4,http://review.couchbase.org/#/c/37503,1,9fb273893121b18793655a38160f4693b288f454,110d58db44684d3a8f98cec186a562410f93c672,0,23/05/14,23/05/14,2,start work on 0.2,"start work on 0.2

Change-Id: Ice39b1649c352a9ee15014f219278f1bda4383d4",1,0,0,1,0,0,1,NA,NA
37585,I36c24abcc30c5eaa5244409ca9447990389791db,http://review.couchbase.org/#/c/37585,2,110d58db44684d3a8f98cec186a562410f93c672,a5ddf43df35d9abfd9a0889e5a2497277c42a999,1,26/05/14,26/05/14,943,WIP: hardening config loading and implementing proper unit tests.,"WIP: hardening config loading and implementing proper unit tests.

Change-Id: I36c24abcc30c5eaa5244409ca9447990389791db",0,0,0,1,1,0,1,0,0
37594,I4ac975d6f1769b521d304c403602f4eb4a9d1506,http://review.couchbase.org/#/c/37594,1,a5ddf43df35d9abfd9a0889e5a2497277c42a999,3dc431070a002c10ed36c045f4cd08bc7565312c,1,26/05/14,26/05/14,367,Proper fallback and manual disable of config loading.,"Proper fallback and manual disable of config loading.

Change-Id: I4ac975d6f1769b521d304c403602f4eb4a9d1506",1,0,0,1,0,0,1,0,0
37595,I55584a6cfbc5ab41ec82eeec64aaca8b86fe2174,http://review.couchbase.org/#/c/37595,1,3dc431070a002c10ed36c045f4cd08bc7565312c,036f4728bf230c042975b3ad89f0f23819f2c009,1,26/05/14,26/05/14,244,removing yet unneeded code.,"removing yet unneeded code.

Change-Id: I55584a6cfbc5ab41ec82eeec64aaca8b86fe2174",1,0,0,1,0,0,1,0,0
37702,I362b96cd8690b78fb7cda228b51c9d836f2b106d,http://review.couchbase.org/#/c/37702,1,036f4728bf230c042975b3ad89f0f23819f2c009,ed1feb7ff633034e0de5804d778fb4527d762ba6,1,30/05/14,30/05/14,647,"Upgrade RxJava, adding tuples and simple diagrams for config and state.","Upgrade RxJava, adding tuples and simple diagrams for config and state.

Change-Id: I362b96cd8690b78fb7cda228b51c9d836f2b106d",1,0,0,1,1,0,1,2,1
37703,Ia1d2839b3407727da3b42431b1c1b7a82f397c8a,http://review.couchbase.org/#/c/37703,1,ed1feb7ff633034e0de5804d778fb4527d762ba6,c7c88c945983a76ee07b2edd2cfe070aea2b7b41,1,30/05/14,03/06/14,891,implement basic http-based streaming config add nodes.,"implement basic http-based streaming config add nodes.

Change-Id: Ia1d2839b3407727da3b42431b1c1b7a82f397c8a",1,0,0,1,1,0,1,0,0
37772,Ia6d62ff1d937c4c8821855c5d03136dbb35c0b51,http://review.couchbase.org/#/c/37772,1,c7c88c945983a76ee07b2edd2cfe070aea2b7b41,857cf1bc205bef7c0ae2236b5a3f3e8e79c6e366,1,03/06/14,03/06/14,741,add simple reconfig and shutdown of nodes.,"add simple reconfig and shutdown of nodes.

Change-Id: Ia6d62ff1d937c4c8821855c5d03136dbb35c0b51",1,0,0,1,1,0,1,1,1
37829,I2f99a7c9b73c80f21f9d38952167266c522835d4,http://review.couchbase.org/#/c/37829,1,857cf1bc205bef7c0ae2236b5a3f3e8e79c6e366,86db612bd296a241a97766b702cf2cbc1ce5cddc,1,04/06/14,04/06/14,198,migrate to 0.19.0.,"migrate to 0.19.0.

Change-Id: I2f99a7c9b73c80f21f9d38952167266c522835d4",1,0,0,1,0,0,1,0,0
38200,Iabe8e1e6aff8bf58fe463f6dfe61da38b84c392d,http://review.couchbase.org/#/c/38200,1,86db612bd296a241a97766b702cf2cbc1ce5cddc,7dbf38bfd0ac022a2daebfec13cfe5d32ece2b9f,1,12/06/14,12/06/14,944,better view handling and flush.,"better view handling and flush.

Change-Id: Iabe8e1e6aff8bf58fe463f6dfe61da38b84c392d",1,0,0,1,1,0,1,1,1
38224,Iba7b9a4acf5195ea6a389626c430d90a990b1baf,http://review.couchbase.org/#/c/38224,1,7dbf38bfd0ac022a2daebfec13cfe5d32ece2b9f,74d8a8e39b0c9a528b297a2063dd3cc523e4a8cf,1,13/06/14,13/06/14,104,more view codec tests.,"more view codec tests.

Change-Id: Iba7b9a4acf5195ea6a389626c430d90a990b1baf",1,0,0,1,0,0,1,0,0
38294,I0af56994d15c6c7b5866f552470a410d1aeb5ef9,http://review.couchbase.org/#/c/38294,1,74d8a8e39b0c9a528b297a2063dd3cc523e4a8cf,5703535e63ae21c055c65a7e669673d3fb61b006,1,14/06/14,14/06/14,443,JVMCBC-4: 3.0 style port propagation config support.,"JVMCBC-4: 3.0 style port propagation config support.

Change-Id: I0af56994d15c6c7b5866f552470a410d1aeb5ef9",1,0,0,1,0,0,1,0,0
38318,I0f61df3de10b9c9634e4130c0e0ed98520453073,http://review.couchbase.org/#/c/38318,1,5703535e63ae21c055c65a7e669673d3fb61b006,67a5f6f9a2df48c771d390607b85839288e7b15a,1,16/06/14,16/06/14,460,JVMCBC-5: Implement HELLO Command.,"JVMCBC-5: Implement HELLO Command.

Motivation
----------
The HELLO command can be used to negotiate certain features between server and client.
For now JSON and compression are supported for datatypes. Also, a config setting is
exposed which allows to manually disable and change thresholds.

Modifications
-------------
A new handler has been added to the pipeline which handles the HELLO negotation. If supported
it passes an event through the pipeline that gets picked up by the codec to influence its
behavior.

Result
------
HELLO with JSON and compression are now supported and configurable.

Change-Id: I0f61df3de10b9c9634e4130c0e0ed98520453073",1,0,0,0,0,0,1,3,1
38879,I1034443cdded728ec9a44933ad0241381dd2a027,http://review.couchbase.org/#/c/38879,5,67a5f6f9a2df48c771d390607b85839288e7b15a,e745f2c76a8f6f85ebba023a7809684f0f873b42,1,27/06/14,30/06/14,19,Added flags to GetResponse to re-implement binary storage format (content and flags) from Couchbase Java 1.x in 2.0 SDK.,"Added flags to GetResponse to re-implement binary storage format (content and flags) from Couchbase Java 1.x in 2.0 SDK.

Change-Id: I1034443cdded728ec9a44933ad0241381dd2a027",0,1,1,1,0,0,1,0,0
38964,I20b9dabdec539a384f867435d7a429412a01bccb,http://review.couchbase.org/#/c/38964,1,e745f2c76a8f6f85ebba023a7809684f0f873b42,d4c56aba76d40e9e824fdc980d3cbff7953c8269,1,30/06/14,30/06/14,334,Add integration tests for bucket opening.,"Add integration tests for bucket opening.

This changeset provides better and more consistent failing for certain
bucket open scenarios.

Change-Id: I20b9dabdec539a384f867435d7a429412a01bccb",0,0,0,0,0,0,0,0,0
38965,I3b57fcb9112f3883f05da4412fc30fedbf0c1fcb,http://review.couchbase.org/#/c/38965,1,d4c56aba76d40e9e824fdc980d3cbff7953c8269,1442a2db766690afcaed699b4a33475e98b080a6,1,30/06/14,30/06/14,16,Adding auth capabilities for view codec.,"Adding auth capabilities for view codec.

Change-Id: I3b57fcb9112f3883f05da4412fc30fedbf0c1fcb",1,0,0,1,0,0,1,0,0
38971,Id334565828d67993b4db036debea33c57588c80f,http://review.couchbase.org/#/c/38971,6,1442a2db766690afcaed699b4a33475e98b080a6,5ccd6074f45c1ed4987e1c0b954ac8714632495e,1,30/06/14,03/07/14,765,WIP: cccp rebalance.,"WIP: cccp rebalance.

Change-Id: Id334565828d67993b4db036debea33c57588c80f",1,1,0,1,1,0,1,1,1
39083,I2df2d64985e59c81b15cc75b6cf648cf77596427,http://review.couchbase.org/#/c/39083,1,5ccd6074f45c1ed4987e1c0b954ac8714632495e,85d6685aa27070b47644dba3190733c5951b20fa,1,03/07/14,03/07/14,38,JVMCBC-1: Implement basic support for http config management.,"JVMCBC-1: Implement basic support for http config management.

Change-Id: I2df2d64985e59c81b15cc75b6cf648cf77596427",1,0,0,1,0,0,1,0,0
39085,I687bddae078a5af468ad2bf06db9c62533a0703e,http://review.couchbase.org/#/c/39085,1,85d6685aa27070b47644dba3190733c5951b20fa,7c2b012b60736834c0f91416b54d1aaaad4b98c8,1,03/07/14,03/07/14,47,javadoc complaints.,"javadoc complaints.

Change-Id: I687bddae078a5af468ad2bf06db9c62533a0703e",1,0,0,1,0,0,1,0,0
39156,I82f3f3519dfdaa0fac2da580b60810985e673bde,http://review.couchbase.org/#/c/39156,1,c5dc9682386c188e9a290ba54fe6717085283645,2fd67080844f2b6539c9571a5a87dfc71350c617,1,07/07/14,07/07/14,8,Fix http auth related leaks.,"Fix http auth related leaks.

Change-Id: I82f3f3519dfdaa0fac2da580b60810985e673bde",1,0,0,1,0,0,1,0,0
39160,I773770bc6123f7dba158343ac4d33196205a1405,http://review.couchbase.org/#/c/39160,1,2fd67080844f2b6539c9571a5a87dfc71350c617,466b5875e792e4ea04e6ae3108bc1c967ac49b7e,0,07/07/14,07/07/14,2,Releasing 0.2,"Releasing 0.2

Change-Id: I773770bc6123f7dba158343ac4d33196205a1405",1,0,0,1,0,0,1,NA,NA
39263,Iaf2423a4106a64bd12ba9d7b4dbadfaefc75e44c,http://review.couchbase.org/#/c/39263,1,145d7cec35f3cabbf475a2719244624bc031172c,c890e6512f77341986bbe8bb3c8cbd440ebdc629,1,10/07/14,10/07/14,155,supporting code for replica get,"supporting code for replica get

Change-Id: Iaf2423a4106a64bd12ba9d7b4dbadfaefc75e44c",1,0,0,1,0,0,1,1,1
39266,I395094fe62bab790265b8264befb5d82443505eb,http://review.couchbase.org/#/c/39266,1,c890e6512f77341986bbe8bb3c8cbd440ebdc629,97f224ef37b50e599d2966663c7ae33f49f061a3,1,10/07/14,10/07/14,37,Make sure if all buckets removed all the nodes are removed.,"Make sure if all buckets removed all the nodes are removed.

Change-Id: I395094fe62bab790265b8264befb5d82443505eb",0,0,0,1,0,0,1,0,0
39406,I0b3aaf441d7e28f8ae907da1937743982d239dd0,http://review.couchbase.org/#/c/39406,1,97f224ef37b50e599d2966663c7ae33f49f061a3,e1177c9a6f9b1210b6faecb4df627b1cf6247262,1,15/07/14,15/07/14,153,Adding support for counter,"Adding support for counter

Change-Id: I0b3aaf441d7e28f8ae907da1937743982d239dd0",1,0,0,1,0,0,1,0,0
39413,I86425c79ab547b45cf3181524a41fdab8407667c,http://review.couchbase.org/#/c/39413,1,e1177c9a6f9b1210b6faecb4df627b1cf6247262,e375c5fb5aefabb3de1cd77f6f2e341170baa8f3,1,15/07/14,15/07/14,106,Add support for get + lock / get + touch,"Add support for get + lock / get + touch

Change-Id: I86425c79ab547b45cf3181524a41fdab8407667c",1,0,0,1,0,0,1,0,0
39433,Ie5f383f61ad00d656b5dd637a08aba3ef150c5d4,http://review.couchbase.org/#/c/39433,1,e375c5fb5aefabb3de1cd77f6f2e341170baa8f3,c1b31a267fa01222c14abf223c14928af93fee27,1,16/07/14,16/07/14,184,Add support for touch and unlock.,"Add support for touch and unlock.

Change-Id: Ie5f383f61ad00d656b5dd637a08aba3ef150c5d4",1,0,0,1,0,0,1,0,0
39480,Ib847413dffe05feab44709a30178d081ab40a8e5,http://review.couchbase.org/#/c/39480,1,c1b31a267fa01222c14abf223c14928af93fee27,db2a741b83d13f23c209e6a35a971a33cd8308f8,1,17/07/14,17/07/14,175,First pass at observe support.,"First pass at observe support.

Change-Id: Ib847413dffe05feab44709a30178d081ab40a8e5",1,0,0,1,0,0,1,1,1
39527,Iabd357f3476218f593b8c3f420635a1f2339f617,http://review.couchbase.org/#/c/39527,1,db2a741b83d13f23c209e6a35a971a33cd8308f8,ca6474dccb531fc7b7dc588d46e45738f6dfdd59,0,18/07/14,18/07/14,2,Back to 0.19 for now,"Back to 0.19 for now

Change-Id: Iabd357f3476218f593b8c3f420635a1f2339f617",1,0,0,1,0,0,1,NA,NA
39741,I356217d19bde57767e6f0e2bd1eb6db882970c13,http://review.couchbase.org/#/c/39741,9,e4c79226c30dab1b36d95f3ef6aa7e0791ad47c7,0a44a15e0bd75dc309e3094bf50b063ef3666c80,1,23/07/14,04/08/14,7195,WIP: Endpoint refactoring.,"WIP: Endpoint refactoring.

- Consolidates the generic handler with the actual endpoint handler for better utilization
- Cleanup and unit tests

Change-Id: I356217d19bde57767e6f0e2bd1eb6db882970c13",1,1,0,0,1,0,1,0,0
40253,I7d521465b7b9c08a971c869bd70190f882d1ebb9,http://review.couchbase.org/#/c/40253,1,0a44a15e0bd75dc309e3094bf50b063ef3666c80,171438ad8c7dc603ef0f711f983d20d8e63137ac,1,04/08/14,04/08/14,1892,Refactor configuration handling.,"Refactor configuration handling.

This changeset gets rid of the config depdencency and adds all needed properties for the
environment with an elegant builder which also respects system properties that take
precedence. The architecture also allows to be later extended on dynamic properties
that can either poll during the app lifetime or also be exposed through JMX.

Change-Id: I7d521465b7b9c08a971c869bd70190f882d1ebb9",1,0,0,0,1,0,1,4,1
40254,Ic8670ad4d393b9aad0d789e1a637f71cf826b846,http://review.couchbase.org/#/c/40254,1,171438ad8c7dc603ef0f711f983d20d8e63137ac,f55980475d8f520b51ec6e805615995f51d24d2c,0,04/08/14,04/08/14,2,Update RxJava to 0.20.0-RC4,"Update RxJava to 0.20.0-RC4

Change-Id: Ic8670ad4d393b9aad0d789e1a637f71cf826b846",1,0,0,1,0,0,1,NA,NA
40261,I8e3ac8849a498be947f8292eee64c135682533f8,http://review.couchbase.org/#/c/40261,1,f55980475d8f520b51ec6e805615995f51d24d2c,860a5ba7b5d36130c9e88e3c54acb5a77ca8876b,1,04/08/14,04/08/14,4286,Add better logging and package jars.,"Add better logging and package jars.

Change-Id: I8e3ac8849a498be947f8292eee64c135682533f8",1,0,0,1,1,0,1,4,1
40377,Idc1135403ae1a9fba9a2930ae81f25997ddcbae1,http://review.couchbase.org/#/c/40377,1,860a5ba7b5d36130c9e88e3c54acb5a77ca8876b,9c434fac514813e0c172006ab182b93980efc987,1,07/08/14,07/08/14,290,Support for DesignDocuments.,"Support for DesignDocuments.

Change-Id: Idc1135403ae1a9fba9a2930ae81f25997ddcbae1",1,0,0,1,0,0,1,2,1
40499,I3c06891a9381743189c647b491ef1e28174972af,http://review.couchbase.org/#/c/40499,1,9c434fac514813e0c172006ab182b93980efc987,652d4af361be806e5f5b3ccb58bdffc6856dfe90,1,11/08/14,11/08/14,144,Adding support for append/prepend,"Adding support for append/prepend

Change-Id: I3c06891a9381743189c647b491ef1e28174972af",1,0,0,1,0,0,1,0,0
40535,If0cc02ba958cba0abd827d4cb19c546301fc3b75,http://review.couchbase.org/#/c/40535,1,652d4af361be806e5f5b3ccb58bdffc6856dfe90,01c32ee6d7d820e920e98a35aa5872c0aa4866f4,1,12/08/14,12/08/14,8,respect reduced views without info.,"respect reduced views without info.

Change-Id: If0cc02ba958cba0abd827d4cb19c546301fc3b75",1,0,0,1,0,0,1,0,0
40563,Ibb472f6ed3ebd672c89e1033fa59590e4b6cdfb8,http://review.couchbase.org/#/c/40563,1,01c32ee6d7d820e920e98a35aa5872c0aa4866f4,9aef2a28ffb1778b9c8a99d04a69520a1a440660,1,13/08/14,13/08/14,18,Make sure to only info-log add/remove node if needed.,"Make sure to only info-log add/remove node if needed.

Change-Id: Ibb472f6ed3ebd672c89e1033fa59590e4b6cdfb8",1,0,0,1,0,0,1,0,0
40566,I68d04b1f43a6fb1ae578ff71682d818133944431,http://review.couchbase.org/#/c/40566,1,9aef2a28ffb1778b9c8a99d04a69520a1a440660,229cf44a28937cb8c48f348cae6102dca09095d9,0,13/08/14,13/08/14,2,release 0.3,"release 0.3

Change-Id: I68d04b1f43a6fb1ae578ff71682d818133944431",1,0,0,1,0,0,1,NA,NA
40571,I07a53f606d7985b6624e5dd9b41510e9e510e0dd,http://review.couchbase.org/#/c/40571,1,229cf44a28937cb8c48f348cae6102dca09095d9,d5fa2d1a389467ccc17fd978dde07f143c08dd30,0,13/08/14,13/08/14,2,start work on 1.0.0 beta,"start work on 1.0.0 beta

Change-Id: I07a53f606d7985b6624e5dd9b41510e9e510e0dd",1,0,0,1,0,0,1,NA,NA
40693,I05880eaa14aa7301921eb0aa71759596d29e42ff,http://review.couchbase.org/#/c/40693,1,d5fa2d1a389467ccc17fd978dde07f143c08dd30,30b5780f4b422e6be5e528c0ff5905473fd431f3,1,18/08/14,18/08/14,1255,JVMCBC-15: Simplify Environment.,"JVMCBC-15: Simplify Environment.

Change-Id: I05880eaa14aa7301921eb0aa71759596d29e42ff",1,0,0,1,1,0,1,0,0
40723,I54a4109007396d43c768afd6aac08100ed4507b6,http://review.couchbase.org/#/c/40723,1,30b5780f4b422e6be5e528c0ff5905473fd431f3,6ce1e4127837ac237cae17e3cdca10d33b790d04,1,19/08/14,19/08/14,570,JVMCBC-13: Ignore failing tests for now.,"JVMCBC-13: Ignore failing tests for now.

The failures are expected since the tests need to be reworked slightly.
Also, some dependencies have been upgraded and a slight cleanup has
been made.

Change-Id: I54a4109007396d43c768afd6aac08100ed4507b6",1,0,0,0,1,0,1,-3,0
40725,I6209050caeb2f778f88aaf2d095713373559c56f,http://review.couchbase.org/#/c/40725,1,6ce1e4127837ac237cae17e3cdca10d33b790d04,ed58ff0add5ffd18c15a79f76bc637e3f225d575,1,19/08/14,19/08/14,186,Adapt logging namings.,"Adapt logging namings.

Change-Id: I6209050caeb2f778f88aaf2d095713373559c56f",1,0,0,1,0,0,1,0,0
40778,I8618cc126bc99c258e1b06794ef0df70675ad0ab,http://review.couchbase.org/#/c/40778,1,ed58ff0add5ffd18c15a79f76bc637e3f225d575,a13143bd62963b4a95b1c646c24a45b6a86378f5,1,21/08/14,21/08/14,41,JVMCBC-17: Revise system properties and names on environment.,"JVMCBC-17: Revise system properties and names on environment.

Change-Id: I8618cc126bc99c258e1b06794ef0df70675ad0ab",1,0,0,1,0,0,1,0,0
40781,Idcd300382dbdb35620bb5318d9e6af8ee6739661,http://review.couchbase.org/#/c/40781,1,a13143bd62963b4a95b1c646c24a45b6a86378f5,95d024a351b29cc71a62023452828879ec2d22c8,1,21/08/14,21/08/14,192,Cleanup.,"Cleanup.

Change-Id: Idcd300382dbdb35620bb5318d9e6af8ee6739661",1,0,0,1,0,0,1,0,0
40782,I074ba23e942f3b9a13a64529b566d5175c373d38,http://review.couchbase.org/#/c/40782,1,95d024a351b29cc71a62023452828879ec2d22c8,8c6148a06de807d8d76c5e7a98f41a4b8cc5aee1,1,21/08/14,21/08/14,1776,Adding missing copyright headers.,"Adding missing copyright headers.

Change-Id: I074ba23e942f3b9a13a64529b566d5175c373d38",1,0,0,1,1,0,1,0,0
40783,I99f5a9be1a85929db79b3d6c22b730d276ecea50,http://review.couchbase.org/#/c/40783,1,8c6148a06de807d8d76c5e7a98f41a4b8cc5aee1,272d3962474a1bc48e497c0741fa4839654ac52d,1,21/08/14,21/08/14,135,JVMCBC-20: make sure $HOST is substituted in refresher.,"JVMCBC-20: make sure $HOST is substituted in refresher.

Change-Id: I99f5a9be1a85929db79b3d6c22b730d276ecea50",1,0,0,1,0,0,1,0,0
40784,Ic75f247a45de8ae3ed73d4e6b6b1b86ffdfdcaec,http://review.couchbase.org/#/c/40784,1,272d3962474a1bc48e497c0741fa4839654ac52d,99999a64c984d608bb6dbd9871cbff1ec7605292,1,21/08/14,21/08/14,30,JVMCBC-7: Shuffle initial bootstrap host list.,"JVMCBC-7: Shuffle initial bootstrap host list.

Change-Id: Ic75f247a45de8ae3ed73d4e6b6b1b86ffdfdcaec",1,0,0,1,0,0,1,0,0
40787,I24fcda4380a6d86e6e9b2e44714edc21ace980a7,http://review.couchbase.org/#/c/40787,1,99999a64c984d608bb6dbd9871cbff1ec7605292,21ceb132dd77f7a9a177fecc03036631eda8462a,1,21/08/14,21/08/14,28,JVMCBC-16: make sure the env scheduler is used.,"JVMCBC-16: make sure the env scheduler is used.

Change-Id: I24fcda4380a6d86e6e9b2e44714edc21ace980a7",1,0,0,1,0,0,1,0,0
40791,I77b83b608d38c0f09f263ecd1d0a52019542aceb,http://review.couchbase.org/#/c/40791,1,21ceb132dd77f7a9a177fecc03036631eda8462a,0e22136d14ecd2103833bff4bb3b082651360d56,1,21/08/14,21/08/14,6,small fix to builder.,"small fix to builder.

Change-Id: I77b83b608d38c0f09f263ecd1d0a52019542aceb",1,0,0,1,0,0,1,0,0
40796,Ic431fb5cc44042c4dd557f8217fc331f933664ac,http://review.couchbase.org/#/c/40796,1,0e22136d14ecd2103833bff4bb3b082651360d56,77f99fcf129c434c24c0c988ac78a5f455cd875f,1,21/08/14,21/08/14,25,JVMCBC-22: Return immediately when no buckets are opened on disconnect.,"JVMCBC-22: Return immediately when no buckets are opened on disconnect.

Change-Id: Ic431fb5cc44042c4dd557f8217fc331f933664ac",1,0,0,1,0,0,1,0,0
40824,I383b60e0fec583c99620dd3cbfeb4c26e59ad125,http://review.couchbase.org/#/c/40824,1,77f99fcf129c434c24c0c988ac78a5f455cd875f,d72483d716f229f430bd4d0d63fe71d244202a52,1,22/08/14,22/08/14,6,Add support for general config load without hostname.,"Add support for general config load without hostname.

Change-Id: I383b60e0fec583c99620dd3cbfeb4c26e59ad125",1,0,0,1,0,0,1,0,0
40826,Ia285d01592cd7abef333680dc40b7cac0893edd1,http://review.couchbase.org/#/c/40826,1,d72483d716f229f430bd4d0d63fe71d244202a52,b1feca98f93867fc06ffbe2229d119fe823bd80d,1,22/08/14,22/08/14,92,Add support for individual bucket closing.,"Add support for individual bucket closing.

Change-Id: Ia285d01592cd7abef333680dc40b7cac0893edd1",1,0,0,1,0,0,1,0,0
40834,I7c07ba09216d0eeaa94ffbfe5ca3137091bbf4c3,http://review.couchbase.org/#/c/40834,1,b1feca98f93867fc06ffbe2229d119fe823bd80d,21edd0cf589ef376c13701808081c6d810676ae6,1,22/08/14,22/08/14,101,Add support for cluster config command.,"Add support for cluster config command.

Change-Id: I7c07ba09216d0eeaa94ffbfe5ca3137091bbf4c3",1,0,0,1,0,0,1,0,0
40837,Ic7af0ea74e1371bf1d8d6f5e4604d4071f23f187,http://review.couchbase.org/#/c/40837,2,21edd0cf589ef376c13701808081c6d810676ae6,c3a7645362e056377d8ea24f15505f95ce55b51b,1,22/08/14,22/08/14,264,WIP: bucket management ops.,"WIP: bucket management ops.

Change-Id: Ic7af0ea74e1371bf1d8d6f5e4604d4071f23f187",1,0,0,1,0,0,1,-1,0
40847,I8a32f3cef5496a29ad73a0b04e20061192287bd8,http://review.couchbase.org/#/c/40847,1,c3a7645362e056377d8ea24f15505f95ce55b51b,ea3a7af4eaf33476e2d7d31bfa040b38266cf054,0,22/08/14,22/08/14,2,Releasing 1.0.0-beta,"Releasing 1.0.0-beta

Change-Id: I8a32f3cef5496a29ad73a0b04e20061192287bd8",1,0,0,1,0,0,1,NA,NA
40876,I4b07a90321d9bf5e96a358db61eba8335b530987,http://review.couchbase.org/#/c/40876,1,ea3a7af4eaf33476e2d7d31bfa040b38266cf054,98f3cbd6a42179b347aff56acc75fecbef90f7b1,0,25/08/14,25/08/14,2,Starting work on .next,"Starting work on .next

Change-Id: I4b07a90321d9bf5e96a358db61eba8335b530987",1,0,0,1,0,0,1,NA,NA
40879,Ibbb8c293caf6463e140c55d25b367a4672c526b5,http://review.couchbase.org/#/c/40879,1,98f3cbd6a42179b347aff56acc75fecbef90f7b1,0590ed5f01b3d2e8e1a23626f152a61472abb1e1,1,25/08/14,25/08/14,713,Imporving Documentation & Tests for the service layer.,"Imporving Documentation & Tests for the service layer.

Change-Id: Ibbb8c293caf6463e140c55d25b367a4672c526b5",1,0,0,1,1,0,1,0,0
40911,I872de64211c58cbaff8a9a19bd4dbe475506db01,http://review.couchbase.org/#/c/40911,1,0590ed5f01b3d2e8e1a23626f152a61472abb1e1,8a61283678f905b170ef5fe6417e30d1d93b4f39,1,26/08/14,26/08/14,213,JVMCBC-24: adding diagnostics and print them on startup.,"JVMCBC-24: adding diagnostics and print them on startup.

Change-Id: I872de64211c58cbaff8a9a19bd4dbe475506db01",1,0,0,1,0,0,1,0,0
40912,I63e88cf5fa63f45fa9fa496cf25ff1f38fb6a0cf,http://review.couchbase.org/#/c/40912,1,8a61283678f905b170ef5fe6417e30d1d93b4f39,fa1ccfb36fc0810bbdd9fb06691ef88b7c721979,0,26/08/14,26/08/14,2,JVMCBC-24: only expose jdk6 compat values.,"JVMCBC-24: only expose jdk6 compat values.

Change-Id: I63e88cf5fa63f45fa9fa496cf25ff1f38fb6a0cf",1,0,0,1,0,0,1,NA,NA
40917,Ie6c6949eebef2759d180fa5bc3cb0db63a7f3302,http://review.couchbase.org/#/c/40917,1,fa1ccfb36fc0810bbdd9fb06691ef88b7c721979,fdc5461c4dbade6f35315566547d0a488eaa94d1,1,26/08/14,26/08/14,170,JVMCBC-19: Add basic support for memcached buckets.,"JVMCBC-19: Add basic support for memcached buckets.

Change-Id: Ie6c6949eebef2759d180fa5bc3cb0db63a7f3302",1,0,0,1,0,0,1,0,0
40918,I3ed52ae394b14d697632e943054aba2ce7b62289,http://review.couchbase.org/#/c/40918,1,fdc5461c4dbade6f35315566547d0a488eaa94d1,259ba966552d077a4297b014350c601b7a819ca7,0,26/08/14,26/08/14,2,Reverting to default bucket.,"Reverting to default bucket.

Change-Id: I3ed52ae394b14d697632e943054aba2ce7b62289",1,0,0,1,0,0,1,NA,NA
40919,Iec126724b2140aced8f0c5e6026f1aa541fc1736,http://review.couchbase.org/#/c/40919,1,259ba966552d077a4297b014350c601b7a819ca7,da507dab0dd8e940a6ce9ca0d173afce358d1b9f,1,26/08/14,26/08/14,12,JVMCBC-12: Choose appropriate channel for all supported groups.,"JVMCBC-12: Choose appropriate channel for all supported groups.

This change makes it possible to plug in the Epoll or Oio event loop
groups.

Change-Id: Iec126724b2140aced8f0c5e6026f1aa541fc1736",1,0,0,0,0,0,1,0,0
40968,Ibb2a0c19264a9afa81f0b8320c1482317307750e,http://review.couchbase.org/#/c/40968,1,f3a27895e4eff5072ab1939d4b1cb324fcf586ee,c83889c8bf4c433e3cbd6fa99c3d30f934b8ec62,1,27/08/14,27/08/14,7,JVMCBC-26: Properly daemonize and name thread pools owned by the core.,"JVMCBC-26: Properly daemonize and name thread pools owned by the core.

Change-Id: Ibb2a0c19264a9afa81f0b8320c1482317307750e",1,0,0,1,0,0,1,0,0
40969,Ie59550b1db871673fb6a9bde1b4922b468e8ab38,http://review.couchbase.org/#/c/40969,1,c83889c8bf4c433e3cbd6fa99c3d30f934b8ec62,ebe80312cf57808d630a02be4d6d31be7d90590c,1,27/08/14,27/08/14,4,Print the number of created environments.,"Print the number of created environments.

Change-Id: Ie59550b1db871673fb6a9bde1b4922b468e8ab38",1,0,0,1,0,0,1,0,0
40970,I092a084499b356cd8c8a03fe8afbf8bbfdf205aa,http://review.couchbase.org/#/c/40970,1,ebe80312cf57808d630a02be4d6d31be7d90590c,f5a8287674da79b34fc205ad496e85a2e262200c,1,27/08/14,27/08/14,24,JVMCBC-27: Only run carrier refresh if bucket is actually subscribed.,"JVMCBC-27: Only run carrier refresh if bucket is actually subscribed.

Change-Id: I092a084499b356cd8c8a03fe8afbf8bbfdf205aa",1,0,0,1,0,0,1,0,0
41011,I66602877153b5e14310dbf03662ebf1dd37e4d7f,http://review.couchbase.org/#/c/41011,1,f5a8287674da79b34fc205ad496e85a2e262200c,5de78fc524a4d76d1c7f3fe98bf8df4b136732a1,0,28/08/14,28/08/14,2,Upgrade RxJava to 0.20.2,"Upgrade RxJava to 0.20.2

Change-Id: I66602877153b5e14310dbf03662ebf1dd37e4d7f",1,0,0,1,0,0,1,NA,NA
41129,Ib9a44ce94106eeb5cf0c04bdee114138d736d784,http://review.couchbase.org/#/c/41129,1,5de78fc524a4d76d1c7f3fe98bf8df4b136732a1,e5faf4fe9ee0e0f4d48c83637b6368f38d848ee2,0,01/09/14,01/09/14,10,Upgrade to RxJava 1.0.0-RC1,"Upgrade to RxJava 1.0.0-RC1

Change-Id: Ib9a44ce94106eeb5cf0c04bdee114138d736d784",1,0,0,1,0,0,1,NA,NA
41163,I38dbc3face79a4386daa84e0036bc5dc1156037c,http://review.couchbase.org/#/c/41163,1,e5faf4fe9ee0e0f4d48c83637b6368f38d848ee2,e5115655f4a41afc0d145090414c5bb20dcd608c,1,03/09/14,03/09/14,6,JVMCBC-28: Streaming handlers do not respect next observable.,"JVMCBC-28: Streaming handlers do not respect next observable.

Change-Id: I38dbc3face79a4386daa84e0036bc5dc1156037c",1,0,0,1,0,0,1,0,0
41164,Id87e72dd60bba732033fff026bb6beb3369f398a,http://review.couchbase.org/#/c/41164,1,e5115655f4a41afc0d145090414c5bb20dcd608c,7803efef1ff0356af62026e4d13355dca2b8c2cd,0,03/09/14,03/09/14,2,Upgrade RxJava to 1.0.0-RC2,"Upgrade RxJava to 1.0.0-RC2

Change-Id: Id87e72dd60bba732033fff026bb6beb3369f398a",1,0,0,1,0,0,1,NA,NA
41165,I2e1c124e6e08ca28b75defb18701c751308eaf6c,http://review.couchbase.org/#/c/41165,1,7803efef1ff0356af62026e4d13355dca2b8c2cd,49bee0dc525392927614264980bc619cdc414cd0,1,03/09/14,03/09/14,6,Return DISCONNECTED if no endpoint configured for service.,"Return DISCONNECTED if no endpoint configured for service.

Change-Id: I2e1c124e6e08ca28b75defb18701c751308eaf6c",1,0,0,1,0,0,1,0,0
41166,Ic218321dd10fc61bff5fddbcd28e2e94accb75cb,http://review.couchbase.org/#/c/41166,1,49bee0dc525392927614264980bc619cdc414cd0,131c11076feb7dd0240d84017f03fe58c8b144db,1,03/09/14,03/09/14,112,JVMCBC-30: Adds InterfaceStability and InterfaceAudience annotations.,"JVMCBC-30: Adds InterfaceStability and InterfaceAudience annotations.

Change-Id: Ic218321dd10fc61bff5fddbcd28e2e94accb75cb",1,0,0,1,0,0,1,0,0
41399,I4fd06b4a3553e25b4f29b6ac2871cade426d70b6,http://review.couchbase.org/#/c/41399,4,131c11076feb7dd0240d84017f03fe58c8b144db,2058f58b8c2679cf9c4c0f0f7ea46593d41ac308,1,12/09/14,15/09/14,101,JCBC-395: Specify generated version in HTTP headers,"JCBC-395: Specify generated version in HTTP headers

Change-Id: I4fd06b4a3553e25b4f29b6ac2871cade426d70b6",0,1,1,1,0,1,1,1,1
41419,I3a91ee24049d70aafbee0501ab7ba7a877384f11,http://review.couchbase.org/#/c/41419,1,2058f58b8c2679cf9c4c0f0f7ea46593d41ac308,04999751fc87a97ef3a4f625b67bd8c64065729d,1,15/09/14,15/09/14,51,JVMCBC-32: Also convert partitionHosts to InetAddrs.,"JVMCBC-32: Also convert partitionHosts to InetAddrs.

Motivation
----------
If the partition hosts are kept as strings and they are compared as hostnames,
issues can come up when ip addrs and hostnames are mixed and matched in the
configurations.

Modifications
-------------
By also converting them to InetAddrs and comparing them, the actual check is
delegated to the InetAddr implementation, which accounts for those issues
with proper checks.

Result
------
The core is now more resilient to ip/hostname mixes and able to resolve,
especially in the binary handler.

Change-Id: I3a91ee24049d70aafbee0501ab7ba7a877384f11",0,0,0,0,0,0,0,0,0
41435,I6defc3f7e3c72b8549d1f3390f7fac0c33c09e3f,http://review.couchbase.org/#/c/41435,2,a1beda13c1587f5bea75f8aff808b362227a1bee,da41be14bcc068915c16a117964449b5eaeb3240,0,16/09/14,16/09/14,2,JVMCBC-36: Update RxJava to RC3,"JVMCBC-36: Update RxJava to RC3

Change-Id: I6defc3f7e3c72b8549d1f3390f7fac0c33c09e3f",1,0,0,1,0,0,1,NA,NA
41436,I6d9805b0ebbdb437d40dd6ba21775fa4d69eecaf,http://review.couchbase.org/#/c/41436,3,da41be14bcc068915c16a117964449b5eaeb3240,b43195e963d56b1f4f1e0c33059e055abf59b6a9,1,16/09/14,16/09/14,137,JVMCBC-34: Fix failing unit tests introduced by JVMCBC-33,"JVMCBC-34: Fix failing unit tests introduced by JVMCBC-33

Change-Id: I6d9805b0ebbdb437d40dd6ba21775fa4d69eecaf",1,0,0,1,0,0,1,-1,0
41437,Icd3687aa5bd4ad5e7d3aef381e7488e67fe2682e,http://review.couchbase.org/#/c/41437,3,b43195e963d56b1f4f1e0c33059e055abf59b6a9,cd430df360f275dcd206bb7c5ad53205edafce4b,1,16/09/14,16/09/14,461,JVMCBC-37: Rename Binary services/endpoints and associated to KeyValue.,"JVMCBC-37: Rename Binary services/endpoints and associated to KeyValue.

This changeset renames the binary* parts to key value in order to better
reflect what they are doing. Binary is too ambigous.

Change-Id: Icd3687aa5bd4ad5e7d3aef381e7488e67fe2682e",1,0,0,0,0,0,1,7,1
41439,I7771493d009605d959d7f6da73769f48f24dd6b4,http://review.couchbase.org/#/c/41439,2,cd430df360f275dcd206bb7c5ad53205edafce4b,4497eb29668da4579a091a1b69e5dbd78f5f7735,0,16/09/14,16/09/14,2,Releasing 1.0.0-beta2,"Releasing 1.0.0-beta2

Change-Id: I7771493d009605d959d7f6da73769f48f24dd6b4",1,0,0,1,0,0,1,NA,NA
41440,Iaff9cbc4d6ce708b63174a0accc8c3d9a7790124,http://review.couchbase.org/#/c/41440,2,4497eb29668da4579a091a1b69e5dbd78f5f7735,f72220c8d2b0197779409d2083e8c7520c3c7529,0,16/09/14,16/09/14,2,Starting to work on .next,"Starting to work on .next

Change-Id: Iaff9cbc4d6ce708b63174a0accc8c3d9a7790124",1,0,0,1,0,0,1,NA,NA
41472,I8fcb3fabe060f5410f32fa5761c5e2e239ee52a6,http://review.couchbase.org/#/c/41472,2,f72220c8d2b0197779409d2083e8c7520c3c7529,8a075a3511e08a1d5aeb45fdb59581e71a471f12,1,18/09/14,18/09/14,10,"JVMCBC-9: After failover, select different node.","JVMCBC-9: After failover, select different node.

Also, this change hardens the handler when ops are cancelled so that anything that will
be thrown by the subscriber does not kill the event loop as well.

Change-Id: I8fcb3fabe060f5410f32fa5761c5e2e239ee52a6",0,0,0,0,0,0,0,0,0
41481,I2d5785f9b46f5b5587fd62521663d932c5b1b381,http://review.couchbase.org/#/c/41481,3,8a075a3511e08a1d5aeb45fdb59581e71a471f12,7cda818d930d8bfb617d5d89a78c9ee1a3baefb8,1,19/09/14,19/09/14,2,JVMCBC-38: Always subscribe on the computation scheduler.,"JVMCBC-38: Always subscribe on the computation scheduler.

This change makes sure that the observable the core returns is
never subscribed on the io event loops or other internal parts.
Instead, the computation scheduler is utilized which should have
enough power for downstream computations.

Note that if blocking operations are performed, it is expected that
downstream the subscription is switched to the IO scheduler!

Change-Id: I2d5785f9b46f5b5587fd62521663d932c5b1b381",0,0,0,0,0,0,0,0,0
41482,I4888bbe5e6e8c431395469b94b13b6c8ffd13812,http://review.couchbase.org/#/c/41482,2,7cda818d930d8bfb617d5d89a78c9ee1a3baefb8,4e503b57dc2e23d94739af40953bf59a19136f90,1,19/09/14,19/09/14,13,JVMCBC-39: Set passwords to empty if null.,"JVMCBC-39: Set passwords to empty if null.

This change makes sure that if null is passed in for the bucket password,
an empty one is used and the process doesn't stop working.

Change-Id: I4888bbe5e6e8c431395469b94b13b6c8ffd13812",0,0,0,0,0,0,0,0,0
41504,I81dfaafb6fba7b9ffe4b06f5370973a6749895e4,http://review.couchbase.org/#/c/41504,2,4e503b57dc2e23d94739af40953bf59a19136f90,0ee45f78a118ac5e0a2818914aed1acf8a74d12e,0,19/09/14,19/09/14,2,Releasing 1.0.0,"Releasing 1.0.0

Change-Id: I81dfaafb6fba7b9ffe4b06f5370973a6749895e4",1,0,0,1,0,0,1,NA,NA
41725,I38048d881103ee285ca526f143131d478c0feb12,http://review.couchbase.org/#/c/41725,4,0ee45f78a118ac5e0a2818914aed1acf8a74d12e,4a18deb33cdd031f7e72e2b4adc2c3c4c7434853,1,26/09/14,26/02/15,235,Test to ensure query with lot of parameters uses POST,"Test to ensure query with lot of parameters uses POST

Change-Id: I38048d881103ee285ca526f143131d478c0feb12",0,1,0,1,0,0,1,1,1
41900,Ib94c625dd5f0bf295ec368aeb7ab265706250936,http://review.couchbase.org/#/c/41900,8,9af0e99e74d510a6e9db15e740adf4b09fe9680f,241295efe8aad61697aabc35d0b737758682298f,1,06/10/14,07/10/14,44,JCBC-574: Properly count reference to extras ByteBuf,"JCBC-574: Properly count reference to extras ByteBuf

Change-Id: Ib94c625dd5f0bf295ec368aeb7ab265706250936",0,1,0,1,0,1,1,0,0
41966,Ia00d58885e1f81c86846bf3cb9b0dace7bbdf5c1,http://review.couchbase.org/#/c/41966,7,3e302abb914fea5957494dfd9716bf436497a58d,3349115ee1086a658b3c5db339d41fef211a5ce9,1,08/10/14,13/10/14,945,JCBC-???: Rework endpoint handlers for more fine-grained control on completion.,"JCBC-???: Rework endpoint handlers for more fine-grained control on completion.

Motivation
----------
This changeset adds a very simple state enum to the decoding process and makes it
possible that the implementing child handlers signal its parent when they are done
with the current response, even when more chunks arrive in the meantime.

This is necessary because it could be that some streaming responses push out chunks
to subsequent observables, even when the main ""response"" one is already done. The
previous implementation did fall short on this and resulted in potential deadlocks.

Modifications
-------------
A DecodingState has been added and is utilized by the parent AbstractGenericHandler. All
implementations now utilize this automatically, but they need to signal the parent when
they are done through the ""finishedDecoding()"" method. Only then a new request/response
will be picked off the queue and is used.

Also, the obsolete CHUNKED status has been removed, since this was the original implementation
that has been superseeded by individual observable subjects.

Result
------
Better signaling between child and parent when decoding is actually done, regardless of
what and how many messages have been sent.

Change-Id: Ia00d58885e1f81c86846bf3cb9b0dace7bbdf5c1",0,1,1,0,1,1,1,0,0
42112,I90128e919fee103952729c1b04f75c029bf4ac95,http://review.couchbase.org/#/c/42112,2,3349115ee1086a658b3c5db339d41fef211a5ce9,26f3ea6e2e61fb0b5c1eb95c5365a3a830a86156,1,14/10/14,14/10/14,23,JVMCBC-35: Expose View retry codes in response status,"JVMCBC-35: Expose View retry codes in response status

Motivation
----------
Exposing the actual status code including the reason phrase from the
HTTP response is vital in the handling code so that it can make informed
decisions about wheter to retry or not.

Modifications
-------------
Both the actual status code and the reason phrase are exposed in the response
in order to allow better decisions in the calling code.

Result
------
Better error handling capabilities at the caller side.

Change-Id: I90128e919fee103952729c1b04f75c029bf4ac95",0,0,0,0,0,1,1,1,1
42122,I270edaa9452a9212f5b0dd1038f9580d2739a250,http://review.couchbase.org/#/c/42122,2,26f3ea6e2e61fb0b5c1eb95c5365a3a830a86156,48bb6a34f37d7b2e2738370bcb494dfdf0d0ffcc,1,14/10/14,15/10/14,3,JVMCBC-43: Fix ConcurrentModificationException on disconnect with more buckets.,"JVMCBC-43: Fix ConcurrentModificationException on disconnect with more buckets.

Motivation
----------
When more buckets are closed in parallel, a ConcurrentModificationException was raised
because the same map was still iterated while it was being updated.

Modifications
-------------
This changes first creates a distinct set of all the buckets to close and then iterates
over it, mitigating the possibility of iteration while modification.

Result
------
No more ConcurrentModificationException on shutdown with more than one bucket.

Change-Id: I270edaa9452a9212f5b0dd1038f9580d2739a250",0,0,0,0,0,1,1,0,0
42202,I762abda82b8ba35b0e5df9c278acd38a79f735f3,http://review.couchbase.org/#/c/42202,3,48bb6a34f37d7b2e2738370bcb494dfdf0d0ffcc,5f7c5a61172a3bd6f9cc4ab0d8b3a017e48b45f4,1,16/10/14,16/10/14,105,"JVMCBC-44 : if bucket was closed, operations will throw a BucketClosedException","JVMCBC-44 : if bucket was closed, operations will throw a BucketClosedException

Motivation
-----------
After closing a bucket, one expects not to be able to use the bucket anymore.
However subsequent request are not rejected gracefully and usually result in
a TimeoutException (for example for a GetRequest).

Modifications
-------------
The RequestHandler now has a check in place to verify that given bucket name is
known in the cluster. It lets bootstrapping requests go through in order for the
configuration to correctly be known.

If the bucket name is not in configuration, then it means the bucket has been
closed and the request is ignored. The request's Observable is failed immediately
with a BucketClosedException.

Users can be impacted if they were watching for TimeoutExceptions specifically
to detect a closed bucket.

Result
------
Any request to do some work with a closed bucket immediately fails into a
BucketClosedException (passed in the onError method of the request's Observable).

Change-Id: I762abda82b8ba35b0e5df9c278acd38a79f735f3",0,0,0,0,0,1,1,1,1
42230,Ie53f4e0f7fee2265566da03a52baaeec0d01c22a,http://review.couchbase.org/#/c/42230,2,5f7c5a61172a3bd6f9cc4ab0d8b3a017e48b45f4,0c12dd42c0497880ad47d1f33d15550d9fefa0b8,1,17/10/14,17/10/14,58,JVMCBC-44 : improve the check for closed buckets,"JVMCBC-44 : improve the check for closed buckets

Motivation
-----------
After the first JVMCBC-44 refactor (see initial commit of BucketClosedTest),
some NPE arise because the check is too strong. Additional types of request
must be allowed to pass through.

Modifications
-------------
Introduced a marker interface to mark requests that can pass despite bucket conf
being either empty or not containing the target bucket.
The RequestHandler's check now filters on that interface, BootstrapMessage.

If the request don't pass the check, its Observable is failed with a
BucketClosedException.

Result
------
Any request to do some work with a closed bucket immediately fails into a
BucketClosedException (passed in the onError method of the request's Observable).
No more NullPointerExceptions in the RequestHandler's onEvent method.

Change-Id: Ie53f4e0f7fee2265566da03a52baaeec0d01c22a",0,0,0,0,0,1,1,0,0
42236,I5e492ad0a64451dd7f6e654ea6f255c11f8490b7,http://review.couchbase.org/#/c/42236,3,0c12dd42c0497880ad47d1f33d15550d9fefa0b8,36efbeb3cb2fd7b97d3c7200c2e44b24b8403eab,1,17/10/14,17/10/14,21,JVMCBC-44 : let all ConfigRequest pass and adapt RequestHandlerTest,"JVMCBC-44 : let all ConfigRequest pass and adapt RequestHandlerTest

Motivation
-----------
All ConfigRequest should pass through the test for bucket presence in configuration.
Furthermore, after previous refactors the RequestHandlerTest's
test shouldRouteEventToNode would fail (config is empty in dummy).

Modifications
-------------
BootstrapMessage marker interface now on ConfigRequest instead of specific subtypes.
RequestHandlerTest modified to take into account the new need for a configuration that
can respond to hasBucket().

Result
------
All tests now pass.

Change-Id: I5e492ad0a64451dd7f6e654ea6f255c11f8490b7",0,0,0,0,0,1,1,0,0
42289,Ia10b15ae515ac5f66e574d75d1234b7740a6255f,http://review.couchbase.org/#/c/42289,2,36efbeb3cb2fd7b97d3c7200c2e44b24b8403eab,bb2baa959e5e912b56c183b3faa081c16de1c02e,1,20/10/14,20/10/14,3,JVMCBC-45: Give config loading a chance to be retried.,"JVMCBC-45: Give config loading a chance to be retried.

Motivation
----------
Lots of exceptions have been reported where the GetBucketConfigRequest
failed and messed up the RequestHandler.

Modifications
-------------
In the previous code, the message was failed, but instead the config
loading request should be given a chance to be retried (which the
upper logic does if an empty node array is returned) instead of
failing it prematurely.

Such a situation can occur when the node takes longer to go through
the full connect and auth cycle and may be available a few ms later.

Result
------
Graceful retry of configuration loading if the node is not (yet)
available.

Change-Id: Ia10b15ae515ac5f66e574d75d1234b7740a6255f",0,0,0,0,0,1,1,0,0
42292,I74b06fb8b2c33e0799dbbda9d732adbf426afe77,http://review.couchbase.org/#/c/42292,5,bb2baa959e5e912b56c183b3faa081c16de1c02e,4278ac13a25a2bf1e849221b90b45b5ded86b67c,1,20/10/14,20/10/14,68,"JVMCBC-46: If a node has no services, don't try to load them.","JVMCBC-46: If a node has no services, don't try to load them.

Motivation
----------
If a node is currently being removed but an operation is pending to locate
a service on that node, it needs to gracefully check if a service is available.

Previously, it could be that a NPE is thrown because no service is available on
the per-bucket services.

Modifications
-------------
This changeset primarily checks gracefully if a service is found and if not, returns
null which will cause the operation to be rescheduled properly.

In addition, it adds better error-level debugging to the carrier refresher if its
config streams fail and also toStrings for request/response events so if things show
up in stack traces they are easier to digest.

Result
------
Resiliency during node removals and better error debugging capabilities.

Change-Id: I74b06fb8b2c33e0799dbbda9d732adbf426afe77",0,1,0,0,0,1,1,0,0
42321,Ic26c882a9dd80948ac38572421154e7d1abba89f,http://review.couchbase.org/#/c/42321,2,4278ac13a25a2bf1e849221b90b45b5ded86b67c,25bdf428dc2bdec7ef68d6d503f9b70f23eb9256,1,21/10/14,21/10/14,3,JVMCBC-47: Update RxJava to RC7.,"JVMCBC-47: Update RxJava to RC7.

Motivation
----------
1.0.0 GA shipped with RC3 and the plan is to make sure the code
stays as close as possible with bugfix releases until RxJava
hits 1.0.0 GA as well.

Modifications
-------------
Move to RC7.

Along the way, a assertion error was discovered where the abstract
loader did subscribe twice to the same scheduler.

Result
------
More bugfixes for users and us in RC7.

Change-Id: Ic26c882a9dd80948ac38572421154e7d1abba89f",0,0,0,0,0,1,1,0,0
42338,Ib8531d527832ea316920d2df27c673e0424a455f,http://review.couchbase.org/#/c/42338,8,82cf5f2a37176ebc7aba3e19b059e811c6a7af74,a3cbe34db6b15ea881caf010de379f8c86adf9bd,1,22/10/14,22/10/14,34,JCBC-589: Versionning information stored in property file,"JCBC-589: Versionning information stored in property file

Motivation
----------
For now, versionning information is extracted from the Manifest.MF via Package class.
In cases where the sdk is integrated into a fat jar (or shadow jar), manifest information
is lost, and the sdk cannot give a complete PACKAGE_NAME_AND_VERSION.

This is notably the case for the SDKQE team, that builds a fatjar with the sdk and various
dependencies, and that first brought up the issue.

Modifications
-------------
Versionning information is now stored into a properties file, of which a template is added
to src/main/resources folder.
Gradle will execute git command to produce version number and replace tokens in the
properties file with correct strings. DefaultCoreEnvironment will then load the properties
file to retrieve the version number.

The file is named couchbase.java.core.properties in order to remain distinguishable even
when put in a flat fatjar along with the java client source for example (a generic name
would have caused potential for the wrong file to be picked up in such a configuration).

Note that if git command cannot be executed by Gradle (eg not in path under windows), it
will put the build date in there (in the format unknown-YYYYMMdd).

If the sdk cannot get hold of the properties file, then we'll still have ""unknown"" for both
implementationVersion and specificationVersion (but this has been tested inside the sdkd jar
so this is not the case as long as the properties file is present in fatjar).

Result
------
Building the jar includes a couchbase.java.core.properties containing complete sdk version
info.

Sdkd QE fat jar now contains the properties file and thus doesn't erase versionning information.
Calling the sdkd_exec.jar with -V (version) parameter displays the complete and correct sdk
version information.

Change-Id: Ib8531d527832ea316920d2df27c673e0424a455f",0,1,0,0,0,1,1,0,0
42342,I94b5dbc3b406c02b012090b6be3ea475306ad1c0,http://review.couchbase.org/#/c/42342,2,ac86c8d04f6b1d7f80db11887c8d7729e8d78a7d,0193a45e07237634d22c7706d486114f8a3c2349,1,22/10/14,22/10/14,28,JVMCBC-48: Populate CAS into RemoveResponse,"JVMCBC-48: Populate CAS into RemoveResponse

Motivation
----------
The server returns the CAS value together with other information on a remove
response, so the actual RemoveResponse object should reflect that.

Modifications
-------------
The decoded cas value is passed into the RemoveResponse object, integration
test have been extended to verify the expected behavior.

Result
------
The CAS value is now accessible from the RemoveResponse

Change-Id: I94b5dbc3b406c02b012090b6be3ea475306ad1c0",0,0,0,0,0,1,1,0,0
42362,I649a17202234a912222a3c52eab141feb141a8cd,http://review.couchbase.org/#/c/42362,9,46beae3f516ef7c0751b078e5be0d5dcfcb854bf,4dd8924cd72ff076bbfd0adf9c9a61fac839a575,1,22/10/14,24/10/14,284,JVMCBC-51: Move Observe utility class from java-client,"JVMCBC-51: Move Observe utility class from java-client

Motivation
----------
Each wrapper of core-io library have to implement Observe polling
feature. This way is more error prone and harder to maintain good
quality of this implementation, which in fact will be shared.

Modification
------------
Pull Observe, PersistTo and ReplicateTo utility classes from java-client
to core-io.

Result
------
Duplication reduced (considering java-client and jruby-client
libraries). Potentially expanded coverage for the Observe
implementation.

Change-Id: I649a17202234a912222a3c52eab141feb141a8cd",0,1,0,0,0,1,1,0,0
42459,Ic854cdd59ead47eaffa0e677a71310010e517a90,http://review.couchbase.org/#/c/42459,2,4dd8924cd72ff076bbfd0adf9c9a61fac839a575,6b10c947785c5592540145e61ab0434b7bdcf57c,0,27/10/14,27/10/14,2,JVMCBC-52: Upgrade RxJava to 1.0.0 RC8,"JVMCBC-52: Upgrade RxJava to 1.0.0 RC8

Motivation
----------
In order to get RxJava closer to 1.0.0 GA, this upgrade makes sure
we are at the latest version available.

Modifications
-------------
The dependency was upgraded and both unit and integration tests
were run to make sure no existing functionality is broken.

Result
------
We are getting one of our core dependencies closer to 1.0.0 GA

Change-Id: Ic854cdd59ead47eaffa0e677a71310010e517a90",0,0,0,0,0,1,1,NA,NA
42652,I6666157632cf98d49546c3ba961d6a047c4fa622,http://review.couchbase.org/#/c/42652,2,6b10c947785c5592540145e61ab0434b7bdcf57c,c0e2faeb43817f817d836838aec898be31ef2365,0,31/10/14,31/10/14,5,JVMCBC-53: temporarly disable checkstyle in build,"JVMCBC-53: temporarly disable checkstyle in build

Motivation
----------
No Checkstyle configuration has been put in place yet (this is in the
works for 1.0.2), yet checkstyle is activated in the gradle build. This
causes a full build to fail (like in Jenkins).

Modifications
-------------
Disable checkstyle in gradle build until a configuration for it has
been made.

Result
------
Gradle doesn't fail because of checkstyle anymore.

Change-Id: I6666157632cf98d49546c3ba961d6a047c4fa622",0,0,0,0,0,1,1,NA,NA
42701,Id04e1aa4be6864bd9d4a77335628ee9c473df3ff,http://review.couchbase.org/#/c/42701,2,c0e2faeb43817f817d836838aec898be31ef2365,b50a1ebff8c19566c020dd79ba1726e699fba1c2,0,03/11/14,03/11/14,2,JVMCBC-56: Upgrade RxJava to 1.0.0 RC9,"JVMCBC-56: Upgrade RxJava to 1.0.0 RC9

Motivation
----------
In order to get RxJava closer to 1.0.0 GA, this upgrade makes sure
we are at the latest version available.

Modifications
-------------
The dependency was upgraded and both unit and integration tests
were run to make sure no existing functionality is broken.

Result
------
We are getting one of our core dependencies closer to 1.0.0 GA

Change-Id: Id04e1aa4be6864bd9d4a77335628ee9c473df3ff",0,0,0,0,0,1,1,NA,NA
42702,I2c836c7ebb7de4bad0572aa4e5ad08011bb198e4,http://review.couchbase.org/#/c/42702,2,c28aa0a498636205fdc9cd0524eb65cc21ef8654,1a44c53967fb44fd228d2fbd7c2a7c7d636359d3,1,03/11/14,03/11/14,11,JVMCBC-55: Add reconnect delay ceiling for endpoints.,"JVMCBC-55: Add reconnect delay ceiling for endpoints.

Motivation
----------
During failure tests it was discovered that the exponential backoff algorithm
used has no ceiling configured.

This is not a problem in lower bounds (millisecond range), but at one point
very quickly gets out of hand (4s, 8s, 16s,..) and potentially renders and
endpoint that is already up unusable for many seconds.

Modifications
-------------
A simple fixed ceiling at 4 seconds has been added so that a reconnect
attempt no longer waits than this time to reattempt the connect
process.

Result
------
A quicker and more reasonable approach to handle reconnect timings, even if it
takes a longer time to reconnect.

Change-Id: I2c836c7ebb7de4bad0572aa4e5ad08011bb198e4",0,0,0,0,0,1,1,0,0
42705,Ifc97cb92cfabf392a5a1ee7aeb6d516d95bdd4b8,http://review.couchbase.org/#/c/42705,3,88d99e09f380506e20ca7c7fc7070d3629f2f9e3,11c287cd37abc680a4e78d92699702539ed1bc08,1,03/11/14,03/11/14,26,Small endpoint cleanup.,"Small endpoint cleanup.

Motivation
----------
DISCONNECT was notified twice, which is not a problem because the state
code will not distribute it, but it does not belong in there.

Modifications
-------------
The duplicate call has been removed and minor javadocs have been added.

Change-Id: Ifc97cb92cfabf392a5a1ee7aeb6d516d95bdd4b8",0,0,0,0,0,1,1,0,0
42710,Ieb39fecdec77daf0f88ac8d757a9561c10da70a3,http://review.couchbase.org/#/c/42710,2,1c1f47b8b8de553a78ebb27abd18c6a3d8e854ff,eebe12a41cdebc2c023e8329aef337bdafdf654b,0,03/11/14,03/11/14,27,JVMCBC-62: Make Diagnostics resilient for not found classes,"JVMCBC-62: Make Diagnostics resilient for not found classes

Motivation
----------
The code uses com/sun namespaced packages - which we shouldn't be using -
but are able to optionally utilize them to get more diagnostics information.

The code previously did check if the classes are proper instances, but it was
not resilient for environments where the class doesn't exist at all (that is
on IBM JVMs, as well as OSGi containers and app servers like Wildfly). It prevents
starting an application.

Modifications
-------------
The code now properly catches such an exception and logs a debug notice that extended
info is not available and only reduced output is printed.

Result
------
Properly degrading output and making sure app servers with reduced context are able
to start.

Change-Id: Ieb39fecdec77daf0f88ac8d757a9561c10da70a3",0,0,0,0,0,1,1,NA,NA
42718,Ib7a24300873857a76b01a1e4a14d20239bafe8bd,http://review.couchbase.org/#/c/42718,5,cbdb3f770edeca8b86e03e1d4f98c41ae96c932f,b11c174ff4d5f1f438ec0ea105a5ec7d10db8a43,0,03/11/14,18/11/14,140,Share intellij idea settings in the team,"Share intellij idea settings in the team

Motivation
----------
In order to make it easier to bootstrap with project it will be good if
some projects settings will be shared in the team. It will also allow
perform tasks such full project tree cleanup.

Modification
------------
Import .gradle project once using IntelliJ Idea. The IDE can watch and
sync settings if needed (e.g. change of versions). To setup .gitignore
rules, official support ticket was used:
https://intellij-support.jetbrains.com/entries/23393067

Result
------
No need to import .gradle project to idea each time developer cleans the
tree or setups new machine.

Change-Id: Ib7a24300873857a76b01a1e4a14d20239bafe8bd",0,1,1,0,0,1,1,NA,NA
42735,Iedb7c12e3f5aad17762f9aeecc4a53ef0240ffca,http://review.couchbase.org/#/c/42735,2,984f619bc7f867cefb552ec490d656dd01d4a25c,ea910b02a6d67e8f3409dff6c41f453f2972dfa2,0,04/11/14,04/11/14,2,Prepare 1.0.1 Release,"Prepare 1.0.1 Release

Change-Id: Iedb7c12e3f5aad17762f9aeecc4a53ef0240ffca",0,0,0,1,0,1,1,NA,NA
42764,I77cc6931971c386460d6774c83623450cf36a0e5,http://review.couchbase.org/#/c/42764,2,ea910b02a6d67e8f3409dff6c41f453f2972dfa2,1d1f36313da418ea0cbf368666edb7baa924b78a,0,04/11/14,04/11/14,16,JVMCBC-64: Enhance javadoc building,"JVMCBC-64: Enhance javadoc building

Motivation
----------
We need a simple page to welcome the user and guide him to the best
place to get started. Also, external links to netty and other projects
are needed so that javadoc can resolve them.

Modifications
-------------
This change adds a welcome page with a simple pointer to the best
starting point, as well as external link references to the build
so they are picked up and the user can click his way through.

Result
------
Better navigateability through the javadocs.

Change-Id: I77cc6931971c386460d6774c83623450cf36a0e5",0,0,0,0,0,1,1,NA,NA
43119,I85e5b0221e8b7c030ccdeb7b2d7c31aa1ad1d970,http://review.couchbase.org/#/c/43119,2,1d1f36313da418ea0cbf368666edb7baa924b78a,c4604db79805df340719bd6518a0d4dd7661ef5f,1,12/11/14,12/11/14,172,JVMCBC-65: View & Query node locator only touches first node,"JVMCBC-65: View & Query node locator only touches first node

Motivation
----------
Even if more nodes are available, because counter is never incremented, only
the first available node is tried to find a suitable node to write the request
to.

Modifications
-------------
The counter is now properly incremented, making sure all nodes are eventually
tried in a round-robin fashion as long as they are connected.

Result
------
Better distribution of the requests over the full cluster, leading to potentially
better performance and more equal resource utilization on the server side.

Change-Id: I85e5b0221e8b7c030ccdeb7b2d7c31aa1ad1d970",0,0,0,0,0,1,1,0,0
43120,I9fc563e42e1165f143b2272bc9c15d211b815796,http://review.couchbase.org/#/c/43120,4,e4de5ce82ba340909cf2c4c3b686762ce368a0ab,d51f9f461869b5b930696ae09225e569215a5d0c,0,12/11/14,12/11/14,225,JVMCBC-54: Add checkstyle.,"JVMCBC-54: Add checkstyle.

Motivation
----------
We need proper checkstyle rules that need to be enforced across the project.

Modifications
-------------
This change adds the styles we agreed on for now, separate commits will follow
with the actual code changes.

Result
------
Consistent styles!

Change-Id: I9fc563e42e1165f143b2272bc9c15d211b815796",0,1,0,0,0,1,1,NA,NA
43128,I3438ca20153d2703ca1d5b9898cea5c5eb59ea90,http://review.couchbase.org/#/c/43128,4,9b777e42b8898b04859d66b4779a03254cfc9cd6,1908c727aeaa92679abe8feec96d0b8e6e2840c9,1,12/11/14,12/11/14,996,First batch of checkstyle changes.,"First batch of checkstyle changes.

Change-Id: I3438ca20153d2703ca1d5b9898cea5c5eb59ea90",0,1,0,1,1,1,1,1,1
43289,Ifdb2206c824c639d46a42c2396bbf114d290a23d,http://review.couchbase.org/#/c/43289,2,5cefe89eb837becee51b3f07777b7d71745c8c0b,88a0ba96047a45a83e85361eb60f307a28e1387a,0,17/11/14,17/11/14,15,JVMCBC-63: Some updares to the gradle build file.,"JVMCBC-63: Some updares to the gradle build file.

Motivation
----------
The generated pom file did not add the name and description tags, which
had to be added manually when publishing to maven central.

Modifications
-------------
The following changes have been made:

 - name and description are added
 - sergey and simon added as developers
 - shadow plugin updated to 1.1.2

Change-Id: Ifdb2206c824c639d46a42c2396bbf114d290a23d",0,0,0,0,0,1,1,NA,NA
43366,Ic27826524a546630f23adfe345bd8ffcd6b692b9,http://review.couchbase.org/#/c/43366,3,88a0ba96047a45a83e85361eb60f307a28e1387a,3bdf03c491e47a33d8a22fed34c72bf11be9aa9c,0,18/11/14,18/11/14,2,JVMCBC-67: Upgrade RxJava to 1.0.0 GA,"JVMCBC-67: Upgrade RxJava to 1.0.0 GA

Motivation
----------
RxJava just released 1.0.0 GA, and since this codebase was on release
candidates before this commit makes sure to run the latest version
possible.

Result
------
Depending on RxJava 1.0.0 GA

Change-Id: Ic27826524a546630f23adfe345bd8ffcd6b692b9",0,0,0,0,0,1,1,NA,NA
43367,Ic6de754555a51be700eb47d9c6b64ff64d59eaa3,http://review.couchbase.org/#/c/43367,2,3bdf03c491e47a33d8a22fed34c72bf11be9aa9c,53d8de7dc02512ee034ba2ad7976eed1db993bc9,0,18/11/14,18/11/14,2,Move to 1.0.2-SNAPSHOT,"Move to 1.0.2-SNAPSHOT

Change-Id: Ic6de754555a51be700eb47d9c6b64ff64d59eaa3",0,0,0,1,0,1,1,NA,NA
43368,I4de4144af971d8160652a9bd9fcff27bc756de8a,http://review.couchbase.org/#/c/43368,2,53d8de7dc02512ee034ba2ad7976eed1db993bc9,6468b2c577add67777bfe5e74669e1354aaf01f2,0,18/11/14,19/11/14,24,Update idea settings,"Update idea settings

Motivation
----------

The project tree should be clean. And also the team uses JDK 1.8 by
default.

Modification
------------

Ignore some personal plugins, set newer JDK, and resync dependencies
from build.gradle to idea project files.

Result
------

Better IDE defaults shared in the team

Change-Id: I4de4144af971d8160652a9bd9fcff27bc756de8a",0,0,0,0,0,1,1,NA,NA
43401,I9dad2cb30aba49d62cf65370d83559d2f8f6038f,http://review.couchbase.org/#/c/43401,6,8af2795eab49f4b33dff4b89b03fa9e1622cf693,4d8d0f45439f35d8adf95d798aa0f2b2a8d166e5,1,19/11/14,19/11/14,13,JCBC-632: fix node pickup on rebalance,"JCBC-632: fix node pickup on rebalance

Motivation
----------
When nodes are dropped from a cluster, re-added and rebalanced, the
client fails to pickup the nodes and will stay in a state where no data
operations succeed.

This is due to a race condition where the Locator's list of Nodes is
out of date with the atomically updated configuration host array.

This results in an IllegalStateException because we look for a Node
(from the configuration) not contained in the Nodes List.

Modifications
-------------
In the Locator, we check if the list of Nodes has a different size than
the configuration's partitionHosts list. If so, we just reschedule the
request by returning an empty Node array.

Result
------
Operations continue (at a much much lower pace) during the failover and
once the nodes are added back, they are picked up immediately. Then the
operations ramp up during rebalance and everything gets back to normal.

Change-Id: I9dad2cb30aba49d62cf65370d83559d2f8f6038f",0,1,0,0,0,1,1,0,0
43402,I9be70e4e51e31a550acc3e174d77d8224b914732,http://review.couchbase.org/#/c/43402,2,1ac4c4fcb6d138086c3df059112066eece8b2f18,caa5a73f4d8421823909198fa346826ab1c6fddd,1,19/11/14,19/11/14,33,JVMCBC-69: Do not let the RingBuffer handlers die under any circumstance.,"JVMCBC-69: Do not let the RingBuffer handlers die under any circumstance.

Motivation
----------
The two core threads (the handlers for the Request and Response RingBuffers) are
very precious and should never die under any circumstance.

Modifications
-------------
Error handlers are attached to the Disruptor so that any exception that bubbles
up to this point (which is not intended, but can happen because of bugs), are
logged at the WARN level and need to be investigated, but the handlers itself
keep going and get notified of new events coming in.

Result
------
Better error debugging in case of unexpected exceptions, but also more resiliency
when they happen.

Change-Id: I9be70e4e51e31a550acc3e174d77d8224b914732",0,0,0,0,0,1,1,0,0
43474,If167c0f9264cf18a1508a8c24514d917b76345e6,http://review.couchbase.org/#/c/43474,3,1f56b6b44de338ac63759be6708036e622916c9e,e7a92cc3c505e82e39bac7819a84e0c67f19ddee,1,21/11/14,21/11/14,141,JVMCBC-72: Use the right scheduler on bootstrap and increase logging.,"JVMCBC-72: Use the right scheduler on bootstrap and increase logging.

Motivation
----------
It was discovered that some parts of the bootstrap process where using the
core and IO threads too much while they instead should be moved to the
computations scheduler earlier to free resources.

Increased logging has been added to the bootstrap process so that when
DEBUG is enabled, it is easer to find spots where threading is incorrect.

Modifications
-------------
Changed the schedulers early through observeOn, as well as increased
DEBUG logging verbosity throughout the bootstrap process.

Result
------
Quicker and less error prone bootstrapping, helping with debugging
of stuck bootstrap processes as well.

Change-Id: If167c0f9264cf18a1508a8c24514d917b76345e6",0,0,0,0,0,1,1,0,0
43477,Ie51ba40550f6520674caad86019ca2ed24b55a34,http://review.couchbase.org/#/c/43477,3,e7a92cc3c505e82e39bac7819a84e0c67f19ddee,258f11a8f871b64312da9859ed5b0be60d18ed2a,1,21/11/14,21/11/14,45,JVMCBC-71: Move Handler Subjects onto different scheduler.,"JVMCBC-71: Move Handler Subjects onto different scheduler.

Motivation
----------
When Subjects are emitted from the IO threads, the code needs to make
sure that the following operators (from external code) are never executed
on the IO threads to avoid the risk of stalling.

Modifications
-------------
All exposed Subjects are now properly moved over to the computation scheduler
of the environment. As part of this effort, it was discovered through the test
cases that the subjects had problems with requested backpressure.

As suggested here (https://github.com/ReactiveX/RxJava/wiki/Backpressure), the code
also applies the onBackpressureBuffer operator.

Result
------
Consuming operators and subscribers are not able to block or in any other way mess
with the IO threads from where they are filled.

Change-Id: Ie51ba40550f6520674caad86019ca2ed24b55a34",0,0,0,0,0,1,1,0,0
43746,I9f77757f9fe22080941b5cd408497bc864ab7e5b,http://review.couchbase.org/#/c/43746,2,258f11a8f871b64312da9859ed5b0be60d18ed2a,eb8fd1c2a8387c9aea30a58ea55ccf4446d434c6,0,29/11/14,01/12/14,4,JVMCBC-74: Upgrade RxJava to 1.0.1 GA,"JVMCBC-74: Upgrade RxJava to 1.0.1 GA

Motivation
----------
RxJava just released 1.0.1 GA, and since this codebase was on release
candidates before this commit makes sure to run the latest version
possible.

Result
------
Depending on RxJava 1.0.1 GA

Change-Id: I9f77757f9fe22080941b5cd408497bc864ab7e5b",0,0,0,0,0,1,1,NA,NA
43782,I50bf350397f3bd6b4ce948212b7762ee0c243ce6,http://review.couchbase.org/#/c/43782,23,ca8e6c9510a96dfef278383c733a9dee0c05a745,e95615ebecc917220bc56f9f7c49b1e79a54bc6e,1,01/12/14,12/01/15,1885,WIP: code DCP functionality,"WIP: code DCP functionality

Change-Id: I50bf350397f3bd6b4ce948212b7762ee0c243ce6",0,1,0,1,1,1,1,6,1
43785,I3e4f82f9b4cd495a3e4c4b49e8b8970fc785ce78,http://review.couchbase.org/#/c/43785,4,ba773998e41bea41fffdcf5122072b0bf553a5e9,40a610fc9d49cf1c05b7b9040f8ebe9927af128e,1,01/12/14,02/12/14,65,JCBC-76: Listen on IO write operations to log failures.,"JCBC-76: Listen on IO write operations to log failures.

Motivation
----------
If the void promise is used, less GC is produced, but we are loosing
the ability to see if something goes wrong during the write process.

Modifications
-------------
This code add listeners to write operations and logs when they fail. This
provides better insight by the slight penalty of more GC. Those callbacks
should be short-lived though, so they should die young.

In the future, this can be changed based on the debug level used to achieve
greater performance, but for now correctness is more important than the
last drop of performance.

Result
------
Better debugability of write failures.

Change-Id: I3e4f82f9b4cd495a3e4c4b49e8b8970fc785ce78",0,1,0,0,0,1,1,0,0
43786,Idfd411082014fbcd87cec31ad33cb7acd5740dc1,http://review.couchbase.org/#/c/43786,3,af8e316acbe3086d019c6e0d40087c0c8d72d144,b883270576cd76922acc6dddfc2ccf78f41238e4,1,01/12/14,01/12/14,10,JVMCBC-77: KeyValue content and extras need to be retained.,"JVMCBC-77: KeyValue content and extras need to be retained.

Motivation
----------
When using profiling tools, it was discovered that lots of exceptions
were thrown as part of the writing process, but hidden because a
Void future was used on those IO write operations. This is fixed in a
separate commit (JVMCBC-76).

As part of the investigation, it was discovered that the ByteBufs
referenced (content and extras) need to be manually retained, because
the MessageToMessageEncoder frees them as it sees fit and otherwise
the code ends up in reference count exceptions (double freeing).

Modifications
-------------
Properly retaining extras and/or content when they are set on the
request.

Result
------
No more reference count exceptions as part of the writing process.

Change-Id: Idfd411082014fbcd87cec31ad33cb7acd5740dc1",0,0,0,0,0,1,1,0,0
43824,I9b62169f66f7490c047867533e321e668d7db9eb,http://review.couchbase.org/#/c/43824,2,b883270576cd76922acc6dddfc2ccf78f41238e4,bebd6a5d95677a9e40da21db20dd3aea8026b456,0,02/12/14,02/12/14,4,JVMCBC-78: Upgrade RxJava to 1.0.2 GA,"JVMCBC-78: Upgrade RxJava to 1.0.2 GA

Motivation
----------
1.0.2 contains an important enhancement which makes sure that
scheduled actions are not interrupting themselves, which reduces
the bookkeeping that the JVM needs to do, leading to better performance
and less GC cycles.

Fore more information, see https://github.com/ReactiveX/RxJava/issues/1913

Modifications
-------------
Updating the dependency.

Result
------
Less bookeeping in the JVM, leading to a more smooth steady state.

Change-Id: I9b62169f66f7490c047867533e321e668d7db9eb",0,0,0,0,0,1,1,NA,NA
43845,If5830059cdb695c2692ad0c6f3373eb30d97a3c9,http://review.couchbase.org/#/c/43845,2,679030d7313a21579885cddc853909b3f8ad3f93,2d0a1bb3046a3c7c30e331a6e848b9712e0b739a,1,02/12/14,02/12/14,31,JVMCBC-79: Only route config request to the node with the service enabled.,"JVMCBC-79: Only route config request to the node with the service enabled.

Motivation
----------
When an additional bucket is opened (and other nodes are already connected), it
could be the case that the bucket config request for the new bucket is routed
onto a node where the keyvalue service is not enabled yet.

This leads to config requested ""routed around"" to the wrong node, even when
the service has been properly established on another node. As a result,
the observable is never completed, leading to a Timeout at the user level.

If the openBucket happens quickly one after another, or if the node set is
just correctly sorted by accident (or if there is only one node), this issue
does not show up (since it happens to be the right node).

Modifications
-------------
When the node locator gets the request, it not only checks if the node is
already connected, but also if the request is routed to the correct hostname.

The hostname passed in to the node locator as part of the request is the same
where the service was initiated before by the configuration loader.

Result
------
The bucket config request is always routed to the proper bucket, making sure
an additional openBucket request always succeeds.

Change-Id: If5830059cdb695c2692ad0c6f3373eb30d97a3c9",0,0,0,0,0,1,1,0,0
43953,Iac18b6e2fcb7bcf21818beb147433f61e7230f1b,http://review.couchbase.org/#/c/43953,2,2d0a1bb3046a3c7c30e331a6e848b9712e0b739a,d9b2d25dff3b14df4219c5ee22a6b33a74729720,0,04/12/14,04/12/14,2,Changing version to 1.0.2,"Changing version to 1.0.2

Change-Id: Iac18b6e2fcb7bcf21818beb147433f61e7230f1b",1,0,0,1,0,0,1,NA,NA
44012,I74a0acc1e10832317a15e8e3243e053941d1420c,http://review.couchbase.org/#/c/44012,2,d9b2d25dff3b14df4219c5ee22a6b33a74729720,e075568b2b2f84901838068c0dba48bae5635c97,0,05/12/14,05/12/14,2,Start 1.1.0 development.,"Start 1.1.0 development.

Change-Id: I74a0acc1e10832317a15e8e3243e053941d1420c",0,0,0,1,0,1,1,NA,NA
44181,Ic00f139b0a330642dae5478b7f5fdc8cf65bbc3f,http://review.couchbase.org/#/c/44181,2,e075568b2b2f84901838068c0dba48bae5635c97,2029676470c794413beb4381351ce37cb0b32325,1,10/12/14,15/12/14,19,JVMCBC-59: Add support for spatial queries.,"JVMCBC-59: Add support for spatial queries.

Change-Id: Ic00f139b0a330642dae5478b7f5fdc8cf65bbc3f",0,0,1,1,0,1,1,0,0
44245,I32af6b8862ddc5a9bb394e30f599e2f891cf1dd4,http://review.couchbase.org/#/c/44245,2,4424e9a8dbbc4b18288e7efacb9e8618d3073576,42cfe7b4ab3525c696f7b7d578ad6c8b1d0ea380,1,11/12/14,12/12/14,11,JVMCBC-83: Use CopyOnWriteArraySet for less cpu usage.,"JVMCBC-83: Use CopyOnWriteArraySet for less cpu usage.

Motivation
----------
When profiling the application on common workloads, it was discovered
that there were hot methods on the CHM iterator, traced back to the
RequestHandler's set of nodes.

Modifications
-------------
Using an optimized data structure for this workload (iterations vastly
outnumber the changes), using a CopyOnWriteArraySet instead of a backing
CHM, this CPU overhead is removed. The COWAS is also thread safe by
default, but it is using a simpler data structure undernath.

Result
------
Less CPU time spent when iterating the same data over and over.

Change-Id: I32af6b8862ddc5a9bb394e30f599e2f891cf1dd4",0,0,0,0,0,1,1,0,0
44349,If4dbedb6a9022b5fd911feba1fbff4fc0da12b83,http://review.couchbase.org/#/c/44349,2,43388302528a5018724df2df4c2d929ab6e22df2,039283b15902d3e3ea947bbfb688a7473127fa1e,1,15/12/14,15/12/14,2,JVMCBC-84: Retain() instead of copy() in KeyValueHandler on content.,"JVMCBC-84: Retain() instead of copy() in KeyValueHandler on content.

Motivation
----------
In the current codebase, the ByteBuf of the content body is copied before
passing to the higher levels. It turns out, this has been in place because
the netty decoder will free the original buffers.

This leads to higher TLAB allocation pressure than needed.

Modifications
-------------
By just retain()ining instead of copy()ing the content ByteBuf, we keep
control and avoid copying data around unnecessarily.

Result
------
Half the TLAB allocations, especially important on larger get requests
to reduce the work on the pool.

Change-Id: If4dbedb6a9022b5fd911feba1fbff4fc0da12b83",0,0,0,0,0,1,1,0,0
44414,I714e1701a8e34274460e02f323f559a6b7aa99f7,http://review.couchbase.org/#/c/44414,2,039283b15902d3e3ea947bbfb688a7473127fa1e,748895c74b028deff947645bda2c0a61ec9e7523,1,17/12/14,17/12/14,11,JVMCBC-86: Do not manually cancel subscription on retry.,"JVMCBC-86: Do not manually cancel subscription on retry.

Motivation
----------
When an operation is scheduled for retry, the subscription should
not manually be removed. This can cause NPEs since its subject to
a race condition. In addition, this code is not known to bring
an actual benefit.

Modifications
-------------
Remove the manual subscription management and instead let the
scheduler handle it as expected.

Result
------
No potential NPE and more predictable behavior

Change-Id: I714e1701a8e34274460e02f323f559a6b7aa99f7",0,0,0,0,0,1,1,0,0
44418,If1850649c8f7643810c9224edc79ac563ef4d7e1,http://review.couchbase.org/#/c/44418,3,a65f6c36c4c7418428457daed5ba5f3d55305ed9,1e72e589582ee25db5bdaa0af0205aa070229a1f,1,17/12/14,17/12/14,2,JVMCBC-85: Prevent too far lokahead on view info parsing.,"JVMCBC-85: Prevent too far lokahead on view info parsing.

Motivation
----------
When the view ""info"" part is parsed that comes before the
actual rows, the code looks ahead to see if it already
finds the beginning of the streaming rows.

If the chunk that is returned is that large that the rows
have not started yet (which can be the case when debug()
is enabled), the lookahead goes to far, leading to an
IndexOutOfBoundsException.

Modifications
-------------
The code now checks if the lookahead is actually possible based
on the index provided and if not just keeps fetching data. This
prevents the exception and allows for larger info chunks.

Result
------
No IndexOutOfBoundsException on larger info chunks, including
when debug() is enabled.

Change-Id: If1850649c8f7643810c9224edc79ac563ef4d7e1",0,0,0,0,0,1,1,0,0
44422,Ida290e9b9196cd6aeed4b0a6f0edc5987b599e62,http://review.couchbase.org/#/c/44422,2,7185b6cca4590b2bec5d5b62f093d2d601425103,a0c940653fe45f14eef3c1d95108a1296337e888,1,17/12/14,17/12/14,57,JVMCBC-75: Only extract response bytes when success from observe and counter.,"JVMCBC-75: Only extract response bytes when success from observe and counter.

Motivation
----------
During non-success responses, including not my vbucket responses, data cannot be
extracted (since it looks different) and therefore the status needs to be taken
into account.

This also prevents observe from working correctly during rebalance with higher
load (the chance is higher to hit a NMVB during observe calls).

Modifications
-------------
Make sure that when non-success responses are returned from operations, they are safely
set to a default value (the higher level takes care of either retrying transparently
or failing), but no exception (like index out of bounds) is raised.

Result
------
More resiliency during non-success responses, including rebalance phases.

Change-Id: Ida290e9b9196cd6aeed4b0a6f0edc5987b599e62",0,0,0,0,0,1,1,0,0
44477,I2a60f8cdb5bcf099f7927f7212fe7a0327624985,http://review.couchbase.org/#/c/44477,2,a0c940653fe45f14eef3c1d95108a1296337e888,c770a39628ba04b5bc3f1e28d5f2d26e67f55d43,1,18/12/14,18/12/14,2,Properly log the exception when the endpoint write failed.,"Properly log the exception when the endpoint write failed.

Motivation
----------
When the write failed and is logged, the actual exception is not
properly logged too.

Modifications
-------------
Log the cause, which contains the throwable.

Result
------
Better debugable log messages.

Change-Id: I2a60f8cdb5bcf099f7927f7212fe7a0327624985",0,0,0,0,0,1,1,0,0
44480,I1abab350d39f655353d7026a1ee2d6258f57934c,http://review.couchbase.org/#/c/44480,3,c770a39628ba04b5bc3f1e28d5f2d26e67f55d43,5b6bdc4526fbcacae965799d3d7b5d137289c952,1,18/12/14,19/12/14,6,Avoid logging ClosedChannelExceptions as warnings,"Avoid logging ClosedChannelExceptions as warnings

Motivation
----------
When a node is removed or failed over, the socket is closed and
the in-flight ops are cancelled. The upper retry logic can handle
retry, but the current endpoint code warns on the cancellation.

This is misleading, since the endpoint handles the scenario
gracefully.

Modifications
-------------
Explicitly exclude ClosedChannelException from WARN logging.

Result
------
Less verbose logging, not making users suspicious with ""false
positive"" warnings.

Change-Id: I1abab350d39f655353d7026a1ee2d6258f57934c",0,0,0,0,0,1,1,0,0
44481,I41d88a6b01dabcb7cef7bf965a796c300b846f6b,http://review.couchbase.org/#/c/44481,2,5b6bdc4526fbcacae965799d3d7b5d137289c952,d5375a47e58365548dc6ff685beac390e71c11d0,0,18/12/14,19/12/14,6,JVMCBC-89: Depend on RxJava 1.0.3,"JVMCBC-89: Depend on RxJava 1.0.3

Motivation
----------
Amongst other enhancements, RxJava 1.0.3 has a critical enhancement
that allows cancellation of not-running tasks which have an impact
on timeout() operators. It is Java >=7 only, but important, since users
were already running into it.

Change-Id: I41d88a6b01dabcb7cef7bf965a796c300b846f6b",0,0,0,0,0,1,1,NA,NA
44510,I176b00ca88f6f09086656528b42cd8ab3a0c4bf6,http://review.couchbase.org/#/c/44510,8,d5375a47e58365548dc6ff685beac390e71c11d0,02446bedee009ef7210bb6d13bf0c9bde3eb7de2,1,19/12/14,19/01/15,578,wip: delays.,"wip: delays.

Change-Id: I176b00ca88f6f09086656528b42cd8ab3a0c4bf6",0,1,0,1,1,1,1,0,0
44521,Icf9a0f6aeeda642097f173cbf9e0702eba390c14,http://review.couchbase.org/#/c/44521,3,e0cf86172d250fea9bd6188796723f7d99c63309,4ca94e9b90b106c940da1f36e7d83c0a97710270,1,19/12/14,19/01/15,66,JVMCBC-92: Allow Observe interval to be configured.,"JVMCBC-92: Allow Observe interval to be configured.

Motivation
----------
As in the 1.* SDK, it should be possible to configure the interval
for the observe polling (ReplicateTo, PersistTo). Previously, it has
been fixed to 10ms, which can be quite high in different environments.

Modifications
-------------
This changeset changes the default Delay to exponential, starting at 10
microseconds and a maximum poll interval of 100 milliseconds. Making it
exponential rather than fixed allows for quick poll check on fast systems
and gracefully slow down on slower systems.

In addition, the delay is completely configurable through the environment.

Result
------
More flexible and configurable observe poll interval.

Change-Id: Icf9a0f6aeeda642097f173cbf9e0702eba390c14",0,0,0,0,0,1,1,0,0
44618,I5484c6a45c3b57a94e4f9fe5ea424906c95c83a2,http://review.couchbase.org/#/c/44618,3,6c2349fe1c4635ab6f2eb0e6332d07b881190a95,093179601eeaaa7b67388f58a3d2c8be1bede1d3,1,23/12/14,31/12/14,71,JVMCBC-94: Allow GenericQueryRequest to take json,"JVMCBC-94: Allow GenericQueryRequest to take json

Motivation
----------
In N1QL dp4, queries are done in the form of statements and optional
parameters (like positional parameters or named parameters.
The statement is what is today a Query in the java SDK.
We need to refactor N1QL support in java SDK to support the correct
syntax of statements.

Modifications
-------------
GenericQueryRequest now has a isJson flag used by the handler to set
the Content-Type header to ""application/json"" if true.

BREAKING: to better differentiate this change, factory methods have now
replaced the constructor of GenericQueryRequest.

QueryHandlerTest now tests that the correct content type is set. Added
test of the request body as well.

Result
------
Users can now pass a json query, and the N1QL DP4 server will correctly
respond to it (but the response is yet to be parsed by the SDK).

All unit tests pass.

Change-Id: I5484c6a45c3b57a94e4f9fe5ea424906c95c83a2",0,0,1,0,0,1,1,0,0
44619,I9f5021ea0d9c1f1cc0e34560d5b438e7b48e522d,http://review.couchbase.org/#/c/44619,2,0a232b7f3c75da65e2b84d3691b416edfa2ef631,bddc0a8388a2ef0a1b23c26db29ac577149249ba,1,23/12/14,24/12/14,225,JVMCBC-95: if error in decodeResponse send to rx,"JVMCBC-95: if error in decodeResponse send to rx

Motivation
----------
Internal errors (exception thrown) in handler's decodeResponse are not
caught until Netty catches them.

Modifications
-------------
Let the user know about these internal errors by calling onError on the
request's Observable, with the internal error wrapped (if not already)
in a CouchbaseException.

Added a test that allows to construct a fake AbstractGenericHandler and
tests this behavior.

Result
------
CouchbaseRequest's observable is now notified via onError if an error
has occurred internally in the handler during response parsing.
All unit tests pass.

Change-Id: I9f5021ea0d9c1f1cc0e34560d5b438e7b48e522d",0,0,0,0,0,1,1,0,0
44684,I6bb9b64d86dd00ad27d036606cb6c837d57ea618,http://review.couchbase.org/#/c/44684,2,98be0d7d771ca551a9d139ab22672553f5835486,8647cc2f4442f734fa791f32d6a446e6f0533961,0,29/12/14,29/12/14,2,Start 1.0.3 development.,"Start 1.0.3 development.

Change-Id: I6bb9b64d86dd00ad27d036606cb6c837d57ea618",0,0,0,1,0,1,1,NA,NA
44685,I41d88a6b01dabcb7cef7bf965a796c300b846f6b,http://review.couchbase.org/#/c/44685,3,8647cc2f4442f734fa791f32d6a446e6f0533961,ea8adf4584da309ea202ef8e3f73b07bfce52b59,0,29/12/14,29/12/14,8,JVMCBC-89: Depend on RxJava 1.0.3,"JVMCBC-89: Depend on RxJava 1.0.3

Motivation
----------
Amongst other enhancements, RxJava 1.0.3 has a critical enhancement
that allows cancellation of not-running tasks which have an impact
on timeout() operators. It is Java >=7 only, but important, since users
were already running into it.

Change-Id: I41d88a6b01dabcb7cef7bf965a796c300b846f6b
Reviewed-on: http://review.couchbase.org/44481
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,NA,NA
44686,If1850649c8f7643810c9224edc79ac563ef4d7e1,http://review.couchbase.org/#/c/44686,2,ea8adf4584da309ea202ef8e3f73b07bfce52b59,100508c7ae45cd2b21fe4cc7a60cf40eb83c6319,1,29/12/14,29/12/14,2,JVMCBC-85: Prevent too far lokahead on view info parsing.,"JVMCBC-85: Prevent too far lokahead on view info parsing.

Motivation
----------
When the view ""info"" part is parsed that comes before the
actual rows, the code looks ahead to see if it already
finds the beginning of the streaming rows.

If the chunk that is returned is that large that the rows
have not started yet (which can be the case when debug()
is enabled), the lookahead goes to far, leading to an
IndexOutOfBoundsException.

Modifications
-------------
The code now checks if the lookahead is actually possible based
on the index provided and if not just keeps fetching data. This
prevents the exception and allows for larger info chunks.

Result
------
No IndexOutOfBoundsException on larger info chunks, including
when debug() is enabled.

Change-Id: If1850649c8f7643810c9224edc79ac563ef4d7e1
Reviewed-on: http://review.couchbase.org/44418
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,0,0
44687,I714e1701a8e34274460e02f323f559a6b7aa99f7,http://review.couchbase.org/#/c/44687,2,100508c7ae45cd2b21fe4cc7a60cf40eb83c6319,253b734c2e7784f5389552b5352217754a3051be,1,29/12/14,29/12/14,11,JVMCBC-86: Do not manually cancel subscription on retry.,"JVMCBC-86: Do not manually cancel subscription on retry.

Motivation
----------
When an operation is scheduled for retry, the subscription should
not manually be removed. This can cause NPEs since its subject to
a race condition. In addition, this code is not known to bring
an actual benefit.

Modifications
-------------
Remove the manual subscription management and instead let the
scheduler handle it as expected.

Result
------
No potential NPE and more predictable behavior

Change-Id: I714e1701a8e34274460e02f323f559a6b7aa99f7
Reviewed-on: http://review.couchbase.org/44414
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,0,0
44688,Ida290e9b9196cd6aeed4b0a6f0edc5987b599e62,http://review.couchbase.org/#/c/44688,2,253b734c2e7784f5389552b5352217754a3051be,cab84306b584225291516adf7179ab11ce039e61,1,29/12/14,29/12/14,57,JVMCBC-75: Only extract response bytes when success from observe and counter.,"JVMCBC-75: Only extract response bytes when success from observe and counter.

Motivation
----------
During non-success responses, including not my vbucket responses, data cannot be
extracted (since it looks different) and therefore the status needs to be taken
into account.

This also prevents observe from working correctly during rebalance with higher
load (the chance is higher to hit a NMVB during observe calls).

Modifications
-------------
Make sure that when non-success responses are returned from operations, they are safely
set to a default value (the higher level takes care of either retrying transparently
or failing), but no exception (like index out of bounds) is raised.

Result
------
More resiliency during non-success responses, including rebalance phases.

Change-Id: Ida290e9b9196cd6aeed4b0a6f0edc5987b599e62
Reviewed-on: http://review.couchbase.org/44422
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,0,0
44689,I2a60f8cdb5bcf099f7927f7212fe7a0327624985,http://review.couchbase.org/#/c/44689,2,cab84306b584225291516adf7179ab11ce039e61,85eb681c9e9d6a2d745ffcf72006a002f946b1b9,1,29/12/14,29/12/14,2,Properly log the exception when the endpoint write failed.,"Properly log the exception when the endpoint write failed.

Motivation
----------
When the write failed and is logged, the actual exception is not
properly logged too.

Modifications
-------------
Log the cause, which contains the throwable.

Result
------
Better debugable log messages.

Change-Id: I2a60f8cdb5bcf099f7927f7212fe7a0327624985
Reviewed-on: http://review.couchbase.org/44477
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,0,0
44690,I1abab350d39f655353d7026a1ee2d6258f57934c,http://review.couchbase.org/#/c/44690,2,85eb681c9e9d6a2d745ffcf72006a002f946b1b9,cedf1e2edf1de413185e1bab513584e3dc0ad086,1,29/12/14,29/12/14,6,JVMCBC-90: Avoid logging ClosedChannelExceptions as warnings,"JVMCBC-90: Avoid logging ClosedChannelExceptions as warnings

Motivation
----------
When a node is removed or failed over, the socket is closed and
the in-flight ops are cancelled. The upper retry logic can handle
retry, but the current endpoint code warns on the cancellation.

This is misleading, since the endpoint handles the scenario
gracefully.

Modifications
-------------
Explicitly exclude ClosedChannelException from WARN logging.

Result
------
Less verbose logging, not making users suspicious with ""false
positive"" warnings.

Change-Id: I1abab350d39f655353d7026a1ee2d6258f57934c
Reviewed-on: http://review.couchbase.org/44480
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,0,0
44708,I69a809fcd3dfc4994a9955cd75b9c7163005d0b2,http://review.couchbase.org/#/c/44708,2,9823d286cfd30cbdeb8f5499be989dee89434427,0122a58031dcca618160f4ed97755162c4d58f62,1,29/12/14,29/12/14,93,JVMCBC-82: Do not propose non-JSON contents for new configs.,"JVMCBC-82: Do not propose non-JSON contents for new configs.

Motivation
----------
Older server versions do not return the new config as part of their
""not my vbucket responses"", but rather a plain message. This message
should not be allowed to pass through the configuration manager, because
it will pass it to Jackson which of course is not able to decode it.

Modifications
-------------
Added checks that the config actually starts with a {, making sure that
the returned config is (most certainly) valid JSON. Note that at this
point no more sanity checks are performed on the config, but the code
relies on the fact that the server returns valid JSON in the chunk.

In addition, the content is properly released to avoid leaking out.

Result
------
Correct behavior against a rebalancing 2.2 and earlier Couchbase Server
cluster in terms of configuration proposal.

Change-Id: I69a809fcd3dfc4994a9955cd75b9c7163005d0b2",0,0,0,0,0,1,1,0,0
44719,I484cb39e99a48891de96531c48b20d61a6e9e9c8,http://review.couchbase.org/#/c/44719,2,0122a58031dcca618160f4ed97755162c4d58f62,0b1854770e439bab68a93d40514ba9b2cff1c023,1,29/12/14,30/12/14,63,JVMCBC-97: Do not try to parse View service when not available.,"JVMCBC-97: Do not try to parse View service when not available.

Motivation
----------
During a rebalance out scenario, when parsing the ""old style config"",
the server will remove the view service from the list when it is not
available anymore.

Not checking for null will result in a NPE.

Modifications
-------------
The code now checks if the view service is set in the config and only
exposes it if not null. This also automatically will trigger a view
service removal from the node down the reconfiguration paths.

Result
------
More robust behaviour during rebalance out.

Change-Id: I484cb39e99a48891de96531c48b20d61a6e9e9c8",0,0,0,0,0,1,1,0,0
44748,I1e61ff30599dbac153da4a65d15334683918436b,http://review.couchbase.org/#/c/44748,2,47b52a7b8818644d64bcbbda62dad9eac4663bb0,64f7ea899afe5e71464b58f02fc6a83043f15e28,1,30/12/14,30/12/14,91,JVMCBC-98: Fall back to verbose config if terse returns 404,"JVMCBC-98: Fall back to verbose config if terse returns 404

Motivation
----------
When the terse bucket config over HTTP is not accessible (which is the
case on older server versions), the code needs to fall back to the
verbose config when it both fails or just returns a 404 not found.

Modifications
-------------
The code now properly checks if the terse config is a success and if not,
converts it into an exception that will be caught by the next handler.
Note that while this may not be the most performant way to handle this,
the code path is not travelled much and makes error handling more uniform.

Also, a test case has been added and another one corrected (the wrong call
was used and overriden by the success message, leading to an always
succeeding test).

Result
------
Correct fallback handling on older server versions.

Change-Id: I1e61ff30599dbac153da4a65d15334683918436b",0,0,0,0,0,1,1,0,0
44751,I0811019a1291e7a703864918b7a63d41beac2f52,http://review.couchbase.org/#/c/44751,3,7b65b833a98892f48a606931b053d95d4472cc08,e2e2336be211e42e6eb69b82bd350376e67299ca,1,30/12/14,30/12/14,241,JVMCBC-99: Do not propose invalid config in Carrier Refresher.,"JVMCBC-99: Do not propose invalid config in Carrier Refresher.

Motivation
----------
The refresher needs to make sure that only valid configs are proposed to the the
configuration provider. Especially when the polling happens against an older
cluster, the command might not return a successful JSON configuration.

Modifications
-------------
The code now properly adapts for non-success responses and also checks if the
content is - at least simply - JSON.

Result
------
More robust handling against older clusters.

Change-Id: I0811019a1291e7a703864918b7a63d41beac2f52",0,0,0,0,0,1,1,0,0
44754,I66440db95843aac75d412e46ccc06c447bd376bf,http://review.couchbase.org/#/c/44754,2,e2e2336be211e42e6eb69b82bd350376e67299ca,7b1a18e69c997ea911c92f33fbb89b709ff21142,1,30/12/14,30/12/14,3,"JVMCBC-100: Take the first good config on loading, skip the others.","JVMCBC-100: Take the first good config on loading, skip the others.

Motivation
----------
When a list of good bootstrap nodes is passed in, the code fans out
to grab a config from all of them. While this itself is valid, all
of those configs are passed up to the configuration provider and
are applied.

This can lead to double ""bucket opened"" messages and also duplicate
work to be performed.

Modifications
-------------
Only take the first successful configuration and then unsubscribe.

Result
------
Less work to be done in the configuration provider and no misleading
info messages for the user.

Change-Id: I66440db95843aac75d412e46ccc06c447bd376bf",0,0,0,0,0,1,1,0,0
44759,Ic9d5dd32177286caece923cf2943fc0f93079819,http://review.couchbase.org/#/c/44759,3,7b1a18e69c997ea911c92f33fbb89b709ff21142,1cffdc97b3143f226ecfd82d1736723d6b4f0d32,1,30/12/14,30/12/14,46,JVMCBC-101: Avoid failing bootstrap when some nodes are uninitialized.,"JVMCBC-101: Avoid failing bootstrap when some nodes are uninitialized.

Motivation
----------
When some of the nodes are returning errors (for example because they
are reachable, but uninitialized), they should be ignored - since
others can return valid results.

Important is though that if all are returning errors, it still needs
to be propagated to the upper layers.

Modifications
-------------
The code now uses mergeDelayError to delay the error until the end.
If one successful config arrives, take(1) makes sure to unsubscribe
and the error never reaches the upper layer. If no successful config
can be taken, the error propagates.

Result
------
Better control when multiple nodes are passed in, and correct bootstrap
if some of them are uninitialized.

Change-Id: Ic9d5dd32177286caece923cf2943fc0f93079819",0,0,0,0,0,1,1,0,0
44760,I2e821797b81ca0f415d61788bb3736a6f13055cc,http://review.couchbase.org/#/c/44760,2,da46310ba7ed0261c7e48616ca448d4b1aebd200,6ec4735511eacff2f191a8992a778384691dd22f,0,30/12/14,30/12/14,4,JVMCBC-103: Depend on RxJava 1.0.4,"JVMCBC-103: Depend on RxJava 1.0.4

Motivation
----------
HEAD is currently depending on 1.0.3, which contains critical fixes
for timeouts. Since we are upgrading RxJava anyways, going to the
last released version possible on 1.0 makes sure we cover as many
bugfixes as possible.

Change-Id: I2e821797b81ca0f415d61788bb3736a6f13055cc",0,0,0,0,0,1,1,NA,NA
44761,I06754196171352b391e8bea67e00cb3e1d3326e1,http://review.couchbase.org/#/c/44761,3,6a88d582b3262b2a46818aae0ca66ac60f40e66a,0cb4dd0d695af394a5165e3b299078d6608c82e9,1,30/12/14,30/12/14,5,Set ByteBuf leak detector to paranoid in integration tests.,"Set ByteBuf leak detector to paranoid in integration tests.

Motivation
----------
In order to more quickly detect ByteBuf leaks, all integration tests
should be run with the leak detector switched on and in the ""paranoid""
setting to detect as many leaks as possible.

Modifications
-------------
Since the ClusterDependentTest is the parent class for all integration
tests, the static property is set there.

Result
------
Potentially better results in early identifying ByteBuf pool leaks.

Change-Id: I06754196171352b391e8bea67e00cb3e1d3326e1",0,0,0,0,0,1,1,0,0
44762,I3e1b833295884cbfe79b5c94fca12fd91463dfcb,http://review.couchbase.org/#/c/44762,2,d88f1d68d6b2e0d83511fd53cec2c201ee4bb9db,d95613a14618ace4a69265b32d9a1d74147346a5,1,30/12/14,30/12/14,39,Add Tuple* toString methods for better debugability.,"Add Tuple* toString methods for better debugability.

Change-Id: I3e1b833295884cbfe79b5c94fca12fd91463dfcb",0,0,0,1,0,1,1,0,0
44763,I23cbdd72f655870777bc3476e779da8c0822f40d,http://review.couchbase.org/#/c/44763,4,67c7751848cc7f656ba7a35ca3086df14c418178,0465103c61b29a2090bffa23c4eb32a545db9cd6,1,30/12/14,30/12/14,33,JVMCBC-104: CouchbaseNodes need to be equals on same InetAddr,"JVMCBC-104: CouchbaseNodes need to be equals on same InetAddr

Motivation
----------
The RequestHandler stores all the CouchbaseNodes in a Set. Even
when race conditions happen, we need to make sure that the list
of nodes never contains duplicates.

Modifications
-------------
The CouchbaseNode now has custom hashCode and equals methods which
align on the stored InetAddress. That way, nodes pointing to the
same address are treated the same and never stored together in the
set.

Result
------
More consistent handling of nodes, and never duplicates in the
node list set.

Change-Id: I23cbdd72f655870777bc3476e779da8c0822f40d",0,1,0,0,0,1,1,0,0
44764,I60e6e7d0e2b2820f1a98f62b0ca66b326751cc4b,http://review.couchbase.org/#/c/44764,2,137c5534fdeed914c07ee0110e2e8e0fe484ce90,c8fff42a9df85daccb2ed21bcc467a6bb96dfff3,1,30/12/14,30/12/14,3,Narrowing misleading DEBUG message for node removal.,"Narrowing misleading DEBUG message for node removal.

Motivation
----------
The DEBUG message showed a list of node removal _candidates_, but
logged them as they would be removed.

Modifications
-------------
Only log a DEBUG message if the node is actually going to be removed.

Result
------
No misleading DEBUG log message on node removal if its not actually
going to happen.

Change-Id: I60e6e7d0e2b2820f1a98f62b0ca66b326751cc4b",0,0,0,0,0,1,1,0,0
44767,I69a809fcd3dfc4994a9955cd75b9c7163005d0b2,http://review.couchbase.org/#/c/44767,2,2faf8a50a14c888a837ca5ad48b6ccc4a0271f76,730357b36f2e261a55101ee7b20f72378e08d9b0,1,30/12/14,30/12/14,93,JVMCBC-82: Do not propose non-JSON contents for new configs.,"JVMCBC-82: Do not propose non-JSON contents for new configs.

Motivation
----------
Older server versions do not return the new config as part of their
""not my vbucket responses"", but rather a plain message. This message
should not be allowed to pass through the configuration manager, because
it will pass it to Jackson which of course is not able to decode it.

Modifications
-------------
Added checks that the config actually starts with a {, making sure that
the returned config is (most certainly) valid JSON. Note that at this
point no more sanity checks are performed on the config, but the code
relies on the fact that the server returns valid JSON in the chunk.

In addition, the content is properly released to avoid leaking out.

Result
------
Correct behavior against a rebalancing 2.2 and earlier Couchbase Server
cluster in terms of configuration proposal.

Change-Id: I69a809fcd3dfc4994a9955cd75b9c7163005d0b2
Reviewed-on: http://review.couchbase.org/44708
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,0,0
44768,I1e61ff30599dbac153da4a65d15334683918436b,http://review.couchbase.org/#/c/44768,2,97a01a128149135703e1afbe317479d7400dd099,399b081686db76cd7259fe5c77a38cb11cf2cad8,1,30/12/14,30/12/14,91,JVMCBC-98: Fall back to verbose config if terse returns 404,"JVMCBC-98: Fall back to verbose config if terse returns 404

Motivation
----------
When the terse bucket config over HTTP is not accessible (which is the
case on older server versions), the code needs to fall back to the
verbose config when it both fails or just returns a 404 not found.

Modifications
-------------
The code now properly checks if the terse config is a success and if not,
converts it into an exception that will be caught by the next handler.
Note that while this may not be the most performant way to handle this,
the code path is not travelled much and makes error handling more uniform.

Also, a test case has been added and another one corrected (the wrong call
was used and overriden by the success message, leading to an always
succeeding test).

Result
------
Correct fallback handling on older server versions.

Change-Id: I1e61ff30599dbac153da4a65d15334683918436b
Reviewed-on: http://review.couchbase.org/44748
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,0,0
44769,I484cb39e99a48891de96531c48b20d61a6e9e9c8,http://review.couchbase.org/#/c/44769,2,6e2824d2f4bf04ba23fc6fddd5f6590dd1dfec8e,2d1bf9d0051d5fe98d7a2f36f91340efc259c13a,1,30/12/14,30/12/14,63,JVMCBC-97: Do not try to parse View service when not available.,"JVMCBC-97: Do not try to parse View service when not available.

Motivation
----------
During a rebalance out scenario, when parsing the ""old style config"",
the server will remove the view service from the list when it is not
available anymore.

Not checking for null will result in a NPE.

Modifications
-------------
The code now checks if the view service is set in the config and only
exposes it if not null. This also automatically will trigger a view
service removal from the node down the reconfiguration paths.

Result
------
More robust behaviour during rebalance out.

Change-Id: I484cb39e99a48891de96531c48b20d61a6e9e9c8
Reviewed-on: http://review.couchbase.org/44719
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,0,0
44770,I0811019a1291e7a703864918b7a63d41beac2f52,http://review.couchbase.org/#/c/44770,2,73dab7627693e27bd33b46b583d6e78b7ad482c0,beda65e4228408c26772bc5404cd0c0d3e70d87f,1,30/12/14,30/12/14,241,JVMCBC-99: Do not propose invalid config in Carrier Refresher.,"JVMCBC-99: Do not propose invalid config in Carrier Refresher.

Motivation
----------
The refresher needs to make sure that only valid configs are proposed to the the
configuration provider. Especially when the polling happens against an older
cluster, the command might not return a successful JSON configuration.

Modifications
-------------
The code now properly adapts for non-success responses and also checks if the
content is - at least simply - JSON.

Result
------
More robust handling against older clusters.

Change-Id: I0811019a1291e7a703864918b7a63d41beac2f52
Reviewed-on: http://review.couchbase.org/44751
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,0,0
44771,I66440db95843aac75d412e46ccc06c447bd376bf,http://review.couchbase.org/#/c/44771,2,5c35d9d8941bfb0eba109d380eab077f2d0c7006,5711b5545db7afa7c49f02c606871defa7c80b9d,1,30/12/14,30/12/14,3,"JVMCBC-100: Take the first good config on loading, skip the others.","JVMCBC-100: Take the first good config on loading, skip the others.

Motivation
----------
When a list of good bootstrap nodes is passed in, the code fans out
to grab a config from all of them. While this itself is valid, all
of those configs are passed up to the configuration provider and
are applied.

This can lead to double ""bucket opened"" messages and also duplicate
work to be performed.

Modifications
-------------
Only take the first successful configuration and then unsubscribe.

Result
------
Less work to be done in the configuration provider and no misleading
info messages for the user.

Change-Id: I66440db95843aac75d412e46ccc06c447bd376bf
Reviewed-on: http://review.couchbase.org/44754
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,0,0
44772,I3e1b833295884cbfe79b5c94fca12fd91463dfcb,http://review.couchbase.org/#/c/44772,2,281ec972d1df6f5f8db7f1afaf28e0afbc1eeb8b,8205d1fc404c9d4e3af6124f501450d783689db1,1,30/12/14,30/12/14,39,Add Tuple* toString methods for better debugability.,"Add Tuple* toString methods for better debugability.

Change-Id: I3e1b833295884cbfe79b5c94fca12fd91463dfcb
Reviewed-on: http://review.couchbase.org/44762
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,1,0,1,1,0,0
44773,I2e821797b81ca0f415d61788bb3736a6f13055cc,http://review.couchbase.org/#/c/44773,2,18c9e1ea050ce5929677493a33c94991b37fc773,18275a4867a2e83001f20426dfb31ba21790a343,0,30/12/14,30/12/14,4,JVMCBC-103: Depend on RxJava 1.0.4,"JVMCBC-103: Depend on RxJava 1.0.4

Motivation
----------
HEAD is currently depending on 1.0.3, which contains critical fixes
for timeouts. Since we are upgrading RxJava anyways, going to the
last released version possible on 1.0 makes sure we cover as many
bugfixes as possible.

Change-Id: I2e821797b81ca0f415d61788bb3736a6f13055cc
Reviewed-on: http://review.couchbase.org/44760
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,NA,NA
44774,Ic9d5dd32177286caece923cf2943fc0f93079819,http://review.couchbase.org/#/c/44774,2,d7d15da7e9bca84886c83e89a586c1e060d091e2,9d6827ceda74451ea823507147ee3bda545ba6a1,1,30/12/14,30/12/14,46,JVMCBC-101: Avoid failing bootstrap when some nodes are uninitialized.,"JVMCBC-101: Avoid failing bootstrap when some nodes are uninitialized.

Motivation
----------
When some of the nodes are returning errors (for example because they
are reachable, but uninitialized), they should be ignored - since
others can return valid results.

Important is though that if all are returning errors, it still needs
to be propagated to the upper layers.

Modifications
-------------
The code now uses mergeDelayError to delay the error until the end.
If one successful config arrives, take(1) makes sure to unsubscribe
and the error never reaches the upper layer. If no successful config
can be taken, the error propagates.

Result
------
Better control when multiple nodes are passed in, and correct bootstrap
if some of them are uninitialized.

Change-Id: Ic9d5dd32177286caece923cf2943fc0f93079819
Reviewed-on: http://review.couchbase.org/44759
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,0,0
44775,I60e6e7d0e2b2820f1a98f62b0ca66b326751cc4b,http://review.couchbase.org/#/c/44775,2,7909b9ce358c9300b1e5f09e951231713891f117,8c5bf78f603bd8eb3738be77e03ec4ce9062eb04,1,30/12/14,30/12/14,3,Narrowing misleading DEBUG message for node removal.,"Narrowing misleading DEBUG message for node removal.

Motivation
----------
The DEBUG message showed a list of node removal _candidates_, but
logged them as they would be removed.

Modifications
-------------
Only log a DEBUG message if the node is actually going to be removed.

Result
------
No misleading DEBUG log message on node removal if its not actually
going to happen.

Change-Id: I60e6e7d0e2b2820f1a98f62b0ca66b326751cc4b
Reviewed-on: http://review.couchbase.org/44764
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,0,0
44776,I06754196171352b391e8bea67e00cb3e1d3326e1,http://review.couchbase.org/#/c/44776,2,74dd4ee9bbf882327e155c4dd67cce691bf68733,860fab5c7fd4de8211896667ea1ec54528563a56,1,30/12/14,30/12/14,5,Set ByteBuf leak detector to paranoid in integration tests.,"Set ByteBuf leak detector to paranoid in integration tests.

Motivation
----------
In order to more quickly detect ByteBuf leaks, all integration tests
should be run with the leak detector switched on and in the ""paranoid""
setting to detect as many leaks as possible.

Modifications
-------------
Since the ClusterDependentTest is the parent class for all integration
tests, the static property is set there.

Result
------
Potentially better results in early identifying ByteBuf pool leaks.

Change-Id: I06754196171352b391e8bea67e00cb3e1d3326e1
Reviewed-on: http://review.couchbase.org/44761
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,0,0
44777,I23cbdd72f655870777bc3476e779da8c0822f40d,http://review.couchbase.org/#/c/44777,2,d80a0015aa764af882a6e990a1c0ae848e912818,672dfdd62eca68c3b82ac1ab25e9c210b7035b5e,1,30/12/14,30/12/14,33,JVMCBC-104: CouchbaseNodes need to be equals on same InetAddr,"JVMCBC-104: CouchbaseNodes need to be equals on same InetAddr

Motivation
----------
The RequestHandler stores all the CouchbaseNodes in a Set. Even
when race conditions happen, we need to make sure that the list
of nodes never contains duplicates.

Modifications
-------------
The CouchbaseNode now has custom hashCode and equals methods which
align on the stored InetAddress. That way, nodes pointing to the
same address are treated the same and never stored together in the
set.

Result
------
More consistent handling of nodes, and never duplicates in the
node list set.

Change-Id: I23cbdd72f655870777bc3476e779da8c0822f40d
Reviewed-on: http://review.couchbase.org/44763
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,0,0
44780,Ia38e7db2676ec2c0319412219ee4fe92b2ef17df,http://review.couchbase.org/#/c/44780,8,d11c22c87c980e614293e0e8abbd950c8ca55d89,f8bd66d7ea7bda5235af7222c4d7e1ce7840edb7,1,30/12/14,08/01/15,1217,JVMCBC-105: parse dp4 responses in QueryHandler,"JVMCBC-105: parse dp4 responses in QueryHandler

Motivation
----------
Between DP4 and DP3, response format was modified and enriched.

Modifications
-------------
Added new parsing steps for the new possible response sections :
 - signature
 - results (instead of resultset, still an array of json objects)
 - warnings (array of error objects)

 Modified initial parsing and GenericQueryReponse to include streams of
 errors (instead of putting them in info), an observable for the status
 that can only come once all rows have been processed and for IDs (with
 a requestId and a clientContextId).

 Modified parsing of existing steps to accomodate changes:
  - resultset is now ""results""
  - info section is now ""metrics"", with a fixed schema (named fields,
  not a generic structure)
  - errors can be multiple (same format as warnings)

 Modified test data to reflect changes in response format, modified
 and added tests.

 Note: clients (the java SDK) should be updated to take these changes
 into account:
  - ResponseStatus is not definite (there still could be execution
  errors, one has to also look at queryStatus())
  - errors (and warnings) could be multiple, and are fed into errors()
  - info() now contains a single element with named metric fields

Result
------
QueryHandler now can parse DP4 responses. Tests pass.

Change-Id: Ia38e7db2676ec2c0319412219ee4fe92b2ef17df",0,1,0,0,1,1,1,1,1
44781,Ia05b192051f0ff416eaa0c923f95e71403e3cf36,http://review.couchbase.org/#/c/44781,3,b73ca31ea961a335a8c5df440cef2d6f8d11bba7,3572a1d6b9556aa2d38671298dec6f48f2563032,1,30/12/14,31/12/14,11,JVMCBC-106: Do not retain content on encoding.,"JVMCBC-106: Do not retain content on encoding.

Motivation
----------
While the extras need to be retained (because they are released
down in the memcache protocol encoder), the content should not
be encoded, otherwise it leaks into the pool.

This does currently only show up with Observe operations (because
there the content is allocate from the pool), but once the code
actually encodes more content from the pool it needs to be
properly released.

Modifications
-------------
Remove the code which retains the content and only keeps the
extras to be retained.

Result
------
Operations encoded with pooled content do not leak out of
the pool.

Change-Id: Ia05b192051f0ff416eaa0c923f95e71403e3cf36",0,0,0,0,0,1,1,0,0
44801,I1621d2f68985023ef955383c0257fdf89374251c,http://review.couchbase.org/#/c/44801,2,3572a1d6b9556aa2d38671298dec6f48f2563032,a6388d7777116fd0e5486328b85bdc7ad961dcec,1,31/12/14,31/12/14,2,"JVMCBC-108: Check if endpoint is active, not only writable.","JVMCBC-108: Check if endpoint is active, not only writable.

Motivation
----------
The current code checked, before writing into a channel, if it
isWritable(). As it turns out, this is not what it says, since
it only checks if the underlying buffer can be written immediately.

Modifications
-------------
The changeset makes sure that the code calls isActive() as well to
make sure its both open, active and writable.

Result
------
Avoiding situations where data is written down to a channel which
is not active anymore, avoiding broken pipes and similar.

Change-Id: I1621d2f68985023ef955383c0257fdf89374251c",0,0,0,0,0,1,1,0,0
44802,I0ec272226e0f29ee0da1020510db7b08fd1fc2a6,http://review.couchbase.org/#/c/44802,3,a6388d7777116fd0e5486328b85bdc7ad961dcec,ad1e55c10db3a3e461db02bb3e7dacc612f8bf4c,1,31/12/14,31/12/14,120,JVMCBC-109: Null out ResponseBuffer events after usage.,"JVMCBC-109: Null out ResponseBuffer events after usage.

Motivation
----------
The RequestHandler already nulls out events as quickly as possible
to prevent them from being references longer than absolutely needed.

The ResponseHandler is not doing that, keeping responses and observables
longer around. This may have bad GC impact, especially on lower traffic
applications where the 16k response buffer is not recycled completely
quickly.

Modifications
-------------
This changeset makes sure to null out response events after their usage,
and also simplifies the response handler so that they are released in
the same finally block (and not in many places throughout the same method).

The code relies on the fact that the finally method will be always called
by the JVM, even if exceptions are raised or return statements are run
in between.

Result
------
Carried response content is more quickly released (and GCed). Simplified
code on the request handler as well.

Change-Id: I0ec272226e0f29ee0da1020510db7b08fd1fc2a6",0,0,0,0,0,1,1,0,0
44804,I43c6473d6a6a22ac260882033dd1b4b2842bf2ae,http://review.couchbase.org/#/c/44804,4,c459fec061ed35137bdf65396b46115e075087d6,6b39a549513caeed03565ee89d5700f8af9be2a5,1,31/12/14,31/12/14,20,JVMCBC-107: release buffer in ConfigHandler,"JVMCBC-107: release buffer in ConfigHandler

Motivation
----------
ByteBuf leaks were encountered while testing, the contentResponseBuffer
is not properly release at any point despite it being only internally
used.

Modifications
-------------
FinishedDecoding now also releases the buffer and set it to null, so
that next decoding will start with a fresh buffer from the pool.

Result
------
No more leak should be encountered with the ConfigHandler.

Change-Id: I43c6473d6a6a22ac260882033dd1b4b2842bf2ae",0,1,0,0,0,1,1,1,1
44809,If71955bf9ff7cfb044e69e9a619e4f010fad3cb1,http://review.couchbase.org/#/c/44809,2,e768a2edb4ebc469001a9366c028688f02fc3441,6463a962a9d055171e7fab0bb42d1034b205d27c,0,31/12/14,31/12/14,4,JVMCBC-110: Upgrade Netty to 4.0.25,"JVMCBC-110: Upgrade Netty to 4.0.25

Motivation
----------
The current codebase is on 4.0.25, the last two bugfix releases
bring both general speed improvements and lots of bugfixes in the SSL
area.

It also contains faster UTF-8 string encoding capabilities which we
can utilize in the future.

Modifications
-------------
Upgrade Netty to 4.0.25.

Result
------
Newer stable netty release with better performance and bugfixes.

Change-Id: If71955bf9ff7cfb044e69e9a619e4f010fad3cb1",0,0,0,0,0,1,1,NA,NA
44837,I95cce02c54b63da177e84f8eb178bcd7eadc9bbc,http://review.couchbase.org/#/c/44837,4,6463a962a9d055171e7fab0bb42d1034b205d27c,b1b692d2f7b21dd4008d55bfe0140e3186513c2e,1,02/01/15,02/01/15,300,WIP: proper fallback to other nodes on cfg refresh.,"WIP: proper fallback to other nodes on cfg refresh.

Change-Id: I95cce02c54b63da177e84f8eb178bcd7eadc9bbc",0,1,0,1,0,1,1,0,0
44840,I7cb6789ca3b7dbe2c78a6c6027a6580d4277461e,http://review.couchbase.org/#/c/44840,5,b1b692d2f7b21dd4008d55bfe0140e3186513c2e,76e01ce8572673669a122d32b60b731890d1e9e5,1,02/01/15,02/01/15,199,WIP: retain for NMVB.,"WIP: retain for NMVB.

Change-Id: I7cb6789ca3b7dbe2c78a6c6027a6580d4277461e",0,1,0,1,0,1,1,0,0
44841,If6279a77b0d45355eadabe4ef853483d2a7b88a9,http://review.couchbase.org/#/c/44841,2,e71e99bee68a3c18554e20a3bbefd1321b9d0978,8d6557409941f0b05f4e6bc8780e020b4e7023b0,0,02/01/15,02/01/15,91,JVMCBC-112: fix assertions & release resp buffers,"JVMCBC-112: fix assertions & release resp buffers

Motivation
----------
The integration test has several assertions checking the wrong response
of the test, and all these tests check responses but never release them
(or rather, their content ByteBuf).

Modifications
-------------
Every response received in the various tests has its content ByteBuf
correctly and explicitely released.
Some assertions that would check the wrong response (eg. a previously
asserted UpsertResponse instead of the more recent GetResponse) have
been fixed.

Result
------
Test has been improved, and there should be less leaks false negatives.

Change-Id: If6279a77b0d45355eadabe4ef853483d2a7b88a9",0,0,0,0,0,1,1,NA,NA
44842,Ica427b8886a30e90543c574b34b6f331fd9a19eb,http://review.couchbase.org/#/c/44842,3,9b6374c10de09b14b3c77f624b6ecf72823103b7,5035ac988cb6e1a85475f66813b0d30b62346b3f,1,02/01/15,02/01/15,6,JVMCBC-113: fix leak CarrierLoader.discoverConfig,"JVMCBC-113: fix leak CarrierLoader.discoverConfig

Motivation
----------
The ByteBuf parsed when discovering configuration is not released as it
should be, leading to leaks.

Modifications
-------------
Release of the GetBucketConfigResponse's ByteBuf content is now done
properly.

Result
------
One less ByteBuf leak.

Change-Id: Ica427b8886a30e90543c574b34b6f331fd9a19eb",0,0,0,0,0,1,1,0,0
44877,Ic7929ac8747f463cd579649fd40925e9fb4365d0,http://review.couchbase.org/#/c/44877,3,4722d8740439daac9fcd0a8a9b279b9c8b7e15c1,eb404527adbbe55bd4ae7d390a06c24ef89e673a,1,03/01/15,05/01/15,11,JVMCBC-115: Adding a minimum reconnect delay to the Endpoint.,"JVMCBC-115: Adding a minimum reconnect delay to the Endpoint.

Motivation
----------
Currently the code starts with very very low reconnect delays (2, 4, 8,..)
ms. When a node is removed or failed over, this leads to lots of connect
errors.

A better approach is to provide a longer initial min reconnect delay which
is then gradually increased.

Modifications
-------------
This changeset sets a minimum delay of 128ms, which is still very quick. It does
this for a few attempts and then increases up to 4s as before.

In future versions, once the delay is merged we can think about making it configurable
through the environment completely.

Result
------
More graceful reconnect delays in the lower bounds.

Change-Id: Ic7929ac8747f463cd579649fd40925e9fb4365d0",0,0,0,0,0,1,1,0,0
44898,I02b92f7fa2cf379e311eb88f01a87336b746529a,http://review.couchbase.org/#/c/44898,2,eb404527adbbe55bd4ae7d390a06c24ef89e673a,7162dec62b8434b429d259f6f7b9bc488f22bc3f,1,05/01/15,05/01/15,228,JVMCBC-116: Do not route view requests to nodes without partitions.,"JVMCBC-116: Do not route view requests to nodes without partitions.

Motivation
----------
When a node is removed from the cluster, there is a timeframe when all partitions went away,
but it is still part of the logical cluster config. At this point in time, view requests
should not be routed to this node anymore.

Modifications
-------------
The changesets has three components:

	1) It provides a utility method on the CouchbaseBucketConfig that returns a boolean
	   to quickly check if the given node contains at least one primary partition.

	   Note that these are cached when the config is created to save CPU cycled on the
	   hot code path (when checking).

	2) It adds a check to the ViewLocator so that a node is not used when it has no
	   partitions assigned to it.

	3) Relatedly, the code in the ViewLocator immediately rejects requests that
	   cannot be served from the config type. This mainly includes view requests
	   being cancelled right away against a memcached bucket type.

	   As part of this effort, a new exception has been added to semantically
	   indicate this state.

Tests have been added to verify the new functionality on a unit-test basis.

Result
------
View requests are not routed to nodes anymore which do not have primary partitions
assigned to it.

Change-Id: I02b92f7fa2cf379e311eb88f01a87336b746529a",0,0,0,0,0,1,1,0,0
44907,Ia05b192051f0ff416eaa0c923f95e71403e3cf36,http://review.couchbase.org/#/c/44907,2,dd786c129d0b88a5dd285101c66d3a2b78154147,d4dedb4df8f78824375c24e8c7654fbc8812433f,1,05/01/15,05/01/15,11,JVMCBC-106: Do not retain content and extras on encoding.,"JVMCBC-106: Do not retain content and extras on encoding.

Motivation
----------
In the current fork of the memcached protocol netty codebase, the extras
were retained, which is not as-is upstream. Also, retaining the content
was actually leaking out of the pool (for example through observe
operations).

This changeset makes sure nothing leaks during encoding operations.

Modifications
-------------
Two changes were made:

	- The superfluous release() in the codec was removed.
	- Both retain for extras and content in the handler is removed.

Since during writing, netty calls release on the memcache request, all
resources are properly freed.

Result
------
Nothing leaking on writing and also making sure there are not too much
release/retain calls which do not make sense.

Change-Id: Ia05b192051f0ff416eaa0c923f95e71403e3cf36
Reviewed-on: http://review.couchbase.org/44781
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,0,0
44908,I1621d2f68985023ef955383c0257fdf89374251c,http://review.couchbase.org/#/c/44908,2,d4dedb4df8f78824375c24e8c7654fbc8812433f,a2f59a8b35741fd6469cf71c34b02789a2342afa,1,05/01/15,05/01/15,2,"JVMCBC-108: Check if endpoint is active, not only writable.","JVMCBC-108: Check if endpoint is active, not only writable.

Motivation
----------
The current code checked, before writing into a channel, if it
isWritable(). As it turns out, this is not what it says, since
it only checks if the underlying buffer can be written immediately.

Modifications
-------------
The changeset makes sure that the code calls isActive() as well to
make sure its both open, active and writable.

Result
------
Avoiding situations where data is written down to a channel which
is not active anymore, avoiding broken pipes and similar.

Change-Id: I1621d2f68985023ef955383c0257fdf89374251c
Reviewed-on: http://review.couchbase.org/44801
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,0,0
44909,I43c6473d6a6a22ac260882033dd1b4b2842bf2ae,http://review.couchbase.org/#/c/44909,2,a2f59a8b35741fd6469cf71c34b02789a2342afa,8bffa732a0c6078bc125848f22efdfd9dbf42561,1,05/01/15,05/01/15,20,JVMCBC-107: release buffer in ConfigHandler,"JVMCBC-107: release buffer in ConfigHandler

Motivation
----------
ByteBuf leaks were encountered while testing, the contentResponseBuffer
is not properly release at any point despite it being only internally
used.

Modifications
-------------
FinishedDecoding now also releases the buffer and set it to null, so
that next decoding will start with a fresh buffer from the pool.

Same for handlerRemoved().

Result
------
No more leak should be encountered with the ConfigHandler.

Change-Id: I43c6473d6a6a22ac260882033dd1b4b2842bf2ae
Reviewed-on: http://review.couchbase.org/44804
Tested-by: Simon Baslé <simon@couchbase.com>
Reviewed-by: Michael Nitschinger <michael.nitschinger@couchbase.com>",0,0,0,0,0,1,1,1,1
44910,I0ec272226e0f29ee0da1020510db7b08fd1fc2a6,http://review.couchbase.org/#/c/44910,2,8bffa732a0c6078bc125848f22efdfd9dbf42561,d137caafabe96c89ced99b0235aad61b5c6cddd3,1,05/01/15,05/01/15,120,JVMCBC-109: Null out ResponseBuffer events after usage.,"JVMCBC-109: Null out ResponseBuffer events after usage.

Motivation
----------
The RequestHandler already nulls out events as quickly as possible
to prevent them from being references longer than absolutely needed.

The ResponseHandler is not doing that, keeping responses and observables
longer around. This may have bad GC impact, especially on lower traffic
applications where the 16k response buffer is not recycled completely
quickly.

Modifications
-------------
This changeset makes sure to null out response events after their usage,
and also simplifies the response handler so that they are released in
the same finally block (and not in many places throughout the same method).

The code relies on the fact that the finally method will be always called
by the JVM, even if exceptions are raised or return statements are run
in between.

Result
------
Carried response content is more quickly released (and GCed). Simplified
code on the request handler as well.

Change-Id: I0ec272226e0f29ee0da1020510db7b08fd1fc2a6
Reviewed-on: http://review.couchbase.org/44802
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,0,0
44911,I95cce02c54b63da177e84f8eb178bcd7eadc9bbc,http://review.couchbase.org/#/c/44911,2,d137caafabe96c89ced99b0235aad61b5c6cddd3,9a7c884d8efb84969537b52818a5248cbf150602,1,05/01/15,05/01/15,300,JVMCBC-111: Fall back to other cluster nodes on carrier refresh.,"JVMCBC-111: Fall back to other cluster nodes on carrier refresh.

Motivation
----------
In the current codebase, only the first node in the list was asked for a valid
configuration. This leads to problems when exactly this node is failed over
or removed. As an effect, no valid configuration can be fetched anymore, which
in turn keeps the removed node from properly being ejected.

Modifications
-------------
The carrier refesher code has been refactored so that the nodes are tried in order,
and if one node is not returning a proper config, the others are tried afterwards.
This makes sure that even when a node is being removed or failing, another one is
tried eventually, bringing the system back to stable state.

Tests have been added to cover this scenario. Note that on other tests the wait/grace
time has been increased because the new interval method which is used really starts
after 1 second and not immediately.

In addition, the code also shuffles the node list to reduce the probability that the
same (unavailable) node is hit over and over again, making it quicker to recover.

Result
------
Much better and stable config management when the first node of the cluster list
is being removed against 2.5.0+ nodes.

Change-Id: I95cce02c54b63da177e84f8eb178bcd7eadc9bbc
Reviewed-on: http://review.couchbase.org/44837
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,0,0
44912,If6279a77b0d45355eadabe4ef853483d2a7b88a9,http://review.couchbase.org/#/c/44912,2,9dd9ea9066b01d2a99ea366bb97e104e6ba8e4a6,0ca3aeaf120e86988bb865808f15d3679ef87c81,0,05/01/15,05/01/15,91,JVMCBC-112: fix assertions & release resp buffers,"JVMCBC-112: fix assertions & release resp buffers

Motivation
----------
The integration test has several assertions checking the wrong response
of the test, and all these tests check responses but never release them
(or rather, their content ByteBuf).

Modifications
-------------
Every response received in the various tests has its content ByteBuf
correctly and explicitely released.
Some assertions that would check the wrong response (eg. a previously
asserted UpsertResponse instead of the more recent GetResponse) have
been fixed.

Result
------
Test has been improved, and there should be less leaks false negatives.

Change-Id: If6279a77b0d45355eadabe4ef853483d2a7b88a9
Reviewed-on: http://review.couchbase.org/44841
Tested-by: Simon Baslé <simon@couchbase.com>
Reviewed-by: Michael Nitschinger <michael.nitschinger@couchbase.com>",0,0,0,0,0,1,1,NA,NA
44913,Ica427b8886a30e90543c574b34b6f331fd9a19eb,http://review.couchbase.org/#/c/44913,2,a500da47426219c45974fcc2955eced8f4e5651d,854353d7315b2fbddaf00c73b5c68472b91bee7f,1,05/01/15,05/01/15,6,JVMCBC-113: fix leak CarrierLoader.discoverConfig,"JVMCBC-113: fix leak CarrierLoader.discoverConfig

Motivation
----------
The ByteBuf parsed when discovering configuration is not released as it
should be, leading to leaks.

Modifications
-------------
Release of the GetBucketConfigResponse's ByteBuf content is now done
properly.

Result
------
One less ByteBuf leak.

Change-Id: Ica427b8886a30e90543c574b34b6f331fd9a19eb
Reviewed-on: http://review.couchbase.org/44842
Tested-by: Simon Baslé <simon@couchbase.com>
Reviewed-by: Michael Nitschinger <michael.nitschinger@couchbase.com>",0,0,0,0,0,1,1,0,0
44914,I7cb6789ca3b7dbe2c78a6c6027a6580d4277461e,http://review.couchbase.org/#/c/44914,2,de3bcc2d2a4f058b0498057e8b1b8976cd8d4125,6aebd3cdc4d346aec1d0ea755039ca93d9ac7c0d,1,05/01/15,05/01/15,199,JVMCBC-114: Do not release K/V content prematurely.,"JVMCBC-114: Do not release K/V content prematurely.

Motivation
----------
Since some operations can be retried on ""not my vbucket"", its content
cannot be released until we are sure that it is not needed anymore.

This is only true for content() which arrives from an external scope,
so the observe command needs to be spared (since it creates the content
in scope).

Modifications
-------------
Retaining content in the k/v handler where needed, and then the decode
code makes sure to release them properly (if not RETRY).

Unit tests have been added to cover the appropriate commands.

Result
------
Correct behavior during rebalance scenarios when ops need to be retried.

Change-Id: I7cb6789ca3b7dbe2c78a6c6027a6580d4277461e
Reviewed-on: http://review.couchbase.org/44840
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,0,0
44915,Ic7929ac8747f463cd579649fd40925e9fb4365d0,http://review.couchbase.org/#/c/44915,2,3ca54c8e70f041292464c2d10cf9ed81019e1d20,060374e48136a447cdbff734424f225604049b10,1,05/01/15,05/01/15,11,JVMCBC-115: Adding a minimum reconnect delay to the Endpoint.,"JVMCBC-115: Adding a minimum reconnect delay to the Endpoint.

Motivation
----------
Currently the code starts with very very low reconnect delays (2, 4, 8,..)
ms. When a node is removed or failed over, this leads to lots of connect
errors.

A better approach is to provide a longer initial min reconnect delay which
is then gradually increased.

Modifications
-------------
This changeset sets a minimum delay of 128ms, which is still very quick. It does
this for a few attempts and then increases up to 4s as before.

In future versions, once the delay is merged we can think about making it configurable
through the environment completely.

Result
------
More graceful reconnect delays in the lower bounds.

Change-Id: Ic7929ac8747f463cd579649fd40925e9fb4365d0
Reviewed-on: http://review.couchbase.org/44877
Reviewed-by: Simon Baslé <simon@couchbase.com>
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>",0,0,0,0,0,1,1,0,0
44916,I02b92f7fa2cf379e311eb88f01a87336b746529a,http://review.couchbase.org/#/c/44916,2,b14f9b12f3ec48ecc00b7e69a234d635952ad51d,b2fbfe788235939096233f31b0770f91681c9b7b,1,05/01/15,05/01/15,228,JVMCBC-116: Do not route view requests to nodes without partitions.,"JVMCBC-116: Do not route view requests to nodes without partitions.

Motivation
----------
When a node is removed from the cluster, there is a timeframe when all partitions went away,
but it is still part of the logical cluster config. At this point in time, view requests
should not be routed to this node anymore.

Modifications
-------------
The changesets has three components:

	1) It provides a utility method on the CouchbaseBucketConfig that returns a boolean
	   to quickly check if the given node contains at least one primary partition.

	   Note that these are cached when the config is created to save CPU cycled on the
	   hot code path (when checking).

	2) It adds a check to the ViewLocator so that a node is not used when it has no
	   partitions assigned to it.

	3) Relatedly, the code in the ViewLocator immediately rejects requests that
	   cannot be served from the config type. This mainly includes view requests
	   being cancelled right away against a memcached bucket type.

	   As part of this effort, a new exception has been added to semantically
	   indicate this state.

Tests have been added to verify the new functionality on a unit-test basis.

Result
------
View requests are not routed to nodes anymore which do not have primary partitions
assigned to it.

Change-Id: I02b92f7fa2cf379e311eb88f01a87336b746529a
Reviewed-on: http://review.couchbase.org/44898
Reviewed-by: Simon Baslé <simon@couchbase.com>
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>",0,0,0,0,0,1,1,0,0
44917,If71955bf9ff7cfb044e69e9a619e4f010fad3cb1,http://review.couchbase.org/#/c/44917,2,27c8f0cdcdb1b79e62a8fa9bd5269bddb907beb9,4635ea8b43d59d453c719dc375ad6e30a044451f,0,05/01/15,05/01/15,4,JVMCBC-110: Upgrade Netty to 4.0.25,"JVMCBC-110: Upgrade Netty to 4.0.25

Motivation
----------
The current codebase is on 4.0.25, the last two bugfix releases
bring both general speed improvements and lots of bugfixes in the SSL
area.

It also contains faster UTF-8 string encoding capabilities which we
can utilize in the future.

Modifications
-------------
Upgrade Netty to 4.0.25.

Result
------
Newer stable netty release with better performance and bugfixes.

Change-Id: If71955bf9ff7cfb044e69e9a619e4f010fad3cb1
Reviewed-on: http://review.couchbase.org/44809
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,NA,NA
44919,I6442cd802838dc06eeb27495192b726c2dcb4e06,http://review.couchbase.org/#/c/44919,3,2f3742226d56502f933eaa6e600d51d45039b415,918d190ffb73aa6040eadbad7718c0fff2902fbe,1,05/01/15,05/01/15,4,Fix failing unit test,"Fix failing unit test

Motivation
----------
We want all tests passing on any point of history

Modification
------------
The library does not expect null for the GetBucketConfigResponse
content, so throws NPE. The patch fixes the test to pass empty buffer
there.

Result
------
The tests are green again

Change-Id: I6442cd802838dc06eeb27495192b726c2dcb4e06",0,0,0,0,0,1,1,0,0
44925,I9c3e8c6f9133df7bb775353177adbcb32eb21999,http://review.couchbase.org/#/c/44925,2,5845305130fe49812573c5bcc525c2beb3fda5d1,2bfdcd40f5c695688f21b2bbb9c940985e0ddca7,1,05/01/15,05/01/15,4,Fix failing unit test,"Fix failing unit test

Motivation
----------
We want all tests passing on any point of history

Modification
------------
The library does not expect null for the GetBucketConfigResponse
content, so throws NPE. The patch fixes the test to pass empty buffer
there.

Result
------
The tests are green again

Change-Id: I9c3e8c6f9133df7bb775353177adbcb32eb21999",0,0,0,0,0,1,1,0,0
44958,Ie0ed614ffaa6856ec3d9b33abd22285768ee732c,http://review.couchbase.org/#/c/44958,2,2bfdcd40f5c695688f21b2bbb9c940985e0ddca7,7757a206f7b5b2a1671f32fd054d3f8fe6a40733,1,06/01/15,06/01/15,40,Correct KeyValueHandlerTests to properly assert request releasing.,"Correct KeyValueHandlerTests to properly assert request releasing.

Motivation
----------
This changeset makes sure the KV Handler test properly assers the request
content release part, in addition to the (before wrongly asserted) response
content part.

Modifications
-------------
Properly assert the right content in the tests. In addition, more checks
have been added to the handler to avoid NPEs and refcount issues in the
first place.

Result
------
Tests now run through correctly.

Change-Id: Ie0ed614ffaa6856ec3d9b33abd22285768ee732c",0,0,0,0,0,1,1,0,0
44959,Ie0ed614ffaa6856ec3d9b33abd22285768ee732c,http://review.couchbase.org/#/c/44959,2,a3075f94b7a0647cce31917e655e0999b907bf2e,fa4bfd9368cbf6b03cecde4a4ce7591adb997e1d,1,06/01/15,06/01/15,40,Correct KeyValueHandlerTests to properly assert request releasing.,"Correct KeyValueHandlerTests to properly assert request releasing.

Motivation
----------
This changeset makes sure the KV Handler test properly assers the request
content release part, in addition to the (before wrongly asserted) response
content part.

Modifications
-------------
Properly assert the right content in the tests. In addition, more checks
have been added to the handler to avoid NPEs and refcount issues in the
first place.

Result
------
Tests now run through correctly.

Change-Id: Ie0ed614ffaa6856ec3d9b33abd22285768ee732c
Reviewed-on: http://review.couchbase.org/44958
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,0,0
44986,I6764fa5581a57ed06e4ee18d916786a702cc18c9,http://review.couchbase.org/#/c/44986,2,fa4bfd9368cbf6b03cecde4a4ce7591adb997e1d,201c606b72af0746ae4a83cdccfb820b9e151b12,0,06/01/15,07/01/15,12,Correct KeyValueHandlerTests on master,"Correct KeyValueHandlerTests on master

Motivation
----------
Tests were failing after a modification ported from release10 to master.
This is due to the fact that on release10, JVMCBC-84 has not been ported
and thus KeyValueHandler still copy() the responseBuffer.

On master, said buffer is retain()ed, leading to a refCnt of 1 on the
response buffer.

Modifications
-------------
Fixed the assertions, content.refCnt() is expected to still be 1 since
it is the response buffer, retained in KeyValueHandler.decodeResponse.

Result
------
Unit test KeyValueHandlerTest now pass again on master (as it is passing
on release10).

Change-Id: I6764fa5581a57ed06e4ee18d916786a702cc18c9",0,0,0,0,0,1,1,NA,NA
45019,I041454ae254632c3c548909810686d7691d7f870,http://review.couchbase.org/#/c/45019,2,a161529f8104b2c72b71959af74385c42b95e7d0,2851bba37ff13944147850d6e4b8073f3b5058df,1,07/01/15,07/01/15,6,Properly release copied content for counter.,"Properly release copied content for counter.

Motivation
----------
In the backported release10 branch, the content is still copied. The counter
method still frees the original content, which leads to a illegal refcnt
exception, because it has been freed twice.

Modifications
-------------
Instead, the copied content should be freed since it is never passed up the
stack.

Result
------
No double freeing of the content when using the counter operation.

Change-Id: I041454ae254632c3c548909810686d7691d7f870",0,0,0,0,0,1,1,0,0
45020,Ib3ed7d0555c2c24154e72b3ec1dfebac21d57b11,http://review.couchbase.org/#/c/45020,2,2851bba37ff13944147850d6e4b8073f3b5058df,6e37d15de10a2698f5402817838f3b165bbc7dd3,0,07/01/15,07/01/15,2,Prepare 1.0.3 release.,"Prepare 1.0.3 release.

Change-Id: Ib3ed7d0555c2c24154e72b3ec1dfebac21d57b11",0,0,0,1,0,1,1,NA,NA
45066,I250bab2a5ee5c82cd6e92438118595507da1c581,http://review.couchbase.org/#/c/45066,2,41cf0d3fde6fe87ebc408e12b09d8cacf5485833,7f3f5f7051e3e5154503ff264eb4975f2bbc07a4,1,08/01/15,08/01/15,46,JVMCBC-119: utility class for common ByteBuf ops,"JVMCBC-119: utility class for common ByteBuf ops

Motivation
----------
We often need to perform the same operations on ByteBufs, like release.
This class allows to centralize such common operations, especially in
the context of applying them in Rx streams.

Modifications
-------------
New Buffers utility class, with an Action1 implementation that allows
to release ByteBufs in a Rx stream.

Result
------
Less overhead when applying common operations on ByteBuf in some cases.

Change-Id: I250bab2a5ee5c82cd6e92438118595507da1c581",0,0,0,0,0,1,1,0,0
45133,I805a5d144563bf3cbc631a99e942a134ef92f0c7,http://review.couchbase.org/#/c/45133,3,7f3f5f7051e3e5154503ff264eb4975f2bbc07a4,ad391f6256715cf8709b6afd43906377c9dc1359,1,09/01/15,09/01/15,99,JVMCBC-121: Do not expose the list of partitions outside of the config.,"JVMCBC-121: Do not expose the list of partitions outside of the config.

Motivation
----------
The previous code did expose the List<Partition> to the whole core, but this makes
it very hard to change the underlying implementation.

Modifications
-------------
More getter methods have been exposed which provide the needed functionality, instead
of exposing the list directly. This allows to change the implementation of storage
later.

Result
------
Better encapsulation of the underlying data structures.

Change-Id: I805a5d144563bf3cbc631a99e942a134ef92f0c7",0,0,0,0,0,1,1,0,0
45143,I7415182cbc2e0f117e9db2edf02834d26a6f75a4,http://review.couchbase.org/#/c/45143,6,ad391f6256715cf8709b6afd43906377c9dc1359,98d049b93628a67476765a2c69a741049331d011,1,09/01/15,09/01/15,198,Refactor the PartitionInfo out of the config.,"Refactor the PartitionInfo out of the config.

Motivation
----------
The PartitionInfo has been moved out of the enclosing class to allow
for better testability.

Change-Id: I7415182cbc2e0f117e9db2edf02834d26a6f75a4",0,1,0,0,0,1,1,0,0
45225,I45996d6b9fafab01bb22138bef19a4b1c5d76a50,http://review.couchbase.org/#/c/45225,2,96f3e43adc279c12048367348aa16841ab61f092,71c7190c6e257c506241641281b827c1fc0a7016,1,12/01/15,13/01/15,84,JVMCBC-120: Prevent request if feature disabled,"JVMCBC-120: Prevent request if feature disabled

Motivation
----------
For some types of requests, if the corresponding feature is disabled in
Environment, the core has no handler and won't produce a Response on
the Observable. This can lead to hanging test/code.

Modifications
-------------
Such requests (for now Query and DCP) are identified and skipped in the
RequestHandler by erroring their Observable with an
UnsupportedOperationException.

Added tests to RequestHandlerTest to check that.

Result
------
Even if client of core forgets to check the environment for feature
activation, sending these Requests won't wait forever for a Response.

Change-Id: I45996d6b9fafab01bb22138bef19a4b1c5d76a50",0,0,0,0,0,1,1,0,0
45275,I70ce28c858e43a2e8cc8f40df2e2ba53e4170da3,http://review.couchbase.org/#/c/45275,4,71c7190c6e257c506241641281b827c1fc0a7016,9901097e20135a2290ea274076475c13f7b305cf,1,13/01/15,14/01/15,132,Properly release byte buffers (content) in integration tests.,"Properly release byte buffers (content) in integration tests.

Motivation
----------
All buffers should be properly release to not falsely report
leaking buffers.

Change-Id: I70ce28c858e43a2e8cc8f40df2e2ba53e4170da3",0,1,0,0,0,1,1,0,0
45308,Ic30b498e0b7c133c95a95cf2cb1091baa62e0ac9,http://review.couchbase.org/#/c/45308,3,9901097e20135a2290ea274076475c13f7b305cf,d674c385bce2674596df9b458ac105bcba638a04,1,14/01/15,14/01/15,11,JVMCBC-122: Release response content in view handler when removed.,"JVMCBC-122: Release response content in view handler when removed.

Motivation
----------
When the view handler is removed for some reason (failover, rebalance
out, disconnect), the response content needs to be freed since it is
also allocated out of the pool.

Modifications
-------------
During handler cleanup, also release() the response content back to
the pool.

Result
------
No more held back bytebufs when a view endpoint is removed for some
reason.

Change-Id: Ic30b498e0b7c133c95a95cf2cb1091baa62e0ac9",0,0,0,0,0,1,1,0,0
45312,Id672f30f8a25dc2f955f1c4b225e87d36616b2ec,http://review.couchbase.org/#/c/45312,2,d674c385bce2674596df9b458ac105bcba638a04,56fb5ff9b8b705279e7c5b33d1c42d06998e7058,1,14/01/15,14/01/15,16,JVMCBC-123: Release observe content properly.,"JVMCBC-123: Release observe content properly.

Motivation
----------
When observe is used, the content needs to be properly freed. Actually,
the content is not needed at all, so it can be freed right in the key/value
handler.

Modifications
-------------
Free the content in the key/value handler after use for observe, but keep
an additional check in Observe just to be double safe on not leaking the
content.

Result
------
No leaks during observe poll cycles.

Change-Id: Id672f30f8a25dc2f955f1c4b225e87d36616b2ec",0,0,0,0,0,1,1,0,0
45343,I14ce5db5d174a7ffecd4dfc4ad664cf4d6f934db,http://review.couchbase.org/#/c/45343,2,56fb5ff9b8b705279e7c5b33d1c42d06998e7058,4d812adf53dd5ae45a35ebc03f8ed6b27cb3e9b1,0,14/01/15,15/01/15,4,Expose lockTime in DCP MutationMessage,"Expose lockTime in DCP MutationMessage

Motivation
----------
The handler fills in this field, but the class does not allow to access
it.

Modification
------------
Implement getter for lockTime field

Result
------
It is possible to access lockTime of the DCP mutation

Change-Id: I14ce5db5d174a7ffecd4dfc4ad664cf4d6f934db",0,0,0,0,0,1,1,NA,NA
45346,I97fe3f2a4c009323d9a52314fd502dc244281117,http://review.couchbase.org/#/c/45346,2,4d812adf53dd5ae45a35ebc03f8ed6b27cb3e9b1,433a0278781868ee71fd04268912f261162c4799,1,14/01/15,15/01/15,66,Preserve environment invariant for feature tests,"Preserve environment invariant for feature tests

Motivation
----------
Feature checks are sensitive for system properties. And these systems
properties are the only way to adjust environment in cluster-dependent
tests as DCPMessageTest, which are not enabled by default, because the
server might lack of feature support.

But in case of tests, which verify the actual feature checking, should
work in the same way whether or not the system properties set.

Modification
------------
Reset system properties enabling Query and DCP features before executing
the tests, and restore on exit.

Result
------
Feature checking tests more robust

Change-Id: I97fe3f2a4c009323d9a52314fd502dc244281117",0,0,0,0,0,1,1,0,0
45429,I966f1e791647ebdcbaa3abad2b8d463f7c474146,http://review.couchbase.org/#/c/45429,2,daa49faef35fb46f5c50926f86db36509e2c0bea,a60689c23d7d9d8b1b147ef7c177b78a0857ec55,1,16/01/15,16/01/15,28,JVMCBC-124: Fix QueryHandler IndexOutOfBounds,"JVMCBC-124: Fix QueryHandler IndexOutOfBounds

Motivation
----------
There could be an IndexOutOfBoundsException in QueryHandler's internal
findSectionClosingPosition method.

Modifications
-------------
Replaced the manual loop by a ByteBufProcessor, resulting in safer range
processing of the bytes and fixing the off-by-one error.

Result
------
Finding a closing section character now works as expected, tests pass.

Change-Id: I966f1e791647ebdcbaa3abad2b8d463f7c474146",0,0,0,0,0,1,1,0,0
45435,Iecfd294cc6a2d2706f07c54d00acaad1fa644078,http://review.couchbase.org/#/c/45435,2,a60689c23d7d9d8b1b147ef7c177b78a0857ec55,366e6dce4a80db96661e7a135bb601718f3d13f5,1,16/01/15,16/01/15,27,JVMCBC-125: fix null signature parsing & nextToken,"JVMCBC-125: fix null signature parsing & nextToken

Motivation
----------
Sometimes the N1QL server can send a response with the signature field
empty (null). This confuses the parser.

Modifications
-------------
Parser now checks if there's a JSON object in signature field.

Also improved the keyword peeking to determine next state.

Result
------
Parser can parse response with null signature, for example with a CREATE
PRIMARY INDEX ON default request.

Change-Id: Iecfd294cc6a2d2706f07c54d00acaad1fa644078",0,0,0,0,0,1,1,0,0
45436,Id71bde7f5a28def39280a433bd34f8afe19c79ce,http://review.couchbase.org/#/c/45436,3,faf926eaeeddec71c1264d86362fad8868b401e2,63157c7fdc8276ace8d84f9c29595c42369d5b15,1,16/01/15,16/01/15,146,JVMCBC-126: Avoid IndexOutOfBounds when parsing view rows.,"JVMCBC-126: Avoid IndexOutOfBounds when parsing view rows.

Motivation
----------
Off by one erros can raise exceptions in the view and query handler when
looking for the closing }.

Modifications
-------------
The processor is refactored out of the query handler and now also reused
in the view handler.

Since the processor keeps the bound checks in its internal implementation,
such off by one errors can be avoided. Also, using a processor is more
efficient.

Result
------
No off by one errors when parsing view rows anymore.

Change-Id: Id71bde7f5a28def39280a433bd34f8afe19c79ce",0,0,0,0,0,1,1,0,0
45459,I7df19368873c23b361a7f3c67aeb94c81af468f5,http://review.couchbase.org/#/c/45459,2,63157c7fdc8276ace8d84f9c29595c42369d5b15,6da1123c0d23494a5f461c0e413caf38a39f6480,0,16/01/15,16/01/15,2,Prepare 1.1.0-dp release,"Prepare 1.1.0-dp release

Change-Id: I7df19368873c23b361a7f3c67aeb94c81af468f5",0,0,0,1,0,1,1,NA,NA
45461,I84fa7f411adff9ac068edd9154d710b3a55f20d1,http://review.couchbase.org/#/c/45461,2,6da1123c0d23494a5f461c0e413caf38a39f6480,070c97047debcfbf8ad84a22e4d2bb4d2019014b,0,16/01/15,16/01/15,2,Change master back to 1.1.0-SNAPSHOT,"Change master back to 1.1.0-SNAPSHOT

Change-Id: I84fa7f411adff9ac068edd9154d710b3a55f20d1",0,0,0,1,0,1,1,NA,NA
45465,Ie4b60a2ca5bffb6ad80ab854388d4fab4f5b10e1,http://review.couchbase.org/#/c/45465,2,070c97047debcfbf8ad84a22e4d2bb4d2019014b,1f75bbb65b952f22a1da8b168883e9991453bb7e,1,16/01/15,16/01/15,67,JVMCBC-127: Send Opaque value for Key/value handler again.,"JVMCBC-127: Send Opaque value for Key/value handler again.

Motivation
----------
Spymemcached did always fill the ""opaque"" field of the binary
protocol with an opaque value to make sure the returned response
matches up with the request as a sanity check.

Modifications
-------------
A static opaque value has been added that is now passed with every
binary request. On response, it is matched up with the request
to make sure all is well and if not, an exception is thrown. This
provides another line of defense for a sanity check.

Result
------
Better sanity checks on response parsing. It also helps when connecting
req/res in tcpdump and similar tools.

Change-Id: Ie4b60a2ca5bffb6ad80ab854388d4fab4f5b10e1",0,0,0,0,0,1,1,0,0
45472,I712c45a8bb0b69efa75f02baaeeb244b5ab7c15b,http://review.couchbase.org/#/c/45472,3,25e530c268117230d633a8ec7213d05c4cc9722d,e25d0ab8e5cb7f806a85504a9a76d8df5bcc96d7,1,16/01/15,19/01/15,58,JVMCBC-128: Avoid observeOn on the hot code path.,"JVMCBC-128: Avoid observeOn on the hot code path.

Motivation
----------
Using observeOn for every request adds significant latency and GC,
since lots of stuff is done in the background. In order to reduce
latency on the hot code path, the observeOn should be removed.

Modifications
-------------
Since we still need to move off the subscriber to a different
pool, a worker is utilized to complete the subject right from
this pool without going through the observeOn slowness.

Another optimization has been put into place so that non-retry
responses are completed from the IO thread, without the need
to even go through the response handler too. Note that for
safety reasons inside the response handler the same scheduling
mechanisms have been put into place.

Result
------
Faster execution on the hot code path. on a single-threaded
get loop this gives us a boost of 1k ops/s and less GC.

Change-Id: I712c45a8bb0b69efa75f02baaeeb244b5ab7c15b",0,0,1,0,0,1,1,0,0
45568,Ia288cdee7e8db5384e924edcb55acea2b48464fe,http://review.couchbase.org/#/c/45568,3,eb5166e9c1f90415347b5c6df32135640cdb8785,4311de3574534920c10bf1731479f7944130580d,1,19/01/15,19/01/15,63,JVMCBC-129: Allow reconnect delay to be configured.,"JVMCBC-129: Allow reconnect delay to be configured.

Motivation
----------
Since we now have the Delay in the library, we can provide an easy
way to tune the reconnect delay when a socket is dropped.

Modifications
-------------
The changeset allows the reconnect delay to be configured from the
environment. The defaults are set similar to before, an exponential
delay with a ceiling of 4 seconds. The lower boundary has been lowered
a little from 128ms to 32ms.

Result
------
Completely configurable reconnect delay from the environment.

Change-Id: Ia288cdee7e8db5384e924edcb55acea2b48464fe",0,0,0,0,0,1,1,0,0
45665,I545ead76aa3143f7b449f8a82ae4ebbbaa068732,http://review.couchbase.org/#/c/45665,2,4311de3574534920c10bf1731479f7944130580d,e62b1cfcb7ed08cece19118c7ec631d95c39478b,1,21/01/15,21/01/15,22,JVMCBC-131: fix query response section detection,"JVMCBC-131: fix query response section detection

Motivation
----------
Current detection involves checking if next colon is before opening of
brackets. But if there's no next colon at all, nextColon becomes -1, and
this is always considered to be before the opening bracket.
This in turn triggers a state change, which fails because no actual
section header is anywhere to be found.

This can happen in large chunked responses where a chunk contains only
empty rows, for example SELECT toto FROM `beer-sample` (because toto is
not an existing field, the server returns as many empty rows {} as there
are documents in the bucket).

Modifications
-------------
Parser now checks if the colon is really there. Extracted the code into
a dedicated method ""isEmptySection"".

Result
------
Parser correctly parses large responses with empty row values.

Change-Id: I545ead76aa3143f7b449f8a82ae4ebbbaa068732",0,0,0,0,0,1,1,0,0
45736,Ib293c950e45e1d602f414e53935504321f4ac11a,http://review.couchbase.org/#/c/45736,3,6f831673ecbc483c4916b862e003b6d160d3f305,ffcb8aa816bad582b05ba0a9a4b4d18ab46d3bcc,1,22/01/15,22/01/15,421,Implement a dynamic stateful zipper.,"Implement a dynamic stateful zipper.

Motivation
----------
There is the Observable.zip() functionality available, but it does not work
on a changing set of incoming streams. We need this functionality because
sources like endpoints (or nodes) can come and go.

Modifications
-------------
The StateZipper (and its abstract implementation) needs to be extended to be
actually useful. The implementing class needs to provide an ""empty state""
as well as the zip function.

The zipper statefully manages registrations, merges the streams and call the
zip function every time one of the states changes (with a collection of all
currently set states). The zip function then reduces it to one state and
returns it. This new state is the global state of the zipper, where
other parties can subscribe to.

Result
------
A self containted stateful implementation of a dynamic zipper that can and
will be reused in some places in the core.

Change-Id: Ib293c950e45e1d602f414e53935504321f4ac11a",0,0,0,0,0,1,1,0,0
45784,Id93b3d0c4efbdb20875ec0ef3a7509037bb6add5,http://review.couchbase.org/#/c/45784,7,ffcb8aa816bad582b05ba0a9a4b4d18ab46d3bcc,0be251601f6b9130097cf13f6ae32a5ef2d7a933,1,23/01/15,26/01/15,1757,!WIP! JVMCBC-93: Flexible endpoint pooling.,"!WIP! JVMCBC-93: Flexible endpoint pooling.

Todo
----
	* Flesh out commit msg
	* Write tests for service and endpoints to reflect changes
	* Update javadocs and fix intellij complaints
	* More manual testing of rebalance and all that before passing to sdkqe

Motivation
----------

Modifications
-------------

Result
------

Change-Id: Id93b3d0c4efbdb20875ec0ef3a7509037bb6add5",0,1,1,0,1,1,1,3,1
45785,I564948b85afb7b32f2b3fbc97ac473b00baf8a52,http://review.couchbase.org/#/c/45785,2,e1eedfe119c78209076908dd2f8a54bcb18dafaa,ac9357f974d38e3aec6e93f8fe01c79e543ffb2a,0,23/01/15,23/01/15,19,Ignore .idea/misc.xml,"Ignore .idea/misc.xml

Motivation
----------
Different developer have different set of JDK installed (with different
names). It might be a problem when developer switching JDKs and git is
trying to commit the change.

Modification
------------
Do not store .idea/misc.xml in the repository.

Result
------
On initial project checkout IntelliJ Idea will ask what JDK developer is
going to use.

Change-Id: I564948b85afb7b32f2b3fbc97ac473b00baf8a52",0,0,0,0,0,1,1,NA,NA
45867,I4fa43fbaa9c74f3c5053ec74f70d40bcc2f6da92,http://review.couchbase.org/#/c/45867,2,ac9357f974d38e3aec6e93f8fe01c79e543ffb2a,a0dfb605a3de551388c6356515b2cddf9b9448a7,1,26/01/15,26/01/15,134,JVMCBC-132: Enhance KV error status codes.,"JVMCBC-132: Enhance KV error status codes.

Motivation
----------
Previously, lots of memcached errors codes were swallowed under a common
failure status code. This makes it impossible to better inform the user
what happend on the language binding level.

Modifications
-------------
All status codes also used in spymemcached are properly imported and now
handled in the response status. They have been generalized a bit so they
provide reusability across services.

Result
------
Easier handling for different error types at the upper levels.

Change-Id: I4fa43fbaa9c74f3c5053ec74f70d40bcc2f6da92",0,0,0,0,0,1,1,1,1
45915,I09568af7f4ec4569a7763ca41182d159af919b7f,http://review.couchbase.org/#/c/45915,5,750139d916ba580555004fd9bc2dff6ce3cbaebf,99c824bdc99581bc52852bf01184effe6255c8fc,1,27/01/15,27/01/15,347,wip: fail fast.,"wip: fail fast.

Change-Id: I09568af7f4ec4569a7763ca41182d159af919b7f",0,1,0,1,0,1,1,0,0
45917,I826f150ac307d70acb364eafe14117dab3f1798c,http://review.couchbase.org/#/c/45917,2,b05241e433e3d6ce127ad5b30c9885fd4750dd4c,942e88c2bdf177108cb098f63ba65c7edead768c,0,27/01/15,27/01/15,61,improve .idea in git,"improve .idea in git

ignore uiDesigner plugin configuration.
add runConfigurations (one for unit tests, one for integration tests).

Change-Id: I826f150ac307d70acb364eafe14117dab3f1798c",0,0,0,0,0,1,1,NA,NA
45923,I6e7d8109fbec933df58fe8add41faa1cad3cedc6,http://review.couchbase.org/#/c/45923,2,fc489ead7d9a9c704b2c8af60415b8d039df7868,51edb14ea0221ea68ea1b1adc81edf548fe29a9e,1,27/01/15,27/01/15,158,JVMCBC-134: Add maximum request lifetime.,"JVMCBC-134: Add maximum request lifetime.

Motivation
----------
Without a maximum request lifetime, it is possible that requests
are circling around forever in the core.

Modifications
-------------
Adding a maximum request lifetime provides the ""hard limit"" for
requests that are highly likely to be removed anyways and prevents
them from filling up the request buffer endlessly.

Note that it needs to always be set higher than the maximum timeout
used in the application itself, otherwise it will prematurely
cancel valid request lifecycles.

This timeout is currently honored in the ""best effort"" strategy
and can be avoided by implementing a custom strategy.

Result
------
A hard limit when requests will be cleaned out of the system to
avoid having them circle around forever and filling up the request
buffer.

Change-Id: I6e7d8109fbec933df58fe8add41faa1cad3cedc6",0,0,0,0,0,1,1,1,1
45924,Ie743a4b2923a27f785928185748cd619456cdc2c,http://review.couchbase.org/#/c/45924,4,4b32bb9bc9963a3292546fa073cd27e043e22d75,2fb9e6cdfce0cfdd861ea40cf2d9e63d3f7bfd3e,1,27/01/15,27/01/15,55,wip: configurable delay,"wip: configurable delay

Change-Id: Ie743a4b2923a27f785928185748cd619456cdc2c",0,1,0,1,0,1,1,0,0
45962,I27de9ffe96246963aa5c20f03e2ccebf2c76dc09,http://review.couchbase.org/#/c/45962,3,2fb9e6cdfce0cfdd861ea40cf2d9e63d3f7bfd3e,5fc921ab6262e687070d97efa14830f925b5746d,0,28/01/15,28/01/15,62,Prepare 1.1.0-dp2 release,"Prepare 1.1.0-dp2 release

Change-Id: I27de9ffe96246963aa5c20f03e2ccebf2c76dc09",0,0,0,1,0,1,1,NA,NA
45981,I2f1c17a361743eb922c86bc0e5ea7388db94b38c,http://review.couchbase.org/#/c/45981,2,fae42fabb977d16d101c044cc0ead22f6578563c,ab94bb8c05895c712f2ea06826140648b5491642,0,28/01/15,28/01/15,127,JVMCBC-66: Also relocate shadowed libs in sourceJar,"JVMCBC-66: Also relocate shadowed libs in sourceJar

Motivation
----------
When debugging, stepping into relocated shadowed dependencies fails (for
example going into Netty sources), because the namespace has by then
been rewritten.

Modifications
-------------
Added a large Gradle task that retrieves the relocated dependencies
sources, rewrites them to replace occurrences of their base package by
the relocated one.

Add said sources to the sourceJar.

Upgraded the build.gradle to use Gradle 2.2 instead of 1.x (needed for
the retrieval of dependencies sources).

Results
-------
The source jar now also contains sources for Netty, Lmax and Jackson,
all with correctly rewritten package hierarchy.

Users can now debug into these libraries and see the full javadoc.

Change-Id: I2f1c17a361743eb922c86bc0e5ea7388db94b38c",0,0,0,0,0,1,1,NA,NA
45985,Iaa303d744f51ecf575d13e4fef0267d9dd2eb616,http://review.couchbase.org/#/c/45985,3,ab94bb8c05895c712f2ea06826140648b5491642,17ef9c7896a70b7d00e61d09dda866425cbd7ce1,0,28/01/15,28/01/15,12,fix gradle build in intellij,"fix gradle build in intellij

idea task would try to minus a single element instead of a collection,
which is not possible anymore in Groovy >= 1.8.9

Change-Id: Iaa303d744f51ecf575d13e4fef0267d9dd2eb616",0,0,0,0,0,1,1,NA,NA
45986,I8eafb9d31e140b129c4766d8e18c6c6af2459df5,http://review.couchbase.org/#/c/45986,5,17ef9c7896a70b7d00e61d09dda866425cbd7ce1,7625360e163b587818a5b29a9b15ad6c200bcbc2,1,28/01/15,29/01/15,577,wip: event bus!,"wip: event bus!

Change-Id: I8eafb9d31e140b129c4766d8e18c6c6af2459df5",0,1,0,1,1,1,1,0,0
45990,I7a2dd7b725fcfc05b0661d0ad263fb2259746ecf,http://review.couchbase.org/#/c/45990,9,081dd95a887ef2d232c737cdccdb3a11b7632e09,3d6ef43b44ad4069b425f561e67493effb19d6d1,1,28/01/15,30/01/15,401,JVMCBC-21: Adding keepAlive in kv/query/views,"JVMCBC-21: Adding keepAlive in kv/query/views

Motivation
----------
TODO

Change-Id: I7a2dd7b725fcfc05b0661d0ad263fb2259746ecf",0,1,0,0,0,1,1,0,0
46038,Id8c04eb9ea4ae05ffdd4d946058641d288cf8f80,http://review.couchbase.org/#/c/46038,2,6076591768cb0ec7faa512c24507c1597f659142,9049b32f997bb6fd276e7faabc19f7e8a3a3fad5,0,29/01/15,29/01/15,2,Change master back to 1.1.0-SNAPSHOT,"Change master back to 1.1.0-SNAPSHOT

Change-Id: Id8c04eb9ea4ae05ffdd4d946058641d288cf8f80",0,0,0,1,0,1,1,NA,NA
46074,I59e5bce649064141e3227e29e9b69d44c2b97b27,http://review.couchbase.org/#/c/46074,4,51d942ac1a6fc335c7bae5bb5671089dabf7e09c,1b6c9ba673aa5b9a47fe3a8873748191792070f7,1,29/01/15,29/01/15,137,JVMCBC-70: Document Core builder setters,"JVMCBC-70: Document Core builder setters

Change-Id: I59e5bce649064141e3227e29e9b69d44c2b97b27",0,1,0,1,0,1,1,0,0
46085,Ib033c602eff26cb914f4893ca187b5ebc7f0365b,http://review.couchbase.org/#/c/46085,2,b602fb7d7065c48e7e5d624ceacf48d077019e71,468deb569aa90fa6cc192dda5e4aae8ee614796d,1,29/01/15,29/01/15,92,Expose a message to fetch the configuration provider.,"Expose a message to fetch the configuration provider.

Motivation
----------
If the language bindings need access to the configuration provider,
they can grab it with a specific request.

Modifications
-------------
The messages have been created and are properly handled in the core
as internal requests.

Change-Id: Ib033c602eff26cb914f4893ca187b5ebc7f0365b",0,0,0,0,0,1,1,0,0
46137,I9180d3c283cfb0781c348213e65298c0f8ab49fc,http://review.couchbase.org/#/c/46137,2,cc15d027006fec287df30975bb2691f8ef117a7e,c0559fa71d77f6af5eb05495354fc592ad703d62,1,30/01/15,30/01/15,401,"Revert ""JVMCBC-21: Adding keepAlive in kv/query/views""","Revert ""JVMCBC-21: Adding keepAlive in kv/query/views""

This reverts commit dd5b0312a28dbe09b8df3013a3d7db295bd6e28b.

Change-Id: I9180d3c283cfb0781c348213e65298c0f8ab49fc",0,0,0,0,0,1,1,0,0
46139,I9bd94ef4f37f513e70854e5a7b882ae3008b9b72,http://review.couchbase.org/#/c/46139,2,c0559fa71d77f6af5eb05495354fc592ad703d62,5fa48a7185a33dce1c53301b4acb2b85555fdae9,1,30/01/15,30/01/15,401,JVMCBC-21: Adding keepAlive in kv/query/views,"JVMCBC-21: Adding keepAlive in kv/query/views

Motivation
----------
In previous versions of the SDK, a pinger was in place in order to try
to prevent socket closing because of idle time.
A similar feature is needed on 2.x SDK.

Modifications
-------------
Added an IdleStateHandler to KV, Query and Views pipelines. It takes its
idle time from the CoreEnvironment (keepAliveInterval, in milliseconds)
and triggers if idle time was in both reads and writes.

AbstractGenericHandler now reacts to IdleStateEvent if the method for
keepAlive request creation doesn't return null. Also, two hooks can be
overridden in order to inject some behavior when the keepAlive request
is fired and when it is responded to. The fired hook logs a message in
DEBUG while the responded hook logs a message in TRACE.

The IdleStateHandler is only added if Core's keepAliveInterval is set to
a value > 0, as documented.

KeyValueHandler creates a keepAlive request interpreted into a NOOP
Couchbase operation.

QueryHandler and ViewHandler create a keepAlive request interpreted
into an HTTP HEAD request on the root of the service.

Added tests to check that keepAlive requests are correctly generated
and responses parsed.

Results
-------
KV, Query and Views fire a keepAlive

Change-Id: I9bd94ef4f37f513e70854e5a7b882ae3008b9b72",0,0,0,0,0,1,1,0,0
46227,I2c2996f5f6e4b6144277b3179077674529168847,http://review.couchbase.org/#/c/46227,2,5fa48a7185a33dce1c53301b4acb2b85555fdae9,31bf050535f8d92c7e852fea94f4c7f4716c1f48,0,02/02/15,03/02/15,38,JVMCBC-66: also rewrite dep imports in original src,"JVMCBC-66: also rewrite dep imports in original src

In sourceJar, since now we include shadowed dependencies sources, we
need to include rewritten original sources so that they import the
relocated classes and can be debugged.

The shadowSource task now also copies core sources and rewrite them to
reflect change in shadowed package names.

Only the result of shadowSource is included in the sourcesJar task.

Change-Id: I2c2996f5f6e4b6144277b3179077674529168847",0,0,0,0,0,1,1,NA,NA
46373,If44c77acc85489efcfcfa1f59257abd5dd3356c2,http://review.couchbase.org/#/c/46373,2,31bf050535f8d92c7e852fea94f4c7f4716c1f48,521ce89ccc26ee5645d181a3df8847832bc19149,0,04/02/15,04/02/15,2,Preparing 1.1.0 Release,"Preparing 1.1.0 Release

Change-Id: If44c77acc85489efcfcfa1f59257abd5dd3356c2",0,0,0,1,0,1,1,NA,NA
46433,Ib5facbb2147906ccba33b7321fe39df368279af8,http://review.couchbase.org/#/c/46433,2,521ce89ccc26ee5645d181a3df8847832bc19149,ab76028a21c95d36be266ef2b92e8c176947fd10,1,05/02/15,05/02/15,347,JVCBC-140: Extract buf processing utils and add tests,"JVCBC-140: Extract buf processing utils and add tests

Motivation
----------
Some methods in QueryHandler could be more generally applied.
Furthermore they lack unit tests.

Modifications
-------------
Compiled them and added a few variants into ByteBufJsonHelper.

Added test for both ByteBufJsonHelper and ClosingPositionBufProcessor,
and refactored QueryHandler to call util methods.

Results
-------
All test pass.

Change-Id: Ib5facbb2147906ccba33b7321fe39df368279af8",0,0,0,0,0,1,1,0,0
46434,Ic374899947aae0da3537cc163b030101321f010a,http://review.couchbase.org/#/c/46434,2,ab76028a21c95d36be266ef2b92e8c176947fd10,d7682dfc77aa259f809320d4799e55cf476b56d3,1,05/02/15,09/02/15,85,JVMCBC-141: Detect and ignore string in processor,"JVMCBC-141: Detect and ignore string in processor

Motivation
----------
ClosingPositionBufProcessor currently doesn't account for strings in
JSON, which could throw its detection off if the string contains an
uneven number of opening and closing characters.

Modifications
-------------
The processor now has an option to detect and ignore strings after the
first detected section opening. Added tests for this behavior.

Results
-------
All test pass and the processor can now ignore strings in the processed
content (provided it is JSON data, not starting inside a JSON string).

Change-Id: Ic374899947aae0da3537cc163b030101321f010a",0,0,1,0,0,1,1,0,0
46435,I8ec580ac49d40d30176bd9cd3ec24da06bf778b9,http://review.couchbase.org/#/c/46435,2,c141ef29586800779bb2a9c9cc1746312dadd130,e0cc6329a999e7203e29213ec626406141fa6d64,1,05/02/15,09/02/15,10,JVMCBC-142: Ignore escaped quotes in clientID,"JVMCBC-142: Ignore escaped quotes in clientID

Motivation
----------
When parsing a clientContextId, the id could contain escaped quotes.
Currently the parser doesn't manage that and it will result in bad
parsing.

Modifications
-------------
Parsing of clientContextId now uses the method that ignores escaped ""
when searching for the closing quote.

Results
-------
ClientContextId containing an escaped quote are now correctly parsed.

Change-Id: I8ec580ac49d40d30176bd9cd3ec24da06bf778b9",0,0,1,0,0,1,1,0,0
46442,I9f256c41e6ace8ea504353f513f042332a4e9429,http://review.couchbase.org/#/c/46442,2,f0aeb063bbf99ac0c3b53aebe4d19704d8fe843d,3b6432c61d3538656daa26f92dbacd80cb7e71c3,1,05/02/15,09/02/15,300,JVMCBC-143: Handle query chunking everywhere,"JVMCBC-143: Handle query chunking everywhere

Motivation
----------
In some cases where the response is aggressively chunked, the parsing
fails because the split occurs before signature section (eg. requestId).
Late phases of the parsing are also a bit less resilient to such chunks
than errors/result section parsing.

Modifications
-------------
The parser now waits for more data if needed, at every step. It can also
detect that a section was not fully parsed and restart at correct state.
Initial parsing is also doing that.

Result parsing is less aggressively discarding read bytes, but marking a
section as done will discard its bytes.

Last section can be split across multiple chunks.

Added a test json that has every sections possible (even though in real
life this wouldn't happen). Added a test that split this response almost
at every possible position (leaving out the possibility of an empty
chunk) to validate that the parser is extra resilient.

Results
-------
Parser is now extra resilient to all kind of chunking.

Change-Id: I9f256c41e6ace8ea504353f513f042332a4e9429",0,0,1,0,0,1,1,3,1
46447,I1a5a6950a57abb89a7ad6c28019bcbb86a39deb8,http://review.couchbase.org/#/c/46447,2,812c8be757856bd88f5855b15639aa26c9789b43,f59b72279d8374a2141c38072e52aa7da0c8c7cb,0,05/02/15,09/02/15,68,JVMCBC-144: Ensure memcached netty not rewritten,"JVMCBC-144: Ensure memcached netty not rewritten

The SDK adds some memcached specific handlers and messages into the
deps.io.netty namespace directly so when rewriting sources for shadowjar
we need to detect io.netty is actually already prefixed and not rewrite
that to com.couchbase.client.deps.com.couchbase.client.deps.io.netty...

Remove a couple extra FQN and took the rewriting of project sources out
of the previous loop (preventing it being done several times).

Change-Id: I1a5a6950a57abb89a7ad6c28019bcbb86a39deb8",0,0,1,0,0,1,1,NA,NA
46585,Ib9a8332379c9f30f35840f1eba42ef4efb9ce611,http://review.couchbase.org/#/c/46585,2,bcd33bbec2586809d095383c7b3d9782dc358952,272a4463d8fea9798445842b0c8b5f4eef61157d,1,09/02/15,09/02/15,4,JVMCBC-145: Check for the correct flags on Observe,"JVMCBC-145: Check for the correct flags on Observe

Motivation
----------
When debugging some Observe related issues, two flaws in the flags checking were
identified:

	- remove persistence used the wrong flag
	- mutation replication used the wrong flag

Which in turn resulted in timeout exceptions because the needed states were never
reached.

Modifications & Result
----------------------
The identifiers now use the proper enum to reach the desired states.

Change-Id: Ib9a8332379c9f30f35840f1eba42ef4efb9ce611",0,0,0,0,0,1,1,0,0
46590,I9c844abe2c66c39004130f210dacf5bfc4591785,http://review.couchbase.org/#/c/46590,2,272a4463d8fea9798445842b0c8b5f4eef61157d,2418eecdae6f9ba2b140eb6ed70aedb80fd60274,1,09/02/15,09/02/15,116,JVMCBC-146: Fail the Observe sequence when replica is not configured on the bucket.,"JVMCBC-146: Fail the Observe sequence when replica is not configured on the bucket.

Motivation
----------
When the user provides a persistence requirement which is not doable in the first place
because it is larger than the number of replicas configured on the bucket, it makes
sense to fail this observable quickly (since it will never be completed anyways).

Modification
------------
When the number of replicas is exctracted from the bucket config, a check is now
performed to make sure the given replica requirement is in range with what is
configured on the bucket (<=).

If it is not doable, fail with an exception.

Result
------
Quicker and semantically correct feedback to a user in this case.

Change-Id: I9c844abe2c66c39004130f210dacf5bfc4591785",0,0,0,0,0,1,1,0,0
46591,I6ab469226ca85429fd444abcb925e09a93d010aa,http://review.couchbase.org/#/c/46591,2,2418eecdae6f9ba2b140eb6ed70aedb80fd60274,42fa89b06ae20f27bc13e2ec4be51544b99b747e,1,09/02/15,09/02/15,89,JVMCBC-147: Fail Observe when document is modified concurrently.,"JVMCBC-147: Fail Observe when document is modified concurrently.

Motivation
----------
It is possible that while one request is still polling anotherone
can interfer with the previous one, change the CAS and lead to a
observe ""Modified"" response.

To give this information to the user, it needs to be properly
caught and propagated.

Modifications
-------------
The MODIFIED response from observe is explicitly caught and the
observe observable is failed. The user can catch it and either
retry or propagate the error. In any case it needs to fail because
the persistence requirement for this particular ID is not
satisfiable anymore.

Result
------
Proper error raised when the concurrent modification error is
happening.

Change-Id: I6ab469226ca85429fd444abcb925e09a93d010aa",0,0,0,0,0,1,1,0,0
46594,I1509d3c5bf60b2033bc4062df4459d72a8e8bc7c,http://review.couchbase.org/#/c/46594,3,42fa89b06ae20f27bc13e2ec4be51544b99b747e,61a5f3f7c1fec7067e4c1ff08ce4d67402362a0e,1,09/02/15,11/02/15,79,wip: short circuit observe,"wip: short circuit observe

Change-Id: I1509d3c5bf60b2033bc4062df4459d72a8e8bc7c",0,0,0,1,0,1,1,0,0
46634,Iedac2d580e114735003fb83496485ceb38ee6be6,http://review.couchbase.org/#/c/46634,2,0917743fd4b69ae81fbdbe85ad4ce77729702119,ef0a30688168fd930dba8dc96c5dd25d2201bde5,1,10/02/15,10/02/15,68,JVMCBC-148: Fix KV response code type,"JVMCBC-148: Fix KV response code type

Motivation
----------
In memcached protocol, response codes are defined on 2 bytes. In the
KeyValueHandler, response codes have wrongly been defined as bytes
instead of shorts, leading to bad mapping of codes into ResponseStatus
(FAILURE instead of a more precise type).

Also the fact that OPCODES are defined as byte then some received an
oversized value, casted and overflown to a single byte, is on purpose.
It should be made explicit in a comment.

Modifications
-------------
All response codes in KeyValueHandler have been migrated to shorts,
eliminating the need for casts.

Removed unnecessary casts from int/short to byte in order to make the
places where they are done on purpose stand out (KV OPCODES).

Added a test in KeyValueHandlerTest for conversion of short response
codes to ResponseStatus (conversion method has been made protected final
for that purpose).

Amended the KeyValueMessageTest integration test on getAndLock to check
that two lock attempts in a row return a TEMPORARY_FAILURE on the second
attempt, not just a FAILURE.

Results
-------
Tests allow us to better detect a mismatch in KV error interpretation.
Previously badly mapped error codes are now correctly mapped.

Change-Id: Iedac2d580e114735003fb83496485ceb38ee6be6",0,0,0,0,0,1,1,0,0
46687,I1292a2f30245a9625678e327b31465e4d4ce59a6,http://review.couchbase.org/#/c/46687,2,ef0a30688168fd930dba8dc96c5dd25d2201bde5,c9ddd290c825f5c4553b06fa8837324968ac36db,0,11/02/15,11/02/15,2,start working on 1.1.1-SNAPSHOT,"start working on 1.1.1-SNAPSHOT

Change-Id: I1292a2f30245a9625678e327b31465e4d4ce59a6",0,0,0,1,0,1,1,NA,NA
46691,I6704f939026ef2cc41b11536343cbbd85dcc0860,http://review.couchbase.org/#/c/46691,2,d56b09a5e07b0ad475209e1fbae25203878d114c,a8e70470ddcd7626bf6c349496efcf6cfc8fc6b8,1,11/02/15,11/02/15,9,JVMCBC-150: Map ERR_BUSY to a dedicated status,"JVMCBC-150: Map ERR_BUSY to a dedicated status

Motivation
----------
Some operations, like GetAndLock or Unlock, already are a bit ambiguous
in their error code, returning ERR_TEMPFAIL even for the case where the
key is already locked or the unlock used a wrong CAS.
Not distinguishing between ERR_TEMPFAIL and ERR_BUSY adds ambiguity...

Modifications
-------------
Add a ResponseStatus SERVER_BUSY to map ERR_BUSY.

Results
-------
Clients can now distinguish between ERR_TEMPFAIL and ERR_BUSY (by eg.
throwing a CASMismatchException for TEMPFAIL and a
TemporaryFailureException for BUSY).

Change-Id: I6704f939026ef2cc41b11536343cbbd85dcc0860",0,0,0,0,0,1,1,0,0
46874,I8a55e26f858f1bd80c1bc2ea1d936193a569d91c,http://review.couchbase.org/#/c/46874,2,a8e70470ddcd7626bf6c349496efcf6cfc8fc6b8,a18d67e1e9022ce50cbac93a0fe24da02be4a416,1,16/02/15,16/02/15,4,JVMCBC-138: Fix incorrect logging with IDLE states.,"JVMCBC-138: Fix incorrect logging with IDLE states.

Motivation
----------
When the IDLE state was added, the code which checks if the
state is CONNECTED on the Node level has been updated, but
did not respect the situation where only one IDLE service
is part of the node.

This results in prematurely promoting a CONNECTED state,
which can quickly go back to DISCONNECTED if the next
service comes along that is not an on demand one.

Modifications
-------------
If the node only has on demand services by now, do not
count an IDLE state as CONNECTED, but rather expose
it as an explicit state as well.

Result
------
No misleading log messages on bootstrap that a node
""bounces"" between connected and disconnected states.

Change-Id: I8a55e26f858f1bd80c1bc2ea1d936193a569d91c",0,0,0,0,0,1,1,0,0
46942,I66f13a565d59898ec03ecbefd0a9c8a9aead3622,http://review.couchbase.org/#/c/46942,12,a18d67e1e9022ce50cbac93a0fe24da02be4a416,ff341cb2cc007ba7b4ac9f369d96b98ecdfe0b56,1,17/02/15,26/02/15,579,JVMCBC-136: Automatically release not subscribed ByteBufs on View and Query,"JVMCBC-136: Automatically release not subscribed ByteBufs on View and Query

Motivation
----------
When View or N1Ql queries are run and then not all subjects are properly subscribed
to (which can easily happen if for example an error happens and one only listens to
rows) then the code leaks bytebuffers.

Modifications
-------------
The changeset borrows a unicast auto release subject from RxJava which handles
autoreleasing after some peroid, which is set to the maxRequestLifetime of the
environment.

Result
------
Avoid leaking even if requested but not subscribed.

Change-Id: I66f13a565d59898ec03ecbefd0a9c8a9aead3622",0,1,1,0,1,1,1,3,1
46943,I445f86596e629e1d0874f4606978e50019b09666,http://review.couchbase.org/#/c/46943,2,f1785978af268f40c635e78d5d3a7df5b364d5c8,1546c129f5da50d0eceb96b5cf2d9eda47d5a863,1,17/02/15,17/02/15,10,JVMCBC-151: fix broken query keepAlive,"JVMCBC-151: fix broken query keepAlive

Motivation
----------
In QueryHandler, keepalive is broken: it is marked as finishedDecoding
too soon, not taking into account that the first response could not be
a LastHttpComponent. This can break the handling of query requests.

Modifications
-------------
Only finish the decoding and issue the response for keepalive when we
received a LastHttpComponent.

Results
-------
Keepalive doesn't interfere with query handling anymore.

Change-Id: I445f86596e629e1d0874f4606978e50019b09666",0,0,0,0,0,1,1,1,1
46954,Id9abcf1f1e964bb371ae7b2373c588e79eb98ab0,http://review.couchbase.org/#/c/46954,3,1f1c43a77576bd9d500266c15d56d31f821fab40,21a95d62997591cebb434c0cd29585b8e84c0053,1,17/02/15,23/02/15,2,JVMCBC-152: query keepAlive GET on admin/ping,"JVMCBC-152: query keepAlive GET on admin/ping

Motivation
----------
Currently, keepalive makes a HEAD request on /, and this returns 404 in
some versions of the cbq-engine. This is not a suitable endpoint.

Modifications
-------------
Issue a GET on the more suitable endpoint /admin/ping instead.

Results
-------
Query keepAlive isn't met with a 404 error anymore.

Change-Id: Id9abcf1f1e964bb371ae7b2373c588e79eb98ab0",0,0,1,0,0,1,1,1,1
47009,Id61472795bcaef12242b3140b1460d85d1d91e20,http://review.couchbase.org/#/c/47009,2,2e859f266a36ffb91e33c1d54698501ca2588fb7,e05e852625042d87c94225d0f6e6171bbfcd7c34,1,18/02/15,18/02/15,7,Fix unit test for keepalive: now has lastHttpMsg,"Fix unit test for keepalive: now has lastHttpMsg

Change-Id: Id61472795bcaef12242b3140b1460d85d1d91e20",0,0,0,1,0,1,1,0,0
47228,I57d4298224d64108dd874107ab006ec3d82a5b19,http://review.couchbase.org/#/c/47228,5,e05e852625042d87c94225d0f6e6171bbfcd7c34,d681487a79a4d7fddc5ac6b1fde56fdf349d7105,1,23/02/15,24/02/15,126,JVMCBC-153: Expose signature from N1QL response,"JVMCBC-153: Expose signature from N1QL response

Motivation
----------
The signature was just skipped until now, but some clients are currently
evaluating N1QL and need this information.

Modifications
-------------
Signature is exposed in GenericQueryResponse, as an Observable<ByteBuf>.
The observable is fed by the QueryHandler and correctly closed upon
parsing status.

Added signature parsing in QueryHandlerTest (and signature sections in
relevant test json).

Made QueryHandlerTest's mock environment have queryEnabled to true.

Fixed/added bits of documentation.

Results
-------
Java SDK will now be able to retrieve and expose signature, cf JCBC-717.
Unit tests pass.

Change-Id: I57d4298224d64108dd874107ab006ec3d82a5b19",0,1,0,0,0,1,1,1,1
47229,I175d98ff9d87d069812ba9d0907992ee47bbe5d8,http://review.couchbase.org/#/c/47229,2,c5637d285e9c42ca869a55588044d75a50cdcdf9,59d041d834d6f291f07dd968a61011e39d025514,1,23/02/15,23/02/15,17,reduce leaks in tests by releasing several buffers,"reduce leaks in tests by releasing several buffers

also added Debug runner to UnitTest intellij launch configuration.

Change-Id: I175d98ff9d87d069812ba9d0907992ee47bbe5d8",0,0,0,0,0,1,1,0,0
47268,I50536ba2708dc1da69e1232ef7fb2ec99b62eb62,http://review.couchbase.org/#/c/47268,3,59d041d834d6f291f07dd968a61011e39d025514,ddc3702169596395e528b8c224f1193f48c1b015,1,24/02/15,24/02/15,81,JVMCBC-137: Correctly create services from nodesExt if exposed.,"JVMCBC-137: Correctly create services from nodesExt if exposed.

Motivation
----------
Since in the upcoming release nodes can have distinct services, the
code needs to make sure to properly grab the services for each node
in the cluster.

Modifications
-------------
Previously the logic was a little bit mixed up, now the service
selection is clearly defined:

	- When nodesExt is available, use it exclusively.
	- If not, fall back to the regular nodes list.

In addition, the ""viewInfo"" has been removed from the external
interface because it is not needed at all.

Result
------
The core now properly picks up distinct per node exposed services.

Change-Id: I50536ba2708dc1da69e1232ef7fb2ec99b62eb62",0,0,0,0,0,1,1,1,1
47276,Iea00031ae45ee1ec9aba2da67f60601722649688,http://review.couchbase.org/#/c/47276,3,ddc3702169596395e528b8c224f1193f48c1b015,da46ddf7467c284a791400db4ef088e43be70115,1,24/02/15,24/02/15,69,JVMCBC-137: Determine based on the config if a service is enabled or not.,"JVMCBC-137: Determine based on the config if a service is enabled or not.

Motivation
----------
The code properly needs to determine if a request can be served at all
or not. Previously it only did check on the environment flags, but since
the service can be announced through the config a more elaborate
logic needs to be put in place.

Modifications
-------------
The configuration now exposes a ""serviceEnabled"" method which returns
true/false. The data is cached on creation to make sure the data does
not need to be computed over and over.

It will return true if at least one node in the config is able to
serve it, so it can change at runtime.

Result
------
More accurate dynamic rejecting of requests which are not servable
based on the current config.

Change-Id: Iea00031ae45ee1ec9aba2da67f60601722649688",0,0,0,0,0,1,1,1,1
47405,I36bdc9bc8c80b09cb06e38a604f37d2443c739b3,http://review.couchbase.org/#/c/47405,2,63c61ae9374fea756b7efb8485c9c7248bf06dfd,908c4303181569eb843da21e2435b902b5ff9487,1,26/02/15,27/02/15,220,JVMCBC-156: Manage the Node service states through the state zipper.,"JVMCBC-156: Manage the Node service states through the state zipper.

Motivation
----------
In 1.1.0 the state zipper was added to reliably managed a list of
changing stateful components. We can reuse the same functionality
for the node as well.

Modifications
-------------
Moved the registration to the zipper while retaining the computation
logic for the actual log messages and events.

Result
------
Centralized management for states.

Change-Id: I36bdc9bc8c80b09cb06e38a604f37d2443c739b3",0,0,0,0,0,1,1,0,0
47541,Ib1f1eb8fd6076113d3c0659d0d06ae33013b8eda,http://review.couchbase.org/#/c/47541,2,7c651e0afa9b395b012cbe6f7cfe5081184cbfa3,85c1e58a4583961e53ade685ab092a999848b6c4,0,02/03/15,02/03/15,2,Prepare 1.1.1 Release,"Prepare 1.1.1 Release

Change-Id: Ib1f1eb8fd6076113d3c0659d0d06ae33013b8eda",0,0,0,1,0,1,1,NA,NA
47556,I9c8d8e1a73dc113218fd470ebb185d2d80c0bfbc,http://review.couchbase.org/#/c/47556,2,85c1e58a4583961e53ade685ab092a999848b6c4,1e9373e476b48627259f2d4800c8b252af2d13cf,0,02/03/15,02/03/15,2,Starting Development on 1.1.2,"Starting Development on 1.1.2

Change-Id: I9c8d8e1a73dc113218fd470ebb185d2d80c0bfbc",0,0,0,1,0,1,1,NA,NA
47610,I3c5aae9a7f72cc007345d8dc11fbf09cd4d9b8eb,http://review.couchbase.org/#/c/47610,4,1e9373e476b48627259f2d4800c8b252af2d13cf,eaa1ccc9f187918bb33211f21ec71f0661a86261,1,03/03/15,03/03/15,452,JVMCBC-157: Centralize ResponseStatus conversion,"JVMCBC-157: Centralize ResponseStatus conversion

Motivation
----------
The response status is converted in many places, since
every handler needs to do this of some sort. It turns out
that the functionality itself is very redundant, so it
can easily be centralized.

Modifications
-------------
Centralize response status conversion into its own helper
class and call it from every handler.

This code also does some minor cleanup on the dcp handler,
mainly comments.

Result
------
Less code duplication on response status conversion.

Change-Id: I3c5aae9a7f72cc007345d8dc11fbf09cd4d9b8eb",0,1,0,0,0,1,1,-5,0
47854,I5fc2b4e6b15c91e7215ba023ced4ae05b91d7241,http://review.couchbase.org/#/c/47854,5,f6bc85e4537aaf00929679df2f9b4ded470474c0,6935555956b243273022a2ea84b41b3aaa4506b4,1,06/03/15,09/03/15,139,JVMCBC-159: Make responses reference counted.,"JVMCBC-159: Make responses reference counted.

Motivation
----------
To make it easier to release byte buffers without actually needing to know
all the implementation details, the appropriate responses can be made
reference counted themselves.

Modifications
-------------
The only responses carrying raw buffers are in the view and kv namespace. They
are made reference counted and will free the underlying content buffer when
release is called on them. They act as reference count proxies.

Result
------
More generic way to free responses.

Change-Id: I5fc2b4e6b15c91e7215ba023ced4ae05b91d7241",0,1,1,0,0,1,1,0,0
47855,I95c3edcd8b86e36e7328adb76c8585d5b4c992ee,http://review.couchbase.org/#/c/47855,2,1ebbc87582ee40d67db05d1cfb46a1c66563bf4d,82e60b08dcd4b65323cb9bbf93ceb6c0eccb0849,1,06/03/15,09/03/15,214,JVMCBC-154 - Avoid leaking content on not needed config buffers.,"JVMCBC-154 - Avoid leaking content on not needed config buffers.

Motivation
----------
The carrier loader and refresher both use the bucket config result, but it could
be that the code unsubscribes before the full result is consumed. This is a valid
condition, but code needs to be in place to free all the buffers nonetheless.

Modifications
-------------
Since the generic ""release if unsubscribed"" behaviour can be reused in lots of places,
a helper method has been introduced to the Buffers class which transparently takes
care.

The loader and refresher have been adapted to account for the automatic release.

Result
------
Even when unsubscribed on config loading, the buffers are properly released. Also
the helper class can be used in various other places as well.

Change-Id: I95c3edcd8b86e36e7328adb76c8585d5b4c992ee",0,0,1,0,0,1,1,0,0
47856,Ic12b6c7f08b059b8c685515266b8615950ba2c72,http://review.couchbase.org/#/c/47856,2,ff356ff379ab88de59e99eefc1ee6c277d35c4aa,65ab9a966455e0b869843034dee54abb4437c7a3,1,06/03/15,09/03/15,8,JVMCBC-161: Only write keepalive when writable.,"JVMCBC-161: Only write keepalive when writable.

Motivation
----------
To avoid errors the keepalive should only be sent when the channel
is active and writable.

Modifications
-------------
Implement proper checks on the handler to only writeAndFlush if
the channel is actually active and writable.

Result
------
Hardened keepalive sending of messages.

Change-Id: Ic12b6c7f08b059b8c685515266b8615950ba2c72",0,0,1,0,0,1,1,0,0
47859,I8df2f806701f51d7332a809cc24f72e2b663e41e,http://review.couchbase.org/#/c/47859,5,4cfad560012f6499d0eeebb20c9c20666b4e562d,67fb9ddbfaa2e13108a75dd26f10668d58b1ef23,1,06/03/15,09/03/15,3,JVMCBC-162: Do not flush if not active.,"JVMCBC-162: Do not flush if not active.

Motivation
----------
Much like on write(), flush() needs to check if the channel is
active and only then send the flush signal.

Modifications
-------------
Check if the channel is active and only then flush. It makes no
sense to flush if the channel is not active, error handling
facilicities inside of the handler perform the necessary
cleanup tasks.

Result
------
No flushing when the channel is not active.

Change-Id: I8df2f806701f51d7332a809cc24f72e2b663e41e",0,1,1,0,0,1,1,0,0
47861,If2fd84f3a4b724955a444a854c40e0ec384e8f62,http://review.couchbase.org/#/c/47861,2,58f7b670d315d57e147694921498be258e18e8f0,31e97594507f5ac0ff99f28821bb31cfc3efdc15,1,06/03/15,09/03/15,12,JVMCBC-163: Avoid eager evaluation of config fallback.,"JVMCBC-163: Avoid eager evaluation of config fallback.

Motivation
----------
Even when onErrorResumeNext is done once a failure happens, passing
it in right away will make the JVM eagerly evaluate the call
and trigger the network request.

Modifications
-------------
Use Observable.defer to correctly defer the hot observable call and
avoid a request which is never consumed and potentially leaks the
content.

Result
------
No eager evaluation and no leak.

Change-Id: If2fd84f3a4b724955a444a854c40e0ec384e8f62",0,0,1,0,0,1,1,0,0
47862,I1b4ab47845bf218c4880ed7b4bb1e99a2a9c97ab,http://review.couchbase.org/#/c/47862,3,b2214294230a23720338a5bb1f43324bee23a158,72bae26c4c4acf0c02ebfaddcde27d5a961ac02c,1,06/03/15,09/03/15,5,JVMCBC-164: Hide IOExceptions on write failures.,"JVMCBC-164: Hide IOExceptions on write failures.

Motivation
----------
The write callback error log is designed to surface coding issues
that are not logged by the netty event loop. When a channel is
closed forcefully (hard failover on the server), IOExceptions
including broken pipes are logged.

This information is redundant and confuses the user potentially,
since the SDK is expected to handle that.

Modifications
-------------
The IOExceptions are ignored and not logged, because the SDK
already indicates to the user that a node has been disconnected
in this case. Also, a broken pipe can happen as a race condition
and the handler is expected to clean everything up nicely.

Result
------
Less cognitive load for the user and support to grasp during a
hard channel close.

Change-Id: I1b4ab47845bf218c4880ed7b4bb1e99a2a9c97ab",0,0,1,0,0,1,1,0,0
47991,Iada6f065c47e6013e5437b7813533a0cf9413929,http://review.couchbase.org/#/c/47991,2,e11e7504cc199364065a619aa9ea68e6f4c0f295,30da1732c7fc887114f55348ddbc8ba81670489c,1,10/03/15,10/03/15,40,JVMCBC-165: HTTP Basic auth should never break lines on Base64 encoding.,"JVMCBC-165: HTTP Basic auth should never break lines on Base64 encoding.

Motivation
----------
When authorization is needed over HTTP (config and views), the Base64
encoding previously did not take very long strings into account which
accidentially added line breaks. This is not supported by HTTP
basic auth.

Modifications
-------------
Make sure line breaks are never added, even when the basic authentication
is longer than the maximum line length in the Base64 encoder.

Result
------
No line breaks on longer passwords, leading to wrong authentication.

Change-Id: Iada6f065c47e6013e5437b7813533a0cf9413929",0,0,0,0,0,1,1,0,0
47995,Ie456f865cdde659a9c797f4ee31081fef93f6735,http://review.couchbase.org/#/c/47995,2,f25f32ace7baae12cb42909d0e1d8c5cfbae0f09,ff69d5a4ebe7cc15e63454c375c510ffc9373bb3,1,10/03/15,10/03/15,6,fix detection of ServiceNotAvailable (JVMCBC-120),"fix detection of ServiceNotAvailable (JVMCBC-120)

Motivation
----------
Since the exception has been changed from UnsupportedOperationException
to ServiceNotAvailableException but the RequestHandler then only catches
the old one, clients would not get notified of the error other than in
logs.

Modifications
-------------
RequestHandler now catches the correct exception type.

Results
-------
Clients will correctly get notified of a ServiceNotAvailableException
(and not eg. timeout) if there no service able to handle a request.

Change-Id: Ie456f865cdde659a9c797f4ee31081fef93f6735",0,0,0,0,0,1,1,0,0
48005,I80753f7598e5affc0adc11c3ec89207260c1ba0c,http://review.couchbase.org/#/c/48005,2,ff69d5a4ebe7cc15e63454c375c510ffc9373bb3,c1798fb2453a827dd66daacc045818b0c2631002,1,10/03/15,10/03/15,19,extract dumping of env parameters for JCBC-724,"extract dumping of env parameters for JCBC-724

Motivation
----------
In the java-client, subclass of DefaultCoreEnvironment has several
specific parameters, that should also be dumped in the toString. This
change is needed in order for this subclass to use core's dumping of
parameters

Modifications
-------------
A new protected method that dumps core environment parameters into a
StringBuilder has been put in place, and toString relies on it.

Results
-------
Subclasses can now dump the full range of environment parameters in a
StringBuilder.

Change-Id: I80753f7598e5affc0adc11c3ec89207260c1ba0c",0,0,0,0,0,1,1,0,0
48007,Ife13f52a137121eff9eca63e2c1b0de5625fb676,http://review.couchbase.org/#/c/48007,2,c1798fb2453a827dd66daacc045818b0c2631002,391d4f85a33ed910c87a9336c335c7b04b3690f9,1,10/03/15,10/03/15,44,JVMCBC-166: Observe needs to take the returned CAS into account.,"JVMCBC-166: Observe needs to take the returned CAS into account.

Motivation
----------
When a document with the same key is already replicated, the code needs
to take the cas value into account to not prematurely report a state
from the old (already replicated) document and instead wait for the
new one.

Modifications
-------------
The code now properly crosschecks the returned cas value and does
two things:

	- if it is the master and the CAS values do not match up,
	  raise an error since the document got modified while
	  we were polling.
	- if not the master, only increment the replicated/persisted
	  counters if the cas values match up to prevent getting the
	  state from stale ids.

Result
------
Correct behaviour during observe polling when older documents
are already in place.

Change-Id: Ife13f52a137121eff9eca63e2c1b0de5625fb676",0,0,0,0,0,1,1,0,0
48104,I9517e8e0cbc93e6480efceb058f867125d9752ac,http://review.couchbase.org/#/c/48104,2,391d4f85a33ed910c87a9336c335c7b04b3690f9,e107eec182c9cde4024b4a7d48b5271a905a84a4,1,11/03/15,11/03/15,52,JVMCBC-167: Allow to disable buffer pooling.,"JVMCBC-167: Allow to disable buffer pooling.

Motivation
----------
It might pay off in the future to have a ""kill"" switch to disable
buffer pooling. This can be used as a temporary workaround if a
leak in the client is suspected (and not in the user level code).

Modifications
-------------
Add the environment option which is enabled by default. The endpoint
selects the proper allocator based on the environment setting.

Result
------
As a last resort it is possible to disable buffer pooling, but of
course not recommended.

Change-Id: I9517e8e0cbc93e6480efceb058f867125d9752ac",0,0,0,0,0,1,1,0,0
48112,Ica335a11bd170bea211e522aa2d0392e8c980581,http://review.couchbase.org/#/c/48112,3,cdd3786df8e9b53d43783853c2a3a28c9d75ce87,1bafc92febddd09247501d601676be2218979c7c,1,11/03/15,11/03/15,2,JVMCBC-168: Deactivate Nagle's Algorithm,"JVMCBC-168: Deactivate Nagle's Algorithm

Motivation
----------
Nagle's Algorithm in TCP consist in buffering small packets and sending
them as a single packet when the total size vs TCP overhead ratio gets
small.
In terms of latency, in current networks, it is less and less relevant
and introduces latency.

Modifications
-------------
AbstractEndpoint now builds the socket with TCP_NODELAY set to true,
which disables Nagle's algorithm in Netty.

Result
------
Lower latencies are to be expected thanks to this tuning. Note that the
algorithm is now by default disabled in Netty.

Change-Id: Ica335a11bd170bea211e522aa2d0392e8c980581",0,0,0,0,0,1,1,0,0
48156,I8d085206ffbccb452d9dbe130e78d50948ff93e2,http://review.couchbase.org/#/c/48156,2,18b413ebc5d48ca4aeb5383a8ce15bfd2447e769,2567d2534741a8f4d5449b26c057acca8b80ded3,1,12/03/15,12/03/15,298,JVMCBC-166: More Observe-related fixes and tests.,"JVMCBC-166: More Observe-related fixes and tests.

Motivation
----------
The previous changeset for JVMCBC-166 (24fdfdf6cbbcd3b8519379b6e1545244cfcc9e90)
introduced a regression with removal requirements.

Modifications
-------------
The code now properly makes sure that on a real delete the cas can be zero and
properly accounts for that.

In addition, an issue has been uncovered where master persistence was observed
too quickly and therefore not properly returned.

A large set of integration tests has been added to correctly assert the
functionality in the future.

Result
------
Correct behaviour also when removal obs are observed as well as more correct
observe reportings during master observes.

Change-Id: I8d085206ffbccb452d9dbe130e78d50948ff93e2",0,0,0,0,0,1,1,1,1
48171,Ic2db596c0ece860fbd8adf263d813b71a3a94fb1,http://review.couchbase.org/#/c/48171,2,71b2bd6939be3934c51a5252d248ed26f30151d6,27765f1c790e293d5647a996f203b9a27f3f085a,1,12/03/15,12/03/15,40,JVMCBC-170: Apply a hard lower limit for pool sizes.,"JVMCBC-170: Apply a hard lower limit for pool sizes.

Motivation
----------
For various reasons (only one core, wrong user config) it can happen
that the io and/or computation pool sizes get set to a very low
value which can cause deadlocks or resource starvation.

Modifications
-------------
This changeset applies a lower limit of 3 which is a resonable
default lower limit. It also prints INFO level messages to help
the user identify any issues.

Result
------
More resiliency out of the box for different user setups and
environments.

Change-Id: Ic2db596c0ece860fbd8adf263d813b71a3a94fb1",0,0,0,0,0,1,1,0,0
48238,I89b3230826103fb6dc1da94d72674ff23366d22e,http://review.couchbase.org/#/c/48238,4,27765f1c790e293d5647a996f203b9a27f3f085a,bd3752bae0b63c855b785ea89a081cfeec4bcd0f,1,13/03/15,13/03/15,61,WIP: fallback to node hostname if nodesExt doesnt have it.,"WIP: fallback to node hostname if nodesExt doesnt have it.

Works, but need to add unit tests with a raw sample config.

Change-Id: I89b3230826103fb6dc1da94d72674ff23366d22e",0,1,0,0,0,1,1,0,0
48414,I1c1e3aba5674f9ebf6950db54cf393eb8f47a12b,http://review.couchbase.org/#/c/48414,2,bd3752bae0b63c855b785ea89a081cfeec4bcd0f,9aefab7e62ae5351e1bb0e947da99489f2964b92,1,17/03/15,17/03/15,44,JVMCBC-172: wait for actual last chunk of query response before reset,"JVMCBC-172: wait for actual last chunk of query response before reset

Motivation
----------
In the N1QL parser, we don't actually check if the chunk was the last
when transitioning to the DONE state. This leads to blocking when there
is still a little chunk with closing bracket(s) at the end.

Having the second of two requests blocking and seeing a ""Starting
decoding of null"" in the trace logs is symptomatic of this issue.

The parser should only be reset when in DONE state AND the chunk is the
actual last.

Modifications
-------------
Once the state has been transitioned to DONE, consider the sectionDone
only if this is the last chunk. Otherwise, continue to consume.

Fixed a DCP/feature-related test that wouldn't pass if query is enabled
via system property.

Result
------
No more blocking and ""started decoding of null"" in logs when attempting
two requests in a row, the parser correctly processes the small last
chunk.

Change-Id: I1c1e3aba5674f9ebf6950db54cf393eb8f47a12b",0,0,0,0,0,1,1,0,0
48680,I81596837033c15db0cac90a869db814f03273b30,http://review.couchbase.org/#/c/48680,4,9aefab7e62ae5351e1bb0e947da99489f2964b92,1f630d69ca84bcd284636044dad5eb372ed1a03f,1,24/03/15,24/03/15,406,JVMCBC-173: Fix DCP compatibility with transient endpoints.,"JVMCBC-173: Fix DCP compatibility with transient endpoints.

Motivation
----------
Somewhere between 1.1.0 DP and GA some code was reworked and parts
of the experimental DCP support was broken.

This changeset fixes the compatibility.

Modifications
-------------
To make it work again, a few things had to be put into place:

	- Add a LazyService to connect lazily but limit to 1 connection
	  and then reuse it.
	- Remove the transient nature from the dcp endpoint
	- Add some more intelligent cluster version detection to also
	  now run the DCP int tests when possible.

Result
------
Basic DCP integration is now working again, but more changes are
anticipated to make the behaviour more correct and usable.

Change-Id: I81596837033c15db0cac90a869db814f03273b30",0,1,0,0,0,1,1,0,0
48693,I81af54790e39330b3fb49d75378ae0db8d5597a0,http://review.couchbase.org/#/c/48693,3,1a507990f3c1773ebee130fc06f1e42b1b821490,b52e71a982a51d075a151a1b4c837eee094ba92e,1,24/03/15,27/03/15,449,WIP take the fact that signature can be any json value,"WIP take the fact that signature can be any json value

Change-Id: I81af54790e39330b3fb49d75378ae0db8d5597a0",0,0,1,1,0,1,1,1,1
48845,I70ce492b74e23f879a50172f602ff4a4b787972d,http://review.couchbase.org/#/c/48845,3,76ef91a1b9c24a9de9a6ea85f77152de6245e6f6,32ce8c2fea8910c5cc0fb2b4667434dc094c4c4a,1,27/03/15,27/03/15,57,JVMCBC-175: Always Observe master to detect concurrent modifications.,"JVMCBC-175: Always Observe master to detect concurrent modifications.

Motivation
----------
When the CAS value changes on the master to the one that should be
observed, there is a chance that the one the code is looking for
will never be replicated (since the server can deduplicate items
and therefore the op will never end up in this form on the
replica).

The code already has a check for that, but it is only executed
if a response from the master is returned. If the user only
specifies ReplicateTo, the master is never asked and therefore
the operation will time out.

Modifications
-------------
To avoid this case, the master is now always included in the poll
operation, and the response is used for a cas sanity check. Of
course if not needed it does not participate in the requirements
checks until success is returned, but it can throw an exception
if the concurrent modification is detected.

The message has also been improved to be more user friendly.

Result
------
Correct behavior on cas concurrent modification detection even when
only replication constraints are needed.

Change-Id: I70ce492b74e23f879a50172f602ff4a4b787972d",0,0,0,0,0,1,1,0,0
48846,If10bbd0868eaac61b7c06ba7edcad4b772d4bb0f,http://review.couchbase.org/#/c/48846,2,37b2a054608a39974465450e9278dde61b672358,f5c7a2cb79036227645d4d981245802a220d6719,1,27/03/15,27/03/15,3,Release buffers properly in dcp tests.,"Release buffers properly in dcp tests.

Change-Id: If10bbd0868eaac61b7c06ba7edcad4b772d4bb0f",0,0,0,1,0,1,1,0,0
48924,I09b82e301452e14afc1ed87dcc1b70a0bfd5b626,http://review.couchbase.org/#/c/48924,8,f5c7a2cb79036227645d4d981245802a220d6719,63f8a2a74a9c31491809f928eb6e0751c2f40fb1,1,30/03/15,01/04/15,178,[WIP] JVMCBC-176: Handle errors in views properly after rows.,"[WIP] JVMCBC-176: Handle errors in views properly after rows.

Change-Id: I09b82e301452e14afc1ed87dcc1b70a0bfd5b626",0,1,0,1,0,1,1,1,1
49102,I14201852e8586b823a8051f6f278b18319893e0f,http://review.couchbase.org/#/c/49102,3,63f8a2a74a9c31491809f928eb6e0751c2f40fb1,6b5341a0c7cf634fb8533481a010ee6ec53a8b82,1,02/04/15,02/04/15,3,JVMCBC-177: Proactively ask for a new config on failed connect attempts.,"JVMCBC-177: Proactively ask for a new config on failed connect attempts.

Motivation
----------

Modifications
-------------

Result
------

Change-Id: I14201852e8586b823a8051f6f278b18319893e0f",0,0,0,0,0,1,1,0,0
49160,I30a82839515881200251e8a998e59c82d8c62acf,http://review.couchbase.org/#/c/49160,2,6b5341a0c7cf634fb8533481a010ee6ec53a8b82,63da60a48aa10b51ba65212efd57fc116e61338f,0,03/04/15,03/04/15,2,Prepare 1.1.2 Release,"Prepare 1.1.2 Release

Change-Id: I30a82839515881200251e8a998e59c82d8c62acf",0,0,0,1,0,1,1,NA,NA
49162,I86b8847467ac87f281a5044f1806ffb7af0b5901,http://review.couchbase.org/#/c/49162,2,63da60a48aa10b51ba65212efd57fc116e61338f,b91d7bfa5c8a9cb774ec5d2b329cf5e5bc90ea70,0,03/04/15,03/04/15,2,Start development on 1.2.0,"Start development on 1.2.0

Change-Id: I86b8847467ac87f281a5044f1806ffb7af0b5901",0,0,0,1,0,1,1,NA,NA
49298,Icc4db1f116d189d5494194ae4ebd6a2901c9891d,http://review.couchbase.org/#/c/49298,3,b91d7bfa5c8a9cb774ec5d2b329cf5e5bc90ea70,02a52e3151a0ea4bca7d6f71e73ddb57c76e5319,1,07/04/15,07/04/15,45,JVMCBC-178: Add toString() to Delay implementations.,"JVMCBC-178: Add toString() to Delay implementations.

Motivation
----------
The environment dumps the delay settings, but they provide very little
details if the delay itself also doesn't implement a meaningful toString()
method.

Modifications
-------------
Proper toString() overrides for all delay implementations which also expose
their internal values like boundaries, time unit and delay time.

Result
------
It is now possible to see which delay is configured in the environment dump
on startup.

Change-Id: Icc4db1f116d189d5494194ae4ebd6a2901c9891d",0,0,0,0,0,1,1,0,0
49310,Ibc6bd036ce5140afc440801c3d199fd9f1c2157f,http://review.couchbase.org/#/c/49310,2,b8d424bc233487fad6b4cc0764923efa1e7d90ff,9051879d43076aa00336fd543b564d16ac2d5f80,0,07/04/15,07/04/15,26,JVMCBC-179: Upgrade Dependencies for 1.2,"JVMCBC-179: Upgrade Dependencies for 1.2

Motivation
----------
Both RxJava and the packaged dependencies should been upgraded
to their bugfix and minor releases for better performance and
increased stability.

The following dependencies are upgraded:

	- RxJava 1.0.4 -> 1.0.8
	- Netty 4.0.25 -> 4.0.26
	- Disruptor 3.3.0 -> 3.3.2
	- Jackson 2.4.2 -> 2.5.2

Change-Id: Ibc6bd036ce5140afc440801c3d199fd9f1c2157f",0,0,0,0,0,1,1,NA,NA
49451,Iadbcee28deaca4d7d0f14bf9c7f424375f88bbd3,http://review.couchbase.org/#/c/49451,2,9051879d43076aa00336fd543b564d16ac2d5f80,e61b3ba28686c59d505676146fa1bc391c7cc779,0,09/04/15,09/04/15,4,JCBC-179: Upgrade RxJava to 1.0.9,"JCBC-179: Upgrade RxJava to 1.0.9

Change-Id: Iadbcee28deaca4d7d0f14bf9c7f424375f88bbd3",0,0,0,1,0,1,1,NA,NA
49596,Ie428fe0586c3467bd3f492dae356e8d64e906b22,http://review.couchbase.org/#/c/49596,2,e61b3ba28686c59d505676146fa1bc391c7cc779,bdef6f37d45ca7d325ca1c9df5edcf7a954c4e7a,1,13/04/15,13/04/15,7,JVMCBC-180: Avoid #merge when only 1 observable needed in Observe.,"JVMCBC-180: Avoid #merge when only 1 observable needed in Observe.

Motivation
----------
When it is determined that only one observe call needs to be sent,
the Observable#merge() is not needed, since it is enough to just
pass the one observable downstream.

Modifications
-------------
Conditional block added to check for the list size and if one,
just return the observable.

Result
------
Not much, but helps a little since merge is quite expensive.

Change-Id: Ie428fe0586c3467bd3f492dae356e8d64e906b22",0,0,0,0,0,1,1,0,0
49597,I79256122ea20e45dbdb415161f899f15e2cd4631,http://review.couchbase.org/#/c/49597,2,804f251e2a3e27d11ef5cfad9b2e46c831d2de85,3fbb4a7b4dec4cc8bb9a67466088f0d489c78645,1,13/04/15,13/04/15,178,JVMCBC-181: Refactoring of KeyValueLocator,"JVMCBC-181: Refactoring of KeyValueLocator

Motivation
----------
The locator is on the hot code path and the JIT logs report that
especially the locateForCouchbaseBucket method is too hot to be
inlined.

Modifications
-------------
The code has not been altered, but just split up into smaller functions,
making it possible for the JIT to inline it and therefore
possibly make it faster.

Result
------
The code is now more cleanly separated and also it makes it possible
for the JIT to optimize it.

Change-Id: I79256122ea20e45dbdb415161f899f15e2cd4631",0,0,0,0,0,1,1,-1,0
49601,I085e1927da1f869b600f83351efd8c68db8b3774,http://review.couchbase.org/#/c/49601,3,c52da2da06282383535a160c7e33b83560b1932e,b12fc1fc9e2130bacc235cd69678c06f48eafaf5,1,13/04/15,13/04/15,165,JVMCBC-182: Refactoring of the KeyValueHandler,"JVMCBC-182: Refactoring of the KeyValueHandler

Motivation
----------
The JIT reports that the decode methods is hot but way too big to
be optimized.

Modifications
-------------
The response decoding part has been refactored and should now be
inlineable by the JIT. The refactoring only consists of splitting
up the methods.

Result
------
Inlineable code by the JIT.

Change-Id: I085e1927da1f869b600f83351efd8c68db8b3774",0,0,0,0,0,1,1,0,0
49732,Iddd05fbbfeef1bebcc8288f87b4425ef71710e60,http://review.couchbase.org/#/c/49732,2,b12fc1fc9e2130bacc235cd69678c06f48eafaf5,659345d2d35cf0d476aa96ae2f2ba2516649f56c,1,15/04/15,20/04/15,156,JVMCBC-183: store server's error code in response,"JVMCBC-183: store server's error code in response

Motivation
----------
If and when the server sends a response that has an unknown code, SDK
translates it to ResponseStatus.FAILURE but loses the original status
code.

Modifications
-------------
Added a field to BinaryResponse for storing the original status code.
Initialized via constructor, so all child classes have it added to the
respective constructors, and unit tests reflect that.
Added a note on ResponseStatus.FAILURE's javadoc to indicate that it
denotes an ""unknown"" status code, and that said code can be found in
the BinaryResponses.

Result
------
Better possibilities for the clients to exactly see what happened in
case of error on the server side when the error code is not yet mapped
in the SDK.

Change-Id: Iddd05fbbfeef1bebcc8288f87b4425ef71710e60",0,0,1,0,0,1,1,0,0
49855,If8697a4ce4f01e0f1e68a02d0b521c6631fdd7bc,http://review.couchbase.org/#/c/49855,3,befb202f96b2277ef0649fab1770869f2d361c47,af0d900989bbcb369e16c6659335e19e9b46cbb6,1,17/04/15,17/04/15,24,JVMCBC-184: Prevent race condition on topology change with >1 buckets.,"JVMCBC-184: Prevent race condition on topology change with >1 buckets.

Motivation
----------
When more than one bucket is open at the same time a race condition combined
with our ""safety rescheduling"" logic prevents the system from getting back
into a stable state.

The two configurations for the buckets race each other with the reconfiguration
logic and the operations always get rescheduled.

Modifications
-------------
The change is quite trivial in that the rescheduling logic is now only executed
as a fallback when the regular node could not be selected beforehand. This allows
the operations to pass while just to retry the subset which is affected by
the temporary topology difference between the config nodes and the actual
instantiated node list.

Result
------
More stable behaviour during rebalance when more than one bucket is open.

Change-Id: If8697a4ce4f01e0f1e68a02d0b521c6631fdd7bc",0,0,0,0,0,1,1,0,0
49857,I0abb3fd0b3a583f554d9adf08e972c2cfc644b71,http://review.couchbase.org/#/c/49857,3,af0d900989bbcb369e16c6659335e19e9b46cbb6,dc67b4167d47d7186519662d14fa31a0e88f4143,1,17/04/15,20/04/15,29,JVMCBC-185: Make sure password is passed on to the next config.,"JVMCBC-185: Make sure password is passed on to the next config.

Motivation
----------
When a new configuration arrives (for example through http streaming
on a memcached bucket) it is important that the bucket password
is passed along from the old to the new config so it does not
get lost.

Modifications
-------------
The code now makes sure to always - before swapping it out - transfer
the password over to the new config.

Result
------
Avoiding authentication issues on node adds through the memcached
http streaming code path.

Change-Id: I0abb3fd0b3a583f554d9adf08e972c2cfc644b71",0,0,1,0,0,1,1,0,0
49900,I7e72a88763ded71a407257055bf4f92b4f1c3c7c,http://review.couchbase.org/#/c/49900,2,a1f2dbb6da4ad86a0e76631a68b217a97818ab9d,e78c62dedead7e40b7257b7af979bf15f6d228bf,1,20/04/15,20/04/15,35,JVMCBC-186: Graceful skipping on failing bootstrap node list elems.,"JVMCBC-186: Graceful skipping on failing bootstrap node list elems.

Motivation
----------
When only a subset of the nodes in the bootstrap list is failing (for
example because the IP address has an invalid format or the hostname
can't be looked up), the code should not give up but rather ignore
the error and keep moving with the nodes it has.

Modifications
-------------
Errors are now logged and only if the list is empty at the end a
ConfigurationException is thrown.

Result
------
The code is now more resilient to partial invalid hosts in the
bootstrap list and keeps going in a best-effort manner while still
reporting all issues and failing eventually if it can't make
progress.

Change-Id: I7e72a88763ded71a407257055bf4f92b4f1c3c7c",0,0,0,0,0,1,1,0,0
49935,Icc4db1f116d189d5494194ae4ebd6a2901c9891d,http://review.couchbase.org/#/c/49935,2,d6bb9682f42cca1fcab18843951e420cbffaa45b,527faba6386181040dcf609e700438c9cd97e257,1,21/04/15,21/04/15,45,JVMCBC-178: Add toString() to Delay implementations.,"JVMCBC-178: Add toString() to Delay implementations.

Motivation
----------
The environment dumps the delay settings, but they provide very little
details if the delay itself also doesn't implement a meaningful toString()
method.

Modifications
-------------
Proper toString() overrides for all delay implementations which also expose
their internal values like boundaries, time unit and delay time.

Result
------
It is now possible to see which delay is configured in the environment dump
on startup.

Change-Id: Icc4db1f116d189d5494194ae4ebd6a2901c9891d
Reviewed-on: http://review.couchbase.org/49298
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,0,0
49936,I0abb3fd0b3a583f554d9adf08e972c2cfc644b71,http://review.couchbase.org/#/c/49936,2,4a790d6ae18be8beeef4c565e54404d3d190def0,66b7fddf893577b75d424ae418631d450ec679ef,1,21/04/15,21/04/15,29,JVMCBC-185: Make sure password is passed on to the next config.,"JVMCBC-185: Make sure password is passed on to the next config.

Motivation
----------
When a new configuration arrives (for example through http streaming
on a memcached bucket) it is important that the bucket password
is passed along from the old to the new config so it does not
get lost.

Modifications
-------------
The code now makes sure to always - before swapping it out - transfer
the password over to the new config.

Result
------
Avoiding authentication issues on node adds through the memcached
http streaming code path.

Change-Id: I0abb3fd0b3a583f554d9adf08e972c2cfc644b71
Reviewed-on: http://review.couchbase.org/49857
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,0,0
49937,I7e72a88763ded71a407257055bf4f92b4f1c3c7c,http://review.couchbase.org/#/c/49937,2,7b508f9918c1ea2ed71e4721d06a37e872164378,01edfbc9f55884f065980e093c5ad9c186731f3a,1,21/04/15,21/04/15,35,JVMCBC-186: Graceful skipping on failing bootstrap node list elems.,"JVMCBC-186: Graceful skipping on failing bootstrap node list elems.

Motivation
----------
When only a subset of the nodes in the bootstrap list is failing (for
example because the IP address has an invalid format or the hostname
can't be looked up), the code should not give up but rather ignore
the error and keep moving with the nodes it has.

Modifications
-------------
Errors are now logged and only if the list is empty at the end a
ConfigurationException is thrown.

Result
------
The code is now more resilient to partial invalid hosts in the
bootstrap list and keeps going in a best-effort manner while still
reporting all issues and failing eventually if it can't make
progress.

Change-Id: I7e72a88763ded71a407257055bf4f92b4f1c3c7c
Reviewed-on: http://review.couchbase.org/49900
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,0,0
49938,I80d597bb737bad190fa7a054167da90006e0d1c6,http://review.couchbase.org/#/c/49938,2,7d97ff620f29ce49b47271e043080588eafdb0be,f99cf3009ec36618a19ac0ba1ccd44309fc530cb,1,21/04/15,21/04/15,20,JVMCBC-184: Prevent race condition on topology change with >1 buckets.,"JVMCBC-184: Prevent race condition on topology change with >1 buckets.

[Manual Backport]

Motivation
----------
When more than one bucket is open at the same time a race condition combined
with our ""safety rescheduling"" logic prevents the system from getting back
into a stable state.

The two configurations for the buckets race each other with the reconfiguration
logic and the operations always get rescheduled.

In addition, the retry logic needs to be in place for memcached buckets as well,
since the gap can be there present too.

Modifications
-------------
The change is quite trivial in that the rescheduling logic is now only executed
as a fallback when the regular node could not be selected beforehand. This allows
the operations to pass while just to retry the subset which is affected by
the temporary topology difference between the config nodes and the actual
instantiated node list.

Also the retry logic is applied for memcached buckets.

Result
------
More stable behaviour during rebalance when more than one bucket is open.

Change-Id: I80d597bb737bad190fa7a054167da90006e0d1c6",0,0,0,0,0,1,1,0,0
49939,Icb07589f5656292016bb1b0176dbe8b2ef9192f3,http://review.couchbase.org/#/c/49939,2,6e1543af4029b24dfe87654aa2bfd55507e6e162,37cef670c66593cd285403381b0f90ceca930215,0,21/04/15,21/04/15,4,Set Version to 1.1.3-SNAPSHOT,"Set Version to 1.1.3-SNAPSHOT

Change-Id: Icb07589f5656292016bb1b0176dbe8b2ef9192f3",0,0,0,1,0,1,1,NA,NA
49942,I44dc4ddbe4b6ce778f094156e1f4433ee49d26d5,http://review.couchbase.org/#/c/49942,2,8dcddc9432ef123b4fb02149a31b3deacc3f279f,b2d917f3363ef94751c0fdc1c94efca4c6263098,1,21/04/15,21/04/15,55,JVMCBC-187: Properly encode keys with special chars.,"JVMCBC-187: Properly encode keys with special chars.

Motivation
----------
Keys with special characters that require more than one byte to
represent it have a different byte length than string length in
java.

In order to properly store those characters, the code needs
to take the encoded byte length rather than the originating
string length.

Modifications
-------------
The code has been modified so that the actual key length is
computed from the UTF-8 encoded byte array, rather from its
original string representation.

A test has been added to verify this assertion.

Result
------
Correct encoding of keys which require more bytes on the
wire than their java string representation characters.

Change-Id: I44dc4ddbe4b6ce778f094156e1f4433ee49d26d5",0,0,0,0,0,1,1,0,0
49945,I44dc4ddbe4b6ce778f094156e1f4433ee49d26d5,http://review.couchbase.org/#/c/49945,2,ae805845503ce935003b5271699599f190b09b4f,5979b7098a1ad8da86f7804b26b5e803dbff2522,1,21/04/15,21/04/15,55,JVMCBC-187: Properly encode keys with special chars.,"JVMCBC-187: Properly encode keys with special chars.

Motivation
----------
Keys with special characters that require more than one byte to
represent it have a different byte length than string length in
java.

In order to properly store those characters, the code needs
to take the encoded byte length rather than the originating
string length.

Modifications
-------------
The code has been modified so that the actual key length is
computed from the UTF-8 encoded byte array, rather from its
original string representation.

A test has been added to verify this assertion.

Result
------
Correct encoding of keys which require more bytes on the
wire than their java string representation characters.

Change-Id: I44dc4ddbe4b6ce778f094156e1f4433ee49d26d5
Reviewed-on: http://review.couchbase.org/49942
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,0,0
49986,I2a68f5ac78362b10b6336279ec1c702412a21542,http://review.couchbase.org/#/c/49986,2,f798c03443841bc630556979c0064674c022ed3a,04c0d201e679cfe8fc42fc2f00aa52ccd9bb15fa,1,21/04/15,21/04/15,28,JVMCBC-188: Add authentication headers for query.,"JVMCBC-188: Add authentication headers for query.

Motivation
----------
Since the query service now supports authentication, the client
needs to send the appropriate headers.

Modifications
-------------
Similar to views, the query service extracts the bucket and password
from the query and builds the HTTP BASIC AUTH header required.

The test has been modified to assert that the header is present.
Since the idle state message doesn't have an auth header, it is
omitted and doesn't add one.

Result
------
Password protected bucket support for the query service.

Change-Id: I2a68f5ac78362b10b6336279ec1c702412a21542",0,0,0,0,0,1,1,0,0
49988,I2a68f5ac78362b10b6336279ec1c702412a21542,http://review.couchbase.org/#/c/49988,2,58ed988be195534eed4c5750e1fa7171713684a8,c3b3a4809df6ea4540ce00c5e859d70b54da881b,1,21/04/15,21/04/15,28,JVMCBC-188: Add authentication headers for query.,"JVMCBC-188: Add authentication headers for query.

Motivation
----------
Since the query service now supports authentication, the client
needs to send the appropriate headers.

Modifications
-------------
Similar to views, the query service extracts the bucket and password
from the query and builds the HTTP BASIC AUTH header required.

The test has been modified to assert that the header is present.
Since the idle state message doesn't have an auth header, it is
omitted and doesn't add one.

Result
------
Password protected bucket support for the query service.

Change-Id: I2a68f5ac78362b10b6336279ec1c702412a21542
Reviewed-on: http://review.couchbase.org/49986
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,0,0
50156,I8574eebd475a00b71c37a41876a18616860b9c97,http://review.couchbase.org/#/c/50156,3,c3b3a4809df6ea4540ce00c5e859d70b54da881b,1ca49e1334ae07ad74250822bdc37d2cde26b006,0,23/04/15,23/04/15,9,JVMCBC-191: Log unknown status codes.,"JVMCBC-191: Log unknown status codes.

Motivation
----------
When the server returns an unknown status code, a log message with the
actual code needs to be written in order to properly debug the situation.

Modifications
-------------
Since the response status converter is the centralized class to handle
the decoding, it now WARN logs a message when it detects an unknown status
which will be converted into a generic FAILURE.

Result
------
Better debugging when an unknown status code is detected.

Change-Id: I8574eebd475a00b71c37a41876a18616860b9c97",0,0,0,0,0,1,1,NA,NA
50175,I8574eebd475a00b71c37a41876a18616860b9c97,http://review.couchbase.org/#/c/50175,2,cc8f6ba5dd27ec00aed55be7a7c0a7f89d7d54f9,23b76d87a3a49a01b334f9451a10c3860fd31e99,0,24/04/15,24/04/15,9,JVMCBC-191: Log unknown status codes.,"JVMCBC-191: Log unknown status codes.

Motivation
----------
When the server returns an unknown status code, a log message with the
actual code needs to be written in order to properly debug the situation.

Modifications
-------------
Since the response status converter is the centralized class to handle
the decoding, it now WARN logs a message when it detects an unknown status
which will be converted into a generic FAILURE.

Result
------
Better debugging when an unknown status code is detected.

Change-Id: I8574eebd475a00b71c37a41876a18616860b9c97
Reviewed-on: http://review.couchbase.org/50156
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,NA,NA
50177,I00c87049c80612c602b907d0818841151e5f0d76,http://review.couchbase.org/#/c/50177,3,139a88e32af42e1c4b5e4613c2837bb7d943277d,e353b581596367863f411febb8897fc462942ecd,1,24/04/15,24/04/15,39,WIP: load config on idle event.,"WIP: load config on idle event.

Change-Id: I00c87049c80612c602b907d0818841151e5f0d76",0,0,0,1,0,1,1,0,0
50179,I00c87049c80612c602b907d0818841151e5f0d76,http://review.couchbase.org/#/c/50179,2,700c9dd3d9523d08d3fbc747a470a9afdb5bf92b,83a8591ebb0523d7ec0b8152030d02969a3210ed,1,24/04/15,24/04/15,39,JVMCBC-192: Signal config reload on idle state key value event.,"JVMCBC-192: Signal config reload on idle state key value event.

Motivation
----------
When no or not much traffic is going through the bucket, it can
happen that config changes are not properly picked up (especially
adding nodes, since on node removal the socket is closed which
the heuristics pick up).

Following the resiliency pattern of routine workouts, we need
to make sure that proper configs are available even if not
much load (or no load at all) is going through the system.

Modifications
-------------
IdleState events from netty are intercepted in the KeyValueHandler
and a config reload is signalled to the endpoint which in turn
will trigger it up to the configuration handler.

In the couchbase+cccp bucket case, a new configuration will be
proactively loaded from one of the nodes in the cluster.

Result
------
Cluster changes are picked up even when no load at all is going
through the system for the CCCP case. In all other cases those
events are streamed over HTTP which has the same effect.

Change-Id: I00c87049c80612c602b907d0818841151e5f0d76
Reviewed-on: http://review.couchbase.org/50177
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,0,0
50182,I8bd9ee38228c337e4103c800deabc2a543de4aa6,http://review.couchbase.org/#/c/50182,3,b7718a8e78ff8bd9afd0a17a7413c7b734a1e689,5bc6cdc32eb52a09ba02e6122084c1ea10da8a44,1,24/04/15,24/04/15,10,Log WARN instead of printStackTrace.,"Log WARN instead of printStackTrace.

Motivation
----------
Errors should go to the proper logfiles instead of to STDOUT.

Modifications
-------------
All found printStackTrace calls are now logged instead of printed
to STDOUT.

Result
------
Errors are now found in the log files.

Change-Id: I8bd9ee38228c337e4103c800deabc2a543de4aa6",0,0,0,0,0,1,1,0,0
50183,I19b63c7efbbf94f47ed1652a909d027a357ea68d,http://review.couchbase.org/#/c/50183,2,5bc6cdc32eb52a09ba02e6122084c1ea10da8a44,4624b6cdf988ba6984584e54a6b1af0379c142bc,1,24/04/15,24/04/15,12,JVMCBC-193: Properly serialize subjects where needed.,"JVMCBC-193: Properly serialize subjects where needed.

Motivation
----------
Subjects need to be serialized when their on* methods are called
potentially from multiple threads in order to prevent concurrent
modifications.

Modifications
-------------
Call .toSerialized on the subjects where needed to properly
serialize the calls downstream.

Result
------
Preventing race conditions in concurrent on* calls.

Change-Id: I19b63c7efbbf94f47ed1652a909d027a357ea68d",0,0,0,0,0,1,1,0,0
50184,Ic70496e80f4c49f2d6a795ceea397ef4a0c8ac33,http://review.couchbase.org/#/c/50184,2,7da558f96fbe3f04aeb7a5be103def1a7071aba0,c1de26f9b1784724c42ae831ddb3440704b50a4b,1,24/04/15,24/04/15,2,JVMCBC-194: Avoid concurrent modifications on node removal.,"JVMCBC-194: Avoid concurrent modifications on node removal.

Motivation
----------
During node removal, the code (since it reuses the same set) is
subject to potential concurrent modification exceptions.

Modifications
-------------
By copying the set before iterating it, the concurrent modification
can be avoided.

Result
------
Safer code during reconfiguration.

Change-Id: Ic70496e80f4c49f2d6a795ceea397ef4a0c8ac33",0,0,0,0,0,1,1,0,0
50186,Ic70496e80f4c49f2d6a795ceea397ef4a0c8ac33,http://review.couchbase.org/#/c/50186,2,4f2fd4b866a20b43a3c4d2b5d14507503ea25d01,2bd01262bb99c7c90eafa70dc96f71a3441d808a,1,24/04/15,24/04/15,2,JVMCBC-194: Avoid concurrent modifications on node removal.,"JVMCBC-194: Avoid concurrent modifications on node removal.

Motivation
----------
During node removal, the code (since it reuses the same set) is
subject to potential concurrent modification exceptions.

Modifications
-------------
By copying the set before iterating it, the concurrent modification
can be avoided.

Result
------
Safer code during reconfiguration.

Change-Id: Ic70496e80f4c49f2d6a795ceea397ef4a0c8ac33
Reviewed-on: http://review.couchbase.org/50184
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,0,0
50187,I19b63c7efbbf94f47ed1652a909d027a357ea68d,http://review.couchbase.org/#/c/50187,2,6424d0df340420f5130e3d864d46cd2bf642c191,d96df6bb491d90b1657ceb8ed3bbc0d917c18892,1,24/04/15,24/04/15,12,JVMCBC-193: Properly serialize subjects where needed.,"JVMCBC-193: Properly serialize subjects where needed.

Motivation
----------
Subjects need to be serialized when their on* methods are called
potentially from multiple threads in order to prevent concurrent
modifications.

Modifications
-------------
Call .toSerialized on the subjects where needed to properly
serialize the calls downstream.

Result
------
Preventing race conditions in concurrent on* calls.

Change-Id: I19b63c7efbbf94f47ed1652a909d027a357ea68d
Reviewed-on: http://review.couchbase.org/50183
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,0,0
50272,Ib83679d1e7d8421d33ee099a4976f5d5338ab54e,http://review.couchbase.org/#/c/50272,3,13836315bd763a0264d4a6916fba3cf90054cb52,a4600251d3a676cfd7578a0c61e5e2a5d969e2f6,1,27/04/15,27/04/15,139,WIP: Resubscribe to done http stream.,"WIP: Resubscribe to done http stream.

Change-Id: Ib83679d1e7d8421d33ee099a4976f5d5338ab54e",0,0,0,1,0,1,1,0,0
50273,Ib83679d1e7d8421d33ee099a4976f5d5338ab54e,http://review.couchbase.org/#/c/50273,2,2633407847485cc85929cc866afb5c24d20f37ae,16d6ee076746fc60776dbbcb817df35ebde84852,1,27/04/15,27/04/15,139,JVMCBC-195: Resubscribe HTTP Config Stream.,"JVMCBC-195: Resubscribe HTTP Config Stream.

Motivation
----------
When a HTTP config stream is closed, the core needs to reconnect
if a subscription is still open to that bucket. This can happen
when the streaming node is failed over or removed and affects
memcached buckets on all server versions and couchbase buckets
on Server 2.2 and older.

Modifications
-------------
The code uses the observables repeatWhen clause to resubscribe
to the source observable if the stream is closed and a subscription
is still ongoing (the bucket has not been closed by the user).

Result
------
Better failure handling during failover or removal situations of
the attached http streaming node.

Change-Id: Ib83679d1e7d8421d33ee099a4976f5d5338ab54e
Reviewed-on: http://review.couchbase.org/50272
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,0,0
50410,I7ee69790892925862a041ed1d492489b5b4970de,http://review.couchbase.org/#/c/50410,2,11cd10e9bc3beb677197e12d3d932993deefe14e,c69dbf05abaa14bfdaafb440c74c396aa120d786,0,30/04/15,30/04/15,2,Prepare 1.2.0-dp Release,"Prepare 1.2.0-dp Release

Change-Id: I7ee69790892925862a041ed1d492489b5b4970de",0,0,0,1,0,1,1,NA,NA
50533,Ife3bf3456432a677e7c218f6ff2a6519e1639172,http://review.couchbase.org/#/c/50533,2,c69dbf05abaa14bfdaafb440c74c396aa120d786,6e983a806d64d639c802e4fd3ff17a4e23662f43,0,04/05/15,04/05/15,2,Set version back to snapshot,"Set version back to snapshot

Change-Id: Ife3bf3456432a677e7c218f6ff2a6519e1639172",0,0,0,1,0,1,1,NA,NA
50534,I822668c50336f4a20f97178061e76be802973472,http://review.couchbase.org/#/c/50534,2,160b42e77f3a2c8305bbae0e1379b79d438a4df8,f0fafddee0c323f09eb713aca0536e917244f6c6,0,04/05/15,04/05/15,2,JVMCBC-196: Update RxJava to 1.0.10,"JVMCBC-196: Update RxJava to 1.0.10

Motivation
----------
RxJava 1.0.10 ships with lots of bugfixes, and since we are moving
to a new 2.2.0 rx version anyways, it makes sense to keep it onto
the latest and greatest.

Change-Id: I822668c50336f4a20f97178061e76be802973472",0,0,0,0,0,1,1,NA,NA
50543,I9665dfb45ce851d257434e154c537207fbf06850,http://review.couchbase.org/#/c/50543,2,78a29377498f0f3b94774e181ff62a11e5496057,016db8fe974b9bb1afea163520d794514ff90195,0,04/05/15,04/05/15,2,Prepare for 1.1.3 release,"Prepare for 1.1.3 release

Change-Id: I9665dfb45ce851d257434e154c537207fbf06850",0,0,0,1,0,1,1,NA,NA
50706,I7cd8b12c070947201483d69d32da9cdd6a44a9d1,http://review.couchbase.org/#/c/50706,3,3b6a3844f59c32b7baaa378811de76ba80a518e3,04ef4fe7b98913f029dc140d6c6c1a3cea53ad75,1,07/05/15,11/05/15,235,JVMCBC-197: have keys passed in separately for ViewQuery,"JVMCBC-197: have keys passed in separately for ViewQuery

Change-Id: I7cd8b12c070947201483d69d32da9cdd6a44a9d1",0,0,1,1,0,1,1,1,1
50716,Idc42c3b478c823ac1ae50b09e8156b1abfcace82,http://review.couchbase.org/#/c/50716,2,919e92721c057ad35c74fd3d4cecb1f99c1d65f6,69c43faf213bbf08023ea5e912860c66750def62,1,07/05/15,11/05/15,36,JVMCBC-198: Populate BucketNodeLocator,"JVMCBC-198: Populate BucketNodeLocator

Motivation
----------
Because the code uses the nodeLocator field as part of the config
to select the proper subclass in jackson, it is not accessible through
the regular json accessors.

Modifications
--------------
Since every bucket has a specific locator, it is okay to just pass the
actual locator type up to the abstract document.

An assertion has been added to the unit tests to make sure it is properly
populated.

Result
------
The configs now have their proper locator set and not null.

Change-Id: Idc42c3b478c823ac1ae50b09e8156b1abfcace82",0,0,1,0,0,1,1,0,0
50840,I7ed6fabf7fa2ced4e6ea941ab4f6478d3b745af4,http://review.couchbase.org/#/c/50840,2,503a33e7718f84dcc82c8cd8a21957bdca4d5073,e9bfb4389cfa526c3d94d26701875fd9873d482d,1,11/05/15,11/05/15,235,JVMCBC-197: have keys passed in separately for ViewQuery,"JVMCBC-197: have keys passed in separately for ViewQuery

(backported from commit 5a02e0f3966e1d8088aeb802142848a8be313de0)

Motivation
----------
Recently, a change was made so that the core switches to POST when it
detects that a View query is too large. Body of the post is the keys
parameters (the only one allowed, and also the most probable culprit for
size), extracted for url and set as JSON.
Only problem is that the client url-encodes the keys, which isn't valid
when contained in JSON, so it fails in production.

Modifications
-------------
The ViewQueryRequest was changed to force getting the keys array as a
separate JSON string, not part of the ""query"" url.

ViewHandler now uses this separate info to decide if a switch to POST
should be made (in which case it injects the keys String into the JSON
object of the body) or if GET is still doable (in which case it encodes
the keys array via URLEncoder).

Added tests to validate this behavior and the ways the URL is built from
both query() and keys() (in the case of the GET).

Results
-------
Keys are now properly encoded by the core directly and work either in a
GET or a PUT.
No more JSON syntax error when querying a view with a large set of keys.

Change-Id: I7ed6fabf7fa2ced4e6ea941ab4f6478d3b745af4",0,0,0,0,0,1,1,1,1
50843,I9ce432c8e2487cb94ff7c452a7f100cbf1f6ad9f,http://review.couchbase.org/#/c/50843,2,e9bfb4389cfa526c3d94d26701875fd9873d482d,0eed5a3cb9783531fabdbf3af057137722718b9b,0,11/05/15,18/05/15,2,set version to 1.1.4-SNAPSHOT,"set version to 1.1.4-SNAPSHOT

Change-Id: I9ce432c8e2487cb94ff7c452a7f100cbf1f6ad9f",0,0,1,1,0,1,1,NA,NA
51213,I923bce5d4ba49e338355910083c53e5971f5404f,http://review.couchbase.org/#/c/51213,2,eac68c26d19073c5a1965805896a24fcca932532,b391147ffdc860d647dad5d63397f2fde4685d4d,0,19/05/15,19/05/15,4,JVMCBC-199: Deal with HTTP 400 on query response.,"JVMCBC-199: Deal with HTTP 400 on query response.

Motivation
----------
If the user supplied query is wrong, under certain conditions the
query server returns with a 400 response.

Modifications
-------------
Map the http 400 (bad request) to a proper error message that inside
the SDK.

Result
------
No ""Unknown ResponseStatus with Protocol HTTP: 400"" warning anymore
and a proper status code used.

Change-Id: I923bce5d4ba49e338355910083c53e5971f5404f",0,0,0,0,0,1,1,NA,NA
51214,I923bce5d4ba49e338355910083c53e5971f5404f,http://review.couchbase.org/#/c/51214,2,f0a2b72a5e3e977f06ebee8c7d3f9a5517e15344,bd41755b4f6f50b5e81fea36aad8ebe967b446a2,0,19/05/15,19/05/15,4,JVMCBC-199: Deal with HTTP 400 on query response.,"JVMCBC-199: Deal with HTTP 400 on query response.

Motivation
----------
If the user supplied query is wrong, under certain conditions the
query server returns with a 400 response.

Modifications
-------------
Map the http 400 (bad request) to a proper error message that inside
the SDK.

Result
------
No ""Unknown ResponseStatus with Protocol HTTP: 400"" warning anymore
and a proper status code used.

Change-Id: I923bce5d4ba49e338355910083c53e5971f5404f",0,0,0,0,0,1,1,NA,NA
51363,Idd38b59f9b521e8db5afb100bc41b1a5b1ac6776,http://review.couchbase.org/#/c/51363,3,c2cd0cefb0ff421d22d38125cd466ee42be59ee2,c8e1d7cc52672fc617b6351ee474cd555074eb55,1,22/05/15,28/05/15,384,JCBC-773 shutdown coreScheduler properly,"JCBC-773 shutdown coreScheduler properly

WIP:
 - will have to move jira ticket to JVMCBC
 - will have to flesh out this commit message
 - needs test for leaking env + support for setting hooks from Builder

Change-Id: Idd38b59f9b521e8db5afb100bc41b1a5b1ac6776",0,0,1,0,0,1,1,0,0
51463,I396c7f563e41f24c2e3c37953ac5140a50efd7e0,http://review.couchbase.org/#/c/51463,2,f19f5e9914fedfc2ca55d5834a7f34e068646e0d,f424618e4164ad97c579645b96ec965aee466fcf,1,27/05/15,28/05/15,220,JVMCBC-202: make Observe eager and resilient to failed over replica,"JVMCBC-202: make Observe eager and resilient to failed over replica

Motivation
----------
Observe should succeed as soon as minimal criteria are met.
It also should be resilient to X replica out of N being unavailable
(because in fail-over) and be able to succeed the ReplicateTo count
Y <= N - X.

For instance, with 3 replicas A B C configured, A being unavailable and
B being laggy, a ReplicateTo.ONE should return immediately after C
responds (not wait for B nor fail because of A).

Modifications
-------------
State of the Observe is now represented by an immutable ObserveItem. It
is in charge of tracking replicated/persisted counts, as well as holding
the logic to map from an ObserveResponse to these counters. It can be
check()ed vs ReplicateTo/PersistTo criteria.

Instead of aggregating responses with a toList() (which will block until
all responses are received), a scan is performed that aggregate into
ObserveItems (both final and intermediate).

This allows to take the shortcut to success as soon as a good enough
state is observed.

Also failed nodes and errors will be delayed (via mergeDelayErrors) so
that other available nodes have a chance to be taken into account, and
potentially lead to a good enough observed state. This means that if
enough replicas are remaining available for the ReplicateTo factor to be
met for instance, then the observe will succeed.

Results
-------
When there is a failed over, unavailable, replica and an available one,
an observe of ReplicateTo.ONE will succeed, just considering response
from the available replica.

Change-Id: I396c7f563e41f24c2e3c37953ac5140a50efd7e0",0,0,0,0,0,1,1,0,0
51510,Ie068f5280352293566efec23f3141ce5a75e6d58,http://review.couchbase.org/#/c/51510,2,68b326e0c01b901a381dee770d09eb6fa34dd08a,965762334384eccc70e74e8d5797687e09bab8f9,1,28/05/15,29/05/15,225,JVMCBC-202: make Observe eager and resilient to failed over replica,"JVMCBC-202: make Observe eager and resilient to failed over replica

(backported by cherry pick from commit 1f86ea3)

Motivation
----------
Observe should succeed as soon as minimal criteria are met.
It also should be resilient to X replica out of N being unavailable
(because in fail-over) and be able to succeed the ReplicateTo count
Y <= N - X.

For instance, with 3 replicas A B C configured, A being unavailable and
B being laggy, a ReplicateTo.ONE should return immediately after C
responds (not wait for B nor fail because of A).

Modifications
-------------
State of the Observe is now represented by an immutable ObserveItem. It
is in charge of tracking replicated/persisted counts, as well as holding
the logic to map from an ObserveResponse to these counters. It can be
check()ed vs ReplicateTo/PersistTo criteria.

Instead of aggregating responses with a toList() (which will block until
all responses are received), a scan is performed that aggregate into
ObserveItems (both final and intermediate).

This allows to take the shortcut to success as soon as a good enough
state is observed.

Also failed nodes and errors will be delayed (via mergeDelayErrors) so
that other available nodes have a chance to be taken into account, and
potentially lead to a good enough observed state. This means that if
enough replicas are remaining available for the ReplicateTo factor to be
met for instance, then the observe will succeed.

Results
-------
When there is a failed over, unavailable, replica and an available one,
an observe of ReplicateTo.ONE will succeed, just considering response
from the available replica.

Change-Id: Ie068f5280352293566efec23f3141ce5a75e6d58",0,0,0,0,0,1,1,0,0
51562,I168977822a81207330d2113980621f7deacf9136,http://review.couchbase.org/#/c/51562,2,1aa5edc453435d974e0eef6aea465c8ae1f154ef,931bb61f63c18d3c0840486fc877e6d4fd75037a,1,29/05/15,29/05/15,384,JVMCBC-201: shutdown coreScheduler properly,"JVMCBC-201: shutdown coreScheduler properly

(backported by cherry pick from commit b087250)

Motivation
----------
As described in JCBC-773, when a DefaultCoreEnvironment without custom
ioPool nor coreScheduler is shutdown(), the coreScheduler threads are
not killed. This can lead to a thread growth when creating and closing
multiple environments.

Also, the ioPool is cleaned up even if it was user-provided, which isn't
good since user-provided ioPool could be reused somewhere else. The user
should be in charge of cleaning it in this case.

Modifications
-------------
Added a ShutdownHook interface.

IoPool and CoreScheduler have their own implementation of ShutdownHook,
which gets called when said resources have been constructed by the env,
not provided by the user.

When providing a custom ioPool or scheduler, the user is encouraged to
also provide a corresponding ShutdownHook (the builder setter without a
hook is deprecated).

Shutdown result will be reduced from the ShutdownHooks of ioPool and
scheduler, if any.

The shutdown field in DefaultCoreScheduler was never set to true and as
such has been removed.

Added unit test to detect thread count growth in a uncustomized env.

Result
------
Internal SDK threads instanciated by it are now properly killed once the
shutdown() method is called.

Change-Id: I168977822a81207330d2113980621f7deacf9136",0,0,0,0,0,1,1,0,0
51564,I0856e530a8c4b6b312fe9efbf2784813c6c7e379,http://review.couchbase.org/#/c/51564,2,993af5d8544fd28d5e6d33bcabb78ad1f8f088b5,c2a692e5094ade104597c4ca428f9e1ee691bbf2,0,29/05/15,29/05/15,2,fix failing test related to 400 mapping,"fix failing test related to 400 mapping

see commit 85bf607c2e4b1c20842af8c7626edae1dfa2207e
see JVMCBC-199

Change-Id: I0856e530a8c4b6b312fe9efbf2784813c6c7e379",0,0,0,0,0,1,1,NA,NA
51570,I5bb766e6df46f160caf5ba50ed93cc188c304d33,http://review.couchbase.org/#/c/51570,2,59ee4217bb601d099b6e3ac66f1ef0d42396ee17,8c83c15ccbd82d3384a7247e3ad61f3da1ae6322,0,29/05/15,29/05/15,2,fix failing test related to 400 mapping,"fix failing test related to 400 mapping

(backported by cherry pick from 20ccde5b6325a998219a1ebd4b8367272af45d6c)

see commit 85bf607c2e4b1c20842af8c7626edae1dfa2207e
see JVMCBC-199

Change-Id: I5bb766e6df46f160caf5ba50ed93cc188c304d33",0,0,0,0,0,1,1,NA,NA
51757,I5d2ade2c8416b4b696ec88d6bfd94b4dec4cd214,http://review.couchbase.org/#/c/51757,2,7b153d2bb2484958b72445f64a22197a5d929458,6a333aadee0ecd30ff48fcdb58ff7090f4adc217,1,05/06/15,11/06/15,113,JVMCBC-203: replace loaded services Set with bitset in config.,"JVMCBC-203: replace loaded services Set with bitset in config.

Motivation
----------
As part of a larger effort to make the hot code path even faster,
we can make some hot methods even more performant.

Modifications
-------------
The Set which contains all the currently enabled service types
does not need to use HashSet lookups, instead it can be projected
onto a bitmap. The runtime lookup results in one logical AND which
can't be done any faster.

Result
------
Less code in the hot code path when looking up if the service
is enabled on the current configuration.

Change-Id: I5d2ade2c8416b4b696ec88d6bfd94b4dec4cd214",0,0,1,0,0,1,1,0,0
51863,Ib83daac9572a646ad6599f4bcd442968cb954f7f,http://review.couchbase.org/#/c/51863,3,7ca4b460f91a48ee6598c2581a17e6cbdcc676a8,0f3e1a91fba6d866fcdb8b876ebd980046859631,1,09/06/15,11/06/15,6,JVMCBC-204: flush requests even if Locator returns null,"JVMCBC-204: flush requests even if Locator returns null

Motivation
----------
the RequestHandler only send SignalFlush when the ringbuffer's batch is
exhausted, at this point triggering requests to be sent by Netty.

Problem is, if the Locator.locate method returns null at the last
request in batch, this step is skipped. It means it will delay sending
requests on the wire until next request is queued.

This is notably visible when doing Observe (eg. on an upsert with a
durability constraint ReplicateTo.ONE, where the replication factor is 2
and one of the 2 replicas is failed over): the Locator returns null for
the failed over node and the other ObserveRequests don't get flushed to
the wire.

Modifications
-------------
RequestHandler now sends the SignalFlush even when the last request in
batch couldn't have a node located for it.

Results
-------
Better resilience to a node being failed over.

In the context of Observe, with FailFast strategy the
ReplicaNotConfiguredException (replica not available) can surface to the
user IF the replication was not quick enough for the first set of
ObserveRequests to see it. In BestEffort, this shouldn't happen. On the
other hand if the mutation is observed in enough replicas on first pass,
even the FailFast strategy will now report success (the unavailable one
is ignored since otherwise other nodes can satisfy the constraint).

Change-Id: Ib83daac9572a646ad6599f4bcd442968cb954f7f",0,0,0,0,0,1,1,0,0
51905,Ib83daac9572a646ad6599f4bcd442968cb954f7f,http://review.couchbase.org/#/c/51905,3,08776169af0a3a90193a39cfee90379e7a341f60,20ffd22c3c37b6ba77fe77cb0ef1bfce3913f270,1,10/06/15,11/06/15,6,JVMCBC-204: flush requests even if Locator returns null,"JVMCBC-204: flush requests even if Locator returns null

(backported by cherry pick from commit e1e85d8)

Motivation
----------
the RequestHandler only send SignalFlush when the ringbuffer's batch is
exhausted, at this point triggering requests to be sent by Netty.

Problem is, if the Locator.locate method returns null at the last
request in batch, this step is skipped. It means it will delay sending
requests on the wire until next request is queued.

This is notably visible when doing Observe (eg. on an upsert with a
durability constraint ReplicateTo.ONE, where the replication factor is 2
and one of the 2 replicas is failed over): the Locator returns null for
the failed over node and the other ObserveRequests don't get flushed to
the wire.

Modifications
-------------
RequestHandler now sends the SignalFlush even when the last request in
batch couldn't have a node located for it.

Results
-------
Better resilience to a node being failed over.

In the context of Observe, with FailFast strategy the
ReplicaNotConfiguredException (replica not available) can surface to the
user IF the replication was not quick enough for the first set of
ObserveRequests to see it. In BestEffort, this shouldn't happen. On the
other hand if the mutation is observed in enough replicas on first pass,
even the FailFast strategy will now report success (the unavailable one
is ignored since otherwise other nodes can satisfy the constraint).

Change-Id: Ib83daac9572a646ad6599f4bcd442968cb954f7f",0,0,0,0,0,1,1,0,0
51974,I5dd15c8cb5767fcb7b3152216ad215cda0c1ddd8,http://review.couchbase.org/#/c/51974,4,746e4ceaa6f0f8ad9ddae790625d728b2146e9c2,277f8893048c83ef125b6654e3e0b724f9a09dce,1,12/06/15,15/06/15,503,[WIP] JVMCBC-205: Support HELLO command and feature negotiation.,"[WIP] JVMCBC-205: Support HELLO command and feature negotiation.

Motivation
----------

Modifications
-------------

Result
------

Change-Id: I5dd15c8cb5767fcb7b3152216ad215cda0c1ddd8",0,1,1,0,1,1,1,1,1
51978,Ie59b9c52dc7d1eb505de2e240fcff18695a38a6f,http://review.couchbase.org/#/c/51978,4,277f8893048c83ef125b6654e3e0b724f9a09dce,6d9edbab1af228e880682bb8335c6109e5fcfe06,1,12/06/15,15/06/15,104,JVMCBC-206: Allow to configure TCP_NODELAY,"JVMCBC-206: Allow to configure TCP_NODELAY

Motivation
----------
For better tuning of user's systems, it should be possible to
tune the TCP_NODELAY (which is enabled by default) as needed.

In addition, since this changeset is based on the new HELLO
command, it will ask the server to set the same, making sure
that whatever is chosen is set on both client and server.

Modifications
-------------
The option is now configurable on the environment as usual and
the changeset makes sure that the Endpoint is properly configured.

In addition the HELLO feature is set to the same value so if the
server supports it, it will be enabled/disabled.

Result
------
Tunable TCP_NODELAY on the client, and if supported, on the server
side.

Change-Id: Ie59b9c52dc7d1eb505de2e240fcff18695a38a6f",0,1,1,0,0,1,1,0,0
51984,I713211869a0348ac784b450f82271a41d922c203,http://review.couchbase.org/#/c/51984,3,0ab5a0829d95e2e9be4d316af42c955c5dc59e28,21bace348ff49118fef933ba93c17b3a86eb7427,1,12/06/15,15/06/15,163,JVMCBC-207: Allow to configure mutation metadata.,"JVMCBC-207: Allow to configure mutation metadata.

Motivation
----------
This changeset builds on the previous ones and allows to explicitly
turn additional metadata off/on.

Modifications
-------------
A new environment option has been added which allows to explicitly
enable mutation metadata. The integration tests have been extended
to test for the returned metadata.

Result
------
Mutation metadata can now be turned on explicitly

Change-Id: I713211869a0348ac784b450f82271a41d922c203",0,0,1,0,0,1,1,0,0
51999,Ie1c23263cebf424051d855406a88246afefb45b8,http://review.couchbase.org/#/c/51999,3,10b75ba57572ad858785c96c7f6b5749b07cbe78,55208fd3bc157136d1fb0a83ea72696bf8d278f2,1,12/06/15,15/06/15,224,JVMCBC-205: Clarify MutationToken,"JVMCBC-205: Clarify MutationToken

Motivation
----------
The MutationDescriptor, while accurate, should be replaced with a
more descriptive name: MutationToken. In addition, the vbucket id
needs to be added in order to be useful for RYOW.

Modifications
-------------
Renaming of the value object to MutationToken, as well as all related
methods and accessors.

The vbucket ID has been added as a member of the value object.

Result
------
Consistent naming across SDKs, as well as the addition of the vbucket
ID to the value object.

Change-Id: Ie1c23263cebf424051d855406a88246afefb45b8",0,0,1,0,0,1,1,0,0
52098,I7ca2e583e66748cbc2b9472aedc2f0d3615372b4,http://review.couchbase.org/#/c/52098,3,55208fd3bc157136d1fb0a83ea72696bf8d278f2,8999e28e30f56621bdc4a1bf097ee88e3348fb83,1,16/06/15,16/06/15,19,JVMCBC-208: avoid repeated isTraceEnabled calls.,"JVMCBC-208: avoid repeated isTraceEnabled calls.

Motivation
----------
Hot spot profiling has revealed that repeated isTraceEnabled
calls on the hot code path spend more time in CPU than needed.

The value should be cached, with the drawback of not being
able to change the log level at runtime. While this is
suboptimal, other parts of the system also don't support
that and the whole runtime idea needs to be revisited
at some point. For now, performance matters more.

Modifications
-------------
Cache the isTraceEnabled call in the handler at
construction time.

Result
------
Less CPU cycles spent in the repeated calls.

Change-Id: I7ca2e583e66748cbc2b9472aedc2f0d3615372b4",0,0,0,0,0,1,1,0,0
52157,Ib45b8400f556f201a39c7b346c970836e116fd78,http://review.couchbase.org/#/c/52157,2,8999e28e30f56621bdc4a1bf097ee88e3348fb83,f2f0ad690713ae13228d05a29e686107c235dc0e,1,17/06/15,17/06/15,7,JCBC-778: Do not try to interpret vbucket as status,"JCBC-778: Do not try to interpret vbucket as status

Motivation
----------
DCPHandler might generate warnings about unknown status code. The reason
of these warnings is that the handler processes not only responses, but
also DCP requests, which carry vBucket ID at that offset.

Modification
------------
Do not extract message status until it really needed

Result
------
No warnings

Change-Id: Ib45b8400f556f201a39c7b346c970836e116fd78",0,0,0,0,0,1,1,0,0
52219,I586ced07a2ac3fc43f21b731ca80d3de80b4a098,http://review.couchbase.org/#/c/52219,5,f2f0ad690713ae13228d05a29e686107c235dc0e,43cc37559f069a8dae1e462c988ab8a737bfaca0,1,18/06/15,18/06/15,56,JVMCBC-209: Avoid race condition between disconnect and reconnect.,"JVMCBC-209: Avoid race condition between disconnect and reconnect.

Motivation
----------
There is a (small) chance that both the disconnect and a reconnect
initiated by a closed socket race each other and the endpoint,
despite being explicitly disconnected, ends up in a reconnect
loop.

Modifications
-------------
The AbstractEndpoint now explicitly sets a volatile disconnected
flag which is always checked before a reconnect cycle is initiated.
This prevents the chance of states being messed up and racing
each other in the disconnect (and therefore, terminal) case.

In addition, to make sure that all states are properly observed
the state machine's observable is also serialized (this makes
sure that event transitions from multiple threads are observed
in the right order).

Result
------
Disconnect calls are now more strictly enforced, preventing
""endless"" reconnects. Also, the state machine streams are
now properly serialized.

Change-Id: I586ced07a2ac3fc43f21b731ca80d3de80b4a098",0,1,0,0,0,1,1,0,0
52220,I586ced07a2ac3fc43f21b731ca80d3de80b4a098,http://review.couchbase.org/#/c/52220,3,408208615eac84f18e16fdfd6c1c29b6ae018743,958af630cb39d90cda255fe596d9ffad89d310df,1,18/06/15,18/06/15,56,JVMCBC-209: Avoid race condition between disconnect and reconnect.,"JVMCBC-209: Avoid race condition between disconnect and reconnect.

Motivation
----------
There is a (small) chance that both the disconnect and a reconnect
initiated by a closed socket race each other and the endpoint,
despite being explicitly disconnected, ends up in a reconnect
loop.

Modifications
-------------
The AbstractEndpoint now explicitly sets a volatile disconnected
flag which is always checked before a reconnect cycle is initiated.
This prevents the chance of states being messed up and racing
each other in the disconnect (and therefore, terminal) case.

In addition, to make sure that all states are properly observed
the state machine's observable is also serialized (this makes
sure that event transitions from multiple threads are observed
in the right order).

Result
------
Disconnect calls are now more strictly enforced, preventing
""endless"" reconnects. Also, the state machine streams are
now properly serialized.

Change-Id: I586ced07a2ac3fc43f21b731ca80d3de80b4a098",0,0,0,0,0,1,1,0,0
52225,Ic3c210b2f89020128a9d6e9436f10f3027c69225,http://review.couchbase.org/#/c/52225,2,26782ca40001cc5095ced52a80648f15c4e39274,31cc4cde24d5d38f5ff95427e7c990389b6a5015,0,18/06/15,18/06/15,18,JVMCBC-201: Ignore IO pool errors on shutdown.,"JVMCBC-201: Ignore IO pool errors on shutdown.

Motivation
----------
When onComplete is called on the subscriber, it can be the case that
it ends up on the computation pool, which is also shut down
concurrently.

Modifications
-------------
Errors are properly ignored during pool shutdown, since the only
important task is to get rid of the threads. Any race conditions
that throw errors and confuse users/spam logs are ignored on
purpose.

Result
------
No confusing errors on shutdown.

Change-Id: Ic3c210b2f89020128a9d6e9436f10f3027c69225",0,0,0,0,0,1,1,NA,NA
52226,Ic3c210b2f89020128a9d6e9436f10f3027c69225,http://review.couchbase.org/#/c/52226,2,8a07bc64288d07ab3796c6ed604a08f2b890fd91,1fbf428d62fb419a42f20b543ca70044be885fe9,0,18/06/15,18/06/15,18,JVMCBC-201: Ignore IO pool errors on shutdown.,"JVMCBC-201: Ignore IO pool errors on shutdown.

Motivation
----------
When onComplete is called on the subscriber, it can be the case that
it ends up on the computation pool, which is also shut down
concurrently.

Modifications
-------------
Errors are properly ignored during pool shutdown, since the only
important task is to get rid of the threads. Any race conditions
that throw errors and confuse users/spam logs are ignored on
purpose.

Result
------
No confusing errors on shutdown.

Change-Id: Ic3c210b2f89020128a9d6e9436f10f3027c69225",0,0,0,0,0,1,1,NA,NA
52228,If4ec2117c087519316c9d96003c789e78edead34,http://review.couchbase.org/#/c/52228,2,1fbf428d62fb419a42f20b543ca70044be885fe9,966e6e00fb23a23854a96792b2ff1fadd60a4630,0,18/06/15,19/06/15,22,JVMCBC-210: Upgrade dependencies to their latest bugfix versions.,"JVMCBC-210: Upgrade dependencies to their latest bugfix versions.

	- RxJava: 1.0.10 -> 1.0.12
	- Netty: 4.0.26 -> 4.0.28
	- Jackson: 2.5.2 -> 2.5.4
	- Junit: 4.11 -> 4.12
	- Mockito: 1.9.5 -> 1.10.19

Change-Id: If4ec2117c087519316c9d96003c789e78edead34",0,0,0,0,0,1,1,NA,NA
52230,I8b1b8a48057a1af3cb541f5dd663c9b74a97c227,http://review.couchbase.org/#/c/52230,4,f951f2e66d4f3a8da16e6f418a9aba846e13f8c6,69467ae4f35962742ac1f9339a195038b186d471,1,18/06/15,23/06/15,66,WIP: Fix replica read with downed node,"WIP: Fix replica read with downed node

Change-Id: I8b1b8a48057a1af3cb541f5dd663c9b74a97c227",0,1,1,1,0,1,1,0,0
52431,I5776e9c449e959065ea94052cb15a16f7207ba6f,http://review.couchbase.org/#/c/52431,2,150a4ecb539bfb423b475068e1f81d7c67e8026e,706d829065bbd883ea4854d86841fed9c5469d93,0,23/06/15,23/06/15,4,JVMCBC-210: Upgrade Netty to 4.0.29,"JVMCBC-210: Upgrade Netty to 4.0.29

Change-Id: I5776e9c449e959065ea94052cb15a16f7207ba6f",0,0,0,1,0,1,1,NA,NA
52475,I6924ef882f275e9f58c092d87e8e782560455fbb,http://review.couchbase.org/#/c/52475,3,adc190636d22a765e98c7c0fe21c269dbc741a90,b7215d7c1b85ff00ee70c7730850e5c58423cc5e,1,24/06/15,26/06/15,88,JVMCBC-213: Publish a ConfigUpdatedEvent on the event bus,"JVMCBC-213: Publish a ConfigUpdatedEvent on the event bus

Motivation
----------
Certain applications might want to react every time a new configuration
is published, and it also helps during debugging and development sessions
(for example even if a rebalance is going on, no new config is published).

The event is not as spammy, since deduplication happens upfront, based
on the revid.

Modifications
-------------
A new event (ConfigUpdatedEvent) has been added and the RequestHandler
now publishes the event right after applying the configuration (which
takes precedence of course).

Result
------
New configuration events can be correlated and verified.

Change-Id: I6924ef882f275e9f58c092d87e8e782560455fbb",0,0,0,0,0,1,1,0,0
52476,Iadff26672c2cafc3f49c38ed7c9fce3811fb6c04,http://review.couchbase.org/#/c/52476,4,5fd1d851cf1d3235d1f260700ff74405de5b60c9,ac56f9d36732eb3c9d0fdb223ea0e4e2606c22e4,1,24/06/15,30/06/15,30,JVMCBC-214: Add hasSubscribers method to the EventBus,"JVMCBC-214: Add hasSubscribers method to the EventBus

Motivation
----------
If publishers can check upfront wheter there is a subscriber listening
on the other end, creating events can be potentially avoided.

Modifications
-------------
The interface has been extended and the event bus implementation publishes
the subscriber count through a boolean.

Result
------
More flexibility on the publisher side to eventually avoid expensive
event creation.

Change-Id: Iadff26672c2cafc3f49c38ed7c9fce3811fb6c04",0,1,1,0,0,1,1,0,0
52477,I7b7812b8fb51c9d13c0337a5f0583b3568bce0b5,http://review.couchbase.org/#/c/52477,2,c53c8b5549a4e352de3e079cb59ce5ce4e502808,d9f7ba7f6d4413b32c2f4275cc068934da722c76,1,24/06/15,26/06/15,46,JVMCBC-215: Let Handlers expose their ServiceType,"JVMCBC-215: Let Handlers expose their ServiceType

Motivation
----------
In preparation for the extended metric support, it is key
that each handler exposes the service type so it can be
stitched together later in a consistent manner.

Modifications
-------------
The AbstractGenericHandler defines an abstract method and all
handler implementations (including a mock test) implement them
accordingly.

Result
------
Each handler can now be properly identified by its service
type.

Change-Id: I7b7812b8fb51c9d13c0337a5f0583b3568bce0b5",0,0,0,0,0,1,1,0,0
52536,Ib45b8400f556f201a39c7b346c970836e116fd78,http://review.couchbase.org/#/c/52536,2,87003ea42cde86b4bd25249ec3fcedfa08d5e363,16e8d287f51be2fbffafaac6c12e1a0b200fd7d9,1,25/06/15,25/06/15,7,JCBC-778: Do not try to interpret vbucket as status,"JCBC-778: Do not try to interpret vbucket as status

Motivation
----------
DCPHandler might generate warnings about unknown status code. The reason
of these warnings is that the handler processes not only responses, but
also DCP requests, which carry vBucket ID at that offset.

Modification
------------
Do not extract message status until it really needed

Result
------
No warnings

Change-Id: Ib45b8400f556f201a39c7b346c970836e116fd78
Reviewed-on: http://review.couchbase.org/52157
Tested-by: Sergey Avseyev <sergey.avseyev@gmail.com>
Reviewed-by: Michael Nitschinger <michael.nitschinger@couchbase.com>",0,0,0,0,0,1,1,0,0
52539,I07cf29a662862620fda3558bf45ab15ed178895e,http://review.couchbase.org/#/c/52539,2,542075be28fd364b94ef17ffa74ea4735d70bdb1,34aa17a32fc903f368e569e7128a9f7bc2f72e23,1,25/06/15,26/06/15,62,JVMCBC-211: Reject replica gets to downed partition quickly.,"JVMCBC-211: Reject replica gets to downed partition quickly.

Motivation
----------
When a replica get request comes along, and the client knows
based on its configuration that the vbucket is down (-1), it
can provide that information explicitly to the caller.

Modifications
-------------
Addition of a new ReplicaNotAvailableException, which is now
thrown instead of the ambiguous ReplicaNotConfiguredException
to clearly indicate that the replica partition is not
available at this point.

The locator has been adapted to throw the proper ones, depending
on the condition.

Result
------
The caller can quickly identify that the replica is not available,
for example to skip those and just return the replicas that
answered in the meantime.

Change-Id: I07cf29a662862620fda3558bf45ab15ed178895e",0,0,0,0,0,1,1,0,0
52825,I1853ad4ea23ac0ec4e824759afc0601810643889,http://review.couchbase.org/#/c/52825,4,cf7422fb9a77f166a8b0dc1841ff45e79bae4bbe,3ef4b314d0e886fe12528471c931f175081ecd7f,1,03/07/15,03/07/15,90,JVMCBC-216: Replace Atomic* with plain volatile if possible.,"JVMCBC-216: Replace Atomic* with plain volatile if possible.

Motivation
----------
In a few places, AtomicReferences and similar are only used to wrap objects
with plain get() set() semantics. Since those methods are only facades over
volatile stores and reads, they can be omitted and replaced with plain volatiles.

Modifications
-------------
In all places where the code uses atomic* classes and only uses get() and set()
on them, they have been swapped out with plain volatiles instead.

Result
------
No unnecessary use of atomic classes.

Change-Id: I1853ad4ea23ac0ec4e824759afc0601810643889",0,1,0,0,0,1,1,0,0
52861,Id4e86b0cd3d84303471da9c187bf8ca377d04eb6,http://review.couchbase.org/#/c/52861,3,3ef4b314d0e886fe12528471c931f175081ecd7f,a4138de16ee9ae889bd65772967b952fbec4e0cb,1,06/07/15,06/07/15,4,Fix typo,"Fix typo

Change-Id: Id4e86b0cd3d84303471da9c187bf8ca377d04eb6",0,0,0,1,0,1,1,0,0
52862,I869245c0f7ae0adb0ab164dd093967bfea34ec65,http://review.couchbase.org/#/c/52862,2,3492b66d16ccca449f5a67882af788755e4885fc,3434ce31ed87c64a00e1757248cda7ee19cbd672,1,06/07/15,06/07/15,10,Implement toString() for DCP messages,"Implement toString() for DCP messages

Change-Id: I869245c0f7ae0adb0ab164dd093967bfea34ec65",0,0,0,1,0,1,1,0,0
52863,I24ec2cefe82ab98073cb0acb489356f2f38a486b,http://review.couchbase.org/#/c/52863,3,374f9730a938e056e2e962db4fb06886c4470793,c5d60efcadfb347b24807abdc8eb9f4fad135d1b,1,06/07/15,06/07/15,18,Expose flags in SnapshotMarkerMessage,"Expose flags in SnapshotMarkerMessage

Change-Id: I24ec2cefe82ab98073cb0acb489356f2f38a486b",0,0,0,1,0,1,1,0,0
52864,I0b906342df805581aaffb8852826a5874fae80b9,http://review.couchbase.org/#/c/52864,6,b18badfceede8875964233b6d25af9dcda065e2b,940c4e40003f878f4c592e9ba1dce72ae89022c7,1,06/07/15,07/07/15,420,API to open DCP feed,"API to open DCP feed

Motivation
----------
To build anything atop DCP there should be common code for handing
stream state.

Modification
------------
Implement classes for keeping and managing state of DCP streams.

Result
------
Common code can be reused among DCP applications.

Change-Id: I0b906342df805581aaffb8852826a5874fae80b9",0,1,0,0,0,1,1,1,1
52904,Ic8e33dd2d688da31f70a80bd53a866cb84898475,http://review.couchbase.org/#/c/52904,2,987fff835c04488601f287f4cf319cf8332e44d9,cda466595d5eba753b3b1604958214aa87e343bb,0,07/07/15,07/07/15,2,Prepare 1.1.4 Release,"Prepare 1.1.4 Release

Change-Id: Ic8e33dd2d688da31f70a80bd53a866cb84898475",0,0,0,1,0,1,1,NA,NA
53067,I462ee177c312aaad344cd31b7205b77a2314e118,http://review.couchbase.org/#/c/53067,2,c9c30e13dbd405156b0c66b8c76149373896919d,5ea45ed0ffecfb9dbc50cb87d774f649fcc1aed0,1,10/07/15,10/07/15,61,JVMCBC-222: Support MDS for Memcached Buckets,"JVMCBC-222: Support MDS for Memcached Buckets

Motivation
----------
To make different service types (MDS - Multi-Dimensinal-Scalability) work with
memcached buckets, the code needs to make sure that only data nodes are included
in the ketama hash computation.

Modifications
-------------
The code which populates the ketama node list now takes the exposed service type
into account and only uses those who include the BINARY service type.

A unit test has been added to verify that.

Result
------
MDS is now also supported for memcached buckets.

Change-Id: I462ee177c312aaad344cd31b7205b77a2314e118",0,0,0,0,0,1,1,0,0
53452,I1d0347d9c40e26c8baf9326a09b472d287feef8b,http://review.couchbase.org/#/c/53452,2,5ea45ed0ffecfb9dbc50cb87d774f649fcc1aed0,9294319910c92a56c262d260f4de75a15970d378,0,21/07/15,21/07/15,4,JVMCBC-210: Upgrade RxJava to 1.0.13,"JVMCBC-210: Upgrade RxJava to 1.0.13

Motivation
----------
1.0.13 brings lots of bugfixes and enhancements, so on time before
1.2.0 we should bump to the latest and greatest.

Change-Id: I1d0347d9c40e26c8baf9326a09b472d287feef8b",0,0,0,0,0,1,1,NA,NA
53453,I0d8b45204e852cfd915fe9d368fcf0e974fb731a,http://review.couchbase.org/#/c/53453,2,9294319910c92a56c262d260f4de75a15970d378,b5b9830d250243390c752b3a064569fbc37988e6,1,21/07/15,21/07/15,4,Avoid flaky tests on environment shutdown threads.,"Avoid flaky tests on environment shutdown threads.

Motivation
----------
When a thread is not existent anymore its info is null, which can
lead to (depending on thread states) to NPEs in tests which should
just be ignored.

Change-Id: I0d8b45204e852cfd915fe9d368fcf0e974fb731a",0,0,0,0,0,1,1,0,0
53455,I0b1193c821025ea77012b3a9c9d6ce15a82d7a00,http://review.couchbase.org/#/c/53455,2,b5b9830d250243390c752b3a064569fbc37988e6,9d46f4eaae9d61a259e2241d83060e35c7a42797,1,21/07/15,21/07/15,270,JVMCBC-224: Do not let the CoreEnvironment.Builder implement the Env IF.,"JVMCBC-224: Do not let the CoreEnvironment.Builder implement the Env IF.

Motivation
----------
A constant source of confusion has been the fact that the CoreEnvironment
Builder also implements the CoreEnvironment. Also, this meant that methods
which are not supported on the builder needed to throw exception or (worse)
return null.

Modifications
-------------
This changeset removes the interface implementation and consequently gets
rid of the unneeded getters on the builder.

The environment code has been adapted to access the fields in the builder
directly, instead through its getter methods.

Result
------
The builder is now clearly distinguishable from the built environment
itself and also does not have to throw unsupported exceptions on methods
which are not meant to be called at all.

Change-Id: I0b1193c821025ea77012b3a9c9d6ce15a82d7a00",0,0,0,0,0,1,1,0,0
53459,I65a32c4150f10b180a21bd15dd4f9d9228c3441a,http://review.couchbase.org/#/c/53459,2,ef3fd44b802458ca018c148761d4b666b41ca58f,ef542d5ff46b3b5d65c8e57ac2cfd5b3db07967b,1,21/07/15,21/07/15,23,Fix 2 unit tests with context problems,"Fix 2 unit tests with context problems

DefaultCoreEnvironmentTest should only consider interesting threads like
""cb-*"" and ""*Rx*"".

DefaultMemcachedBucketConfigTest: the test would assert on resolved
hostnames while the config contains an IP, which fails if the hostfile
of the machine is not tuned.

Change-Id: I65a32c4150f10b180a21bd15dd4f9d9228c3441a",0,0,0,0,0,1,1,0,0
53463,I42ebd23358c406d899eeb991c105b82fb8779f4d,http://review.couchbase.org/#/c/53463,5,7788c9fcb0cc84f5a8cf67f7bb275a377eb12da5,c9983e5d2d34c05c0d06643a2660036d1177e405,1,21/07/15,21/07/15,423,WIP: Metrics (system first),"WIP: Metrics (system first)

Change-Id: I42ebd23358c406d899eeb991c105b82fb8779f4d",0,1,0,1,0,1,1,1,1
53493,Ib025554d2bcbf7dee51aae154efedae104744ca0,http://review.couchbase.org/#/c/53493,8,c9983e5d2d34c05c0d06643a2660036d1177e405,1cc5709f2c4942d3f649e54672a0a7e68a4e7200,1,21/07/15,22/07/15,981,JVMCBC-60: Adding support for latency metrics.,"JVMCBC-60: Adding support for latency metrics.

Change-Id: Ib025554d2bcbf7dee51aae154efedae104744ca0",0,1,0,1,1,1,1,3,1
53541,I5d10b78441509456da461fe655932476d0f14aa5,http://review.couchbase.org/#/c/53541,2,1cc5709f2c4942d3f649e54672a0a7e68a4e7200,81aadd05eea812886d644bacb12e6a8447a94173,1,22/07/15,22/07/15,4,Fix deadlocking environment test.,"Fix deadlocking environment test.

Motivation
----------
The trampoline scheduler is a poor choice if other code depends on
it since its executing on the same thread. Together with the recent
metric additions, a different scheduler is needed.

Modifications
-------------
The newThread scheduler does the job as well in this test case.

Result
------
No deadlock in the test.

Change-Id: I5d10b78441509456da461fe655932476d0f14aa5",0,0,0,0,0,1,1,0,0
53612,I859b60c676fdf630344de1728b073bfd47dd4102,http://review.couchbase.org/#/c/53612,2,81aadd05eea812886d644bacb12e6a8447a94173,2c6d5651cb4eff25661415b8717f25f49a0e6781,0,23/07/15,24/07/15,2,Prepare 1.2.0-dp2 Release,"Prepare 1.2.0-dp2 Release

Change-Id: I859b60c676fdf630344de1728b073bfd47dd4102",0,0,0,1,0,1,1,NA,NA
53662,Id91e436fb0752deccf06345c9fb665c45bf5be13,http://review.couchbase.org/#/c/53662,2,1343b9ac3671509a3e2ee9961026bd03afe076a3,cd6e6a038bc7c90a7ba020190e099dfe34000d6a,1,24/07/15,24/07/15,48,JVMCBC-225: Expose partition in DCPResponse,"JVMCBC-225: Expose partition in DCPResponse

Motivation
----------
To properly serialize state, DCPResponse should carry partition index.

Modification
------------
Expose partition in DCPResonses

Result
------
Caller can now extract partition index from StreamRequestResponse and
update stream state correctly

Change-Id: Id91e436fb0752deccf06345c9fb665c45bf5be13",0,0,0,0,0,1,1,1,1
53663,I426cb355079f7deb9b129e192d3a11aba0fc84b8,http://review.couchbase.org/#/c/53663,7,ecf7378c542eceb55a06a2b5a92d7b51f7914779,e70a8fb460bdc6313503a6cbb3cf73b0bbd6e533,1,24/07/15,27/07/15,169,JVMCBC-226: Implement API to serialize DCP stream state,"JVMCBC-226: Implement API to serialize DCP stream state

Motivation
----------
To simplify DCP state serialization, the BucketStreamAggregatorState
should call user-specified hooks each time the state updated.

Modification
------------
Define state to serialize DCP state, and integrate it into
BucketStreamAggregatorState.

Result
------
The clients of the libraries can inject serialization code for DCP
streams.

Change-Id: I426cb355079f7deb9b129e192d3a11aba0fc84b8",0,1,1,0,0,1,1,0,0
53664,Ic1d96a9d2e08d65453f299abef34afcccae4e1f5,http://review.couchbase.org/#/c/53664,6,103d502b3a03b83126f585b0474de452c1c99a0d,bc2285c998c94a5de5f4f36ba545be7b1167903e,1,24/07/15,24/07/15,13,Implement toString() for BucketStreamState,"Implement toString() for BucketStreamState

Change-Id: Ic1d96a9d2e08d65453f299abef34afcccae4e1f5",0,1,0,1,0,1,1,0,0
53792,I58f952010a9e75f0c3842f0a046ac73c095d1667,http://review.couchbase.org/#/c/53792,5,6703442eea810724ee5e6f4857e360fd49764fdf,ba18fabf1ce18d8972860e685ca963f8af379c52,1,28/07/15,28/07/15,334,JVMCBC-228: Implement an Event Logging Consumer,"JVMCBC-228: Implement an Event Logging Consumer

Motivation
----------
For easy access, an event logger should be in place that can be used by the user
to log events which are incoming over the event bus.

Modifications
-------------
A LoggingConsumer has been implemented which consumes the event bus and logs
according to the specified log level and in the confiugred format.

To make things easier, a utility class has been added and all events now support
a versatile toMap() function that converts the objects into simple types. This
is then utilized to convert into a JSON representation if needed.

Result
------
Easy logging of system events either as toString or through JSON.

Change-Id: I58f952010a9e75f0c3842f0a046ac73c095d1667",0,1,0,0,0,1,1,0,0
53861,I86380f74c0a7b22f85813e65d5b89891c43ce4f9,http://review.couchbase.org/#/c/53861,3,ba18fabf1ce18d8972860e685ca963f8af379c52,252fa8cbce5b6b83647e9ce05340d4e6a2980909,1,29/07/15,30/07/15,14,JVMCBC-229: Eagerly trigger DNS lookup and time it,"JVMCBC-229: Eagerly trigger DNS lookup and time it

Motivation:
-----------
Upon investigating a customer seeing connection delays of about 10s upon
connecting to a Windows node, whereas said delay wasn't observed on a
CentOS node, the culprit was most probably reverse DNS lookup performed
by InetAddress when calling getHostName() for the first time.
(see CBSE-1958)

Since the logs produced by the CouchbaseNode are making use of that
method, if DNS lookup is somehow slow it will delay connection (connect
is among the first logging methods of CouchbaseNode invoked).

We need a way to quickly diagnose such a problem in the future.

Modifications
-------------
Upon construction of the CouchbaseNode, the InetAddress.getHostName() is
immediately called and timed. If it takes more than 1s to return, a warn
message with the time it took will be logged. This has the added benefit
of eagerly caching the hostname in the InetAddress.

Results
-------
Easier diagnostic for this DNS-related kind of issues.

Change-Id: I86380f74c0a7b22f85813e65d5b89891c43ce4f9",0,0,0,0,0,1,1,0,0
54062,I0866dad266c43ec28526d36e189f8fc7e7510f69,http://review.couchbase.org/#/c/54062,8,0fca501fc834468277494edcb776dce705e56836,6b4f54cad377031afc2e060e7b0535b1580f01c6,1,03/08/15,07/08/15,1230,wip: seq-based observe,"wip: seq-based observe

Change-Id: I0866dad266c43ec28526d36e189f8fc7e7510f69",0,1,1,1,1,0,1,4,1
54400,I7791c7f04e26b388839f18600c98fc587c5e86ec,http://review.couchbase.org/#/c/54400,3,6b4f54cad377031afc2e060e7b0535b1580f01c6,14685f010e817c9a3c514ba9eba063e382236c73,1,12/08/15,13/08/15,13,JVMCBC-230: Only use one pause detector,"JVMCBC-230: Only use one pause detector

Motivation
----------
The latency utils that we use for latency collection creates a
pause detector per object if not set properly before. Also, it
checks every ms and therefore creating lots of context switching.

Modifications
-------------
To reduce context switches the code creates one pause detector
and only wakes it up every second, dramatically reducing the
context switches it creates.

Result
------
No more context switches than needed.

Change-Id: I7791c7f04e26b388839f18600c98fc587c5e86ec",0,0,0,0,0,1,1,0,0
54441,Ibe4b9c6135ecd8707371fd38e37015befdc53a66,http://review.couchbase.org/#/c/54441,4,14685f010e817c9a3c514ba9eba063e382236c73,626f9015012ebe38f560f5bb78d73bfb9666680b,0,14/08/15,17/08/15,6,Bump Dependencies for 2.2.0 GA,"Bump Dependencies for 2.2.0 GA

Motivation
----------
Like in previous tickets, since we are in development, bump
dependencies to their highes bugfix versions to benefit from
fixes and enhancements.

Change-Id: Ibe4b9c6135ecd8707371fd38e37015befdc53a66",0,1,1,0,0,1,1,NA,NA
54505,Ida55e548d45cdc2b096282698ce9ca9b629948eb,http://review.couchbase.org/#/c/54505,3,626f9015012ebe38f560f5bb78d73bfb9666680b,cd7a8358f033728e09464f1cfc5a60a4d4b081f6,1,17/08/15,17/08/15,61,JVMCBC-231: fix race condition in remove all case on reconfigure,"JVMCBC-231: fix race condition in remove all case on reconfigure

Motivation:
-----------
In certain cases during reconfiguration events (as processed by the
RequestHandler's reconfigure method), a race condition can happen and
cause two subsequent reconfigurations to fail.

This is when the configuration's list of nodes is empty, resulting in
all nodes being disconnected. The second incoming empty configuration
could be received at a point where the node set in memory is not emptied
yet, but immediately after that the Observable of nodes to disconnect
from is created empty. This in turn throws a NoSuchElementException when
the last() operator is called.

Modifications:
--------------
The set of nodes (which could be concurrently mutated in the race
condition) is now ""snapshotted"" in a synchronized manner, preventing
the race condition to happen in the first place.

A new test that simulates the race condition (by always making the set
of nodes's isEmpty() method to return true) has been added.

Results:
--------
All tests pass and the surface for a race condition to happen during a
reconfiguration where the node list is empty has been reduced.

Change-Id: Ida55e548d45cdc2b096282698ce9ca9b629948eb",0,0,0,0,0,1,1,0,0
54570,I3a341440f53fc8fee336ba7f7017f30164a2a594,http://review.couchbase.org/#/c/54570,2,e82bbe56051237431404d1d4a844b3806965f18e,3f8357f71a681dd457999f6a756f1ee8c8b9d201,1,19/08/15,19/08/15,15,JVMCBC-232: Add toString() various events,"JVMCBC-232: Add toString() various events

Motivation
----------
When the event is printed out, just seeing the hash code doesn't help
much when debugging events.

Modifications
-------------
This changeset makes sure that all events that are emitted have toString
representations available.

Result
------
Correct output when printed out.

Change-Id: I3a341440f53fc8fee336ba7f7017f30164a2a594",0,0,0,0,0,1,1,0,0
54571,I884471ca39bdf7c18410e2275390c5e7bf8bcb79,http://review.couchbase.org/#/c/54571,2,1f9a93e258ded4287e46f48f2f5085aee0b7ef9f,2abd3def0c875a7fbedf1ba5640e474347cf8c81,1,19/08/15,19/08/15,8,JVMCBC-232: Add simple disabled() config factory methods.,"JVMCBC-232: Add simple disabled() config factory methods.

Motivation
----------
If a user needs to disable the metrics collection, while setting the time
to 0 is okay, providing an explicit disabled() factory method is much better.

Modifications
-------------
disabled() factory methods provided on all of the exposed config types available.

Result
------
Easier disabling of the individual metric collectors.

Change-Id: I884471ca39bdf7c18410e2275390c5e7bf8bcb79",0,0,0,0,0,1,1,0,0
54573,I6aae1edcf846875935fd454632a49b6c96f0fe62,http://review.couchbase.org/#/c/54573,2,dda9562423f6fe05e965f888632ed7afa428a4c1,93b34a3666902c0460a380caacb5d65f80e24868,1,19/08/15,19/08/15,42,JVMCBC-232: Rename SystemMetricsEvent to RuntimeMetricsEvent,"JVMCBC-232: Rename SystemMetricsEvent to RuntimeMetricsEvent

Motivation
----------
While writing the docs for this feature, it became visible that the
name was poorly chosen because we have a system event type and the
SystemMetricsEvent is a metric event type. All very confusing.

Modifications
-------------
The SystemMetricsEvent has been renamed to RuntimeMetricsEvent to
avoid the ""system"" name confusion and also to more accurately highlight
from which component the metrics are gathered.

Result
------
No more confusions, hopefully.

Change-Id: I6aae1edcf846875935fd454632a49b6c96f0fe62",0,0,0,0,0,1,1,0,0
54574,Ibe2f7b72e5756b278026770c37c31fabdf3fdb67,http://review.couchbase.org/#/c/54574,2,addc59bddc5753d05c48f654ee2bafe343f6e3df,138c0488aca13d55d3e6d6c254ef97751a33dcd7,0,19/08/15,19/08/15,2,JVMCBC-232: Hide the builder from the DefaultMetricsCollectorConfig.,"JVMCBC-232: Hide the builder from the DefaultMetricsCollectorConfig.

Motivation
----------
Because the builder just exposes the emit time and emit time unit, the
same thing can easily be done from a create() factory method. In fact,
exposing the builder just makes things complicated.

Modifications
-------------
The builder on the config has been made private but is still used
internally, so if we add more settings we can just make it public
again and expose all the complex options we want.

Result
------
Less methods a user can call and therefore making it less complex
to work with the config.

Change-Id: Ibe2f7b72e5756b278026770c37c31fabdf3fdb67",0,0,0,0,0,1,1,NA,NA
54577,Ic0e45ee09ac6c9dbad8e8a13ad90b8576ba8fb1e,http://review.couchbase.org/#/c/54577,2,f0700b15cdb87ec9d7a79a88993a6c3248ecc70f,da2d623580a6f4d7f55c4b3c2561897944473755,1,19/08/15,19/08/15,7,JVMCBC-232: Remove ERROR from EventType.,"JVMCBC-232: Remove ERROR from EventType.

Motivation
----------
We currrently do not expose any ERROR events, so removing it from
the enum to avoid confusion. As soon as we emit such events we can
re-introduce the enum type.

Change-Id: Ic0e45ee09ac6c9dbad8e8a13ad90b8576ba8fb1e",0,0,0,0,0,1,1,0,0
54585,Ie8a5923cb88c3ac38e9c2f6f2fdb3454f6a65168,http://review.couchbase.org/#/c/54585,2,3a2cdd26194f6c5c5bd922903fb9b33b6b5cf923,2aa4b6d725aa2906c3a6ec42647b770a7ccf495d,1,19/08/15,19/08/15,42,JVMCBC-232: Always log metric events.,"JVMCBC-232: Always log metric events.

Motivation
----------
To actually use the metrics we collect in an ""always on"" fashion,
th default implementation needs to consume metrics and log them.

Modifications
-------------
The environment spins up the logger, listens on metric events and
logs them in a JSON format. The user can disable this completely
or modify the settings of the logger.

Result
------
The metrics will be logged on the default interval unless turned
off by the user explicitly.

Change-Id: Ie8a5923cb88c3ac38e9c2f6f2fdb3454f6a65168",0,0,0,0,0,1,1,1,1
54817,Ic29b5bb37016a34777493cca579f19134279d7a0,http://review.couchbase.org/#/c/54817,2,2aa4b6d725aa2906c3a6ec42647b770a7ccf495d,4a854bf35d7bbe8b4e7ad3b4e510100a1829eff4,1,25/08/15,26/08/15,25,JVMCBC-235: Optimize ServiceRegistry cache.,"JVMCBC-235: Optimize ServiceRegistry cache.

Motivation
----------
On every flush, the node needs to loop through all the services and
send down the flush signal. With the previous implementation (the
list), an iterator has been created all the time which employs
unnecessary overhead.

Modifications
-------------
The service registry API is changed to return an array for the service
cache instead of a list which makes it much faster to iterate over,
and since it is heavy read and no writes during traffic, there is no need
for a dynamic datastructure.

Iterating is now done without an iterator, and a little faster than over
an ArrayList.

Result
------
Faster service cache and less allocations on the hot code path. Mind you,
its a small change, but lots of those will add up as well.

Change-Id: Ic29b5bb37016a34777493cca579f19134279d7a0",0,0,0,0,0,1,1,0,0
54819,I4b40dee889c6dab656ce6238c6476bbfb09736d0,http://review.couchbase.org/#/c/54819,2,20b4ad4dd84d0307559b466b4f187efb9619cd3e,e496b1895830d3df9a8257edc032cb2aeee2094b,1,25/08/15,26/08/15,4,Relax test assertions for metrics.,"Relax test assertions for metrics.

Motivation
----------
Because the metrics tests is not deterministic since it can interleave with other tests,
the constraints on the get assertions are relaxes (random failures have been found on
the assertions while running the tests standalone and/or the full suite).

Change-Id: I4b40dee889c6dab656ce6238c6476bbfb09736d0",0,0,0,0,0,1,1,0,0
54821,Idffd809b426f7181c98ad52c74ac192717fad903,http://review.couchbase.org/#/c/54821,3,e21240ae658e407ff8a59a877533f47f3226d75c,d885ecf9762f6d2f41bde84cecad96cf50bd643c,1,25/08/15,26/08/15,58,JVMCBC-236: Eagerly convert doc id string into bytes.,"JVMCBC-236: Eagerly convert doc id string into bytes.

Motivation
----------
Previously, the core will actually conver the document ID three times
into a utf-encoded byte array:

	- in the key/value locator
	- in the handler to calculate the key length
	- in the codec when the request is encoded

Since 1 is happening on the core thread and 2&3 on the io threads, doing
this repetetive task is quite expensive and generates unnecessary GC.

Modifications
--------------
This changeset encodes it once when the object is created and for now stores
both representations for backwards compatibility.

The locator already uses the byte array and so does the key length calculation
in the handler. In a new changeset also the request encoding will use the new
byte array and then the double storage can be removed (and replaced with a
simple new String(bytes, CharsetUtil.UTF_8) for backwards compat.

Result
------
Less string encoding on the hot code path, less gc and better performance.

Change-Id: Idffd809b426f7181c98ad52c74ac192717fad903",0,0,0,0,0,1,1,1,1
54848,I90014150dd03fc617a827a8ff189e3943651848c,http://review.couchbase.org/#/c/54848,3,d885ecf9762f6d2f41bde84cecad96cf50bd643c,21de83e302788110ec69a07c11dc1c7985818ef5,0,26/08/15,26/08/15,14,Bring metadata in order,"Bring metadata in order

Change-Id: I90014150dd03fc617a827a8ff189e3943651848c",0,0,0,1,0,1,1,NA,NA
54875,I6afe4911a70d65786d1ef90b3983e6c2303ed32f,http://review.couchbase.org/#/c/54875,3,21de83e302788110ec69a07c11dc1c7985818ef5,bfeb46ab2a012552aa76509b88e2fe6957dea2df,1,27/08/15,27/08/15,16,wip: 10 second polling,"wip: 10 second polling

Change-Id: I6afe4911a70d65786d1ef90b3983e6c2303ed32f",0,0,0,1,0,1,1,0,0
54919,Ie970acd21e6cf273185a5285e060516dc271edf3,http://review.couchbase.org/#/c/54919,2,bfeb46ab2a012552aa76509b88e2fe6957dea2df,7d9f0f36719c92390db9269d74270344caf9c563,0,31/08/15,31/08/15,4,JVMCBC-238: Convert HTTP 500 into a specific ResponseStatus,"JVMCBC-238: Convert HTTP 500 into a specific ResponseStatus

Motivation
----------
Sometimes the view engine reports with a 500 response in a failure
setting and we should properly turn that into a non-generic response
status.

Modifications
-------------
HTTP 500 -> ResponseStatus.INTERNAL_ERROR, since it is an internal
server error.

Note that there is no impact on view retry handling whatsoever, because
this part is only concerned about the numeric http status code that of
course is not changed.

Results
-------
Properly convert the http 500 response status.

Change-Id: Ie970acd21e6cf273185a5285e060516dc271edf3",0,0,0,0,0,1,1,NA,NA
54961,Ib832e8f7c8957049be803ff1fa252126dfddf601,http://review.couchbase.org/#/c/54961,3,7d9f0f36719c92390db9269d74270344caf9c563,5c7ea1b5d147ad1afa9efb7c824327faddd23a6b,1,01/09/15,02/09/15,138,JVMCBC-239: fix query parser processing split signature,"JVMCBC-239: fix query parser processing split signature

Motivation:
-----------
During QE testing of N1QL queries, some failure scenario could not
recover. It was later determined that an IllegalStateException in the
parser was blowing up the QE test engine.

Analysis:
---------
At first it was thought that the IllegalStateException was thrown after
a normal run of the parser and could be avoided if, when transitioning
to the next state, we allow more data to come in instead of throwing ISE
(unless this is the last chunk).

This was slightly offsetting though, since we have unit tests in place
that should have detected this specific splitting (after ""signature"":).

Deeper analysis revealed that 3 issues existed, one of which prevented
the splitAtEveryPosition test to detect the others:
 - ByteBufJsonHelper.findNextCharNotPrefixedBy is bugged and will return
   a value of -1 sometimes due to an overflow / error in search length
 - the initial parsing phase won't completely and cleanly reset in the
   case where early detection of ""errors"" is not possible
 - parsing of the clientContextId is not resilient to a split just at
   the end of said id (eg. no closing quote or no more bytes to skip)

Modifications:
--------------
Fixed ByteBufJsonHelper.findNextCharNotPrefixedBy to correctly continue
searching for non escaped values, by using the correct computed length.

Fixed early parsing of query responses to cleanly reset the readerIndex
when not enough bytes to check for ""errors"" section.

Fixed early parsing to accommodate for a split just after the
clientContextId (either no closing quote or no more bytes to skip after
the quote).

Added tests reproducing the context of discovery for these three issues.

Result:
-------
Tests now more accurately cover real world issues and query parsing is
more resilient.

Change-Id: Ib832e8f7c8957049be803ff1fa252126dfddf601",0,0,0,0,0,1,1,0,0
54971,Ib8ea4e83f80804ae29c5510c50445bf1fb01f938,http://review.couchbase.org/#/c/54971,2,5c7ea1b5d147ad1afa9efb7c824327faddd23a6b,2ee9e39061f97047080d95e130fde32e9db58d55,0,02/09/15,02/09/15,2,Prepare 1.2.0 Release,"Prepare 1.2.0 Release

Change-Id: Ib8ea4e83f80804ae29c5510c50445bf1fb01f938",0,0,0,1,0,1,1,NA,NA
54985,Iefe716de39decfad90a917d8a3d3606e0407536e,http://review.couchbase.org/#/c/54985,2,2ee9e39061f97047080d95e130fde32e9db58d55,510552e35030e83c6c566f443098012265856b73,0,02/09/15,02/09/15,2,Prepare 1.2.1 Release Cycle,"Prepare 1.2.1 Release Cycle

Change-Id: Iefe716de39decfad90a917d8a3d3606e0407536e",0,0,0,1,0,1,1,NA,NA
54990,I0b84ef9a266bc37d53a8ca0d6f70f3366bc1a52e,http://review.couchbase.org/#/c/54990,3,a88855ed660cf0c9722477bb486f166ae19bd6b8,838b7539d73ea3d6983698b9c2e9f763378022cc,1,02/09/15,14/09/15,227,JVMCBC-240: improve readability of messages about unknown KV status,"JVMCBC-240: improve readability of messages about unknown KV status

Motivation
----------
When unknown error code detected by ResponseStatusConverter, it just
outputs the number to the log. It will be much better if it can also
include some explanation and human-readable representation of the
protocol status code.

Modification
------------
Codes from the status list in protocol_binary.h wrapped into enum, with
text explanation.

Result
------
KeyValueStatus carries enough information to display it in human
readable format

Change-Id: I0b84ef9a266bc37d53a8ca0d6f70f3366bc1a52e",0,0,1,0,0,1,1,0,0
55013,I7b57414caf2d80b24676326c69a21b06ac380b36,http://review.couchbase.org/#/c/55013,11,f81d2b76cf3e7ea00faee105c0a22b2b6841ff89,ecf698ee02ab285f4754a80f76dda7e026c70885,0,03/09/15,03/09/15,822,WIP: POM,"WIP: POM

Change-Id: I7b57414caf2d80b24676326c69a21b06ac380b36",0,1,0,1,1,1,1,NA,NA
55021,Ib97d3be73fecf1e74bdfe30bf8f8dad874ff60f2,http://review.couchbase.org/#/c/55021,2,ecf698ee02ab285f4754a80f76dda7e026c70885,15ce3cfee6e654c3470f09baa30f90fcd8d640de,0,03/09/15,03/09/15,411,Getting rid of gradle leftovers,"Getting rid of gradle leftovers

Change-Id: Ib97d3be73fecf1e74bdfe30bf8f8dad874ff60f2",0,0,0,1,0,1,1,NA,NA
55216,Iaf12f23ac1c87d3fe26958122feb7de78529306b,http://review.couchbase.org/#/c/55216,3,c1390fbae90926c622dc3815288c3987980aa0a8,df4d7ae30bdafe23ac0cb639d88e99d496b1d55c,1,14/09/15,14/09/15,93,Handle ERANGE and ROLLBACK during stream open,"Handle ERANGE and ROLLBACK during stream open

Motivation
----------
During opening DCP stream, server might respond with ERANGE(0x22) or
ROLLBACK(0x23), and at the core library does not handle these errors,
which leaves to inability to resume state.

Modification
------------
Define appropriate error codes, extract rollback sequence number in
DCPHandler, and update BucketStreamAggregator to handle scenarious,
described above properly.

Result
------
Now DCP streams could be resumed seamlessly.

Change-Id: Iaf12f23ac1c87d3fe26958122feb7de78529306b",0,0,0,0,0,1,1,-1,0
55327,I1f00a42d3bae3f92d7a90a3fce7b7207acb8d899,http://review.couchbase.org/#/c/55327,22,df4d7ae30bdafe23ac0cb639d88e99d496b1d55c,4649a0d5fcd890926eb5ac6fb32775324051ba5a,1,18/09/15,13/10/15,313,WIP implement STAT command,"WIP implement STAT command

Change-Id: I1f00a42d3bae3f92d7a90a3fce7b7207acb8d899",0,1,0,1,0,1,1,0,0
55359,I4cf951c32f478c60632b50e6442d68414935d9c9,http://review.couchbase.org/#/c/55359,6,acda87f83984d7098c25668e1f6c71cfea1314e7,4a297c63e74d26d38f68cfe254d69aa940ba9ad5,1,18/09/15,13/10/15,268,WIP Improve DCP aggregator,"WIP Improve DCP aggregator

Change-Id: I4cf951c32f478c60632b50e6442d68414935d9c9",0,1,0,1,0,1,1,0,0
55391,I1bfec8d9afc329d633bcd630804aba8a4c7ce527,http://review.couchbase.org/#/c/55391,3,2ccc32eb63d59674ae39a54911f71068884735a5,3af234bb71365993e6ce7527a83ab5d4264aaac4,0,21/09/15,21/09/15,2,JVMCBC-242: Bump Jackson to 2.6.2,"JVMCBC-242: Bump Jackson to 2.6.2

Motivation
----------
A bug in jackson has been identified in 2.6.0/2.6.1 when decoding
documents, introduced in 2.6.0 (so previous versions are not affected
as it seems now).

Modifications
-------------
Update Jackson to 2.6.2 which includes the fix.
(https://github.com/FasterXML/jackson-core/issues/216)

Result
------
Decoding issue fixed.

Change-Id: I1bfec8d9afc329d633bcd630804aba8a4c7ce527",0,0,0,0,0,1,1,NA,NA
55394,Ifd4b97005a0ba1871e392c6aa7f586c821c8ac98,http://review.couchbase.org/#/c/55394,2,661cc50d7fced8821705b8ba0da2f04793c85418,cb54b47d6ff5681ae124711090aea70e1d94c1af,1,21/09/15,21/09/15,17,JVMCBC-245: Add time unit to the latency metric.,"JVMCBC-245: Add time unit to the latency metric.

Motivation
----------
The metric should also include the target unit, so later inspection
of the resulting data is not dependent on identifying the time unit
set at configuration time.

Modifications
-------------
Adding the time unit to all possible output formats.

Result
------
Easier identification of the time unit reported in the latency metrics.

Change-Id: Ifd4b97005a0ba1871e392c6aa7f586c821c8ac98",0,0,0,0,0,1,1,-1,0
55661,Ib93d31932bb0b5f0cc699d65f13f81dc0aa48af5,http://review.couchbase.org/#/c/55661,2,2fd306ee92d0ffbbfddf1385adffbad00f6bc497,75db46add4ec72c018df7e802ba0db9c084a1f91,0,30/09/15,30/09/15,8,JVMCBC-247: Update Netty to 4.0.32,"JVMCBC-247: Update Netty to 4.0.32

Motivation
----------
The diff between .30 and .32 shows a few bugfixes which we didn't
trigger yet, but there is a chance we might in the future. Since
we package up Netty, it won't affect the user directly anyways.

Change-Id: Ib93d31932bb0b5f0cc699d65f13f81dc0aa48af5",0,0,0,0,0,1,1,NA,NA
55662,I6d45430c9eb5823998121ca5931304dc585a0ab7,http://review.couchbase.org/#/c/55662,2,75db46add4ec72c018df7e802ba0db9c084a1f91,1ca076a40890bd341b7a9b0a0e089395fe785712,1,30/09/15,30/09/15,33,JVMCBC-248: Properly retry SSL Handshake failures,"JVMCBC-248: Properly retry SSL Handshake failures

Motivation
----------
SSL Handshake failures did bubble up the IO exception handling,
but were not reported and ""handled"" properly inside the couchbase
code.

Modifications
-------------
Because SSL handshake is a vital part of the connection process,
it makes sense to not complete the connection phase if SSL
handshake fails. In order to do this properly, the original
future is intercepted and proactively failed if a SSL handshake
exception bubbles up to the error handler.

That way, we can still keep the retry logic in a centralized place
and react properly.

Result
------
The code now proactively checks for ssl handshake failures and
reacts accordingly.

Change-Id: I6d45430c9eb5823998121ca5931304dc585a0ab7",0,0,0,0,0,1,1,0,0
55698,Ie498389717e6b013a7071b3c88040a4c54e963e8,http://review.couchbase.org/#/c/55698,3,b9b105ae92d656193df04bca891677b74f19c2ab,18047e1343d19ebb22c8eef8d6f0b220ac1f3823,1,01/10/15,01/10/15,36,JVMCBC-250: Explicitly set socket timeout and handle it if needed.,"JVMCBC-250: Explicitly set socket timeout and handle it if needed.

Motivation
----------
A socket timeout needs to be set to something lower than the netty
default (30 seconds), since especially in the 5 second bucket open
timeout case, this is too long.

This has some side effects where the code can wait on the connect
phase longer than needed, leading to ""infinite"" open sequences
that would've been able to go to a different node instead.

Modifications
-------------
Apply a 1 second socket timeout and allow it to be configurable
as well. In addition, the code now handles the netty-specific
exception explicitly to terminate an incoming observable more
quickly, allowing the loader code up the stack to fallback
to another node much more quickly.

Result
------
More deterministic behaviour if a socket cannot be opened.

Change-Id: Ie498389717e6b013a7071b3c88040a4c54e963e8",0,0,0,0,0,1,1,0,0
55700,I6d45430c9eb5823998121ca5931304dc585a0ab7,http://review.couchbase.org/#/c/55700,2,05ac8262543cd81f313e4957bae8509687de4017,2bcc82bd79689a3c4ad2bddfb2f806ec58f55bce,1,01/10/15,01/10/15,33,JVMCBC-248: Properly retry SSL Handshake failures,"JVMCBC-248: Properly retry SSL Handshake failures

Motivation
----------
SSL Handshake failures did bubble up the IO exception handling,
but were not reported and ""handled"" properly inside the couchbase
code.

Modifications
-------------
Because SSL handshake is a vital part of the connection process,
it makes sense to not complete the connection phase if SSL
handshake fails. In order to do this properly, the original
future is intercepted and proactively failed if a SSL handshake
exception bubbles up to the error handler.

That way, we can still keep the retry logic in a centralized place
and react properly.

Result
------
The code now proactively checks for ssl handshake failures and
reacts accordingly.

Change-Id: I6d45430c9eb5823998121ca5931304dc585a0ab7",0,0,0,0,0,1,1,1,1
55731,Ie498389717e6b013a7071b3c88040a4c54e963e8,http://review.couchbase.org/#/c/55731,3,2bcc82bd79689a3c4ad2bddfb2f806ec58f55bce,c7092653ee223a2a2a01340c2fd1699e0e9a834d,1,02/10/15,02/10/15,42,JVMCBC-250: Explicitly set socket timeout and handle it if needed.,"JVMCBC-250: Explicitly set socket timeout and handle it if needed.

Motivation
----------
A socket timeout needs to be set to something lower than the netty
default (30 seconds), since especially in the 5 second bucket open
timeout case, this is too long.

This has some side effects where the code can wait on the connect
phase longer than needed, leading to ""infinite"" open sequences
that would've been able to go to a different node instead.

Modifications
-------------
Apply a 1 second socket timeout and allow it to be configurable
as well. In addition, the code now handles the netty-specific
exception explicitly to terminate an incoming observable more
quickly, allowing the loader code up the stack to fallback
to another node much more quickly.

Result
------
More deterministic behaviour if a socket cannot be opened.

Change-Id: Ie498389717e6b013a7071b3c88040a4c54e963e8
Reviewed-on: http://review.couchbase.org/55698
Reviewed-by: Sergey Avseyev <sergey.avseyev@gmail.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>",0,0,0,0,0,1,1,0,0
55732,I0118d680e3df8d968431eb24a4b12a37085b3b0c,http://review.couchbase.org/#/c/55732,2,c7092653ee223a2a2a01340c2fd1699e0e9a834d,5e2a79c1d252c1f147946a70850b7e44280d44de,0,02/10/15,02/10/15,2,Prepare 1.1.5 Development,"Prepare 1.1.5 Development

Change-Id: I0118d680e3df8d968431eb24a4b12a37085b3b0c",0,0,0,1,0,0,1,NA,NA
55844,I94bc71ffab031a91e9133524ae23e92fe9065dcd,http://review.couchbase.org/#/c/55844,6,a6924dda4c333102e95e6ff4f9f83d4fc36a96e4,b11052b34bb3e8f1b384f5d331739a2e31cdb778,1,06/10/15,28/01/16,826,WIP: CBFT integration,"WIP: CBFT integration

Change-Id: I94bc71ffab031a91e9133524ae23e92fe9065dcd",0,1,0,1,1,1,1,1,1
55902,I462ee177c312aaad344cd31b7205b77a2314e118,http://review.couchbase.org/#/c/55902,2,6a901a9360e460e9d5717c7c133157bb96923937,9292338316cc444846c9b5c36e477d3aa03031a0,1,08/10/15,08/10/15,61,JVMCBC-222: Support MDS for Memcached Buckets,"JVMCBC-222: Support MDS for Memcached Buckets

Motivation
----------
To make different service types (MDS - Multi-Dimensinal-Scalability) work with
memcached buckets, the code needs to make sure that only data nodes are included
in the ketama hash computation.

Modifications
-------------
The code which populates the ketama node list now takes the exposed service type
into account and only uses those who include the BINARY service type.

A unit test has been added to verify that.

Result
------
MDS is now also supported for memcached buckets.

Change-Id: I462ee177c312aaad344cd31b7205b77a2314e118
Reviewed-on: http://review.couchbase.org/53067
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,0,0
55903,I86380f74c0a7b22f85813e65d5b89891c43ce4f9,http://review.couchbase.org/#/c/55903,2,7a13eace4529a53e8358e9edde77bc7d98733056,853639c570b2bdd5038b1fb5144daa4a7b9a0cc2,1,08/10/15,08/10/15,14,JVMCBC-229: Eagerly trigger DNS lookup and time it,"JVMCBC-229: Eagerly trigger DNS lookup and time it

Motivation:
-----------
Upon investigating a customer seeing connection delays of about 10s upon
connecting to a Windows node, whereas said delay wasn't observed on a
CentOS node, the culprit was most probably reverse DNS lookup performed
by InetAddress when calling getHostName() for the first time.
(see CBSE-1958)

Since the logs produced by the CouchbaseNode are making use of that
method, if DNS lookup is somehow slow it will delay connection (connect
is among the first logging methods of CouchbaseNode invoked).

We need a way to quickly diagnose such a problem in the future.

Modifications
-------------
Upon construction of the CouchbaseNode, the InetAddress.getHostName() is
immediately called and timed. If it takes more than 1s to return, a warn
message with the time it took will be logged. This has the added benefit
of eagerly caching the hostname in the InetAddress.

Results
-------
Easier diagnostic for this DNS-related kind of issues.

Change-Id: I86380f74c0a7b22f85813e65d5b89891c43ce4f9
Reviewed-on: http://review.couchbase.org/53861
Reviewed-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Tested-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,0,0
55904,Ida55e548d45cdc2b096282698ce9ca9b629948eb,http://review.couchbase.org/#/c/55904,2,cbc6fa07a56908e4c0544e514ad5cf5f81ee7268,608fc7dc3553b1e23ec02b38aab8bfa59a18348e,1,08/10/15,08/10/15,61,JVMCBC-231: fix race condition in remove all case on reconfigure,"JVMCBC-231: fix race condition in remove all case on reconfigure

Motivation:
-----------
In certain cases during reconfiguration events (as processed by the
RequestHandler's reconfigure method), a race condition can happen and
cause two subsequent reconfigurations to fail.

This is when the configuration's list of nodes is empty, resulting in
all nodes being disconnected. The second incoming empty configuration
could be received at a point where the node set in memory is not emptied
yet, but immediately after that the Observable of nodes to disconnect
from is created empty. This in turn throws a NoSuchElementException when
the last() operator is called.

Modifications:
--------------
The set of nodes (which could be concurrently mutated in the race
condition) a snapshot is now made in a synchronized manner, preventing
the race condition to happen in the first place.

A new test that simulates the race condition (by always making the set
of nodes's isEmpty() method to return true) has been added.

The debug message in RequestHandler.reconfigure branch where all this
happens has been corrected to mention open bucket instead of nodes.

Results:
--------
All tests pass and the surface for a race condition to happen during a
reconfiguration where the node list is empty has been reduced.

Change-Id: Ida55e548d45cdc2b096282698ce9ca9b629948eb
Reviewed-on: http://review.couchbase.org/54505
Tested-by: Simon Baslé <simon@couchbase.com>
Reviewed-by: Michael Nitschinger <michael.nitschinger@couchbase.com>",0,0,0,0,0,1,1,0,0
55905,Ib832e8f7c8957049be803ff1fa252126dfddf601,http://review.couchbase.org/#/c/55905,2,37621728b003d59160abb0037d96bdb5b16b4845,1aec30bb3a844fb0bac28de9b80233d3d953f436,1,08/10/15,08/10/15,138,JVMCBC-239: fix query parser processing split signature,"JVMCBC-239: fix query parser processing split signature

Motivation:
-----------
During QE testing of N1QL queries, some failure scenario could not
recover. It was later determined that an IllegalStateException in the
parser was blowing up the QE test engine.

Analysis:
---------
At first it was thought that the IllegalStateException was thrown after
a normal run of the parser and could be avoided if, when transitioning
to the next state, we allow more data to come in instead of throwing ISE
(unless this is the last chunk).

This was slightly offsetting though, since we have unit tests in place
that should have detected this specific splitting (after ""signature"":).

Deeper analysis revealed that 3 issues existed, one of which prevented
the splitAtEveryPosition test to detect the others:
 - ByteBufJsonHelper.findNextCharNotPrefixedBy is bugged and will return
   a value of -1 sometimes due to an overflow / error in search length
 - the initial parsing phase won't completely and cleanly reset in the
   case where early detection of ""errors"" is not possible
 - parsing of the clientContextId is not resilient to a split just at
   the end of said id (eg. no closing quote or no more bytes to skip)

Modifications:
--------------
Fixed ByteBufJsonHelper.findNextCharNotPrefixedBy to correctly continue
searching for non escaped values, by using the correct computed length.

Fixed early parsing of query responses to cleanly reset the readerIndex
when not enough bytes to check for ""errors"" section.

Fixed early parsing to accommodate for a split just after the
clientContextId (either no closing quote or no more bytes to skip after
the quote).

Added tests reproducing the context of discovery for these three issues.

Result:
-------
Tests now more accurately cover real world issues and query parsing is
more resilient.

Change-Id: Ib832e8f7c8957049be803ff1fa252126dfddf601
Reviewed-on: http://review.couchbase.org/54961
Tested-by: Simon Baslé <simon@couchbase.com>
Reviewed-by: Michael Nitschinger <michael.nitschinger@couchbase.com>",0,0,0,0,0,1,1,0,0
55961,Iecb4192e4a19bb89419cc63602b09df853d01983,http://review.couchbase.org/#/c/55961,6,1d45d60a15d8acfff0530fb7100ec205ed7cfe8e,7632b8aed8a2aad0eee2b657614a07b40f6998aa,1,09/10/15,12/10/15,486,WIP: Improve clean up of threads used by the SDK,"WIP: Improve clean up of threads used by the SDK

Take into account RxJava SchedulerLifecycle and the fact that in 1.10.5
RxJava can now clean up its threads properly.

Update CoreScheduler to reflect those changes (as seen also in RxJava's
EventLoopScheduler).

Improve cleanup of cb-io threads (netty's io pool).

Improve cleanup of PauseDetector threads (LatencyUtils latency metrics).

Added integration test to verify cleanup in a scenario closer to reality
that spawns threads in RxJava, Netty and LatencyUtils as well as SDK.

Change-Id: Iecb4192e4a19bb89419cc63602b09df853d01983",0,1,1,0,0,1,1,0,0
55990,I13f6a58802a9ab72124f7afd1245860e7f66f084,http://review.couchbase.org/#/c/55990,2,d0eff7c8354a1ae38ec068de0ae95f24781d1927,076bc9bf2e99d9b83ca7e3e52840577182a5e1a3,0,12/10/15,12/10/15,4,Preparing 1.2.1 Release,"Preparing 1.2.1 Release

Change-Id: I13f6a58802a9ab72124f7afd1245860e7f66f084",0,0,0,1,0,1,1,NA,NA
55991,I2a97ee657f1d4aa98cd21e738b283fecab443128,http://review.couchbase.org/#/c/55991,2,dc2e0b2b57fe3184236df544daa773802657c1fd,1d7ee39c1b8c2f8827faeb6cd7251c49c3196546,0,12/10/15,12/10/15,2,Preparing 1.1.5 Release,"Preparing 1.1.5 Release

Change-Id: I2a97ee657f1d4aa98cd21e738b283fecab443128",0,0,0,1,0,1,1,NA,NA
56001,If435c06d5bce7a64701f023e3f21eba5fd78374b,http://review.couchbase.org/#/c/56001,2,f1c876932a860dee14224ca42e88e5d95c57c869,2e4a36323f12c0be7d6d9c1b5442bc7483a1667f,1,12/10/15,12/10/15,27,JVMCBC-252: Reduce GC on KV ResponseStatus Matching,"JVMCBC-252: Reduce GC on KV ResponseStatus Matching

Motivation
----------
Looking innocent, the values() iterator on the enum actually produces
quite some GC since it always converts the enum into an array which
needs to be collected a little later.

Modifications
-------------
We only need a handful of codes 99% of the time, so the code is
optimized in if else/if clauses right at the top. If its something
different, we fall back into the loop.

Result
------
For the common cases, no GC created and its also quicker.

Change-Id: If435c06d5bce7a64701f023e3f21eba5fd78374b",0,0,0,0,0,0,0,0,0
56005,I70fc0e65159cb3e72f336ef8d7e397a8d575d23d,http://review.couchbase.org/#/c/56005,2,92346df25677a51d1788f105fcd64c10ae8aebbe,2ee199f52a7657919794a44fdd09ae1598279b8a,1,12/10/15,12/10/15,372,JVMCBC-251: Improve clean up of threads used by the SDK,"JVMCBC-251: Improve clean up of threads used by the SDK

This is a backport of the same change in 1.2.1
(see 3cd763d423f96425a224f7c772a289c3d840a108)
Changes from RxJava 1.0.15 couldn't be backported because this branch
relies on 1.0.4, which doesn't have the necessary elements for a simple
backport.

Motivation:
-----------
It has been observed by users running the SDK in a Tomcat container that
cb-io threads were still remaining active after a shutdown().

Looking into it, some possible improvements for shutdown path were found
for cb-io thread as well as some dependencies.

Modifications:
--------------
Refactored the code in DefaultCoreEnvironment's shutdown so that it
better tracks status of each component it attempts to shut down, logs it
and allow some components to shut down in ""best effort"" mode (ie Netty's
ThreadDeathWatcher, that will reinitialize if there is some IO going on)

Improved cleanup of cb-io threads (netty's io pool) by more aggressive
timeouts.

Added a shutdown hook instructing Netty's ThreadDeathWatcher to shutdown
in a best effort way (ie. won't cause env().shutdown() to return false).

Added integration test to verify cleanup in a scenario closer to reality
that spawns threads in RxJava, Netty and LatencyUtils as well as SDK.

Not Backported:
---------------
Updated CoreScheduler to reflect improvements in latest RxJava snapshot
(1.0.15), taking the same approach at shutdown implemented in it's
EventLoopScheduler implementation.

Added cleanup of PauseDetector threads (LatencyUtils latency metrics).

Results:
--------
Threads from components managed by the SDK are now more properly cleaned
up, and problems during clean up are more easily detected and visible in
the logs.

Change-Id: I70fc0e65159cb3e72f336ef8d7e397a8d575d23d",0,0,0,0,0,1,1,1,1
56052,Ic93ef61652b7f9e1a789f7cb253bb57c24662344,http://review.couchbase.org/#/c/56052,2,c569fe67235a0078cd6a22bc94e8491c8efc5c40,5a02e2a2dee6fd5cbe6cc697c63ba04c79e09f51,0,13/10/15,13/10/15,2,Fix threading integration test for JVMCBC-251,"Fix threading integration test for JVMCBC-251

Change-Id: Ic93ef61652b7f9e1a789f7cb253bb57c24662344",0,0,0,1,0,1,1,NA,NA
56055,I6fc26e72b2a79da3fd02480a2fff18c2c18d5ac4,http://review.couchbase.org/#/c/56055,4,5a02e2a2dee6fd5cbe6cc697c63ba04c79e09f51,fc3773d74381a4a1b7f0d9829d1ed922790ef3ab,0,13/10/15,13/10/15,27,Fix property replacement in build process.,"Fix property replacement in build process.

Change-Id: I6fc26e72b2a79da3fd02480a2fff18c2c18d5ac4",0,1,0,1,0,1,1,NA,NA
56116,I6ad14d4c6879f27a448579fd51f7a3434958d032,http://review.couchbase.org/#/c/56116,2,fc3773d74381a4a1b7f0d9829d1ed922790ef3ab,11df488b7fedadcb3ab41c2ed2db53aacfcf2391,0,14/10/15,14/10/15,2,Start 1.2.2 Development,"Start 1.2.2 Development

Change-Id: I6ad14d4c6879f27a448579fd51f7a3434958d032",0,0,0,1,0,1,1,NA,NA
56119,Iae5d5a7c4dcdfdd5df7d537d4d5fd536d59876ac,http://review.couchbase.org/#/c/56119,2,11df488b7fedadcb3ab41c2ed2db53aacfcf2391,d51e70ab6bc2bf05de184b2fee3baed7c2aa105d,1,14/10/15,14/10/15,87,JVMCBC-254: Refactor Ketama Lookup into Config,"JVMCBC-254: Refactor Ketama Lookup into Config

Motivation
----------
In preparation of a planned refactor with different, more optimized
data structures, the code needs to be better encapsulated.

Modifications
-------------
The actual locating code is now placed inside the configuration, so
the internal details are encapsulated. The proper method exposed
just asks for the id and returns the InetAddress which in turn is
then used in the locator to match with the node list.

Result
------
This is just a refactoring, no behaviour has been changed along
the way. Code is now prepared for internal data structure
modifications.

Change-Id: Iae5d5a7c4dcdfdd5df7d537d4d5fd536d59876ac",0,0,0,0,0,1,1,0,0
56190,Ica7cec3a46f46413e5baf9eedffb060ddc4a0892,http://review.couchbase.org/#/c/56190,5,3a2d0bfe2892eecff42af788066d31baec183695,269dd1fd96db825ab901fc03e2e4488b2db11b5d,1,16/10/15,16/10/15,41,WIP: Migration path to sync env shutdown,"WIP: Migration path to sync env shutdown

Change-Id: Ica7cec3a46f46413e5baf9eedffb060ddc4a0892",0,1,0,1,0,1,1,0,0
56426,I119c8143044a54f555989727f128f51fa1e944b9,http://review.couchbase.org/#/c/56426,2,269dd1fd96db825ab901fc03e2e4488b2db11b5d,7a5b7fb2fad6fdb387ec16653d1142cec42969ea,1,26/10/15,27/10/15,10,Cleanup subject definition of DCPStream,"Cleanup subject definition of DCPStream

Change-Id: I119c8143044a54f555989727f128f51fa1e944b9",0,0,0,1,0,1,1,0,0
56501,I58937bf43429500eb7a25bb69f50ec3249c27466,http://review.couchbase.org/#/c/56501,5,7a5b7fb2fad6fdb387ec16653d1142cec42969ea,d8bb2c8b1f6be746717fa97c3886a866ca648787,1,28/10/15,30/10/15,185,RFC: K/V command to get mutation tokens,"RFC: K/V command to get mutation tokens

Motivation
----------
During analyzing Couchbase traffic, I found interesting command: 0x48,
which actually renders things we call MutationToken (except it does not
include vbucket UUID there). I found it pretty useful, so implemented as
experimental API.

Modification
------------
Define request/response payloads, and update KeyValueHandler to support
them.

Result
------
There is much easier way to initialize state of DCP streams.

Change-Id: I58937bf43429500eb7a25bb69f50ec3249c27466",0,1,0,0,0,1,1,0,0
56503,I32b6185de521fa7c107ea5e5b936dcc075775c9c,http://review.couchbase.org/#/c/56503,3,a4b55ff49305844c8ef6f8a6c1a68620c73d4644,8513b84fae15d098cb50ca1718762e31fca97850,1,28/10/15,31/10/15,13,JVMCBC-258: Use ReplaySubject for collecting DCP events,"JVMCBC-258: Use ReplaySubject for collecting DCP events

Motivation
----------
Subscribers to PublishSubject could miss events if they joined too late.

Modification
------------
Use size-bounded ReplaySubject to cache requests, for sending them to
subscribers.

Result
------
None of DCP events are missed now

Change-Id: I32b6185de521fa7c107ea5e5b936dcc075775c9c",0,0,1,0,0,1,1,0,0
56553,Idedad59c19c220ebbea21f15006fa7b23aa4dd08,http://review.couchbase.org/#/c/56553,7,e54e1902011b987aa22a85d2ba29864438c24a8c,ca63b6aad9cb8db411032070a0be506d8f41006a,1,30/10/15,03/11/15,217,WIP: flow control,"WIP: flow control

Change-Id: Idedad59c19c220ebbea21f15006fa7b23aa4dd08",0,1,0,1,0,1,1,1,1
56566,I486c28ecf36123e19f8a4f4b931f6ab7558a120f,http://review.couchbase.org/#/c/56566,4,65147ff507e031ad47c80a041fdeb158fd27c164,1f441b41d039ace844a6666d338e0280551babf1,1,30/10/15,31/10/15,12,JVMCBC-261: display stacktraces for exceptions caught by distruptor,"JVMCBC-261: display stacktraces for exceptions caught by distruptor

Motivation
----------
When interpolated into a format string, exception object just shows the
message only. It will be more useful to output more context about it.

Modification
------------
Exclude Throwable from format string, and allow logger to handle it
properly.

Result
------
Stacktraces visible now

Change-Id: I486c28ecf36123e19f8a4f4b931f6ab7558a120f",0,1,0,0,0,1,1,0,0
56631,Ieecfcba918315e14901a39038b28138e99e68f3a,http://review.couchbase.org/#/c/56631,4,1f441b41d039ace844a6666d338e0280551babf1,ed9023d69ad75b6c11db9e024e836805f2ceb514,1,03/11/15,03/11/15,248,JVMCBC-258: Migrate DCP streams to single observable,"JVMCBC-258: Migrate DCP streams to single observable

Motivation
----------
Using observable per DCP stream makes it hard to get a single stream
abstraction because of merge limits in Rx.

Modification
------------
Pull subject to DCP connection, and submit all DCP changes through it.

Result
------
There is no need to merge streams, so it will not miss the messages.

Change-Id: Ieecfcba918315e14901a39038b28138e99e68f3a",0,1,0,0,0,1,1,1,1
56639,I27711bd4f5bc02b6305aa6ed3db6a2b9eb087f75,http://review.couchbase.org/#/c/56639,2,189eb60c123e4779b0bd2c96eea66e34f6bd86d5,4cf455580dd3c99d37853461078ccbf88b9fcac4,1,03/11/15,03/11/15,94,JVMCBC-262: CarrierRefresher needs to skip non-kv nodes.,"JVMCBC-262: CarrierRefresher needs to skip non-kv nodes.

Motivation
----------
In a MDS scenario, the refresher previously tried to talk
to any node in the cluster list, even if it doesn't have
a KV service enabled.

Modifications
-------------
The refresher code now checks if the node actually has the
BINARY service enabled, and only in this case it will try
to send a config request to it.

Unit tests have been updated.

Result
------
In an MDS scenario the client now doesn't try to load a
config over CCCP from a node where no KV service is
enabled.

Change-Id: I27711bd4f5bc02b6305aa6ed3db6a2b9eb087f75",0,0,0,0,0,1,1,0,0
56643,Ib4d9053dd1a3d72039084b8a657e7f386be10cbe,http://review.couchbase.org/#/c/56643,3,788e1c0ddc2c166ed7904c4d9de3cf0d274895fd,38e2a3eba9578d4c8642a31223b46f4f50b8be3b,1,03/11/15,03/11/15,14,JVMCBC-257: Do not refresh buckets on disconnect/bucket closed.,"JVMCBC-257: Do not refresh buckets on disconnect/bucket closed.

Motivation
----------
If an endpoint goes out of the cluster or all buckets are closed,
it is unnecesary to trigger config refresh. This can also lead
to pathological cases were refresh is happening after a full
shutdown.

Modifications
-------------
This changeset performs the following changes:

  - Only trigger a refresh from the config provider to the refreshers if
    at least one bucket is open.
  - If an endpoint is removed (disconnected), there is no config reload
    signalled to the config provider. This only needs to happen if an
    unintended socket close happens.

Result
------
No unnecessary config refreshes during shutdown and intended endpoint
disconnects.

Change-Id: Ib4d9053dd1a3d72039084b8a657e7f386be10cbe",0,0,0,0,0,1,1,0,0
56644,Idd6468731f8a6880728b79efe70705f2a770932a,http://review.couchbase.org/#/c/56644,2,318b1f3c488d3b16235e65752c25e378a7cd3750,eff9a26b5fe1d68c4f89a7e362740aa56e6cf5c1,0,03/11/15,03/11/15,4,Bump RxJava to version 1.0.15,"Bump RxJava to version 1.0.15

Motivation
----------
RxJava 1.0.15 most notably comes with the ability to shutdown the
schedulers, allowing to avoid memory leaks in containers like Tomcat.

To do so, call Schedulers.shutdown(). This will prevent RxJava from
working so only invoke it when shutting down the application, after
having called cluster.disconnect() (since this could still use Rx).

Change-Id: Idd6468731f8a6880728b79efe70705f2a770932a",0,0,0,0,0,1,1,NA,NA
56678,Id3423de96f2545be61397078f9ca4532edb282ab,http://review.couchbase.org/#/c/56678,7,ecd54dd9e33245b5fffca98cc5eefd0f52bebf4e,e21bef479bd8c12827d1af09f7c63e81a4be8771,1,04/11/15,05/11/15,351,JVMCBC-102: WIP (looking good!),"JVMCBC-102: WIP (looking good!)

Change-Id: Id3423de96f2545be61397078f9ca4532edb282ab",0,1,0,1,0,1,1,0,0
56690,I9b1703ccaa246d0d7b9eda8d2e39b21cffcd13ba,http://review.couchbase.org/#/c/56690,2,aead41bfb0b5490b757f4c7c611c8ea6e63ca096,d2a8b2202f8f8724a6518f07a03214a5373e4efa,1,05/11/15,05/11/15,3,Render DCP flow control settings into string represetation of the env,"Render DCP flow control settings into string represetation of the env

Change-Id: I9b1703ccaa246d0d7b9eda8d2e39b21cffcd13ba",0,0,0,1,0,1,1,0,0
56694,Ib4d9053dd1a3d72039084b8a657e7f386be10cbe,http://review.couchbase.org/#/c/56694,2,15cd32a401d108106314577d1f1e308bfa57c461,e1e527118d69aaa21287ecdfb900cdf4cb97c79c,1,05/11/15,05/11/15,14,JVMCBC-257: Do not refresh buckets on disconnect/bucket closed.,"JVMCBC-257: Do not refresh buckets on disconnect/bucket closed.

Motivation
----------
If an endpoint goes out of the cluster or all buckets are closed,
it is unnecesary to trigger config refresh. This can also lead
to pathological cases were refresh is happening after a full
shutdown.

Modifications
-------------
This changeset performs the following changes:

  - Only trigger a refresh from the config provider to the refreshers if
    at least one bucket is open.
  - If an endpoint is removed (disconnected), there is no config reload
    signalled to the config provider. This only needs to happen if an
    unintended socket close happens.

Result
------
No unnecessary config refreshes during shutdown and intended endpoint
disconnects.

Change-Id: Ib4d9053dd1a3d72039084b8a657e7f386be10cbe
Reviewed-on: http://review.couchbase.org/56643
Reviewed-by: Simon Baslé <simon@couchbase.com>
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>",0,0,0,0,0,1,1,0,0
56695,I27711bd4f5bc02b6305aa6ed3db6a2b9eb087f75,http://review.couchbase.org/#/c/56695,2,7b67d9e4f1e30ebfed5e19a541a7a902fe8efd34,72886d1593bf00837c788c5b9f60e8dd97f683f8,1,05/11/15,05/11/15,93,JVMCBC-262: CarrierRefresher needs to skip non-kv nodes.,"JVMCBC-262: CarrierRefresher needs to skip non-kv nodes.

Motivation
----------
In a MDS scenario, the refresher previously tried to talk
to any node in the cluster list, even if it doesn't have
a KV service enabled.

Modifications
-------------
The refresher code now checks if the node actually has the
BINARY service enabled, and only in this case it will try
to send a config request to it.

Unit tests have been updated.

Result
------
In an MDS scenario the client now doesn't try to load a
config over CCCP from a node where no KV service is
enabled.

Change-Id: I27711bd4f5bc02b6305aa6ed3db6a2b9eb087f75
Reviewed-on: http://review.couchbase.org/56639
Reviewed-by: Simon Baslé <simon@couchbase.com>
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>",0,0,0,0,0,1,1,0,0
56696,Id3423de96f2545be61397078f9ca4532edb282ab,http://review.couchbase.org/#/c/56696,2,efed4f8ec2ac6458c2e2df2196d2c7ddd79ccee3,5eaeeb43af580d433bf9e941ba3bb454520ed8e8,1,05/11/15,05/11/15,351,"JVMCBC-102: Perform initial bootstrap vertically, not horizontally.","JVMCBC-102: Perform initial bootstrap vertically, not horizontally.

Motivation
----------
Various edge cases in the current bootstrapping process have highlighted
a limitation of the current approach:

Rather trying carrier publication and http loading on each node separately
and picking the first good config that is returned, the current code tries
carrier on all seed nodes and if this fails tries http on all of them.

While this works fine for most of the cases, it falls short when some
of the nodes return errors and others don't return at all (while some
still return good responses!).

Modifications
-------------
The current loader code uses mergeDelayError which doesn't work well under
the situations described above. Sometimes the code waits too long, while
under other circumstances it doesn't wait until the good message comes back.

Looking at this approach from a more high level view, it turns out that not
either cccp or http is failing, but rather a specific node is either available
or not.

Realizing this, the code has been modified to now run the individual loader
chains for each seeed host individually, merging it at the very end and picking
the first good one.

So even if one node responds with an error or doesn't respond at all, a good
node has the chance to send a config back to the bucket manager, leading
to a finished bootstrap process.

Tests have been modified to reflect these changes, also the Loader API has been
modified to only take a single seed node instead of a set and of course now
also doesn't perform merging and taking at this level.

Result
------
The bootstrap process is now much more reliable to individual node failures.

Change-Id: Id3423de96f2545be61397078f9ca4532edb282ab
Reviewed-on: http://review.couchbase.org/56678
Reviewed-by: Simon Baslé <simon@couchbase.com>
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>",0,0,0,0,0,1,1,0,0
56744,I187c551ddfe1a58c96e987b23224c7201489d677,http://review.couchbase.org/#/c/56744,2,e01ca435f43332d77501bdeed40ae9195645cfdb,fa90db8a88e25ed06931bdd94d74d04512112c5d,1,06/11/15,06/11/15,55,JVMCBC-263: Fix view row parsing failing on } in id/key/value,"JVMCBC-263: Fix view row parsing failing on } in id/key/value

Motivation:
-----------
The ViewHandler would not detect a closing brackets inside a String as
irrelevant and would stop parsing the row at that point, later on making
Jackson unmarshalling of the row fail.

That is because the ByteProcessor wasn't configured to detect string
boundaries.

Modification:
-------------
Made the ViewHandler use of ClosingPositionBufProcessor correct by
instructing to take string boundaries escaping into account.

Added a unit test case with a closing bracket in id, value and keys
sections of the view response to validate behavior.

Result:
-------
A document key containing a closing bracket, or a view emitting an id
or a value string with a closing bracket won't throw off the parsing any
longer.

Change-Id: I187c551ddfe1a58c96e987b23224c7201489d677",0,0,0,0,0,1,1,0,0
56747,I187c551ddfe1a58c96e987b23224c7201489d677,http://review.couchbase.org/#/c/56747,2,49868a615e7eca90444ad32f4cc59b859792226e,33ac75934e6f9c1647ac344fb1f16289b15aeb17,1,06/11/15,06/11/15,55,JVMCBC-263: Fix view row parsing failing on } in id/key/value,"JVMCBC-263: Fix view row parsing failing on } in id/key/value

Motivation:
-----------
The ViewHandler would not detect a closing brackets inside a String as
irrelevant and would stop parsing the row at that point, later on making
Jackson unmarshalling of the row fail.

That is because the ByteProcessor wasn't configured to detect string
boundaries.

Modification:
-------------
Made the ViewHandler use of ClosingPositionBufProcessor correct by
instructing to take string boundaries escaping into account.

Added a unit test case with a closing bracket in id, value and keys
sections of the view response to validate behavior.

Result:
-------
A document key containing a closing bracket, or a view emitting an id
or a value string with a closing bracket won't throw off the parsing any
longer.

Change-Id: I187c551ddfe1a58c96e987b23224c7201489d677
Reviewed-on: http://review.couchbase.org/56744
Tested-by: Simon Baslé <simon@couchbase.com>
Reviewed-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
(cherry picked from commit 54d7c5a)",0,0,0,0,0,1,1,0,0
56750,I491424303680b2a6c6e1e3edb4afaab89b919516,http://review.couchbase.org/#/c/56750,3,595ac0e4536da7d6078cca1d7df7367683af8b8b,f7a561538b7f38a763f4b045cda3ea2a8510e446,1,06/11/15,09/11/15,143,JVMCBC-264: Handle 0x55 DCP opcode to complete stream observables,"JVMCBC-264: Handle 0x55 DCP opcode to complete stream observables

Motivation
----------
When end sequence number specified, the producer sends message with 0x55
opcode, it should used to signal onCompleted() on DCP connection if
there are no active streams.

Modification
------------
Implement StreamEndMessage to represent 0x55, and complete DCP
observable, when all streams ended.

Result
------
Graceful shutdown of DCP consumers is possible now.

Change-Id: I491424303680b2a6c6e1e3edb4afaab89b919516",0,0,1,0,0,1,1,0,0
56859,I1e12fa233e543ab38e153586d11a2af83a15383e,http://review.couchbase.org/#/c/56859,5,605cddb6736936d5d8b201962741491b43606317,340e0d1fb755cdd535da6450db5ef316b9941909,1,10/11/15,10/11/15,33,wip: proper cleanup,"wip: proper cleanup

Change-Id: I1e12fa233e543ab38e153586d11a2af83a15383e",0,1,0,1,0,1,1,0,0
56863,I1e12fa233e543ab38e153586d11a2af83a15383e,http://review.couchbase.org/#/c/56863,2,65e7462a063ae535eaceba96a6e02f700d976ac0,67bf1e70a7a9898d64d5db384be1d85569da50de,1,10/11/15,11/11/15,33,JVMCBC-265: Services need to be cleaned up after failed bucket open attempt.,"JVMCBC-265: Services need to be cleaned up after failed bucket open attempt.

Motivation
----------
When a bucket open attempt fails for whatever reason, some resources like services
are currently not cleaned up properly. This is not an issue in the ""fail startup
if bucket open doesn't work"" approach, since most of the time the JVM exits.

In the edge case though where you want to fall back to another bucket or just
try to open one which does not exist and then keep going on, the core is
in an invalid state. Some of the services are DEGRADED, letting specific
ops not pass through as expected.

Modifications
-------------
The actual change is quite simple: if the config provider reports back to
the caller that the open bucket attempt was not successful, it now explicitly
closes the bucket.

This triggers a cleanup of services in the core layer as with a regular
bucket close process, allowing subsequent open bucket attempts to progress
as expected.

Result
------
Subsequent open bucket attempts after a failed one now have the chance
to succeed since the core now properly cleans up ""stale"" services and
resources.

Change-Id: I1e12fa233e543ab38e153586d11a2af83a15383e
Reviewed-on: http://review.couchbase.org/56859
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,0,0,0,0
56975,Iad7c0fa82bd7293f47a02f5ae4afe2e4509c236a,http://review.couchbase.org/#/c/56975,2,ea83c13d491601955f88b3c1f6f2f26b06edbbc3,53d23cdcef3aeb826358ceb1de31293bc11b11d4,0,12/11/15,12/11/15,2,Prepare 1.2.2 Release,"Prepare 1.2.2 Release

Change-Id: Iad7c0fa82bd7293f47a02f5ae4afe2e4509c236a",0,0,0,1,0,1,1,NA,NA
56980,Ie11af0bb42f253e24f6e503f5e5bfd3cf9ee9821,http://review.couchbase.org/#/c/56980,2,53d23cdcef3aeb826358ceb1de31293bc11b11d4,b18991076cf39cb42b2bec0615c5b665e11c0324,1,12/11/15,12/11/15,54,"JVMCBC-266: Reject Null, Empty or too long Key quickly.","JVMCBC-266: Reject Null, Empty or too long Key quickly.

Motivation
----------
With the current implementation if a null, empty or too long key
is passed into the core, it will be sent to the server who correctly
rejects it with INVALID_ARGUMENTS. We can do better than that.

Modifications
-------------
The locator is the first place where the key is used. The code now
checks for the correct boundaries and quickly rejects the observable
if it does not validate properly.

Tests added to verify this behavior.

Result
------
Invalid keys are quickly and semantically correctly rejected. This
also makes it easer to debug user level errors.

Change-Id: Ie11af0bb42f253e24f6e503f5e5bfd3cf9ee9821",0,0,0,0,0,0,0,1,1
57044,I49e09d2279d057ecdc6b2c8567e7d5335180f6a8,http://review.couchbase.org/#/c/57044,2,b18991076cf39cb42b2bec0615c5b665e11c0324,beeaa7b3a6308e0a9dc4cc999b383272373cf3dd,1,13/11/15,23/11/15,4,Make builder fields private,"Make builder fields private

Change-Id: I49e09d2279d057ecdc6b2c8567e7d5335180f6a8",0,0,1,1,0,1,1,0,0
57221,I29e46e1e55da9b0f30102c6c98de68f2ef61800e,http://review.couchbase.org/#/c/57221,2,beeaa7b3a6308e0a9dc4cc999b383272373cf3dd,fde1737188f238ea48e3856bf301c10204417ef1,1,24/11/15,25/11/15,2,JVMCBC-267: Set snapshot start seqno properly on rollback,"JVMCBC-267: Set snapshot start seqno properly on rollback

Motivation
----------
When server asks consumer to rollback, the library does not update start
snapshot sequence number in the state object, and in case latter was
less than former, the server would raise ERANGE error.

Modification
------------
Rollback sequence number have to be the same as start sequence number.

Result
------
It does not generate ERAGE errors on rollback.

Change-Id: I29e46e1e55da9b0f30102c6c98de68f2ef61800e",0,0,0,0,0,1,1,0,0
57341,I202c992a6342fd9a1e18affb300d294d49850d25,http://review.couchbase.org/#/c/57341,8,fde1737188f238ea48e3856bf301c10204417ef1,dff7963ec61f0fe5f61f3fbc0a1e009a80ab4d3a,1,30/11/15,16/12/15,379,Refactor DCP connection,"Refactor DCP connection

work in progress

Change-Id: I202c992a6342fd9a1e18affb300d294d49850d25",0,1,0,0,0,1,1,0,0
57401,I879af8a07c831f96da3cc7ae6525c775e7baa9a8,http://review.couchbase.org/#/c/57401,2,538d562c415a8432451446b9d0f4de9af173743b,cf53546453d4d8c1f03230a2ab083dbd578c9e8f,1,02/12/15,02/12/15,4,Backport fix for test using hostname instead of IP,"Backport fix for test using hostname instead of IP

This is a partial backport of commit 896f24a, as reviewed on
http://review.couchbase.org/53459:

DefaultMemcachedBucketConfigTest: the test would assert on resolved
hostnames while the config contains an IP, which fails if the hostfile
of the machine is not tuned.

Change-Id: I879af8a07c831f96da3cc7ae6525c775e7baa9a8",0,0,0,0,0,0,0,0,0
57402,Ic4be07dc9a13ca1574776dc3f0b40908af6fddc7,http://review.couchbase.org/#/c/57402,2,76bc4f7b2ca79f99c846d21a8ea48b25e3de4ed4,c4c40b9d3e341bdfc207e2d352193fdce22347e2,0,02/12/15,02/12/15,2,Prepare 1.1.6 Release,"Prepare 1.1.6 Release

Change-Id: Ic4be07dc9a13ca1574776dc3f0b40908af6fddc7",0,0,0,1,0,0,1,NA,NA
57814,I42e44fcee708b2d15bf15ea99601e6a4ac13cd1c,http://review.couchbase.org/#/c/57814,3,d4fb87170ffa15933f4bc483b14067d02a137ff4,ba369a1312673ccfc68ddff516e270054184f516,1,15/12/15,16/12/15,61,JVMCBC-270: Expose by_seqno and rev_seqno in mutation and remove DCP messages,"JVMCBC-270: Expose by_seqno and rev_seqno in mutation and remove DCP messages

Motivation
----------
by_seqno and rev_seqno are useful to trace current state of the stream
along with snapshot messages.

Modification
------------
Parse and expose their values in message objects.

Result
------
The by_seqno and rev_seqno accessible as bySequenceNumber() and
RevisionSequenceNumber() on the messages.

Change-Id: I42e44fcee708b2d15bf15ea99601e6a4ac13cd1c",0,0,0,0,0,1,1,2,1
57957,Ib8f3a081dee85ffc9ffcacb3d973bb77789db4ea,http://review.couchbase.org/#/c/57957,12,7d596de19465b9a8f56116c6ebfcab564a5f150c,d7ff49e4a89f543f5849bebba2361c319d3a9dc2,1,18/12/15,04/01/16,3655,WIP implementation of subdoc in core,"WIP implementation of subdoc in core

Change-Id: Ib8f3a081dee85ffc9ffcacb3d973bb77789db4ea",0,1,0,1,1,1,1,5,1
58011,I45939f2499c5468dfc7ce5af287c5294e7feada0,http://review.couchbase.org/#/c/58011,3,0736277ed91d804bff3a234534dbfc7159357dd1,2267a2d8933c4086effb09354ddcb9266f3a0e68,1,21/12/15,21/12/15,9,JVMCBC-272: Fix DCP flow control buffer accounting,"JVMCBC-272: Fix DCP flow control buffer accounting

Motivation
----------
Not all packets have to be accounted, otherwise the server will just
stop transmission.

Modification
------------
The library counts all bytes going through the socket, instead it have
to count only specific types of messages:

* OP_STREAM_REQUEST = 0x53
* OP_STREAM_END = 0x55
* OP_SNAPSHOT_MARKER = 0x56
* OP_MUTATION = 0x57
* OP_REMOVE = 0x58

Result
------
The server does not stop data transmission with flow control enabled

Change-Id: I45939f2499c5468dfc7ce5af287c5294e7feada0",0,0,0,0,0,1,1,0,0
58117,Ib4194967b608cca078c84c55541c64299333ca23,http://review.couchbase.org/#/c/58117,2,04ab5e10264cb06da83b4d708d580d959c7330c1,bebb31930e21c0791565abb3bb095837806f03eb,1,24/12/15,28/12/15,54,Improve integration test version check utility methods,"Improve integration test version check utility methods

Motivation:
-----------
The current version check utility method in ClusterDependentTest only
considers the major version. An upcoming test needs to check on the
minor version.

Modifications:
--------------
Made the version check utility method return an int[] instead of Integer
thus allowing both major and minor versions to be checked.

Added several flavors of version check utility methods, including one
that directly perform a Assume.assumeTrue given a target minimal
major.minor version.

Result:
-------
Ignoring a test depending on the minor component of the lowest Couchbase
version in the cluster is now possible.

Change-Id: Ib4194967b608cca078c84c55541c64299333ca23",0,0,1,0,0,1,1,0,0
58118,Ie69631096ff343cd583d96d39a9d3c62e2c4c5a4,http://review.couchbase.org/#/c/58118,2,2f899a2fc5a8663973f1252fc0b507d580543a6a,2a99871ee05a1b830e6cf98593be8f06d12ba5a1,1,24/12/15,28/12/15,25,JVMCBC-274: Fix ExponentialDelay overflow,"JVMCBC-274: Fix ExponentialDelay overflow

Motivation:
-----------
During computation, the bitwise operation causes the calculated delay
to circle back to its lower bound every 32 attempts.

Also, bitwise operation is invalid and not necessary on attempt 0.

Modifications:
--------------
Added protection for underflow/overflow errors so as to cap the stepping
to Long.MAX_VALUE (in turn it can be capped by the delay's upper bound).

Added a unit test to verify that the delay doesn't shrink back to lower
bound after more than 32 attempts.

Result:
-------
The delay will never shrink back to its lower bound but instead plateau
at its upper bound.

Change-Id: Ie69631096ff343cd583d96d39a9d3c62e2c4c5a4",0,0,1,0,0,1,1,0,0
58203,I8f9030de3986598245ec1f90d7fd727e07fd7b7b,http://review.couchbase.org/#/c/58203,2,b969a54763a8f5330821fe6713770bf0bfd3f6ec,e620d0d2a971b70b95aff3462ff5956c4b087d6f,0,04/01/16,04/01/16,2,Prepare for version 1.2.3,"Prepare for version 1.2.3

Change-Id: I8f9030de3986598245ec1f90d7fd727e07fd7b7b",0,0,0,1,0,1,1,NA,NA
58249,I857b0d05e4e16ce7cbaf6f91f86ddbc196746a98,http://review.couchbase.org/#/c/58249,2,e620d0d2a971b70b95aff3462ff5956c4b087d6f,3c7d3f26ee57312ab61c7ce32c9254c2c8466f46,0,05/01/16,05/01/16,2,Prepare version 1.2.3,"Prepare version 1.2.3

Change-Id: I857b0d05e4e16ce7cbaf6f91f86ddbc196746a98",0,0,0,1,0,1,1,NA,NA
58250,I86ea3e981bb100d5b9a51113bdf0b8497080ec7d,http://review.couchbase.org/#/c/58250,2,c0f4959222f3ca787f1c6c1a6e5c53650374cab8,942e0edcc878126fa4d746662016a8ee188ccaef,0,05/01/16,05/01/16,1,[chores] IntelliJ 15 encoding setting,"[chores] IntelliJ 15 encoding setting

Change-Id: I86ea3e981bb100d5b9a51113bdf0b8497080ec7d",0,0,0,1,0,1,1,NA,NA
58315,Ibe569e4dc6e42ee44e0e0b5fe8b1c66db46f58cc,http://review.couchbase.org/#/c/58315,2,28a3870dbea431dcfa75d14ec7456e2b9376c2fb,f682b02b18ed54a369bc63822959b4b531fcbe66,0,06/01/16,07/01/16,2,Start development of 1.2.4,"Start development of 1.2.4

Change-Id: Ibe569e4dc6e42ee44e0e0b5fe8b1c66db46f58cc",0,0,0,1,0,1,1,NA,NA
58539,Ic5671812549a8df6e5bd3e7e4b0b745d077aef70,http://review.couchbase.org/#/c/58539,2,f682b02b18ed54a369bc63822959b4b531fcbe66,4df47c5eb95a50aa519542d75fe1ef101e4685ee,1,12/01/16,12/01/16,1,JVMCBC-275: Encode CAS for subdoc multi mutations,"JVMCBC-275: Encode CAS for subdoc multi mutations

Motivation
----------
The subdocument message for multiple mutations didn't encode the CAS
even though it can be provided in the BinarySubdocMultiMutationRequest.

Modifications
-------------
CAS is taken into account and encoded in the message.

Result
------
Multi-mutations can take the CAS into account.

Change-Id: Ic5671812549a8df6e5bd3e7e4b0b745d077aef70",0,0,0,0,0,1,1,0,0
58571,If4b59200fe61af55c4a79fce60373bf33257e5cc,http://review.couchbase.org/#/c/58571,2,4df47c5eb95a50aa519542d75fe1ef101e4685ee,be2a6a2339b0d9c76d2641f44a2e961253a47233,1,13/01/16,14/01/16,29,JVMCBC-276: Add DELETE to the possible multi-mutations,"JVMCBC-276: Add DELETE to the possible multi-mutations

Motivation:
-----------
DELETE is a valid mutation to apply in the context of multiple subdoc
mutations, yet it is missing from the enum.

Modifications:
--------------
Added DELETE to the Mutation enum. MutationCommand can now be
constructed without a fragment (Unpooled.EMPTY_BUFFER is then used),
allowing the DELETE MutationCommand to be built without providing the
unnecessary fragment part.

Added DELETE in the SubDocumentMessageTests.

Result:
-------
Fragments can be deleted via multi-mutations.

Change-Id: If4b59200fe61af55c4a79fce60373bf33257e5cc",0,0,0,0,0,1,1,0,0
58587,Ida75addcd79e4581bb641c59492e4122885f8c80,http://review.couchbase.org/#/c/58587,3,4969299dfed513ff525bcd9f00605238fb266240,88c95eda601a41dd91ee4a6b7310465150e4efe8,0,13/01/16,13/01/16,7,JVMCBC-277: Fix source relocation for netty memcache codec.,"JVMCBC-277: Fix source relocation for netty memcache codec.

Motivation
----------
When moving from gradle to maven some part of the source shadow
relocation stopped to work subtly.

Modifications
-------------
The netty codec we ship is now properly excluded from the renaming
of the package locations. Note that this is done in a hacky way
because explicit exclusions did not do the trick (they were
ignored for some reason).

Result
------
Source jars now properly show the sources where the memcache
codec is used.

Change-Id: Ida75addcd79e4581bb641c59492e4122885f8c80",0,0,0,0,0,1,1,NA,NA
58840,Ie50e8f92cc6fbcbcb51f430a925819f8ef78dcdf,http://review.couchbase.org/#/c/58840,4,135b6f62904e98d8358e0a0c140052cf7750c037,2f624b6551296b21f469c8d879e7baa30407b744,1,20/01/16,20/01/16,77,JVMCBC-278: Fix endpoint reconnect on netty error,"JVMCBC-278: Fix endpoint reconnect on netty error

Motivation
----------
When a node fails, the channel is marked as inactive and the endpoint
marks itself for reconnection once. If said reconnection fails, the
generic handling is to schedule a reconnection retry.

During this connection phase however, a few netty errors are caught
which bypasses the scheduling of a retry (for the generic error case).
Since 1.2.1, this includes the handling of a socket connection timeout.

Effectively, the endpoint never recovers from such a situation where
the node is unreachable, because Netty's socket timeout stops it from
retrying the connection.

Modifications
-------------
The problem is a balance between quickly failing at bootstrap if the
distant IP:PORT cannot be connected to (bad IP in configuration) and
allowing a later reconnection in case of node failure (post bootstrap).

The AbstractEndpoint now calls a special version of connect() when the
channel is signaled as inactive, where a bootstrap flag is set to false
so that subsequently connection is still scheduled for retry even in the
case when we detect netty errors (authentication, socket timeout, ...).

During bootstrap, such errors cause the whole process to stop.

Result
------
Even if node becomes unreachable, as long as it has been hit once
(during bootstrap) attempts should be continuously made to reconnect
(with the reconnect delay).

Change-Id: Ie50e8f92cc6fbcbcb51f430a925819f8ef78dcdf",0,1,0,0,0,1,1,0,0
58841,Iccee39c55fcae8ea8064f0de302457fcea6fbe8e,http://review.couchbase.org/#/c/58841,2,2fd3a82050a321f48f51d332af7dc4ef909314ae,b818d456cea24fbb5d1994f3574a2bd4f3adedce,1,20/01/16,20/01/16,41,JVMCBC-279: Add bucket name to MutationToken,"JVMCBC-279: Add bucket name to MutationToken

Motivation
----------
The bucket name in scope of the token is needed for two reasons:

 1. tokens are scoped to a bucket and need to be identifyable for this
 2. it helps detecting problems where token for bucket A is passed
    into a query against bucket B
 3. in cross-bucket queries the code needs to be able to automatically
    scope it according to the bucket

Modifications
-------------
This changeset add the bucket string to the mutation token, makes sure it
is passed in in the handler at creation time and modifies the test suite
to also assert that they are set properly.

Result
------
the bucket name is now immutably bound to a token and can be used as a
reference scope up the stack.

Change-Id: Iccee39c55fcae8ea8064f0de302457fcea6fbe8e",0,0,0,0,0,1,1,0,0
59010,I0d34e122270f110eeb5638e4429cc990246dd891,http://review.couchbase.org/#/c/59010,3,f48bb036a314ef045c2d215f42fe17e0cb79f53b,1ad871e78dd2b9356967b2449ea274db32c67847,1,25/01/16,25/01/16,4,JVMCBC-281: Allocate full KV header chunk upfront on encoding.,"JVMCBC-281: Allocate full KV header chunk upfront on encoding.

Motivation
----------
Currently, only the fixed 24 bytes are allocated for the header and
then all the params as well as the optional extras and key are written
into the header section.

It is very likely that the buffer needs to expand at least two times
if either the extras and/or the key take up more space.

Modifications
-------------
Since at the point of allocation we know the key and extras length,
the buffer can be preallocated with the exact size, avoiding unnecessary
resizing and even allocating too much (since it uses power of two
internally).

Result
------
Less buffer resizing needed when encoding a KV operation.

Change-Id: I0d34e122270f110eeb5638e4429cc990246dd891",0,0,0,0,0,1,1,0,0
59014,I57e32a6e4cda9d8901b5c3bcb56ab92556ec5e60,http://review.couchbase.org/#/c/59014,9,232731059d4f8ee42e8e3f82e73e97f4ee887853,d3f7858942f9aa52faffbe789331a0ddb63c3a29,1,25/01/16,15/02/16,830,"WIP: SHA-1, SHA-256, SHA-512 support for SASL","WIP: SHA-1, SHA-256, SHA-512 support for SASL

Change-Id: I57e32a6e4cda9d8901b5c3bcb56ab92556ec5e60",0,1,0,1,1,1,1,3,1
59182,I4855844e286c80561702786fe9507d86c9a01d78,http://review.couchbase.org/#/c/59182,3,ea57083327c4a43d3f6b5582204c616cdaa2f40b,68b729d2d77628a564664f83daaf0bb9073ca076,1,28/01/16,28/01/16,39,JCBC-763: Inform when a node is being reconnected.,"JCBC-763: Inform when a node is being reconnected.

Motivation
----------
We log and send events over the bus during the initial connect
as well as the terminal disconnect phase of a node. This works
as expected, but we also need to do the same during reconnect
events (like when a node is restarted).

Modifications
-------------
This changeset explicitly checks on the CONNECTING state in
the node, in addition to when the ""connected"" value is already
set. Those two combinations indicate a full reconnect cycled
after a previous successful connect attempt. As a result, we
inform that the node is right now disconnected and also set
the connected flag to false.

Once all the connections are established again the node goes
into CONNECTED state and another event is issued that the
node is now connected again.

Result
------
It is now visible, both from logs and over the event bus, when
a node is being reconnected (that is, disconnected and eventually
being connected again).

Change-Id: I4855844e286c80561702786fe9507d86c9a01d78",0,0,0,0,0,1,1,0,0
59252,I373df3c827f48b4be14f2823316cdf4082906697,http://review.couchbase.org/#/c/59252,2,c4dca9a4f6fcea27d2b56501307f38963ee1c903,9dae1a80b6ed4b754c9256a255960670175420f7,1,29/01/16,29/01/16,294,Disable Subdoc multi-mutation support,"Disable Subdoc multi-mutation support

Motivation:
-----------
The protocol for multiple mutations is likely to change before a DP
version of the server is released, so offering support for it is too
early.

Modifications:
--------------
Made classes and code related to multi mutation requests/responses not
public and/or commented.

Result:
-------
Single subdoc operations and multi lookups are still available as
experimental, but multi-mutation is not.

Change-Id: I373df3c827f48b4be14f2823316cdf4082906697",0,0,0,0,0,1,1,0,0
59264,I6ca30afc9e355b8ab0135a3ff8f98120262bd169,http://review.couchbase.org/#/c/59264,4,dcf2810f45e00deace89e772d90433b32686a733,7e057f0b05c5119f828664878e245aa602555f5e,1,29/01/16,29/01/16,27,JVMCB-284: Don't allocate while extracting flags from get response.,"JVMCB-284: Don't allocate while extracting flags from get response.

Motivation
----------
There is no reason to allocate a new buffer just because we need to
extract the flags on a get response.

Modifications
-------------
The whole method call and allocation can be removed just by reading
the extra flags right away. Also, in addition the ctx doesn't need
to be passed into the method since its not needed anymore.

Result
------
Less allocations on get requests/responses.

Change-Id: I6ca30afc9e355b8ab0135a3ff8f98120262bd169",0,1,0,0,0,1,1,0,0
59265,Ie53e171258522b605d28f99b44e3fb2ba512553f,http://review.couchbase.org/#/c/59265,3,7e057f0b05c5119f828664878e245aa602555f5e,557fff4f6483bcf888d10283bfcb2eeee9d527c8,1,29/01/16,29/01/16,5,Cache bucket config lookup.,"Cache bucket config lookup.

Motivation & Modifications
--------------------------
This small change looks up the config once and then caches it. Previously two lookups were performed,
one to check if the config exists and then another one to actually load the config.

Change-Id: Ie53e171258522b605d28f99b44e3fb2ba512553f",0,0,0,0,0,1,1,0,0
59334,I97cc91a5d7580ae7fd387cb7544f5b911aedfa3c,http://review.couchbase.org/#/c/59334,2,6de689cf560eed937b6c6e20a001afd3a85541b4,5781f8a3ac31b7fa817d1ca3f0688189b47bf58f,1,01/02/16,01/02/16,72,JVMCBC-285: Cache enabled services on a per node level.,"JVMCBC-285: Cache enabled services on a per node level.

Motivation
----------
During testing it was found that the round robin node locators might
pick up the wrong node in a MDS scenario. In order for them to know
where to send the queries in the first place, it makes sense
(as an optimization) that the node itself knows which service is
currently enabled.

Modifications
-------------
Each node now remembers what services are enabled (based on an
efficient bitmap) and lookups are cheap (one volatile load) and
some simple bitshift arithmetic.

Result
------
The exposed method can be used by the locators to pick the right
nodes in the first place.

Change-Id: I97cc91a5d7580ae7fd387cb7544f5b911aedfa3c",0,0,0,0,0,1,1,0,0
59339,I74ae3ae22c5cf98f0016fd84c1e545435bdbcc87,http://review.couchbase.org/#/c/59339,3,5781f8a3ac31b7fa817d1ca3f0688189b47bf58f,3a940c3fbba8ebe29e5eb86418b60844c0ae0fd9,0,01/02/16,01/02/16,36,JVMCBC-286: Enforce usage of Java 6 APIs only,"JVMCBC-286: Enforce usage of Java 6 APIs only

Motivation:
-----------
When developing against a recent JDK, it's not sufficient to just set
the targetVersion to 1.6, as the compiler will happily produce Java 6
bytecode that uses APIs introduced in a more recent version (eg Java 8).
This results in code that can't run on a Java 6 JRE.

The Animal-Sniffer tool has a Maven integration that allows to check for
such bad usage and prevent the build process to finish.

Modifications:
--------------
Used Animal-Sniffer Maven plugin to enforce correct usage of JDK 6 APIs
only. Exception is added to Diagnostics class by way of an annotation
since this class uses APIs only available in the Sun/Oracle implems but
in a safe guarded way.

Result:
-------
Using a too new API when developing against a recent JDK will be
detected when using Maven to build, and refused.

Change-Id: I74ae3ae22c5cf98f0016fd84c1e545435bdbcc87",0,0,0,0,0,1,1,NA,NA
59340,I0db7f30784b3839318c61fefca2f5fddd6ea1305,http://review.couchbase.org/#/c/59340,3,5fcb539c73282050bd1f3de78efee2f88f8f7057,765f727d477ccd3bd942f8547800a8dc48927aa5,1,01/02/16,01/02/16,94,WIP: switch from set to list to allow index access,"WIP: switch from set to list to allow index access

Change-Id: I0db7f30784b3839318c61fefca2f5fddd6ea1305",0,0,0,1,0,1,1,0,0
59341,Iff607a2de49aef1ab099b42d4f2199b5c7c2f53c,http://review.couchbase.org/#/c/59341,4,8a64abe8346ccd0291ac14221daf714e7a8c9a10,c55723c92d89abafcbd61c3c8f788f914b57ed66,1,01/02/16,01/02/16,291,wip: adapt locators,"wip: adapt locators

Change-Id: Iff607a2de49aef1ab099b42d4f2199b5c7c2f53c",0,1,0,1,0,1,1,0,0
59450,I6d0df35609726e74e3ee9390120c658b1192ceb2,http://review.couchbase.org/#/c/59450,2,c55723c92d89abafcbd61c3c8f788f914b57ed66,6708a3a6d8636a84b282cf9de9422b4c3a0e17e0,0,03/02/16,03/02/16,2,Prepare 1.2.4 Release,"Prepare 1.2.4 Release

Change-Id: I6d0df35609726e74e3ee9390120c658b1192ceb2",0,0,0,1,0,1,1,NA,NA
59506,I9cda651ab64b9f86bf24c6b9fd45a53c225def74,http://review.couchbase.org/#/c/59506,2,6708a3a6d8636a84b282cf9de9422b4c3a0e17e0,0c63c3e6ebe531b47b5047f208673acdd3284acf,1,04/02/16,16/02/16,492,JVMCBC-289: One result / cmd on subdoc multimutate,"JVMCBC-289: One result / cmd on subdoc multimutate

Motivation
----------
Change to the subdocument protocol during development introduced the
notion of individual results in a multi-mutation. For now only commands
that return a value include a result (so the binary message could have
between 0 and N individual results).

Modifications
-------------
Renamed LookupResult to MultiResult and made it accept either a Lookup
or a Mutation as the operation.
This is now used by both MultiLookupResult and MultiMutationResult.

When decoding the multi mutation response, also recreate a MultiResult
for individual commands that didn't get an explicit result in the msg
so that list of commands and list of results are the same size.

Result
------
MultiMutationRequest can be made and including a COUNTER command will
have the new counter value in the response.

Change-Id: I9cda651ab64b9f86bf24c6b9fd45a53c225def74",0,0,1,0,0,1,1,2,1
59507,Icf7fdab5f50189189de24d2cb4e0e7953d1fa772,http://review.couchbase.org/#/c/59507,2,4009e5d2e1e5d491be64cf1aae6fece1471726a4,5075282f45145bac3e5eb6e3654fa47df51c1734,0,04/02/16,04/02/16,2,Start development of 1.2.5,"Start development of 1.2.5

Change-Id: Icf7fdab5f50189189de24d2cb4e0e7953d1fa772",0,0,0,1,0,1,1,NA,NA
59869,I4b20f33c564daca651a1d19acd8917adf663c020,http://review.couchbase.org/#/c/59869,3,5075282f45145bac3e5eb6e3654fa47df51c1734,348568e57a8773bd0b3aae6b8b61100d2254dc81,1,12/02/16,15/02/16,2,JVMCBC-290 Do not initialize DCP for nodes without binary protocol,"JVMCBC-290 Do not initialize DCP for nodes without binary protocol

Motivation
----------
DCP protocol requires port for binary protocol (memcached), so it fails
to initialize service without it.

Modification
------------
Check that node has memcached service before activating DCP

Result
------
DCP works in MDS cluster

Change-Id: I4b20f33c564daca651a1d19acd8917adf663c020",0,0,1,0,0,1,1,0,0
59951,I064483a5c94e1fb986571d643e81f414f3b4d846,http://review.couchbase.org/#/c/59951,2,609443aab2a88bbd34837ec2bd6f3065ee6d10d0,cbcf76306cec04f41d83b4dc6e4f13f9c7944ef3,1,15/02/16,15/02/16,51,JVMCBC-291: Improve ExponentialDelay documentation,"JVMCBC-291: Improve ExponentialDelay documentation

Motivation:
-----------
The usage and behavior of ExponentialDelay is a bit too unclear. Eg to
achieve a delay pattern of 500ms, 1s, 2s, 4s, 4s, it is not obvious that
the growBy factor of 500 must be used rather than a lower bound of 500.

Modifications:
--------------
Added more extensive javadoc on the ExponentialDelay and Delay factory
methods.
Tests also test the attempt == 0 case.

Result:
-------
Clearer pattern of usage and examples when discovering the api of the
ExponentialDelay through javadocs.

Change-Id: I064483a5c94e1fb986571d643e81f414f3b4d846",0,0,0,0,0,0,0,0,0
59954,I6c3f9010d26a763099f49749d6ebf9d5a2b00e68,http://review.couchbase.org/#/c/59954,2,cbcf76306cec04f41d83b4dc6e4f13f9c7944ef3,4c859f26651c971aea8e1c74954760df1ea3ce7a,1,15/02/16,15/02/16,4,"JVMCBC-293: Fix ExponentialDelay overflow guard, 64 bits not 32","JVMCBC-293: Fix ExponentialDelay overflow guard, 64 bits not 32

Motivation:
-----------
ExponentialDelay overflow protection for the bitshift operation is too
eager, the 32 attempt overflow could occur every 64 attempt instead if
the operand was 1L (long) instead of 1 (int).

Modifications:
--------------
The bitshift operation now applies on a long and capping occurs starting
from attempt 64, not 32.

Result:
-------
ExponentialDelay more accurately deals with attempts 32 to 64 by having
the bitshift operator apply on a long. Other attempts correctly capped
at Long.MAX_VALUE.

Change-Id: I6c3f9010d26a763099f49749d6ebf9d5a2b00e68",0,0,0,0,0,0,0,0,0
59958,I22f6daa861a65b98ec7f38915e6def5afded2c2b,http://review.couchbase.org/#/c/59958,2,4c859f26651c971aea8e1c74954760df1ea3ce7a,39f23dfba604e9828a0f7e07102c329eed87f738,1,15/02/16,15/02/16,176,JVMCBC-292: Allow different base for ExponentialDelay powers,"JVMCBC-292: Allow different base for ExponentialDelay powers

Motivation:
-----------
ExponentialDelay growth is based on powers of 2. It could be interesting
to allow steeper growth by providing a different one (eg. powers of 10).

Modifications:
--------------
Added a powersOf parameter that allows to use powers of a different base
and not just powers of two. Added related Delay factory method and unit
tests.
The powersOf lowest value is 2, which uses the bitshift optimization.
Other bases use Math.pow.

Result:
-------
ExponentialDelay can have steeper growth curve by using power base that
is larger than 2.

Change-Id: I22f6daa861a65b98ec7f38915e6def5afded2c2b",0,0,0,0,0,0,0,0,0
59972,I3eaad43c08bd63d82dec8c31a68e2ad27ff18118,http://review.couchbase.org/#/c/59972,2,681838866ea7e1af2b4449ec79a37716abb832db,fe9c48a1f53cdb1ddbcf7dcf90533db0567d41af,1,15/02/16,15/02/16,108,JVMCBC-294: Apply credentials on search requests.,"JVMCBC-294: Apply credentials on search requests.

Motivation
----------
FTS now expects the request to contain appropriate credentials.

Modifications
-------------
As with the other query methods, the search handler now properly adds
credentials to the http request.

Since the same code had been duplicated across the handlers, it is now
unified into a single helper method in the AbstractGenericHandler.

Result
------
FTS queries can be performed against password protected buckets.

Change-Id: I3eaad43c08bd63d82dec8c31a68e2ad27ff18118",0,0,0,0,0,1,1,0,0
60044,Ia99775c970a44fd4674b6879e43bd4b8921a6173,http://review.couchbase.org/#/c/60044,2,92673a15923c8c4b8843bfb098bb772d555225e6,85e2cc4e0a6bc1309d812a555348eb7424b60dce,1,16/02/16,16/02/16,5,Disable SCRAM-SHA* by default.,"Disable SCRAM-SHA* by default.

Motivation
----------
Because the watson dp release has some issues regarding SCRAM,
the client code which uses it should be disabled by default.

Modifications
-------------
An undocumented property com.couchbase.scramEnabled is introduced
which is set to false and can be set to true to force using it,
mostly for internal testing going forward.

Once the server works as expected, this property will be removed
and the code is enabled all the time.

Result
------
DP testing is not blocked, but SCRAM can be enabled on demand
for further testing.

Change-Id: Ia99775c970a44fd4674b6879e43bd4b8921a6173",0,0,0,0,0,1,1,0,0
60120,Ic455723cb24a24d5428515ca7e27a47dd8258266,http://review.couchbase.org/#/c/60120,2,85e2cc4e0a6bc1309d812a555348eb7424b60dce,7c37f712d745ef59449bf8e8eb0eb8e523d6f7f7,1,17/02/16,17/02/16,7,JVMCBC-295: Use Yield instead of BlockingWaitStrategy for lower latency.,"JVMCBC-295: Use Yield instead of BlockingWaitStrategy for lower latency.

Motivation
----------
When investigating potential improvements in throughput and latency, it
was discovered that th default BlockingWaitStrategy on the RingBuffer is
probably not the best choice.

Modifications
-------------
The code now uses the YieldWaitStrategy which instead of using a lock
now uses Thread.yield. This also reduces GC slightly since those locks
don't need to be collected all the time.

Result
------
Slighly better performance in general.

Change-Id: Ic455723cb24a24d5428515ca7e27a47dd8258266",0,0,0,0,0,1,1,0,0
60653,I7ef6598766a9ee513f641c79c99e064d3fe6638f,http://review.couchbase.org/#/c/60653,2,099cfe7f78efc57eca968d99dc50ed9921780cfb,e1bca977bda44582f31325c2ebef0da0445ae77c,0,29/02/16,01/03/16,4,JVMCBC-297: include memcached header for flow control buffer,"JVMCBC-297: include memcached header for flow control buffer

Motivation
----------
When flow control enabled, the server can stop transmission. It happens
earlier for smaller flow control buffer size

Modification
------------
Take header size into account when calculating received data.

Result
------
Flow control works as expected

Change-Id: I7ef6598766a9ee513f641c79c99e064d3fe6638f",0,0,0,0,0,1,1,NA,NA
60690,I3dfffe709ac18d13013216d661704b26b0f3a7db,http://review.couchbase.org/#/c/60690,2,0798586003234772cbac6d3c96c605259cde3ef3,6867cf5fa26ca669b50831da0e3d8321b336696b,0,01/03/16,01/03/16,32,Add regression test for MB-15727.,"Add regression test for MB-15727.

Change-Id: I3dfffe709ac18d13013216d661704b26b0f3a7db",0,0,0,1,0,1,1,NA,NA
60691,Ia8f71ec0ca131a494ead3af3d026cee9267a53b4,http://review.couchbase.org/#/c/60691,2,6867cf5fa26ca669b50831da0e3d8321b336696b,7dc5978f46e2d24366307d5c3d246e1a001c0081,1,01/03/16,01/03/16,7,"Revert ""JVMCBC-295: Use Yield instead of BlockingWaitStrategy for lower latency.""","Revert ""JVMCBC-295: Use Yield instead of BlockingWaitStrategy for lower latency.""

This needs more investigation if the higher CPU usage really is worth a performance
benefit.

This reverts commit a4e62d3bf8ba9f949881395cd5140ad6f4230386.

Change-Id: Ia8f71ec0ca131a494ead3af3d026cee9267a53b4",0,0,0,0,0,0,0,0,0
60694,Ifc1c67b6da92084981e1a46e0c629688f3a046dd,http://review.couchbase.org/#/c/60694,2,7dc5978f46e2d24366307d5c3d246e1a001c0081,d1c4a628e198e649d266370ce2037831b7c99770,0,01/03/16,01/03/16,8,"Ignore MB-15727 test case pre 4.5.0, since its been fixed only there.","Ignore MB-15727 test case pre 4.5.0, since its been fixed only there.

Change-Id: Ifc1c67b6da92084981e1a46e0c629688f3a046dd",1,0,0,1,0,0,1,NA,NA
60695,I85990fb9a7f83c0c435e0d29cb13ca5b5c7f8da9,http://review.couchbase.org/#/c/60695,2,d1c4a628e198e649d266370ce2037831b7c99770,0877c8c80e53f85061b9bd6d60e60733d2962bb7,0,01/03/16,01/03/16,2,Prepare 1.2.5 Release,"Prepare 1.2.5 Release

Change-Id: I85990fb9a7f83c0c435e0d29cb13ca5b5c7f8da9",1,0,0,1,0,0,1,NA,NA
60701,Ib052fee4f87635b1f3ba28cc309e9cd450f281fb,http://review.couchbase.org/#/c/60701,2,0877c8c80e53f85061b9bd6d60e60733d2962bb7,46edc56ffeb8187ebfaa826c2625ad760b182db7,0,01/03/16,01/03/16,2,Start Development on 1.2.6,"Start Development on 1.2.6

Change-Id: Ib052fee4f87635b1f3ba28cc309e9cd450f281fb",0,0,0,1,0,0,1,NA,NA
60731,Id203630f1beb59f54e18ae8c3de63779c2ae4545,http://review.couchbase.org/#/c/60731,3,46edc56ffeb8187ebfaa826c2625ad760b182db7,a5cf1bec0d21018802b0fe6d89bf04655b2b57d6,1,01/03/16,05/03/16,115,JVMCBC-298: Implement 0x97 to get last closed checkpoint,"JVMCBC-298: Implement 0x97 to get last closed checkpoint

Motivation
----------
DCP stream continuation requires the point in history of partition. One
way is to persist it on the consumer side. But to implement ""listen from
now"" strategy there is should be a way to get the last sequence number.

Modification
------------
Implement handler for command 0x97 which returns sequence number for
given partition.

Result
------
It is possible to fetch sequence number for arbitrary partition, and use
it to initialize DCP stream.

Change-Id: Id203630f1beb59f54e18ae8c3de63779c2ae4545",0,0,1,0,0,1,1,0,0
60830,I25da18c8691aea939b855792c4f149c33df56116,http://review.couchbase.org/#/c/60830,3,4e5c1f208ca019b506524634c9f4ec47e3acd50b,2569f1dfac5e6539ce0f770f905f900dbae20f66,1,03/03/16,03/03/16,119,Reformatting and Refactoring of RequestHandler,"Reformatting and Refactoring of RequestHandler

Motivation
----------
This changeset slightly reformats the RequestHandler and also splits out
the big ""onEvent"" method into smaller method chunks. This allows for
better inlining and easier maintenance.

The only functional change is that when a new config arrives it is
always published onto the event bus, since the bus itself checks if
it has subscribers (avoid double checking).

The branching on found Nodes has been improved to have the common case
(nodes found) in the if block.

Change-Id: I25da18c8691aea939b855792c4f149c33df56116",0,0,0,0,0,1,1,0,0
60831,I4898d4632eb1d8b80f526e6650241977e9b681c5,http://review.couchbase.org/#/c/60831,8,a6d522fa6674d1e553f2a44d4b4af12286a441f4,9f3e18a38c2fdeb0f119432cc332b62c6ea56c8a,1,03/03/16,11/03/16,183,WIP: allow to pushback from the DCP consumer,"WIP: allow to pushback from the DCP consumer

fixes KAFKAC-32, KAFKAC-33

Change-Id: I4898d4632eb1d8b80f526e6650241977e9b681c5",0,1,1,0,0,1,1,-1,0
60836,I12e2bacda95b494abb01b8f3533638eb49974f46,http://review.couchbase.org/#/c/60836,5,fce6b44e2a36ab6cb4ed55ce19c139321445cb0c,5e4d9594b06eb1a51502629e2226c1978552b214,1,03/03/16,03/03/16,473,WIP: avoid Node[] indirection,"WIP: avoid Node[] indirection

Change-Id: I12e2bacda95b494abb01b8f3533638eb49974f46",0,1,0,1,0,1,1,0,0
60844,Icab64e98a91927028875e5c4dbc1b3e31e5d4394,http://review.couchbase.org/#/c/60844,2,84e683ea8a2e8e1597bcc20a1f62a91eab2f2a22,2593a2d7d93f4c08c63c2cd0557725b8542e218b,1,03/03/16,03/03/16,37,JVMCBC-300: Use voidPromise to save allocations on netty write.,"JVMCBC-300: Use voidPromise to save allocations on netty write.

Motivation
----------
Originally the code had a listener in place which would log unknown
failures on write. This is convenient, but in the ""good"" case it adds
unnecessary allocations on every request. On a 5 minute run with 10k ops/s
this is around 100MB.

Modifications
-------------
This changeset gets rid of the listener and uses the voidPromise to avoid
the costly promise allocations which are not used anymore. Note that we are
not actually loosing any information, since all exceptions will be logged
and properly handled in the AbstractGenericHandler#exceptionCaught method.

It is also necessary to change the idle state handlers from ""read and write""
to just ""read"" timeouts since on write it is performing the refreshing with
a write callback. For the purposes of the SDK it does not make a difference
if we just check on read, since we always have a request -> response flow
(and are not just blindly writing or only listening).

Result
------
Less allocations on the hot code path.

Change-Id: Icab64e98a91927028875e5c4dbc1b3e31e5d4394",0,0,0,0,0,1,1,0,0
60851,I89dbac076017f75d983c81996109aef82cfd5c2d,http://review.couchbase.org/#/c/60851,4,03da468ba69a7f4bd493f02ba5144fc652982311,a409291b88784d858011d7538f619c62e3474b12,1,03/03/16,03/03/16,17,JVMCBC-301: Avoid Class.getSimpleName() overhead on every request,"JVMCBC-301: Avoid Class.getSimpleName() overhead on every request

Motivation
----------
It turns out that getSimpleName() on the class calls toString on it
which has garbage overhead.

Modifications
-------------
Since we have a limited number of possible operations that are performed,
it makes sense to cache the resulting string in a map (which doesn't need
to be sync) and avoid the toString() overhead. Since it is a small HashMap,
the get() lookup has a little bit of overhead, but it is small enough to
provide benefit over not creating the garbage on every request.

Result
------
Less garbage created on the IO thread on every request.

Change-Id: I89dbac076017f75d983c81996109aef82cfd5c2d",0,1,0,0,0,1,1,0,0
60855,I9435b97dfab4092d3418a7730d792288dae98180,http://review.couchbase.org/#/c/60855,3,a409291b88784d858011d7538f619c62e3474b12,ca9f25e72116527090ebca678b057fa24bbba457,1,03/03/16,03/03/16,66,wip: direct scheduling,"wip: direct scheduling

Change-Id: I9435b97dfab4092d3418a7730d792288dae98180",0,0,0,1,0,1,1,0,0
60860,I3a34a5219a449011af02e37fa3156367132f7be7,http://review.couchbase.org/#/c/60860,2,ca9f25e72116527090ebca678b057fa24bbba457,4f4a8de8b0f0d244cf488ace1a8084938b4d5a21,1,03/03/16,03/03/16,190,JVMCBC-302: Split up classes to make them inlineable.,"JVMCBC-302: Split up classes to make them inlineable.

Motivation
----------
This changeset splits up the AbstractGenericHandler::decode as well
as the KeyValueHandler::encodeRequest classes to be properly inlineable
by the JVM.

No changes were made to behaviour.

Change-Id: I3a34a5219a449011af02e37fa3156367132f7be7",0,0,0,0,0,1,1,-1,0
60861,I031b52da8917a0c6ae903bfe8904bbfffbcdbabd,http://review.couchbase.org/#/c/60861,3,4f4a8de8b0f0d244cf488ace1a8084938b4d5a21,c67d49bf8006f04b7e2eb1f3dc284dadf5c998d2,1,03/03/16,03/03/16,8,Use proper generics on RequestHandler and ResponseHandler,"Use proper generics on RequestHandler and ResponseHandler

Change-Id: I031b52da8917a0c6ae903bfe8904bbfffbcdbabd",0,0,0,1,0,1,1,0,0
60928,I337114ffdda220c985053af5b54733601519d074,http://review.couchbase.org/#/c/60928,6,1fc3aaa170928631540741219eaa845105cf3496,91369a3fc2a0eab14b566b21b05ab73a330514f4,1,04/03/16,10/03/16,224,JVMCBC-304 Extract common interface for DCP data messages,"JVMCBC-304 Extract common interface for DCP data messages

Motivation
----------
Connectors, which built upon the core, often need to differentiate
between interesting data events (mutation, deletion, etc.) and service
events (create new stream, query failover logs, etc.).

Modification
------------
Extract DCPMessage interface, and move common data to the abstract base
class.

Result
------
Better API

Change-Id: I337114ffdda220c985053af5b54733601519d074",0,1,1,0,0,1,1,-1,0
60929,I78ac196e97a7bbf5e247a9782a1346de83c33a06,http://review.couchbase.org/#/c/60929,2,06cdfeca029db101fee749781a4e9dac19e1a997,e18885849ca2ca48179316752391b4014c5b20c7,1,04/03/16,05/03/16,85,JVMCBC-298: Use 0x97 to get last closed checkpoint for partition,"JVMCBC-298: Use 0x97 to get last closed checkpoint for partition

Motivation
----------
Command 0x48 returns is not very reliable, because it returns only
sequence numbers for the node.

Modification
------------
Rewrite state gathering using 0x97 (get last closed checkpoint), in
combination with 0x54 (get failover logs).

Result
------
More reliable gathering current state of the cluster

Change-Id: I78ac196e97a7bbf5e247a9782a1346de83c33a06",0,0,0,0,0,1,1,0,0
61170,I1780a9f21664b00b32a75475e49dcd1f3a0705a0,http://review.couchbase.org/#/c/61170,3,e18885849ca2ca48179316752391b4014c5b20c7,f5b695749910af1176d089b2ea70456cfcab296b,1,09/03/16,10/03/16,78,JVMCBC-306: Allow optional Observable completion on the Event Loops,"JVMCBC-306: Allow optional Observable completion on the Event Loops

Motiviation
-----------
As an advanced option it should be possible to complete the observables
on the IO event loops. This is disabled by default for safety reasons,
but if the user knows what they're doing they can get noticeable
improvements because we need to do less movement across thread
boundaries.

Modifications
-------------
The appropriate environment option has been added and the functionality
implemented in the netty handler.

The builder has a warning sign on it saying this is only for advanced
usage.

Result
------
Potentially better performance for users who know what they are
doing.

Change-Id: I1780a9f21664b00b32a75475e49dcd1f3a0705a0",0,0,0,0,0,1,1,0,0
61412,I72306727c3e744415b2367b9cfb18e10fe0569fc,http://review.couchbase.org/#/c/61412,2,f5b695749910af1176d089b2ea70456cfcab296b,8261a5cbeb280ca7f7c10213a19de8bd03978872,1,14/03/16,14/03/16,68,JVMCBC-308: Refactor Selection Strategies.,"JVMCBC-308: Refactor Selection Strategies.

Motivation
----------
This changeset gives some love to the selection strategies and
cleans them up a bit.

Modifications
-------------
The selection strategies have been mildly refactored and also
slightly optimized (and one bug fixed).

 - The Partition strategy now optimizes the common case where
   only one endpoint is available and if this is the case avoids
   the modulo operation. Also a small bug has been fixed where the
   > 0 should actually be >= 0 since 0 is a valid partition.
   Finally since no global state needs to be tracked, the strategy
   is a singleton now.
 - The random strategy now uses a thread local for random which
   provides stronger guarantees when called from more than one
   thread (this is currently not the case, but can be in the future).

Result
------
Strategies refactored, slightly optimized and a small bug fixed.

Change-Id: I72306727c3e744415b2367b9cfb18e10fe0569fc",0,0,0,0,0,1,1,0,0
61413,I903f7b6d9c236c5cd3b727513bbd39cb4459a974,http://review.couchbase.org/#/c/61413,3,23459826830be78fea05314895840c2a3d56b0fc,a405d97ec206579a1f702b2fda5d276d80b766a6,1,14/03/16,14/03/16,31,JVMCBC-309: Gracefully handle errors during metrics collection.,"JVMCBC-309: Gracefully handle errors during metrics collection.

Motivation
----------
Since the underlying histogram can have bugs or we feed it invalid
timings somehow, it can throw an exception and as a result it will
bubble into our IO event loops.

Since metrics collection is considered support functionality, it
should under no circumstance interfer with the actual IO processing.

Modifications
-------------
try/catch is placed around the metrics collection logic and if an
error is detected it is logged for proper inspection.

Result
------
If errors happen during latency metrics collection, they are not
affecting the actual IO workload  but are logged for proper
supportability.

Change-Id: I903f7b6d9c236c5cd3b727513bbd39cb4459a974",0,0,0,0,0,1,1,0,0
61414,I7d896108b7a22bda54e1ff6dbfda431a4e038cd7,http://review.couchbase.org/#/c/61414,4,f6147c9490d5e78da3e7618a56a91705de6365d1,4c1c29d40628ca7da80df0f1f89fe71f7e024aab,1,14/03/16,14/03/16,223,JVMCBC-310: Do not encode key twice.,"JVMCBC-310: Do not encode key twice.

Motivation
----------
Right now the netty memcached codec takes the key as a string
and performs encoding internally. This is problematic, since
the SDK itself also needs to encode the key for routing
purposes so as a result the key ends up to be encoded twice
from its String representation into a UTF-8 byte array.

This procudes unnecessary garbage and wastes CPU cycles.

Modifications
-------------
We already encode the key into a byte array when the request
is created, so the netty codec is changed to take a byte[]
instead of a String and write it down directly.

Note that while upstream netty has a change implemented that
makes the key a ByteBuf, this intermediate change has nearly
the same effect and allows us to reduce the leak potential
to a minimum. Once internally we upgrade to netty 4.1, this
needs to be revisited since it will break the API (internally).

This changeset has no visible API or behavior impact for the user.

Result
------
Less garbage created and less work to do on the hot code path.

Change-Id: I7d896108b7a22bda54e1ff6dbfda431a4e038cd7",0,1,0,0,0,1,1,0,0
61507,Id957c96cb487dab9f010227ce86f40825259c932,http://review.couchbase.org/#/c/61507,3,4c1c29d40628ca7da80df0f1f89fe71f7e024aab,19346a329f802b9afb54778425a21463a6e8c6ea,1,15/03/16,15/03/16,1,KAFKAC-37: do not release buffer without copy,"KAFKAC-37: do not release buffer without copy

Motivation
----------
Release buffer without cloning it, results in netty.util.IllegalReferenceCountException

Modification
------------
Remove extra release() call

Result
------
No exceptions in runtime

Change-Id: Id957c96cb487dab9f010227ce86f40825259c932",0,0,0,0,0,1,1,0,0
61512,Iedd8268eddd898677844a80c32cb184c5db9a7ad,http://review.couchbase.org/#/c/61512,13,19346a329f802b9afb54778425a21463a6e8c6ea,2145010924f1fbd008147a23ff952b0d9e443f20,1,15/03/16,30/03/16,2015,JVMCBC-312: use the same logical connection for all DCP nodes,"JVMCBC-312: use the same logical connection for all DCP nodes

Motivation
----------
DCP connection have to be opened on each node separately, but from the
SDK perspective, there is only one logical connection and stream. But
current implementation was creating logical connection for every node,
and only first connection was actually visible to the consumer.

Modification
------------
Maintain map of logical connection, and reuse it when new DCP connection
with the same name has been requested. Also dispose the connection only
when all streams from all nodes has been closed.

Result
------
No missing messages anymore

Change-Id: Iedd8268eddd898677844a80c32cb184c5db9a7ad",0,1,1,0,1,1,1,-2,0
61821,I9b717902c04d057b1c3e5feb43e68829490d9abd,http://review.couchbase.org/#/c/61821,2,c86ab78ffa48fd675e72b9e550e4dcd99734b738,c0a02c1049cb6fb29ad1893adff7f4e7a7249297,0,22/03/16,25/03/16,6,"Fix subdoc counter test (JCBC-931, error code change)","Fix subdoc counter test (JCBC-931, error code change)

Motivation:
-----------
Between Couchbase 4.5 DP and BETA, an error code change was implemented
for counter operations, from SUBDOC_DELTA_RANGE to VALUE_CANTINSERT.

Modification:
-------------
Fixed the integration test to assert the new error code rather than the
old one.

Result:
-------
Subdoc integration tests pass with Couchbase Server 4.5 builds after DP.

Change-Id: I9b717902c04d057b1c3e5feb43e68829490d9abd",0,0,1,0,0,1,1,NA,NA
61925,If03e81bffd0432a6ed4252d737a4f2cf0501e6d1,http://review.couchbase.org/#/c/61925,2,31aa0d6211fedada2133a948704ed48a954d7a1b,9d8a4bddc7a11e2896bc754252f895a1dd4cb58b,1,24/03/16,24/03/16,2,JVMCBC-315: Use double for ack threshold in Builder,"JVMCBC-315: Use double for ack threshold in Builder

Change-Id: If03e81bffd0432a6ed4252d737a4f2cf0501e6d1",0,0,0,1,0,1,1,0,0
61982,If60cffaae1182905d83c778d5166322f9b2db2ad,http://review.couchbase.org/#/c/61982,2,0c540318a5397caf1f44a82a2715acd76d73f337,80c94fc1acdf01c85aac062eac2d16b7441bf09a,0,25/03/16,25/03/16,8,JVMCBC-316: Bump Internal Dependencies to their latest bugfix rels.,"JVMCBC-316: Bump Internal Dependencies to their latest bugfix rels.

 - Netty to 4.0.35
 - Disruptor to 3.3.4
 - Jackson to 2.6.5
 - LatencyUtils to 2.0.3

Change-Id: If60cffaae1182905d83c778d5166322f9b2db2ad",0,0,0,0,0,0,0,NA,NA
61986,I633846ece7b18eb0bd3bc866f0737d0e6d66ed91,http://review.couchbase.org/#/c/61986,7,80c94fc1acdf01c85aac062eac2d16b7441bf09a,bd4e8c13f32704d5569fc7d4d5069f29e17722fd,1,25/03/16,25/03/16,61,rename netty native lib in the shaded jar,"rename netty native lib in the shaded jar

Change-Id: I633846ece7b18eb0bd3bc866f0737d0e6d66ed91",0,1,0,1,0,1,1,0,0
61990,I6f2bc090c71720a7bec81b1f8259423ef9eb6896,http://review.couchbase.org/#/c/61990,2,dacef6eed957b15e477312709a26eff8ece544e1,ee21eb00c723373095c840c4ff9b3a4524a4eef8,0,25/03/16,25/03/16,12,[chore] take dependency bump into account in core-io.iml,"[chore] take dependency bump into account in core-io.iml

Change-Id: I6f2bc090c71720a7bec81b1f8259423ef9eb6896",0,0,0,1,0,1,1,NA,NA
62108,Idc8a28cfe2fce581fed2249e0c525423e0f03a8e,http://review.couchbase.org/#/c/62108,2,bda0a74995cd3e96adad251becd60a0a4d8b75dd,c9680e58adf80727a2f78bd4111047c84b8f2e5f,1,29/03/16,30/03/16,14,Log errors on reconnect triggered by channelInactive,"Log errors on reconnect triggered by channelInactive

Change-Id: Idc8a28cfe2fce581fed2249e0c525423e0f03a8e",0,0,0,1,0,1,1,0,0
62168,Ie48ed60c04877c841561af9fe0cb3ad4e214aa0b,http://review.couchbase.org/#/c/62168,2,96a2a00a9e5a74a78698c05d3558ac0e902c3557,d02557dbccf1d4de23475bac9cda5753f514d5e4,1,30/03/16,30/03/16,42,Close DCP connection after each DCP test case,"Close DCP connection after each DCP test case

Change-Id: Ie48ed60c04877c841561af9fe0cb3ad4e214aa0b",0,0,0,1,0,1,1,0,0
62173,I9a6faff02fbe116fb082e92018d26aead115217e,http://review.couchbase.org/#/c/62173,2,d02557dbccf1d4de23475bac9cda5753f514d5e4,1a0bf2dce6518417d88cfc663250c1450c093881,0,30/03/16,30/03/16,2,Prepare 1.2.6 Release,"Prepare 1.2.6 Release

Change-Id: I9a6faff02fbe116fb082e92018d26aead115217e",0,0,0,1,0,1,1,NA,NA
62225,I20f52f48415b8eae909ed4d79c182b8afc08fa46,http://review.couchbase.org/#/c/62225,2,1a0bf2dce6518417d88cfc663250c1450c093881,d0d41964f3eb9f6c31ddaa02218149153c712fc1,0,31/03/16,31/03/16,2,Start 1.2.7 development,"Start 1.2.7 development

Change-Id: I20f52f48415b8eae909ed4d79c182b8afc08fa46",0,0,0,1,0,0,1,NA,NA
62226,I495e6fd63facc663662a6861613ca9a1edb21516,http://review.couchbase.org/#/c/62226,2,d0d41964f3eb9f6c31ddaa02218149153c712fc1,44f1ee0d79c98562631084fcd00ad99f85832bf8,1,31/03/16,31/03/16,2,JVMCBC-313: Enable SCRAM by default.,"JVMCBC-313: Enable SCRAM by default.

Motivation
----------
SCRAM-SHA* should be enabled by default now so that it works automatically
with the upcoming Couchbase Server releases.

Change-Id: I495e6fd63facc663662a6861613ca9a1edb21516",0,0,0,0,0,1,1,0,0
62235,Icf7892f73433c30cef90aa4dcc4531e6456e3692,http://review.couchbase.org/#/c/62235,2,b3e264079171cedac81052271db2e4714173fde5,51aa1ee2159025a54d29b803c817641f3c285509,1,31/03/16,31/03/16,2,JVMCBC-320: Lower the number of IO event loops by default to 3.,"JVMCBC-320: Lower the number of IO event loops by default to 3.

Motivation
----------
The default number of the ""ioPoolSize"" has always been the number
of processors returned by the JVM - This is the default as well in
netty.

In several benchmarking and profiling scenarios there has been no
evidence found that a larger number of event loops is better, since
we are opening hundreds of connections max. Netty has been designed
to handle thousands of those at the same time.

Modifications
-------------
As a result, turning the number of event loops down to 3 by default,
while still keeping it configurable should have no negative impact
on workloads, even in high throughput scenarios.

In fact, the upcoming changes in netty which allow to plug in selector
strategies work better on smaller number of event loops since the cpu
resources are divided with less context switching needed. Other effects
like selector wakeups are also improved since less of them are needed
and traffic is condensed on those threads.

Result
------
Better overall traffic distribution on less number of event loops by
default, since we are running a client and not a server which needs to
handle thousands of connections all the time.

Change-Id: Icf7892f73433c30cef90aa4dcc4531e6456e3692",0,0,0,0,0,1,1,0,0
62246,I4c375e9de93924ec25e9ea574400e11841bd2ce9,http://review.couchbase.org/#/c/62246,2,51aa1ee2159025a54d29b803c817641f3c285509,6b41a33676ba042ae25e9f431a567df2d92652cd,1,31/03/16,31/03/16,2,"Revert ""JVMCBC-320: Lower the number of IO event loops by default to 3.""","Revert ""JVMCBC-320: Lower the number of IO event loops by default to 3.""

This reverts commit 69d0b77f02d2dd97ef918af64e68d4e3b473f312.

Change-Id: I4c375e9de93924ec25e9ea574400e11841bd2ce9",0,0,0,0,0,1,1,0,0
62277,I09c4822a514daf7165d60cbeeb57be1212456c62,http://review.couchbase.org/#/c/62277,4,6b41a33676ba042ae25e9f431a567df2d92652cd,9eda61e253abf5227a835aae00badfe621b958d2,1,01/04/16,27/12/16,5,JVMCBC-321: do not try to conver null keys for STAT,"JVMCBC-321: do not try to conver null keys for STAT

Motivation
----------
The trailing STAT response carries null key, the library should not
try to convert it to String.

Modification
------------
Check stat key for null before conversion.

Result
------
NPE fixed

Change-Id: I09c4822a514daf7165d60cbeeb57be1212456c62",0,1,1,0,0,1,1,0,0
62291,Ice6db88766b2b92f0f6c009ed096ec1848d196f2,http://review.couchbase.org/#/c/62291,2,a16d30a86b71317eb68d25e91f837df82ab106e8,fe07b470392c488caba0753c62974e0ec124cfbe,1,01/04/16,01/04/16,42,JVMCBC-322: Getter for version and build number in env,"JVMCBC-322: Getter for version and build number in env

Motivation:
-----------
Currently there is no way to get only the version string or the build
string (git describe) for the core (they are combined in packageNameAnd
Version).

Modifications:
--------------
Added two methods that output the build-provided version number and
build number (coreVersion() and coreBuild()).

Change-Id: Ice6db88766b2b92f0f6c009ed096ec1848d196f2",0,0,0,0,0,1,1,1,1
62294,I64bba849bb000110359f6f49641d4395a0d34442,http://review.couchbase.org/#/c/62294,2,22e4029d57fd0488e9fd5e8beef9c3ae7345bb5d,4029a60773eb9e489e82d74fdc3362286c187387,1,01/04/16,01/04/16,17,JVMCBC-323: Gracefully handle config completion errors during shutdown.,"JVMCBC-323: Gracefully handle config completion errors during shutdown.

Motivation
----------
When the handler is removed during shutdown, it might be the case that
the scheduler where this is run on is already shutting down and as a
result not taking any more tasks.

Modifications
-------------
Catch the specific exception and print a log message, but don't let it
bubble through the event loop. It's not harmful, but looks a little
nasty in the logs.

Result
------
Less clutter in the logs when this happens during (very often violent)
shutdown.

Change-Id: I64bba849bb000110359f6f49641d4395a0d34442",0,0,0,0,0,1,1,0,0
62301,I19f0e1b8a6c9eaebb15497c3c819acde8b4b2a91,http://review.couchbase.org/#/c/62301,2,b4acdb5452276f1fa39594e3d727350c6a0c4ac3,ff4ca912a20f855f3f5eac486a09ab49300f4bea,1,01/04/16,01/04/16,29,[test] Fix various leaks in QueryHandlerTest,"[test] Fix various leaks in QueryHandlerTest

Change-Id: I19f0e1b8a6c9eaebb15497c3c819acde8b4b2a91",0,0,0,1,0,1,1,0,0
62346,Iae6292429f876ed0bac333fcedaaf40c35b49c3c,http://review.couchbase.org/#/c/62346,5,ff4ca912a20f855f3f5eac486a09ab49300f4bea,7cfdf62265b5139c683beae7017543d4be8e185d,1,04/04/16,04/04/16,101,JVMCBC-324: Allow some requests (n1ql) to target specific node,"JVMCBC-324: Allow some requests (n1ql) to target specific node

Motivation:
-----------
The need has come up for some N1QL queries to be able to target specific
nodes, in order to emulate a broadcast or multicast on some operations.

Modifications:
--------------
Introduced the CouchbasePrelocatedRequest interface that can be used to
mark such requests (and has a getter for the Node on wich to dispatch
the request).

Only QueryLocator takes that interface into account (for now), and any
GenericQueryRequest could be targeted at a specific node that way.

Results:
--------
GenericQueryRequests can be targeted at specific nodes instead of random
ones through QueryLocator strategy.

Change-Id: Iae6292429f876ed0bac333fcedaaf40c35b49c3c",0,1,0,0,0,1,1,1,1
62364,Ia9eb8354343af1119d702ec0e94f634954cd6525,http://review.couchbase.org/#/c/62364,2,ceacea35df279b9525e43a8608038be4e4036660,5c1d9c2261b9d5effac445bb6a7ba21a905248d9,0,04/04/16,04/04/16,8,Bump RxJava and Netty Dependencies,"Bump RxJava and Netty Dependencies

Motivation
----------
RxJava is bumped to 1.0.17 from (1.0.15) for various bugfixes and
enhancements, without API breakage.

The internal netty dependency is bumped from 4.0.35 to 4.0.36 which
contains important enhancements around event loop wait strategy
customization, used in upstream projects for better performance.

Change-Id: Ia9eb8354343af1119d702ec0e94f634954cd6525",0,0,0,0,0,1,1,NA,NA
62441,I65d99c20e2c3ab15a40837488a420b6020fa7a77,http://review.couchbase.org/#/c/62441,2,5c1d9c2261b9d5effac445bb6a7ba21a905248d9,2b2fa5a36c05c16972fac1b24a07731b9ec4d756,0,05/04/16,05/04/16,2,Prepare 1.2.7 Release,"Prepare 1.2.7 Release

Change-Id: I65d99c20e2c3ab15a40837488a420b6020fa7a77",0,0,0,1,0,1,1,NA,NA
62445,I879565ec1de5e6e857b57905acedafc68e8c498b,http://review.couchbase.org/#/c/62445,2,2b2fa5a36c05c16972fac1b24a07731b9ec4d756,c8e7abf0d80ea9a17e2db9cee0df3fbc8c6e3fc8,0,05/04/16,07/04/16,2,Start 1.3.0 Development,"Start 1.3.0 Development

Change-Id: I879565ec1de5e6e857b57905acedafc68e8c498b",0,0,0,1,0,1,1,NA,NA
62479,I3fc6b8c2dcc1327d70aa82738f42da44df57dc1e,http://review.couchbase.org/#/c/62479,3,f03571ba3ca8d3f133ddd98c3af64da3221dacef,4494f1902a60c6b4e528ee539cbeac3350490b13,1,06/04/16,07/04/16,144,wip: fix test leaks,"wip: fix test leaks

Change-Id: I3fc6b8c2dcc1327d70aa82738f42da44df57dc1e",0,0,0,1,0,1,1,0,0
62495,I95e8f0cb5c527ae9d1d3ef3cb651db5ff5fa0fb4,http://review.couchbase.org/#/c/62495,2,7cd6974e99fd93cfea1392021926f2f8b6bae983,1c68c54fa7abb7804455a736ae960ca88ffdad43,1,06/04/16,07/04/16,3,[test] Temporarily ignore the DCPConnectionTest,"[test] Temporarily ignore the DCPConnectionTest

The test currently infinite loops.

Change-Id: I95e8f0cb5c527ae9d1d3ef3cb651db5ff5fa0fb4",0,0,0,0,0,1,1,0,0
62536,If6c5b1b7cfbab8b57f4d3cf944cd50ed8374acb0,http://review.couchbase.org/#/c/62536,2,2361a427ec6a1160b34f496238a6559c68086474,28dd0ad37f3bd7e6e157921a704fa5ae54a86bb7,0,07/04/16,07/04/16,2,Bump RxJava to 1.1.2,"Bump RxJava to 1.1.2

Change-Id: If6c5b1b7cfbab8b57f4d3cf944cd50ed8374acb0",0,0,0,1,0,1,1,NA,NA
62642,I65d6cd978d367419809a4900e0d753a001ba37ef,http://review.couchbase.org/#/c/62642,2,1b9e5cc5f6454da170fa909d2afec003ee9f8c40,33f59e2fbf87d14b8143ac2eabb8e13753dcb83a,0,11/04/16,11/04/16,4,Bump RxJava to 1.1.3,"Bump RxJava to 1.1.3

Change-Id: I65d6cd978d367419809a4900e0d753a001ba37ef",0,0,0,1,0,1,1,NA,NA
62722,Iafcbaeb307e6a481b09c76a7b898351a73e1d8b8,http://review.couchbase.org/#/c/62722,13,33f59e2fbf87d14b8143ac2eabb8e13753dcb83a,4ec53f188f3134658192a6b44d71dc2cca9431a7,1,12/04/16,13/05/16,11445,Relicensing Couchbase copyrighted files from MIT to Apache2,"Relicensing Couchbase copyrighted files from MIT to Apache2

As was the original intention for the LICENCE.

Change-Id: Iafcbaeb307e6a481b09c76a7b898351a73e1d8b8",0,1,0,0,1,1,1,0,0
62831,Iff8e2528dba549d22e963544b08977983087fbfb,http://review.couchbase.org/#/c/62831,3,4a344e893f59106470c06487f6c1a82231470c14,74b5d81fa497b5ad1f6a7d45e7be9ce8123fac25,1,14/04/16,14/04/16,30,JVMCBC-325: Send Host header on all outgoing HTTP requests.,"JVMCBC-325: Send Host header on all outgoing HTTP requests.

Motivation
----------
go 1.6 recently started to check for the mandatory Host header (according
to the RFC). This was not an issue in the past since no component on the
server did care, but now it does. Only the FTS service is affected for now
but when query upgrades this might become an issue there too.

Modifications
-------------
Send the Host header, but cache it in the context so that repeated use
doesn't have to call toString() every time.

Result
------
Compat with go 1.6 on the server side and in general with the HTTP
RFC.

Change-Id: Iff8e2528dba549d22e963544b08977983087fbfb",0,0,0,0,0,1,1,0,0
62919,I9e3408832aa062a3a9244b02d6a7ea5d07fd9abd,http://review.couchbase.org/#/c/62919,7,3f0f5295279f968cd087d96b84bcac94bdb03235,febc39ea962c66cc2a22897a68abfbd8083a99c5,1,15/04/16,18/04/16,231,JVMCBC-326: Fix parsing of json strings ending with 2 backslashes,"JVMCBC-326: Fix parsing of json strings ending with 2 backslashes

Motivation:
-----------
A customer reported that a N1QL query was looping until timeout with
their test dataset.

When looking for row boundaries, both view and query parsers use
ClosingPositionBufProcessor to skip overs what it detects as being part
of a JSON string. To do so, it tracks the end of strings by looking for
a closing quote and checking that it is not preceded by an escaping
backslash.

The thing is, such a backslash could itself be escaped inside the string
by another backslash, and that later case isn't detected, wrongly
assuming the inspected quote isn't the closing one.

Modifications:
--------------
Both ClosingPositionBufProcessor and StringClosingPositionBufProcessor
have json string boundaries detection fixed by remembering the last
processed character AND the one before it. This allows to detect that a
quote preceded by two backslashes is a closing quote.

Added corresponding unit tests to the processors tests.

Added QueryHandler unit test with a payload simulating the same error
conditions as those the customer encountered.

Results:
--------
Streaming parsers can now correctly detect string boundaries of json
strings that end with two backslashes.

QueryHandler can correctly process a payload with double backslashes at
the end of a json string.

Change-Id: I9e3408832aa062a3a9244b02d6a7ea5d07fd9abd",0,1,1,0,0,1,1,0,0
62949,I6f1db47f028260779376367e6a0dabdc7dfc468b,http://review.couchbase.org/#/c/62949,2,e6c84939cd4ba88857b268cd5c2397c0482999f9,93d1f6933d675940be51e42c8e4cbc447c4f208f,1,18/04/16,18/04/16,9,JVMCBC-327: Fix SocketAddress cast in generic handler,"JVMCBC-327: Fix SocketAddress cast in generic handler

Motivation
----------
The AbstractGenericHandler remoteHttpHost retrieves the SocketAddress
from the ChannelHandlerContext but it performs an unverified cast to
a InetSocketAddress. In some instances, most notably tests with an
EmbeddedChannel, the cast can fail.

Modifications
-------------
Added an instanceOf check before the cast, and using toString as a
fallback mechanism (which should only occur in testing situations
anyway, since when the remoteHttpHost method matters is when we are
communicating with a REST endpoint, so through a InetSocketAddress).

Result
------
No more unit tests failing due to a ClassCastException.

Change-Id: I6f1db47f028260779376367e6a0dabdc7dfc468b",0,0,0,0,0,1,1,0,0
63402,I74c5492a4c92123930c987c6bd3690c7fe39f9b3,http://review.couchbase.org/#/c/63402,2,3942af8a90257a7a87ce6d463788d879cc015d40,21cb9724b7099f00248ec9ba890c107d3e6eb2b3,1,27/04/16,27/04/16,22,JVMCBC-330: Enable trace logging of CouchbaseRequests on retry,"JVMCBC-330: Enable trace logging of CouchbaseRequests on retry

Motivation
----------
Since a retry of an operation (especially in a steady state) is
something which should be unusual, it makes sense to log the
amount and retry delay of those requests at TRACE level (to not
spam the logs in an overload condition).

This also allows, if there is a suspicion of retry events going
on but they shouldn't, to specifically enable TRACE logging for
the ResponseHandler only.

Modifications
-------------
The ResponseHandler now logs the retry event with the actual request
as well as the retry delay and unit used.

Result
------
More insight into how and when requests are retried.

Change-Id: I74c5492a4c92123930c987c6bd3690c7fe39f9b3",0,0,0,0,0,1,1,0,0
63467,I95e8f0cb5c527ae9d1d3ef3cb651db5ff5fa0fb4,http://review.couchbase.org/#/c/63467,2,297e64b4ce3f55482d417d8c7251a55f0f09a01b,7d046b49a487568d548b77f8dd83742492498eba,1,28/04/16,29/04/16,3,[test] Temporarily ignore the DCPConnectionTest,"[test] Temporarily ignore the DCPConnectionTest

(backported via cherry pick from commit e83c0cf)

The test currently infinite loops.

Change-Id: I95e8f0cb5c527ae9d1d3ef3cb651db5ff5fa0fb4
Reviewed-on: http://review.couchbase.org/62495
Tested-by: Simon Baslé <simon@couchbase.com>
Reviewed-by: Sergey Avseyev <sergey.avseyev@gmail.com>",0,0,0,0,0,1,1,0,0
63468,I3fc6b8c2dcc1327d70aa82738f42da44df57dc1e,http://review.couchbase.org/#/c/63468,2,7d046b49a487568d548b77f8dd83742492498eba,7cc94dfe5a3b865faee66d2940198a368b11cac2,1,28/04/16,29/04/16,144,[test] Fix leaks in various unit tests,"[test] Fix leaks in various unit tests

Often related to not closing the EmbeddedChannel.

Change-Id: I3fc6b8c2dcc1327d70aa82738f42da44df57dc1e
Reviewed-on: http://review.couchbase.org/62479
Reviewed-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Tested-by: Simon Baslé <simon@couchbase.com>
(backported via cherry pick from commit 9fb6c9c)",0,0,0,0,0,1,1,0,0
63469,Iff8e2528dba549d22e963544b08977983087fbfb,http://review.couchbase.org/#/c/63469,2,7cc94dfe5a3b865faee66d2940198a368b11cac2,eac9539ae7767e8a492d4372045b909fdd90e0b9,1,28/04/16,29/04/16,30,JVMCBC-325: Send Host header on all outgoing HTTP requests.,"JVMCBC-325: Send Host header on all outgoing HTTP requests.

Motivation
----------
go 1.6 recently started to check for the mandatory Host header (according
to the RFC). This was not an issue in the past since no component on the
server did care, but now it does. Only the FTS service is affected for now
but when query upgrades this might become an issue there too.

Modifications
-------------
Send the Host header, but cache it in the context so that repeated use
doesn't have to call toString() every time.

Result
------
Compat with go 1.6 on the server side and in general with the HTTP
RFC.

Change-Id: Iff8e2528dba549d22e963544b08977983087fbfb
Reviewed-on: http://review.couchbase.org/62831
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>
(backported via cherry pick from commit d7ecc3e)",0,0,0,0,0,1,1,0,0
63470,I6f1db47f028260779376367e6a0dabdc7dfc468b,http://review.couchbase.org/#/c/63470,2,eac9539ae7767e8a492d4372045b909fdd90e0b9,c70e7296d3c0c5d1ff5f571f70823c160cc14326,1,28/04/16,29/04/16,9,JVMCBC-327: Fix SocketAddress cast in generic handler,"JVMCBC-327: Fix SocketAddress cast in generic handler

Motivation
----------
The AbstractGenericHandler remoteHttpHost retrieves the SocketAddress
from the ChannelHandlerContext but it performs an unverified cast to
a InetSocketAddress. In some instances, most notably tests with an
EmbeddedChannel, the cast can fail.

Modifications
-------------
Added an instanceOf check before the cast, and using toString as a
fallback mechanism (which should only occur in testing situations
anyway, since when the remoteHttpHost method matters is when we are
communicating with a REST endpoint, so through a InetSocketAddress).

Result
------
No more unit tests failing due to a ClassCastException.

Change-Id: I6f1db47f028260779376367e6a0dabdc7dfc468b
Reviewed-on: http://review.couchbase.org/62949
Tested-by: Simon Baslé <simon@couchbase.com>
Reviewed-by: Sergey Avseyev <sergey.avseyev@gmail.com>
Reviewed-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
(backported via cherry pick from commit 0491580)",0,0,0,0,0,1,1,0,0
63471,I9e3408832aa062a3a9244b02d6a7ea5d07fd9abd,http://review.couchbase.org/#/c/63471,2,c70e7296d3c0c5d1ff5f571f70823c160cc14326,dbae5e3ee09b1e52593d5b060549e7d2274909d9,1,28/04/16,29/04/16,231,JVMCBC-326: Fix parsing of json strings ending with 2 backslashes,"JVMCBC-326: Fix parsing of json strings ending with 2 backslashes

Motivation:
-----------
A customer reported that a N1QL query was looping until timeout with
their test dataset.

When looking for row boundaries, both view and query parsers use
ClosingPositionBufProcessor to skip overs what it detects as being part
of a JSON string. To do so, it tracks the end of strings by looking for
a closing quote and checking that it is not preceded by an escaping
backslash.

The thing is, such a backslash could itself be escaped inside the string
by another backslash, and that later case isn't detected, wrongly
assuming the inspected quote isn't the closing one.

Modifications:
--------------
Both ClosingPositionBufProcessor and StringClosingPositionBufProcessor
have json string boundaries detection fixed by remembering the last
processed character AND the one before it. This allows to detect that a
quote preceded by two backslashes is a closing quote.

Added corresponding unit tests to the processors tests.

Added QueryHandler unit test with a payload simulating the same error
conditions as those the customer encountered.

Results:
--------
Streaming parsers can now correctly detect string boundaries of json
strings that end with two backslashes.

QueryHandler can correctly process a payload with double backslashes at
the end of a json string.

Change-Id: I9e3408832aa062a3a9244b02d6a7ea5d07fd9abd
Reviewed-on: http://review.couchbase.org/62919
Tested-by: Simon Baslé <simon@couchbase.com>
Reviewed-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
(backported via cherry pick from commit edf9a4d)",0,0,0,0,0,1,1,0,0
63472,Id832d1fa5111311d3666bf08490415cdc5c15093,http://review.couchbase.org/#/c/63472,3,b49c5ab6e4c6c424c57de7665bd7c3a0b761e166,04594f0290f049cd8202b39cca2251747baf7791,0,28/04/16,29/04/16,2,Start development of 1.2.8,"Start development of 1.2.8

Change-Id: Id832d1fa5111311d3666bf08490415cdc5c15093",0,0,0,1,0,1,1,NA,NA
63525,I78c6c269c1634c5d11d0d452325bb9677a0bc3ce,http://review.couchbase.org/#/c/63525,2,b0205d17f8cce8ae7ab59cc6eb2327a26e0c022f,150d6a3b20f8be33faefa08ebcc99dd776735bee,1,29/04/16,29/04/16,12,JVMCBC-331: Correctly shut down PauseDetector when used more than once.,"JVMCBC-331: Correctly shut down PauseDetector when used more than once.

Motivation
----------
Right now we only use one latency metrics collector, but if we use more
than one in the future the shutdown of the pause detector would be called
more than once on the one static object.

Modifications
-------------
Instead of shutting down per instance, register a shutdown hook to clean it
up when the JVM shuts down, so it can be reused more than once properly.

Result
------
Correct shutdown of the detector when we extend it in the future.

Thanks to @mp911de for the hint!

Change-Id: I78c6c269c1634c5d11d0d452325bb9677a0bc3ce",0,0,0,0,0,1,1,0,0
63783,I002e55b11e54750bf0c9b6d1fde445e7caa8ed67,http://review.couchbase.org/#/c/63783,2,0ed5a13472acbbaebd1cd84bc7ce539542bf6308,93ca33272b896a99a040d071f8cd184a2cab786c,0,06/05/16,06/05/16,2,Prepare 1.2.8 Release,"Prepare 1.2.8 Release

Change-Id: I002e55b11e54750bf0c9b6d1fde445e7caa8ed67",0,0,0,1,0,1,1,NA,NA
63821,I4eb170b7b405abff309a10857f3919b821bea840,http://review.couchbase.org/#/c/63821,6,5b8be5a4cce7bcfda36542567b6a2db90640ad07,c84d973830b1f0032f1edcfd2e6e2992f64b0191,1,09/05/16,12/05/16,466,wip N1QL parsing of SELECT RAW,"wip N1QL parsing of SELECT RAW

Change-Id: I4eb170b7b405abff309a10857f3919b821bea840",0,1,1,1,0,1,1,0,0
63848,Ic68c236d8917a71baa5b72082da6dcbafa2ee5dd,http://review.couchbase.org/#/c/63848,3,f5643d346ae02b8197f0bbd48e21d03bdbdbaa53,81c1aadba5321e3b93b831d24366ffcd60e18683,1,10/05/16,10/05/16,214,JVMCBC-255: Change CoreEnvironment#shutdown to blocking.,"JVMCBC-255: Change CoreEnvironment#shutdown to blocking.

Motivation
----------
Deprecated since 2.2.0, the shutdown method is now changed from async
to sync, leading to more straightforward behavior and less bugs in the
field (like users forgetting to block on the call and therefore having
an unclean shutdown).

Modifications
-------------
In the process of moving shutdown to sync, a few other things had
to be changed as well:

 - The disconnectTimeout has been moved from the CouchbasEnvironment
   down to the CoreEnvironment since we need one on the now blocking
   shutdown method. The java-client will be modified to take this
   into account as well.
 - Because .timeout() can't be properly used, the Blocking utilities
   have been moved over from java-client as well and can now be removed
   from there if needed. Reason is that if .timeout() is chained in,
   there are thread still pending and the shutdown tests start to
   fail.

Result
------
Easier access to blocking environment shutdown and sane defaults.

Change-Id: Ic68c236d8917a71baa5b72082da6dcbafa2ee5dd",0,0,0,0,0,1,1,0,0
63850,I1391d0ad3ace6d80a7e399a0bf50e9c6e37b57d5,http://review.couchbase.org/#/c/63850,2,c640b4406193a98f8761eacd57357f3a6dcd9bcf,f7fefaf73bd7a8d2f81c1e859a329ec2a24ea2a5,1,10/05/16,10/05/16,115,JVMCBC-271: Remove queryEnabled on the CoreEnvironment,"JVMCBC-271: Remove queryEnabled on the CoreEnvironment

Motivation
----------
This environment flag has been introduced in 2.0 when N1QL was still
experimental and you had to run a separate instance to make it work.
Since this flag is not needed anymore in the 2.2 timeframe we deprecated
it and now taking it away with 2.3, since it is useless and confusing.

Modifications
-------------
Remove the queryEnabled and queryPort from the CoreEnvironment, its
implementation. It also fixes the tests and adapts the internal parts
which made use of it conditionally.

Result
------
No confusing and unneeded queryEnabled/queryPort anymore.

Change-Id: I1391d0ad3ace6d80a7e399a0bf50e9c6e37b57d5",0,0,0,0,0,1,1,0,0
63853,Ida4ff3abf1624b7a53db45cafe7c27969af23c55,http://review.couchbase.org/#/c/63853,2,c24f6b017cdcbbc6d02c3d7bf22bcbd7b18aea07,9accd996623c09a9a7920019f88aa2342b4a3a3a,1,10/05/16,10/05/16,52,JVMCBC-333: Support passing in a custom KeyStore.,"JVMCBC-333: Support passing in a custom KeyStore.

Motivation
----------
It has been requested a few times that especially in larger deployments,
sharing keystores as files is not practical and done through other means.

As a result to support these cases, it must be possible to pass in the
initialized keystore directly instead of the core initializing it from
a file on the users behalf.

Modifications
-------------
Extend the environment so that a KeyStore can be optionally passed in
as well. If this is the case it gets used in the SSLEngineFactory and
it is not looking for a file to load it from.

Result
------
More flexibility in larger deployments on how to initialize the
SSL KeyStore.

Change-Id: Ida4ff3abf1624b7a53db45cafe7c27969af23c55",0,0,0,0,0,1,1,0,0
63867,I1558fbab2ad5c0c46785de67920a715dc48e50eb,http://review.couchbase.org/#/c/63867,4,9accd996623c09a9a7920019f88aa2342b4a3a3a,3b72b81b1a63679bfee762ccee6f6dc67af3ddf2,1,10/05/16,12/05/16,39,Ability to customize the waiting strategy for requests/repsonses on ring buffer.,"Ability to customize the waiting strategy for requests/repsonses on ring buffer.

I have observed that the default strategy (BlockingWaitStrategy) is slowing down The Java client at high throughput rates.
Other alternatives are available which can be use to tune the Java client performance.

Change-Id: I1558fbab2ad5c0c46785de67920a715dc48e50eb",0,1,0,0,0,0,1,0,0
63919,I8cf79ce072723f7ab03bfb35c93c254e4bec63d5,http://review.couchbase.org/#/c/63919,2,338e4c61f45f69e461970f43ef170311a075eae2,70563afd8ff334c8a37f206d056a7c8dcbc165aa,0,11/05/16,11/05/16,10,Bump Dependencies,"Bump Dependencies

 - RxJava 1.1.3 -> 1.1.5
 - (packaged) Jackson 2.6.5 -> 2.6.6

Change-Id: I8cf79ce072723f7ab03bfb35c93c254e4bec63d5",0,0,0,0,0,1,1,NA,NA
64017,Iea3887a146ee2f2d968e3d6f443d2eebe5514522,http://review.couchbase.org/#/c/64017,3,0bdf1076b3c6989a0085daade5b2f7ddc53c6c95,ee0e6dfeed8568b57545ce5bffed3f4ebfa4659b,1,13/05/16,13/05/16,13,JVMCBC-332: Expose retry count directly.,"JVMCBC-332: Expose retry count directly.

Motivation
----------
To make the modified NMVB retry logic function, the code needs to
be able to inspect the current retry count without incrementing it.

Modifications
-------------
Expose the retry count on the CouchbaseRequest without incrementing
it.

Result
------
Other codeparts can now inspect the current retry count without
altering its state.

Change-Id: Iea3887a146ee2f2d968e3d6f443d2eebe5514522",0,0,0,0,0,1,1,0,0
64018,I33086bbda68b353d41d8ec661f4e681721efe7ec,http://review.couchbase.org/#/c/64018,5,238092be35b8ef80002078d8b768b12ec975fec7,aa7ef990f634a2b2b7fe384944fc29536f77cfe4,1,13/05/16,17/05/16,360,wip,"wip

Change-Id: I33086bbda68b353d41d8ec661f4e681721efe7ec",0,1,1,1,0,1,1,0,0
64109,Ia50c314939540294afad5109965897008dddc6e5,http://review.couchbase.org/#/c/64109,3,aa7ef990f634a2b2b7fe384944fc29536f77cfe4,9a987371f7b3f0925777034e3375c6fe5dca4d8d,1,17/05/16,17/05/16,13,JVMCBC-336: Metrics host should not include port.,"JVMCBC-336: Metrics host should not include port.

Motivation
----------
The host section of the latency metric is intended for proper grouping
and including the port defeats this purpose. Previously every host/port
combination got its own toplevel which makes the second level (the service
type) useless.

Modifications
-------------
Only the host address is stored as the host, stripping away the port and
allowing for proper grouping. Integration test modified to assert this.

Result
------
Correct grouping now in the emitted metrics on the event bus and in the
logs.

Change-Id: Ia50c314939540294afad5109965897008dddc6e5",0,0,0,0,0,1,1,0,0
64589,I402e596850d28641f46325048690bdb0f22061b1,http://review.couchbase.org/#/c/64589,2,9a987371f7b3f0925777034e3375c6fe5dca4d8d,990bca052a54e1fd984c2154196dede83e2bc26a,1,31/05/16,31/05/16,16,JVMCBC-337: Subdoc Multi Lookup needs to expose CAS.,"JVMCBC-337: Subdoc Multi Lookup needs to expose CAS.

Motivation
----------
Due to an oversight the multi lookup in subdoc currently does not
carry the CAS as part of the response message, even if it is returned
from the server.

Modifications
-------------
This changeset adds the cas value to the MultiLookupResponse and modifies
test cases to assert for it.

Result
------
The CAS can now be carried over in higher level implementations.

Change-Id: I402e596850d28641f46325048690bdb0f22061b1",0,0,0,0,0,1,1,0,0
64597,Ic8a5720de0cff92af730c0ec90721840b0acb129,http://review.couchbase.org/#/c/64597,2,9c66fd30edb3680816938d19d7ccdddf07373c93,36b0ba1335d93f38e5cdf3d92e76bf0c61f86e9c,1,31/05/16,31/05/16,133,JVMCBC-338: N1QL parsing response without metrics,"JVMCBC-338: N1QL parsing response without metrics

Motivation:
-----------
The query service now honors a request that says metrics should not be
included in the response. As a consequence, the QueryHandler should now
take that possibility into account.

Modifications:
--------------
The QueryHandler has been modified to work with a response where the
metrics section is omitted.

Added a ""split at every position"" test without metrics.

Results:
--------
Response without metrics is now supported by the QueryHandler.

Change-Id: Ic8a5720de0cff92af730c0ec90721840b0acb129",0,0,0,0,0,1,1,0,0
64600,I48dadf20bb22b13e9ae2a0b789b3265515744aab,http://review.couchbase.org/#/c/64600,2,58b5ca602d50a5e2d590f67356b8a4e0c56b246e,4227099484694e78c4e0fe7bfa0a819c5ca2f7f5,1,31/05/16,31/05/16,64,"JVMCBC-338: Fix parsing of results only, no errors/metrics","JVMCBC-338: Fix parsing of results only, no errors/metrics

Motivation:
-----------
The previous change was incomplete in the sense that a response with
only results followed by status would still fail and timeout.

Modifications:
--------------
The QueryHandler has been modified to work with a response where the
metrics section is omitted, and there's only results (no errors/warn).

This involves detecting end of a results section despite not having a
new { after said section => rely also on lastChunk.

Added a ""success 1"" test without metrics.
Modified 1 test so that it uses only one DefaultLastHttpContent instead
of several in a row (as that would trigger lastChunk detection).

Results:
--------
Response without metrics is now supported by the QueryHandler.

Change-Id: I48dadf20bb22b13e9ae2a0b789b3265515744aab",0,0,0,0,0,1,1,0,0
64648,Ia0a221a4ac80ddaa26ed7db1e61a9a3fe1e38335,http://review.couchbase.org/#/c/64648,2,4227099484694e78c4e0fe7bfa0a819c5ca2f7f5,26844980ed87c984c8f2e27072062dddd94b79fe,1,01/06/16,01/06/16,8,JVMCBC-339: Send flush only to endpoints which are != null,"JVMCBC-339: Send flush only to endpoints which are != null

Motivation
----------
Users reported cases where a NPE is raised under edge cases:

java.lang.NullPointerException
   at com.couchbase.client.core.service.AbstractDynamicService.send(AbstractDynamicService.java:124)
   at com.couchbase.client.core.node.CouchbaseNode.send(CouchbaseNode.java:189)
   at com.couchbase.client.core.RequestHandler.flush(RequestHandler.java:196)

Modifications
-------------
The code now explicitly checks for != null before the flush event is sent, since if no endpoint
is stored under the array element it doesn't make sense to flush it in the first place.

Result
------
No NPE under edge cases in flush.

Change-Id: Ia0a221a4ac80ddaa26ed7db1e61a9a3fe1e38335",0,0,0,0,0,1,1,0,0
64703,I8d259fd2604f88f751bd38a449aca9acc776964e,http://review.couchbase.org/#/c/64703,3,26844980ed87c984c8f2e27072062dddd94b79fe,fbd02dd315788c8fa0f6adbb9c0ac092f6f6c9f3,1,03/06/16,03/06/16,99,JVMCBC-340: Fix KeepAlive not being sent anymore.,"JVMCBC-340: Fix KeepAlive not being sent anymore.

Motivation
----------
It was found that KeepAlives are not sent anymore after java-client
version 2.2.6 and later. Tracking this down, this is a regression
which has been introduced in the changeset for JVMCBC-300 which is an
optimization to send a void promise to save allocations.

As part of that change it was needed to change the netty idle state
handler from checking either read or write (""all"") idle states to
only use ""read"" since write can't be used anymore on a void promise.

Modifications
-------------
The bug shows up because the code in the AbstractGenericHandler listens
for the ""ALL_IDLE"" token event, but netty is now emitting the ""READ_IDLE""
event instead. The unit tests did not cover this since they also emit the
""ALL_IDLE"" token to mirror the behavior of netty.

This changeset fixes the token to ""READ_IDLE"", adapts the unit tests and
adds an integration test to make sure the keepalives are really sent.

Result
------
The KeepAlives are now sent again.

Change-Id: I8d259fd2604f88f751bd38a449aca9acc776964e",0,0,0,0,0,1,1,0,0
64705,I4011a9d856e2283845006ffa2f60c6eb82094a2c,http://review.couchbase.org/#/c/64705,2,a6a50148c71c114c244e0060fcdee57d49bbcd8e,50f50b1fa85447f258f27c9126482df373fdc304,1,03/06/16,03/06/16,99,JVMCBC-340: Fix KeepAlive not being sent anymore.,"JVMCBC-340: Fix KeepAlive not being sent anymore.

Motivation
----------
It was found that KeepAlives are not sent anymore after java-client
version 2.2.6 and later. Tracking this down, this is a regression
which has been introduced in the changeset for JVMCBC-300 which is an
optimization to send a void promise to save allocations.

As part of that change it was needed to change the netty idle state
handler from checking either read or write (""all"") idle states to
only use ""read"" since write can't be used anymore on a void promise.

Modifications
-------------
The bug shows up because the code in the AbstractGenericHandler listens
for the ""ALL_IDLE"" token event, but netty is now emitting the ""READ_IDLE""
event instead. The unit tests did not cover this since they also emit the
""ALL_IDLE"" token to mirror the behavior of netty.

This changeset fixes the token to ""READ_IDLE"", adapts the unit tests and
adds an integration test to make sure the keepalives are really sent.

Result
------
The KeepAlives are now sent again.

Change-Id: I4011a9d856e2283845006ffa2f60c6eb82094a2c",0,0,0,0,0,1,1,0,0
64707,I215b639ebd24eddf051f15c8d0fc10fbf0bcf81e,http://review.couchbase.org/#/c/64707,2,2b892fb6c168bd86fd7cdd340c784c469da60fdf,0943c24a352d4715d77fcf792b936f7a9402a1c1,1,03/06/16,08/06/16,109,JCBC-970: DcpConnection.getCurrentState should return immediate state,"JCBC-970: DcpConnection.getCurrentState should return immediate state

Motivation
----------
Sequence number of last closed checkpoint is not suitable for the cases
where getCurrentState used. It should rather return the same values as
'high_seqno' from 'vbucket-details' STAT.

Modification
------------
Fix GetAllMutationTokensRequest(0x48) to allow to send it to specific
node in the cluster. Update implementation of getCurrentState to use
GetAllMutationTokensRequest.

Result
------
Sequence numbers returned by getCurrentState now match 'high_seqno'
from stats.

Change-Id: I215b639ebd24eddf051f15c8d0fc10fbf0bcf81e",0,0,1,0,0,1,1,-1,0
64708,Ia0a221a4ac80ddaa26ed7db1e61a9a3fe1e38335,http://review.couchbase.org/#/c/64708,2,5a92586a1fec46eec6382b6aab27b2b018226934,8f3157f94ca3900038b09665c8c08143bac43352,1,03/06/16,03/06/16,8,JVMCBC-339: Send flush only to endpoints which are != null,"JVMCBC-339: Send flush only to endpoints which are != null

Motivation
----------
Users reported cases where a NPE is raised under edge cases:

java.lang.NullPointerException
   at com.couchbase.client.core.service.AbstractDynamicService.send(AbstractDynamicService.java:124)
   at com.couchbase.client.core.node.CouchbaseNode.send(CouchbaseNode.java:189)
   at com.couchbase.client.core.RequestHandler.flush(RequestHandler.java:196)

Modifications
-------------
The code now explicitly checks for != null before the flush event is sent, since if no endpoint
is stored under the array element it doesn't make sense to flush it in the first place.

Result
------
No NPE under edge cases in flush.

Change-Id: Ia0a221a4ac80ddaa26ed7db1e61a9a3fe1e38335
Reviewed-on: http://review.couchbase.org/64648
Tested-by: Michael Nitschinger <michael@nitschinger.at>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,0,0
64816,Id63b24ea6f034a561f4ca5bd6b2c5c0210974cf4,http://review.couchbase.org/#/c/64816,2,8f3157f94ca3900038b09665c8c08143bac43352,cc43b792e6c6e46c4c56cf0ad9377bb32a4d7027,0,08/06/16,08/06/16,2,Prepare 1.2.9 Release,"Prepare 1.2.9 Release

Change-Id: Id63b24ea6f034a561f4ca5bd6b2c5c0210974cf4",0,0,0,1,0,1,1,NA,NA
64880,I6650e60ee31bf49c78dd423acf8d287db4fe26d7,http://review.couchbase.org/#/c/64880,2,a6f1fed42b02d8f01cda187c37204e413dc5a0de,e5dfbfe910bbf43b6f5b00bd5f1cb1801e4a26a3,0,10/06/16,10/06/16,2,Prepare 1.3.0 Release,"Prepare 1.3.0 Release

Change-Id: I6650e60ee31bf49c78dd423acf8d287db4fe26d7",0,0,0,1,0,1,1,NA,NA
65049,If954261fcdd53d5038b903569d743d0b02cd0881,http://review.couchbase.org/#/c/65049,2,e5dfbfe910bbf43b6f5b00bd5f1cb1801e4a26a3,1c3016b3b366f2f3bd25ee541c5ddee1b8f4abe0,1,20/06/16,20/06/16,65,JVMCBC-343: WaitStrategy needs to be created for every CouchbaseCore,"JVMCBC-343: WaitStrategy needs to be created for every CouchbaseCore

Motivation
----------
The change introduced in JVMCBC-335 leads to a performance regression
if more than one CouchbaseCore instance is used. In the java-client
this means that if more than one CouchbaseCluster is used and the
environment is shared there is, under high throughput, more
contention on the used WaitStrategy.

Modifications
-------------
This change introduces a WaitStrategyFactory so that every time
the Core needs to use it a new WaitStrategy is created instead
of sharing one per environment.

Note that this technically breaks the Environment API since it
exposes a Factory instead of the WaitStrategy, but since it
has been introduced only in 1.3.0 and its an advanced API
the breakage is considered minimal and it is needed to fix
a performance regression.

Result
------
Fixed performance regression and more correct handling of
custom wait strategies.

Change-Id: If954261fcdd53d5038b903569d743d0b02cd0881",0,0,0,0,0,0,0,0,0
65051,I67919d9bded460506dbe2d5de4beec5d2531554c,http://review.couchbase.org/#/c/65051,2,1c3016b3b366f2f3bd25ee541c5ddee1b8f4abe0,7c1cbc62233c6027137ec9fb01bd37a16b132516,0,20/06/16,20/06/16,2,Start 1.3.1 Development,"Start 1.3.1 Development

Change-Id: I67919d9bded460506dbe2d5de4beec5d2531554c",0,0,0,1,0,0,1,NA,NA
65109,I4eb3de8270302bc78543c16e90e06c585b9522dd,http://review.couchbase.org/#/c/65109,2,7c1cbc62233c6027137ec9fb01bd37a16b132516,83c05cbca61e4ab8aacd018d1175cc2d82bb19a5,0,21/06/16,21/06/16,2,Prepare 1.3.1 Release,"Prepare 1.3.1 Release

Change-Id: I4eb3de8270302bc78543c16e90e06c585b9522dd",0,0,0,1,0,0,1,NA,NA
65183,Ib626e1dabf124fc4f8b4425fd482cae3f17c6ea0,http://review.couchbase.org/#/c/65183,2,83c05cbca61e4ab8aacd018d1175cc2d82bb19a5,03450abc35f442ca7f5328b960151568f3112ac4,0,23/06/16,23/06/16,2,Start working on 1.3.2-SNAPSHOT,"Start working on 1.3.2-SNAPSHOT

Change-Id: Ib626e1dabf124fc4f8b4425fd482cae3f17c6ea0",0,0,0,1,0,0,1,NA,NA
65184,I706c34573d88bc3e079ac8b453fa865063344c2c,http://review.couchbase.org/#/c/65184,2,03450abc35f442ca7f5328b960151568f3112ac4,f48d1b6983ccdc34cd4073a5363fea382db1c6df,0,23/06/16,23/06/16,10,Bump Jackson & Netty Dependencies,"Bump Jackson & Netty Dependencies

  Netty 4.0.36 -> 4.0.37
  Jackson 2.6.6 -> 2.6.7

Change-Id: I706c34573d88bc3e079ac8b453fa865063344c2c",0,0,0,0,0,0,0,NA,NA
65185,I7e371f667c9d1261d19a82e288f080f2c75de210,http://review.couchbase.org/#/c/65185,2,f48d1b6983ccdc34cd4073a5363fea382db1c6df,b461b6efa603de896cacab61ae956019ea25e525,1,23/06/16,23/06/16,16,JVMCBC-344: Replace deprecated Disruptor APIs.,"JVMCBC-344: Replace deprecated Disruptor APIs.

Motivation
----------
The code uses two methods that are deprecated and require minor
code changes to move them over to the new APIs.

Modifications
-------------
The exception handler now sits on a new method and also when
creating the Disruptor now only the ThreadFactory is passed in
instead of the ExecutorService since thats not needed.

Result
------
Code is on stable disruptor API.

Change-Id: I7e371f667c9d1261d19a82e288f080f2c75de210",0,0,0,0,0,0,0,0,0
65186,Id9b403da01fd45a7ebcea1c71b7d41fc76c09fed,http://review.couchbase.org/#/c/65186,3,b461b6efa603de896cacab61ae956019ea25e525,56738995230d4c5d3c76f4d68034fe399d0e01ba,1,23/06/16,06/07/16,115,JVMCBC-342: Decrease environment counter on shutdown and emit event.,"JVMCBC-342: Decrease environment counter on shutdown and emit event.

Motivation
----------
To be more correct the environment now decreses its instance counter
so that when properly shutdown and then created no warning is issued

Modifications
-------------
In addition to the counter change a new event type has been added
that is emitted on the event bus. Note that since the event is
emitted right at startup time the event can only be captured if
a custom (or shared) event bus is passed in, which is possible if
for example the event bus is a target for an external monitoring
app.

Result
------
More correct handling of shutdown environments and a new event
type that helps getting identified about this situation.

Change-Id: Id9b403da01fd45a7ebcea1c71b7d41fc76c09fed",0,0,0,0,0,1,1,0,0
65673,I22fb5cbdd5af1dfa43fedb738a14fccba8311afe,http://review.couchbase.org/#/c/65673,2,a35fc488d7de66348d25ae508d7856c5b74c2183,0cf0025f9133e39758014a5bf1accb0832758089,1,12/07/16,13/07/16,10,JVMCBC-345: Don't ignore ConnectException during bootstrap.,"JVMCBC-345: Don't ignore ConnectException during bootstrap.

Motivation
----------
A ConnectException is triggered for example if a query node is
in the cluster but the service stopped, then port 8093 bootstrap
will fail of course. Right now the error is swallowed and the
node stays in a silent CONNECTING state, which is not enough
to surface the error.

Note that once up and running this is not an issue because
as it stands now the code will initiate a reconnect in any
case.

Modifications
-------------
The result now explicitly checks for the ConnectException and
handles it similarly to other errors that can happen during
the netty connect phase.

Result
------
Visible error what's going wrong during bootstrap against a
downed query node in the cluster.

Change-Id: I22fb5cbdd5af1dfa43fedb738a14fccba8311afe",0,0,0,0,0,0,0,0,0
65712,I8d80145c746291b2786deba50c263f9393890486,http://review.couchbase.org/#/c/65712,2,bfb67a28a027fe3f25063db237e76d2aa51638d9,cb828fa5a606ee063eb77261439324b1432fa63f,1,13/07/16,13/07/16,40,Avoid subscribe() without error handler.,"Avoid subscribe() without error handler.

Better to explicitly log errors, otherwise we'll get the ugly
onErrorNotImplemented exceptions.

Change-Id: I8d80145c746291b2786deba50c263f9393890486",0,0,0,0,0,0,0,0,0
65713,I53b0e9b0206d7aff58cbac3865ca7c1532d68bed,http://review.couchbase.org/#/c/65713,3,65fa77f26705b54d68d0a38aee238fbdcf8f1596,d303cef45da9e5b36ae87e16588aacd8246e54ef,1,13/07/16,13/07/16,20,WIP: keep reconnecting during bootstrap to partially failed clusters.,"WIP: keep reconnecting during bootstrap to partially failed clusters.

Change-Id: I53b0e9b0206d7aff58cbac3865ca7c1532d68bed",0,0,0,1,0,1,1,1,1
65717,I0cbd8a6b26f81acdf2c945415c6342845a22ce6d,http://review.couchbase.org/#/c/65717,2,d303cef45da9e5b36ae87e16588aacd8246e54ef,bd76493b2496c7bc89034716f76502fb8cc31df7,1,13/07/16,13/07/16,1,JVMCBC-347: Maintain internal bootstrap state in config provider.,"JVMCBC-347: Maintain internal bootstrap state in config provider.

Motivation
----------
The bootstrapped flag right now is only used to not let the seed
nodes be overridden when the provider is already bootstrapped.

It turns out that we never set the bootstrapped flag to true.

Modifications
-------------
When a bucket is opened successfully the flag is set. We never
need to set it back though since once bootstrapped we don't
go back to ""not bootstrapped"".

Result
------
seed nodes can't be overridden once at least a single bucket is
opened for the first time.

Change-Id: I0cbd8a6b26f81acdf2c945415c6342845a22ce6d",0,0,0,0,0,1,1,0,0
65718,Iff84800831932b559faab48b12cb9d8bcf8943b8,http://review.couchbase.org/#/c/65718,2,bd76493b2496c7bc89034716f76502fb8cc31df7,6bc396b314b1ae1182b75ee584a0229249561c1f,1,13/07/16,13/07/16,10,JVMCBC-348: Catch exceptions that event bus consumers may trigger.,"JVMCBC-348: Catch exceptions that event bus consumers may trigger.

Motivation
----------
If any of the downstream consumers throw an exception make sure to
catch it so the event bus and its surrounding threads keep moving.

Change-Id: Iff84800831932b559faab48b12cb9d8bcf8943b8",0,0,0,0,0,1,1,0,0
65829,I40d745e8d65f01ef8144d5e81539db94e59047b5,http://review.couchbase.org/#/c/65829,2,6bc396b314b1ae1182b75ee584a0229249561c1f,f732b801ca634dc40264d2bcdbeaa5b1d3ca2dc9,0,15/07/16,15/07/16,10,JVMCBC-349: Update RxJava and Netty to latest bugfix releases.,"JVMCBC-349: Update RxJava and Netty to latest bugfix releases.

	Netty bump to 4.0.39
	RxJava bump to 1.1.7

Change-Id: I40d745e8d65f01ef8144d5e81539db94e59047b5",0,0,0,0,0,0,0,NA,NA
66152,I2d5e4af73b2a769452d0eb9873d97e7e1560fbd4,http://review.couchbase.org/#/c/66152,3,f732b801ca634dc40264d2bcdbeaa5b1d3ca2dc9,39aa4e3565d3af4b6360a295cca8a651867b5c0f,1,25/07/16,27/07/16,224,WIP JVMCBC-350: Add generic RestApiRequest for 8091,"WIP JVMCBC-350: Add generic RestApiRequest for 8091

Change-Id: I2d5e4af73b2a769452d0eb9873d97e7e1560fbd4",0,0,0,1,0,1,1,2,1
66249,I9eb02b1a2155ad2ef2dcde01bc608880d1351941,http://review.couchbase.org/#/c/66249,5,032e91b080ade5762a80088b48966bd7d499c634,568a386d8023abaccc8cafdb167dad021b8fbb0b,1,27/07/16,28/07/16,6,"Current Java Core SSL implementation relies on Oracle's SunX509 algorithm. This prevents use of smart client in certain application deployment servers (i.e. IBM WAS uses IBM JRE). I propose using provider agnostic algorithm; since all JREs must support standard PKIX algorithm, smart client could safely utilize underlying PKIX algorithm.","Current Java Core SSL implementation relies on Oracle's SunX509 algorithm. This prevents use of smart client in certain application deployment servers (i.e. IBM WAS uses IBM JRE). I propose using provider agnostic algorithm; since all JREs must support standard PKIX algorithm, smart client could safely utilize underlying PKIX algorithm.

Change-Id: I9eb02b1a2155ad2ef2dcde01bc608880d1351941",0,1,0,1,0,0,1,0,0
66251,I0876d5bb7583b92f9e37da5c33908a96eda7587a,http://review.couchbase.org/#/c/66251,2,b7813fc19120ccd3acf8240b76f468ea3af97eb8,978b465782a6d8c241f1c6047ee0558ffd53cca0,0,27/07/16,27/07/16,8,JVMCBC-349: Update RxJava and Disruptor to latest bugfix releases.,"JVMCBC-349: Update RxJava and Disruptor to latest bugfix releases.

	RxJava bump to 1.1.8
	Disruptor bump to 3.3.5

Change-Id: I0876d5bb7583b92f9e37da5c33908a96eda7587a",0,0,0,0,0,1,1,NA,NA
66257,Ia8c0bae31a3bd4b5e78c0337e61db6772c32aeee,http://review.couchbase.org/#/c/66257,3,db1dbcb77a2e42aa7bea2a2c1df4fa4353a9a141,5486a045bc5e3e713d0913d99356f1ab0ef0fe03,0,27/07/16,27/07/16,4,JVMCBC-349: Update Netty to its latest bugfix release.,"JVMCBC-349: Update Netty to its latest bugfix release.

	Netty bump to 4.0.40

Change-Id: Ia8c0bae31a3bd4b5e78c0337e61db6772c32aeee",0,0,0,0,0,1,1,NA,NA
66281,I71e98c3db9dcff0b8dff72b43d4a9cfce830665d,http://review.couchbase.org/#/c/66281,2,3d7b18c0b84971fa7a2a59a2cf253e276d2154cf,de24fbab367d51c5be73a683ace8aa356c970f0d,1,28/07/16,28/07/16,10,JVMCBC-352: Some N1QL splits can confuse parser into raw mode,"JVMCBC-352: Some N1QL splits can confuse parser into raw mode

Motivation
----------
While executing large selects in a loop it was found that in some runs
the parsing would fail with a Jackson parsing error: a row would be
an incomplete JSON object.

After investigating, it turns out the server returns a chunked response
that is split in a way that the parser is confused into thinking it is
operating on RAW results.
The bug occurs when the last characters in the buffers are all line
returns or whitespaces, which should trigger a wait for more data but
doesn't. The method that chooses between RAW result mode and classic
result mode then defaults to thinking it is RAW, and ends up producing
bad JSON.

Additionally this wasn't surfaced by ""split at every position"" tests
because the RAW parsing splits on commas, and the only commas in the
test's data are between JSON objects. As a consequence, the test would
still see JSON objects being parsed correctly.

Modifications
-------------
Made sure to trigger a wait for more data when deciding between RAW and
classic results if the end of the buffer is only whitespace.

Added an additional field to the first result object of the test data
in ""chunked.json"" so that the issue would be triggered in the ""split at
every position"" test.

Result
------
Parser is now correctly making the decision of how to parse rows, even
if the response is chunked at the beginning of the results array.

Change-Id: I71e98c3db9dcff0b8dff72b43d4a9cfce830665d",0,0,0,0,0,1,1,0,0
66413,Iad4dd787184cdee05c0812548582004003d5cb83,http://review.couchbase.org/#/c/66413,2,de24fbab367d51c5be73a683ace8aa356c970f0d,11977f5c02a30a0b5c2aecbb847e565b28d73e3b,1,02/08/16,03/08/16,25,JVMCBC-354: Getting all design documents needs data node,"JVMCBC-354: Getting all design documents needs data node

Motivation:
-----------
In a MDS configuration, when requesting all design documents in a
bucket, the request can go to a node that doesn't have the view service
enabled. In such a case the server answers with a ""no_ddocs_service""
error. The request must be routed to a node with the VIEW service
enabled.

This leads to NullPointerException on the client side (because the
response does not correspond to the expected design documents payload).

Modifications:
--------------
Made ConfigHandler routing able to skip some nodes in the list, like
eg. ViewHandler.

Only skipping occurs when the request is a GetDesignDocuments one and
the checked node doesn't have the VIEW service enabled.

Results:
--------
GetDesignDocumentsRequest are correctly routed to VIEW enabled nodes
in a MDS configuration.

Change-Id: Iad4dd787184cdee05c0812548582004003d5cb83",0,0,0,0,0,0,0,0,0
66449,Ifa54a86506fa72a1cebc288892278ef440911857,http://review.couchbase.org/#/c/66449,3,92aaa110b2f2da7f5ba981cd1082ff14feb23555,e6aaf285c9df5bbf28f2f34afd3f574b65f9d435,1,03/08/16,03/08/16,80,JVMCBC-355: Add identifier to UnicastAutoReleaseSubject,"JVMCBC-355: Add identifier to UnicastAutoReleaseSubject

Motivation:
-----------
When an UnicastAutoReleaseSubject throws an error due to multiple
subscribers coming in or a single subscriber coming in after the
data has been auto-released, it is usually hard to know the exact
source of the error. In order to improve on that, each subject could
be assigned an id that would at least help tracing back to the code
and the type of data.

Modifications:
--------------
Added id field to the subject's State, which is used in the
exception message and can be set through a setter on the subject.

Made use of that feature in all points where an UnicastAutoRelease
is used: DCPConnection, ViewHandler and QueryHandler.
QueryHandler can even trace the requestID / clientContextID that
is triggering the issue.

Added unit tests that validates the exception message in failure
scenarios.

Results:
--------
Errors linked to UnicastAutoReleaseSubject can be better diagnosed.

Change-Id: Ifa54a86506fa72a1cebc288892278ef440911857",0,0,0,0,0,1,1,0,0
66465,I352ba433273fade7b69b726a22a53384e3fcf783,http://review.couchbase.org/#/c/66465,2,e6aaf285c9df5bbf28f2f34afd3f574b65f9d435,8c9e7881317f4a4da9140d849fb86f34fa1f8959,0,03/08/16,03/08/16,3,JVMCBC-355 (Fix bad AssertJ dependency to Java8),"JVMCBC-355 (Fix bad AssertJ dependency to Java8)

Motivation:
-----------
In the related UnicastAutoReleaseSubject change, the AssertJ
dependency was using wrong version that hides a dependency to
Java8 classes. This has come up during QE, and the version must
be fixed.

Modifications:
--------------
AssertJ 1.x is Java6 compatible while 3.x requires Java8.
Using 1.7.1 like in java-client now.

Change-Id: I352ba433273fade7b69b726a22a53384e3fcf783",0,0,0,0,0,0,0,NA,NA
66643,Id90b9ab9d67baf9214e322b74982049e4112b975,http://review.couchbase.org/#/c/66643,2,8c9e7881317f4a4da9140d849fb86f34fa1f8959,d895c03dce9abfbb650a5042f104c4c8aed96245,0,10/08/16,10/08/16,5,Prepare 1.3.2 Release,"Prepare 1.3.2 Release

Change-Id: Id90b9ab9d67baf9214e322b74982049e4112b975",1,0,0,1,0,0,1,NA,NA
66830,I718c59d4e7d1a243aafe5f1cb56f9d05796b42ed,http://review.couchbase.org/#/c/66830,2,d895c03dce9abfbb650a5042f104c4c8aed96245,e87f834528b06a6bb2666389b3917e613bc9112d,0,17/08/16,17/08/16,2,Start development of 1.3.3,"Start development of 1.3.3

Change-Id: I718c59d4e7d1a243aafe5f1cb56f9d05796b42ed",0,0,0,1,0,1,1,NA,NA
66937,I9f96bb67da8132fa28b29e4bcfb59343f8545f32,http://review.couchbase.org/#/c/66937,3,e87f834528b06a6bb2666389b3917e613bc9112d,f8f69d3aba3dee1296e409d282cd715d7ff3da98,1,22/08/16,24/08/16,238,JVMCBC-357: Add raw N1QL querying msg that returns JSON,"JVMCBC-357: Add raw N1QL querying msg that returns JSON

Motivation
----------
In some use cases, notably when developing a REST backend that could
just build N1QL queries and pass the JSON response back to a javascript
frontend, being able to perform a N1QL query and not interpret the
response but rather return is raw (JSON ByteBuf) can make sense.

Modifications:
-------------
Implemented a dedicated message for this that will just aggregate the
response body in the handler and return it. The HTTP status code and
message are also be returned.

Result
------
Users can directly query the N1QL service and get the uninterpreted
JSON response by using the RawQueryRequest message.

Change-Id: I9f96bb67da8132fa28b29e4bcfb59343f8545f32",0,0,0,0,0,1,1,1,1
66949,I5048bde97d239f72c3232becccdea7bea46c7313,http://review.couchbase.org/#/c/66949,3,3ab37da1e43781765a0446a4b30c91be989a9d32,eda12dea33283e590334065c078415eb23e91667,1,22/08/16,24/08/16,177,JVMCBC-358: Round Robin Endpoint selection strategy,"JVMCBC-358: Round Robin Endpoint selection strategy

Motivation:
-----------
Current endpoint selection strategy is either `Random` or based on
`Partition`. It was observed that random selection could lead to a same
endpoint being chosen several times in a row, and with long running
requests (like N1QL queries) this can add up. Thus a round robin
selection is probably a better fit.

Modifications:
--------------
Added a new `SelectionStrategy`, the `RoundRobinSelectionStrategy`.

Made `QueryService` use that strategy for its endpoints.

Results:
--------
Fairer endpoint selection strategy can now be used.

Change-Id: I5048bde97d239f72c3232becccdea7bea46c7313",0,0,0,0,0,1,1,0,0
67021,I2529a36001540a045ebde98eebb283bc1a04f4db,http://review.couchbase.org/#/c/67021,2,7624dc71ed3febb5ad14c7479587a5bb1bf65613,4afa2fd9236e6faccfde89f470716d1233f0cab9,1,24/08/16,24/08/16,2,JVMCBC-360: View reduce can leak 1 byte of info(),"JVMCBC-360: View reduce can leak 1 byte of info()

Motivation:
-----------
When a view is queried with reduce = true, the `total_rows` section can
be omitted by the server. The way the handler reacts to that is that it
stops using the ByteBuf it prepared for info() and instead emit an empty
buffer (`Unpooled.EMPTY_BUFFER`).

The thing is that the ByteBuf that was prepared is never released,
leading to a 1 byte leak (the opening bracket from the response).

Modification:
-------------
ViewHandler now correctly releases the info ByteBuf if it is not emitted
to the upper layers.

Result:
-------
The leak has been eliminated.

Change-Id: I2529a36001540a045ebde98eebb283bc1a04f4db",0,0,0,0,0,1,1,0,0
67023,Ie5a19b7575a5705db34fd7c851192d10411f7c4c,http://review.couchbase.org/#/c/67023,2,289ff07740e240c5f75261cef570517f4d5f94a4,5f56e991fe11a9f5cf8d23b64ebd06f57a890b24,1,24/08/16,24/08/16,2,JVMCBC-361: Node dispatching should occur on DEGRADED,"JVMCBC-361: Node dispatching should occur on DEGRADED

Motivation
----------
When opening several buckets in a row, one of which is tried with
wrong password in the middle, the opening of last buckets can timeout.

During investigation it was seen that in a goodA/wrong/goodB bucket open
sequence, the CarrierRefresher would schedule a GetBucketConfigRequest
for ""goodA"" and it would go into a long-lasting retry loop.

Upon investigating further, it appears this is due to the ongoing
attempt at opening ""wrong"", which puts the Node(s) into DEGRADED mode.
Since the KeyValueLocator won't dispatch a message to a node that isn't
CONNECTED, this goes directly into the retry loop even though the
request could go through (the corresponding bucket's services are
CONNECTED).

Modifications
-------------
The KeyValueLocator now dispatches messages to Nodes that are either
CONNECTED or DEGRADED, as they still might have a Service CONNECTED
and ready to process the request.

Result
------
If a Node is DEGRADED, it can still attempt to process a request, which
will still be retried if no CONNECTED Service can process it.

With this change, it appears that trying to open 3 buckets in a row,
with correct password then incorrect then correct, now doesn't timeout.

Change-Id: Ie5a19b7575a5705db34fd7c851192d10411f7c4c",0,0,0,0,0,1,1,1,1
67171,I69086f0aafecfdfeac4d86f36c575eb0ecb2b1ec,http://review.couchbase.org/#/c/67171,3,bae9526e32a78726a172e0bfc90f57c4c43eaa09,9ea6fd6682452a57130ad9a1e4aada6dc9c42fc6,1,30/08/16,31/08/16,89,JVMCBC-364 - Fix query parsing of empty row & split at status,"JVMCBC-364 - Fix query parsing of empty row & split at status

Motivation:
-----------

Modifications:
--------------
decideBetweenRawAndObjects now correctly calls sectionDone() when it
detects that there is no results (empty array) and the next token
should be looked up.

Additionally, mainly for testing purposes, the status of both
AbstractGenericHandler and QueryHandler are exposed in getters.

A test has been added for this particular failure case.

Results:
--------
Parser now succeeds on parsing response with empty results and split
at ""status"".

Change-Id: I69086f0aafecfdfeac4d86f36c575eb0ecb2b1ec",0,0,0,0,0,1,1,0,0
67382,I323df2f3e5afe774b555eae9fa035214a246a712,http://review.couchbase.org/#/c/67382,2,9ea6fd6682452a57130ad9a1e4aada6dc9c42fc6,8722b609f1d1d144b532f95841c37166731ecb80,0,06/09/16,06/09/16,2,Prepare 1.3.3 Release,"Prepare 1.3.3 Release

Change-Id: I323df2f3e5afe774b555eae9fa035214a246a712",1,0,0,1,0,0,1,NA,NA
67631,Ia635f5c2a8c79719df761c3c68c431b14c58f972,http://review.couchbase.org/#/c/67631,2,8722b609f1d1d144b532f95841c37166731ecb80,ee3233ecda42fd1b765db5bea64a2cdfd0f7613e,0,13/09/16,13/09/16,2,Start development of 1.3.4,"Start development of 1.3.4

Change-Id: Ia635f5c2a8c79719df761c3c68c431b14c58f972",0,0,0,1,0,1,1,NA,NA
67724,I2f6ded291e641b260c01efe2f7ab1d1907612bda,http://review.couchbase.org/#/c/67724,3,ee3233ecda42fd1b765db5bea64a2cdfd0f7613e,2598de312b632c7ead6d561dd9d3b3f489f38d41,1,15/09/16,28/09/16,51,Fix cleanup of SimplePauseDetector threads,"Fix cleanup of SimplePauseDetector threads

Motivation:
-----------
Previously, the SimplePauseDetector threads were shut down by a JVM shutdown
hook. Both this hook and the threads themselves induce a classloader leak,
which can be an issue when used in environments such as application servers
where an application is undeployed and the JVM is not necessarily shut down.

Modifications:
--------------
In keeping with the goals of all of JVMCBC-230, JVMCBC-251 and JVMCBC-331,
there is still a static PauseDetector (so the same detector will be shared
across multiple metrics collectors within the same classloader), but it is
started up and shut down according to a reference count in
AbstractLatencyMetricsCollector. This is justified by the fact that threads
in Java are not automatically collected resources.

Results:
--------
There are no longer any SimplePauseDetector threads or shutdown hooks
referring to the classloader upon successful shutdown of all CBC resources.

Change-Id: I2f6ded291e641b260c01efe2f7ab1d1907612bda",0,0,1,0,0,0,1,0,0
67737,Ia964034eec10b771f21ebb73226d0357b458b185,http://review.couchbase.org/#/c/67737,2,12a7fd58a2abd79e56b394b63f6a64b0619ae945,603873ccd95d1b2b04eed7d24bf9f144e7ca2af4,1,16/09/16,20/09/16,17,JVMCBC-367: Consume and log errors for keepalives.,"JVMCBC-367: Consume and log errors for keepalives.

Motivation
----------
In a recent user log examined it was found that during a socket
close and the cancellation of outstanding requests, one of the
""victims"" was a keepalive.

AbstractGenericHandler: Exception thrown while cancelling outstanding operation:
KeepAliveRequest{observable=rx.subjects.AsyncSubject@26424276, bucket='null'}
rx.exceptions.OnErrorNotImplementedException: Request cancelled in-flight.

Modifications
-------------
Since there is not much we can do about it, it at least makes sense to log the
specific condition so that from reading the log it becomes clearer what
happened at runtime.

Result
------
KeepAlives now explicitly handle and log failures on their response side.

Change-Id: Ia964034eec10b771f21ebb73226d0357b458b185",0,0,1,0,0,1,1,0,0
67867,I0fa31d875de5241c6c45c477e98eb3a7a38416ea,http://review.couchbase.org/#/c/67867,2,8a979318b6459743f7bf22afc2d563425072f1f0,0c70b06d23ec59091bbfcb4cde3636d2e836dc63,1,21/09/16,26/09/16,40,Add sanity check for node-count parity on reconfigure.,"Add sanity check for node-count parity on reconfigure.

Motivation
----------
This changeset adds a sanity check so that after the reconfiguration
is done the number of logical nodes matches the number of nodes
in the config.

If it doesn't match a debug log is emitted.

Change-Id: I0fa31d875de5241c6c45c477e98eb3a7a38416ea",0,0,1,0,0,1,1,0,0
68088,Id0d36eeb516012615cad73851c167b2579fbe1f2,http://review.couchbase.org/#/c/68088,2,1c233e6b1727dfb03ed887ee28675417376f84f3,215866499078e2028f6dd97bb675eb3d8988bc6e,1,28/09/16,28/09/16,30,JVMCBC-365: Fail with better exception on InvalidKeyException.,"JVMCBC-365: Fail with better exception on InvalidKeyException.

Motivation
----------
On JDKs like IBM JDK or older OpenJDK/Hotspots (small 7, all 6)
the underlying code does not accept an empty string to initialize
an HMAC, but this is required for our new SCRAM authentication
approach.

This only happens on empty bucket passwords as well.

Modifications
-------------
The code now explicitly fails with an exception telling the user
what needs to be done to troubleshoot.

In addition, disabling SCRAM with a system property is also possible
but it is not mentioned since it is considered an insecure workaround
and should only be done if not possible otherwise.

Result
------
If a condition like this happens the user will know what is going
on.

Change-Id: Id0d36eeb516012615cad73851c167b2579fbe1f2",0,0,0,0,0,0,0,2,1
68148,I4e178b6fdb7508b95e198d703b43a7f30bd08213,http://review.couchbase.org/#/c/68148,3,215866499078e2028f6dd97bb675eb3d8988bc6e,ab22789c03a981ac91677dd0b21be0112c724654,1,29/09/16,30/09/16,354,JCBC-1007: Fix queries not load balancing correctly when in MDS.,"JCBC-1007: Fix queries not load balancing correctly when in MDS.

Motivation
----------
The round robin mechanism for locating the proper nodes on Query, FTS and Views
correctly used an ""offset"" when iterating through the node list, but the list
also includes nodes with different services. In a setup like this:

+------------+------------+---------------+---------------+
| Node A: KV | Node B: KV | Node C: Query | Node D: Query |
+------------+------------+---------------+---------------+

Round robin would skip forward on the nodes where query is not enabled, leading
to queries being sent to: C, C, C, D, C, C, C, D, since C would handle offsets
for A and B respectively. In non-MDS this is not an issue since query nodes
are available on all machines. In other constellations this is not an issue
as well, but the ordering can't be controlled by the user and as a result
is non-deterministic.

Query service is illustrated but the same issue is found in FTS and Views.

Modifications
-------------
Unit tests have been added for this situation as regression tests. After considering
ideas to advance the offset in various ways I determined the safest way to get
to a good approach is to filter the nodes list upfront to only include nodes
for this particular service. Then in all cases we can be sure only nodes for
that specific service are touched in the first place.

Result
------
Since now the nodes are filtered by the service type, other nodes with different
services do not skew the round-robin algorithm and as a result n1ql queries
(as well as view and fts ones) are distributed more evenly over the cluster.

Change-Id: I4e178b6fdb7508b95e198d703b43a7f30bd08213",0,0,0,0,0,0,0,-1,0
68261,I69ca745adbb02b1a04e3f9c1c51b730a41339cf6,http://review.couchbase.org/#/c/68261,2,e34e3d2e2f0544301bbd89e789b393a294ebfb89,c208297c9db68fc444b4dcd9af4b97fb0dc6226a,1,03/10/16,03/10/16,122,JVMCBC-369: Gracefully handle empty partitions in bucket config.,"JVMCBC-369: Gracefully handle empty partitions in bucket config.

Motivation
----------
If, for example during warmup, or for some other reason the bucket
config from the server does not contain partitions the code should
gracefully handle this case and send it into retry as it is done
under similar conditions.

Modifications
-------------
The code now checks if IndexOutOfBounds is raised and if so it returns
-2, which is also used for replica operations when the replica is not
even in the config. This allows for consistent handling and doesn't
involve changing much of the logic.

If the locator gets this -2 from the config, it sends the op into the
retry or cancel queue, since we can't dispatch the op right now,
waiting for a new config to arrive.

Result
------
Gracefully handle the situation where the server sends us a config but
it doesn't contain any partitions.

Change-Id: I69ca745adbb02b1a04e3f9c1c51b730a41339cf6",0,0,0,0,0,0,0,0,0
68384,I9ad03bb2310e86cd1578912cbc9a003322a75f86,http://review.couchbase.org/#/c/68384,2,c208297c9db68fc444b4dcd9af4b97fb0dc6226a,e6dd242892fd64f92ed1edcbc8782b18093170cd,0,05/10/16,05/10/16,2,Prepare 1.3.4 Release,"Prepare 1.3.4 Release

Change-Id: I9ad03bb2310e86cd1578912cbc9a003322a75f86",1,0,0,1,0,0,1,NA,NA
68400,I8455a6cc7c0fe528538a056b790faa5048a6d0f0,http://review.couchbase.org/#/c/68400,2,e6dd242892fd64f92ed1edcbc8782b18093170cd,1b09356a475fff0b7eb393f503b6919d944fa3f4,0,05/10/16,06/10/16,7,JVMCBC-370: select only nodes with DCP service for GetAllMutationTokensRequest,"JVMCBC-370: select only nodes with DCP service for GetAllMutationTokensRequest

Motivation
----------
DcpConnection.getCurrentState() should touch only hosts where DCP
service activated, otherwise it will trigger failure during connect.

Modification
------------
Filter nodes by service type before sending command.

Result
------
The core library properly fetch partition sequence numbers in MDS setup.

Change-Id: I8455a6cc7c0fe528538a056b790faa5048a6d0f0",0,0,0,0,0,1,1,NA,NA
68457,I8c228a226e01c53340a53364ecbc805e11ef29f9,http://review.couchbase.org/#/c/68457,2,1b09356a475fff0b7eb393f503b6919d944fa3f4,7c77883fa0703bd1dbbf332ebcdb627cac206f63,0,06/10/16,12/10/16,2,JVMCBC-370: Check SSL services for DCP,"JVMCBC-370: Check SSL services for DCP

Change-Id: I8c228a226e01c53340a53364ecbc805e11ef29f9",0,0,1,1,0,1,1,NA,NA
68572,Icaa5ab16d012d276891ec9ff8073d7a9e7e3804f,http://review.couchbase.org/#/c/68572,7,cb285b4807d84e092fbd5357338e3cb5819a53ab,f60a3400e25c1a5e37ad095e865b2b893efad5a6,1,11/10/16,27/10/16,25,WIP: Upper bound sent request queue per node.,"WIP: Upper bound sent request queue per node.

Change-Id: Icaa5ab16d012d276891ec9ff8073d7a9e7e3804f",0,1,1,1,0,0,1,0,0
68916,I0513c28777f87ae4be1ac6b18e32c5216fab5111,http://review.couchbase.org/#/c/68916,7,f364bc06371fcef6ffc747a43733e8c7376ef3d1,5b97f88c7ec475a2e3dc2676b405d6a5a316050a,1,19/10/16,27/10/16,116,WIP: Safeguard connect callback.,"WIP: Safeguard connect callback.

Change-Id: I0513c28777f87ae4be1ac6b18e32c5216fab5111",0,1,1,1,0,0,1,0,0
69416,Iaeca6a893db6d0d9c056c057f7541a2b54e0f069,http://review.couchbase.org/#/c/69416,2,cc152cb0e9bd9ac14c00f4848c45449fb8e71ebb,b01ffdac85863e155011e4b32365824e7877107a,0,02/11/16,02/11/16,2,Prepare 1.3.5 Release,"Prepare 1.3.5 Release

Change-Id: Iaeca6a893db6d0d9c056c057f7541a2b54e0f069",1,0,0,1,0,0,1,NA,NA
70170,Id1a5232d1a5d3ed4a45ace8fb71b1c76271af4c6,http://review.couchbase.org/#/c/70170,2,b01ffdac85863e155011e4b32365824e7877107a,4e92f907f864c9737a43a2335685c4b15d512569,1,21/11/16,30/11/16,90,JVMCBC-375: extract SSL related settings into SecureEnvironment,"JVMCBC-375: extract SSL related settings into SecureEnvironment

Motivation
----------
JDCP connector (and probably other core-io integrations) are not able to
use SSLEngineFactory without implementing full CoreEnviornment inteface,
which might be overkill.

Modification
------------
Extract SecureEnvironment into separate interface, and inherit it by
CoreEnvironment. SSLEngineFactory now accept only SecureEnvironment.

Result
------
DCP client now can reduce codebase by reusing SSLEngineFactory from core.

Change-Id: Id1a5232d1a5d3ed4a45ace8fb71b1c76271af4c6",0,0,1,0,0,1,1,0,0
70294,I0e13e1aa12cdd3412d30b6910f914d1f51dce5e3,http://review.couchbase.org/#/c/70294,6,c7aa759405a0c0eff32e28aa43d6288e43a21a00,7d4faa73ee62273faa23a27f4bc265003ecafe65,1,23/11/16,01/12/16,325,JVMCBC-XX: Add support for legacy memcached hashing.,"JVMCBC-XX: Add support for legacy memcached hashing.

Motivation
----------
TODO

Modifications
-------------
TODO

Result
------
TODO

Change-Id: I0e13e1aa12cdd3412d30b6910f914d1f51dce5e3",0,1,0,0,0,0,1,0,0
70577,I6e6eabd0d4a87c0c29fa3e4e8eb9d0c167dd0c99,http://review.couchbase.org/#/c/70577,4,c3a80a21e21da483b3608c1c4972f0d0482cde98,2d83f1a977cfd7cca7c859b75b829ed6c96e2fa9,1,02/12/16,29/12/16,18,JVMCBC-314 Javadoc for RequestCancelledException,"JVMCBC-314 Javadoc for RequestCancelledException

Change-Id: I6e6eabd0d4a87c0c29fa3e4e8eb9d0c167dd0c99",0,1,1,1,0,0,1,0,0
70681,I85195ee46aeae58b6c56b7df1e564b7152962a96,http://review.couchbase.org/#/c/70681,2,6888655059f344f6b310f9e4fdb305a72defa6b5,c359b7b74d8ab8d949ddc684609c4c1c7258915e,0,06/12/16,06/12/16,2,Prepare 1.3.6 Release,"Prepare 1.3.6 Release

Change-Id: I85195ee46aeae58b6c56b7df1e564b7152962a96",0,0,0,1,0,0,1,NA,NA
70864,I621c9b3da1f86914135add955b004e1cd5f416f7,http://review.couchbase.org/#/c/70864,2,c359b7b74d8ab8d949ddc684609c4c1c7258915e,0291ace2ceeca04104126b1fea557013fb926d91,0,12/12/16,15/12/16,22,Bump Dependencies for 1.4.0.,"Bump Dependencies for 1.4.0.

Motivation
----------
As with every minor release it makes sense to refresh our
dependencies, including RxJava and netty.

Note that this Jackson is also bumped from 2.6.x to 2.7.x. According
to their documentation 2.7 is still compatible (runnable) with java
1.6, but can only be compiled with 1.7. The main reason for the bump
is that 2.6 didn't have releases in a while and since JSON is such
an integral part of the SDK it makes sense to keep it safe and
speedy.

  - RxJava to 1.2.3
  - Netty to 4.0.42
  - Disruptor to 3.3.6
  - Jackson to 2.7.8

Change-Id: I621c9b3da1f86914135add955b004e1cd5f416f7",0,0,1,0,0,0,1,NA,NA
70867,I526cbb1e269fc84f8f13f3809439b721fdcb85f2,http://review.couchbase.org/#/c/70867,5,0291ace2ceeca04104126b1fea557013fb926d91,aadb5283dac3978c06ab664f442640c0e1ad7955,1,12/12/16,02/01/17,259,JVMCBC-378: Support for optional IO pool per service.,"JVMCBC-378: Support for optional IO pool per service.

Motivation
----------
In certain cases it has been found that segregating the IO
event loops for different services provides better performance
since they don't disturb each other. This is especially true
when short-lived but many KV operations interleave with longer
running N1QL or view queries.

Modifications
-------------
This changeset makes it possible to optionally plug in different
event loop groups for different services. If none are provided
the default ioPool is used as before to make sure its 100%
backwards compatible.

If a custom event loop group is passed in the hook lifecycle works
as with the general ioLoop one.

Result
------
It is now possible to configure one Environment to segregate different
services into different event loops for better performance without
having to create different environments.

Change-Id: I526cbb1e269fc84f8f13f3809439b721fdcb85f2",0,1,0,0,0,0,1,1,1
71187,I6b2b6fbc76b17d95e780948a14c5a1ff46b855b6,http://review.couchbase.org/#/c/71187,4,4546a78215ceefcd8a8207acc3530c139c2a90e0,067f54f6e2e805d3d83e5352ab6978d9129dc84a,1,21/12/16,22/12/16,12,Author:    Bernal Varela Gómez <bernalvarela@gmail.com>,"Author:    Bernal Varela Gómez <bernalvarela@gmail.com>

exceptionsConstructorsReview-1: Revision of the Exceptions constructors with no params

Motivation
----------
All the java client exceptions having a a method with no parameters dont make a super call.
The oracle compiler in compilation time add this call but all the exceptions have as father the CouchbaseException and his no params constructor nor have the super call.

This is a problem because the stack trace is never initialized.

Modifications
-------------
Add super() to all the constructors.

Result
------
The Exception is correctly initialized.

Change-Id: I6b2b6fbc76b17d95e780948a14c5a1ff46b855b6",0,1,0,0,0,0,1,0,0
71312,Ida6e0fc18ec55cc55f2cfcaeae6672544410644d,http://review.couchbase.org/#/c/71312,3,95685a75cedc7e53d6e68b243e89fe6d2e949051,1aeb855796c4e431df01db9a9395ea90d6677895,1,28/12/16,30/12/16,240,JVMCBC-366: move connstr handling to JVM core,"JVMCBC-366: move connstr handling to JVM core

Motivation
----------
Move connection string handling to core-io so other projects that depend
on core can use it.

Changes
-------
Moved ConnectionString class to utils from java client and also moved the tests

Result
------
Other dependent projects like kafka can use connection string

Change-Id: Ida6e0fc18ec55cc55f2cfcaeae6672544410644d",0,0,0,0,0,0,0,0,0
71321,I0ce14c30b22bde1e57a1cd6a870e110e9b08922e,http://review.couchbase.org/#/c/71321,2,45e86041ade344bc8644f86e9dd3920db60e41f4,7fe831a5d280c6c9083ccd07293de365feafda28,1,28/12/16,29/12/16,6,Add response status code ACCESS_ERROR for JCBC-1013,"Add response status code ACCESS_ERROR for JCBC-1013

Change-Id: I0ce14c30b22bde1e57a1cd6a870e110e9b08922e",0,0,0,1,0,0,1,0,0
71334,I4a1e167adb57bb92e8477fba6b2f88356f284139,http://review.couchbase.org/#/c/71334,4,c2813ea81daac70fb766b08882bc445e97886816,82368542293fb3ebdb713c9938731af32cfa6ce6,1,28/12/16,30/12/16,195,JVMCBC-373: Move onError calls onto scheduler.,"JVMCBC-373: Move onError calls onto scheduler.

Motivation
----------
Like with onNext calls, it is important that (if not configured
to do so explicitly) onError callbacks are also executed on the
scheduler (and not run directly on the threads where called).

Modifications
-------------
The code adds a helper class which contains all the conditional
logic to make sure the observables is failed on the proper scheduler
and the rest of the code is adapted (where it makes sense) to
call this helper method instead of failing the observable dircectly.

Result
------
The net result is that error callbacks are now also moved to the
proper scheduler pools, like onNext calls.

Change-Id: I4a1e167adb57bb92e8477fba6b2f88356f284139",0,1,0,0,0,0,1,0,0
71336,If6845230023fdb6833feadd75fbf2fafeec228d5,http://review.couchbase.org/#/c/71336,2,4afd51b568a8f50e6048e0174d1e5a7da14fcfd0,6fe0d006f41e6bf85286543a5acbcfb1741c7dc0,1,28/12/16,30/12/16,3,JVMCBC-374: Better logging for TCP RST,"JVMCBC-374: Better logging for TCP RST

Motivation
----------
If a channel is inactive, it makes sense to log that the signal has
been caught at INFO level and not just debug, just to be a little more
verbose with default logging during failure handling.

Change-Id: If6845230023fdb6833feadd75fbf2fafeec228d5",0,0,0,0,0,0,0,0,0
71589,Id36b6657116caed5766d708ceee22e48a024349c,http://review.couchbase.org/#/c/71589,2,472788c1130a2604300346aac08509fe1685cff2,fbc6f8ab3fd84054ecee2331a5c9d4e0e5c18f7e,0,05/01/17,05/01/17,2,Prepare 1.4.0 Release,"Prepare 1.4.0 Release

Change-Id: Id36b6657116caed5766d708ceee22e48a024349c",1,0,0,1,0,0,1,NA,NA
71597,Id40d583e17973fd6b71d248572a38351742f1eb2,http://review.couchbase.org/#/c/71597,3,fbc6f8ab3fd84054ecee2331a5c9d4e0e5c18f7e,02ab0916d1c0be4c4354f4784265d3341742869e,0,05/01/17,05/01/17,2,Start 1.4.1 Release Process,"Start 1.4.1 Release Process

Change-Id: Id40d583e17973fd6b71d248572a38351742f1eb2",1,0,0,1,0,0,1,NA,NA
71795,Ie50f62fb3f90dc5c9305e25483995af534796529,http://review.couchbase.org/#/c/71795,4,abf3ce7f34af1982f388b53c9ab43732247e5f64,85006a5518c3b332c2abdf85f28d971f9d6b16c9,1,10/01/17,11/01/17,388,JVMCBC-380: Disable pipelining for HTTP services.,"JVMCBC-380: Disable pipelining for HTTP services.

Motivation
----------
In forum posts as well as other tickets it has been discovered that
the implicit pipelining netty/core-io uses doesn't work well with
the go implementation of pipelining in http 1.1. In fact, it doesn't
work at all and leads to all kinds of weird issues, especially
prematurely aborted (n1ql) requests that return 0 as the result count.

As a result, we need to disable pipelining for HTTP based services,
but for performance reasons keep it for binary ops.

Modifications
-------------
This change adds a short-circuit statement to the AbstractGenericHandler
which, if the endpoint is set to ""pipeline"" keeps going forward but
otherwise checks if a request is already in-flight and if so it sends
it into the usual retry-or-cancel circle.

Each endpoint is modified to pass in a true/false flag if pipelining
should be enabled for it. Tests have been modified to take that flag
into account and also for each endpoint suitable regression tests
have been added to make sure we don't start pipelining in the future.

Result
------
Pipelining is now for all HTTP-based endpoints disabled. This also
includes the VIEW service which is erlang based and is not known
to cause issues here, but lets keep it consistent.

Change-Id: Ie50f62fb3f90dc5c9305e25483995af534796529",0,1,0,0,0,0,1,1,1
71800,I2b660895e6548464c5e28f09195b4083838eaaa0,http://review.couchbase.org/#/c/71800,2,85006a5518c3b332c2abdf85f28d971f9d6b16c9,5b6189512e150c78955af53470ddaa70ed452db3,1,10/01/17,11/01/17,19,JVMCBC-381: No keepalive for non-pipelined endpoints when op is in-flight,"JVMCBC-381: No keepalive for non-pipelined endpoints when op is in-flight

Motivation
----------
On non-pipelined endpoints it is important to not send keepalives when an
operation is in-flight, since sending the keepalive has the same effect
as pipelining another op over that socket, leading to prematurely termination
of the previous query.

Modifications
-------------
The AGH has been modified to only initiate the keepalive sending process if
either pipelining is enabled (then we always send it) or otherwise no operation
is either queued in the sentRequestQueue or currently being decoded. This
is similar to the check previously added on regular ops under non-pipelining.

Result
------
Pipelining does not implicitly occur on non-pipeline enabled endpoints with
keepalives.

Change-Id: I2b660895e6548464c5e28f09195b4083838eaaa0",0,0,0,0,0,0,0,0,0
71803,I52d254270b7825dbe1c01c0305f5f40ce769978f,http://review.couchbase.org/#/c/71803,3,3dc7a66aa65e80cd8e6b480040100ba42bfd89cb,d5b56046bb518ae86085a51a2e55a8dcc87924b6,1,10/01/17,11/01/17,66,JVMCBC-382: Extract interface needed for BucketConfigParser,"JVMCBC-382: Extract interface needed for BucketConfigParser

Motivation
----------
Right now it is necessary to implement CoreEnvironment to parse
the configuration with BucketConfigParser.parse, which is
not really necessary, and ClientEnvironment in JDCP does not
implement full CoreEnvironment.

Modification
------------
Extract minimal interface, needed for parser and inherit in it
CoreEnvironment.

Result
------
JDCP could inherit BootstrapEnvironment too in its ClientEnvironment.

Change-Id: I52d254270b7825dbe1c01c0305f5f40ce769978f",0,0,0,0,0,1,1,0,0
71898,I99cc53ec3e561668435af9e7e2ff908a7be0c249,http://review.couchbase.org/#/c/71898,2,d5b56046bb518ae86085a51a2e55a8dcc87924b6,5b5cf2aaaeb2955618d7a74ea16ffc08dac5b086,1,12/01/17,12/01/17,150,JVMCBC-383: Redistribute BucketConfigRequest if hostname not set.,"JVMCBC-383: Redistribute BucketConfigRequest if hostname not set.

Motivation
----------
If the BucketConfigRequest does not have a hostname explicitly
attached (which is needed during bootstrap), the code should
apply the usual round-robin approach to make sure that even
if a node is down the config message succeeds eventually.

Modifications
-------------
The code is modified so that a BucketConfigRequest without
a hostname just goes through the same round-robin approach
as other config messages. Previously, always the same node
would've been used so up-the-stack retry mechanisms were
fruitless since the same node would be tried over and over
again for the BucketConfigRequest.

Test has been added to assert this.

Result
------
The BCR can be properly dispatched, even when a node is
down.

Change-Id: I99cc53ec3e561668435af9e7e2ff908a7be0c249",0,0,0,0,0,0,0,0,0
71960,I6b2b6fbc76b17d95e780948a14c5a1ff46b855b6,http://review.couchbase.org/#/c/71960,2,64a72e48639feda94b3f50f4bf1e15c2d6ca2396,11821cbe1d36804267a32cfa9d7c966b45afe622,1,13/01/17,13/01/17,12,Revision of the Exceptions constructors with no params,"Revision of the Exceptions constructors with no params

Motivation
----------
All the java client exceptions having a a method with no parameters dont make a super call.
The oracle compiler in compilation time add this call but all the exceptions have as father
the CouchbaseException and his no params constructor nor have the super call.

This is a problem because the stack trace is never initialized.

Modifications
-------------
Add super() to all the constructors.

Result
------
The Exception is correctly initialized.

Change-Id: I6b2b6fbc76b17d95e780948a14c5a1ff46b855b6
Reviewed-on: http://review.couchbase.org/71187
Reviewed-by: Michael Nitschinger <michael@nitschinger.at>
Tested-by: Michael Nitschinger <michael@nitschinger.at>",0,0,0,0,0,0,0,0,0
71961,I09c4822a514daf7165d60cbeeb57be1212456c62,http://review.couchbase.org/#/c/71961,2,11821cbe1d36804267a32cfa9d7c966b45afe622,942530948b5cbbf63aa78d8962c4ae90f71acc91,1,13/01/17,13/01/17,5,JVMCBC-321: do not try to conver null keys for STAT,"JVMCBC-321: do not try to conver null keys for STAT

Motivation
----------
At some conditions STAT response carries null key. The library should not
try to convert it to String.

Modification
------------
Check stat key for null before conversion.

Result
------
NPE fixed

Change-Id: I09c4822a514daf7165d60cbeeb57be1212456c62
Reviewed-on: http://review.couchbase.org/62277
Reviewed-by: Simon Baslé <simon@couchbase.com>
Reviewed-by: Michael Nitschinger <michael@nitschinger.at>
Tested-by: Sergey Avseyev <sergey.avseyev@gmail.com>",0,0,0,0,0,0,0,0,0
71962,Ie50f62fb3f90dc5c9305e25483995af534796529,http://review.couchbase.org/#/c/71962,2,942530948b5cbbf63aa78d8962c4ae90f71acc91,96cff5d351ee036287ec97ede76b1f157ae25a7d,1,13/01/17,13/01/17,417,JVMCBC-380: Disable pipelining for HTTP services.,"JVMCBC-380: Disable pipelining for HTTP services.

Motivation
----------
In forum posts as well as other tickets it has been discovered that
the implicit pipelining netty/core-io uses doesn't work well with
the go implementation of pipelining in http 1.1. In fact, it doesn't
work at all and leads to all kinds of weird issues, especially
prematurely aborted (n1ql) requests that return 0 as the result count.

As a result, we need to disable pipelining for HTTP based services,
but for performance reasons keep it for binary ops.

Modifications
-------------
This change adds a short-circuit statement to the AbstractGenericHandler
which, if the endpoint is set to ""pipeline"" keeps going forward but
otherwise checks if a request is already in-flight and if so it sends
it into the usual retry-or-cancel circle.

Note that in-flight can either mean outstanding requests in the queue
but also currently processing/decoding one which has already been
taken out of the request queue.

Each endpoint is modified to pass in a true/false flag if pipelining
should be enabled for it. Tests have been modified to take that flag
into account and also for each endpoint suitable regression tests
have been added to make sure we don't start pipelining in the future.

Result
------
Pipelining is now for all HTTP-based endpoints disabled. This also
includes the VIEW service which is erlang based and is not known
to cause issues here, but lets keep it consistent.

Change-Id: Ie50f62fb3f90dc5c9305e25483995af534796529
Reviewed-on: http://review.couchbase.org/71795
Tested-by: Michael Nitschinger <michael@nitschinger.at>
Reviewed-by: Sergey Avseyev <sergey.avseyev@gmail.com>",0,0,0,0,0,0,0,1,1
71963,I2b660895e6548464c5e28f09195b4083838eaaa0,http://review.couchbase.org/#/c/71963,2,684c5618a5caa143f2840dc95b6fb4bb265f5a0f,18b022a49b4fefff355618451744f80e4b903d3a,1,13/01/17,13/01/17,19,JVMCBC-381: No keepalive for non-pipelined endpoints when op is in-flight,"JVMCBC-381: No keepalive for non-pipelined endpoints when op is in-flight

Motivation
----------
On non-pipelined endpoints it is important to not send keepalives when an
operation is in-flight, since sending the keepalive has the same effect
as pipelining another op over that socket, leading to prematurely termination
of the previous query.

Modifications
-------------
The AGH has been modified to only initiate the keepalive sending process if
either pipelining is enabled (then we always send it) or otherwise no operation
is either queued in the sentRequestQueue or currently being decoded. This
is similar to the check previously added on regular ops under non-pipelining.

Result
------
Pipelining does not implicitly occur on non-pipeline enabled endpoints with
keepalives.

Change-Id: I2b660895e6548464c5e28f09195b4083838eaaa0
Reviewed-on: http://review.couchbase.org/71800
Tested-by: Michael Nitschinger <michael@nitschinger.at>
Reviewed-by: Sergey Avseyev <sergey.avseyev@gmail.com>
Reviewed-by: Subhashni Balakrishnan <b.subhashni@gmail.com>",0,0,0,0,0,0,0,0,0
71964,I99cc53ec3e561668435af9e7e2ff908a7be0c249,http://review.couchbase.org/#/c/71964,2,194cb44a9de0ca7cea966d7bfbcf9b1f1ddeecc3,7f209996c219d74d1d361112b4b8f7402d207736,1,13/01/17,13/01/17,150,JVMCBC-383: Redistribute BucketConfigRequest if hostname not set.,"JVMCBC-383: Redistribute BucketConfigRequest if hostname not set.

Motivation
----------
If the BucketConfigRequest does not have a hostname explicitly
attached (which is needed during bootstrap), the code should
apply the usual round-robin approach to make sure that even
if a node is down the config message succeeds eventually.

Modifications
-------------
The code is modified so that a BucketConfigRequest without
a hostname just goes through the same round-robin approach
as other config messages. Previously, always the same node
would've been used so up-the-stack retry mechanisms were
fruitless since the same node would be tried over and over
again for the BucketConfigRequest.

Test has been added to assert this.

Result
------
The BCR can be properly dispatched, even when a node is
down.

Change-Id: I99cc53ec3e561668435af9e7e2ff908a7be0c249
Reviewed-on: http://review.couchbase.org/71898
Tested-by: Michael Nitschinger <michael@nitschinger.at>
Reviewed-by: Sergey Avseyev <sergey.avseyev@gmail.com>
Reviewed-by: Subhashni Balakrishnan <b.subhashni@gmail.com>",0,0,0,0,0,0,0,0,0
71965,Ib5429cb8c3e9d8cdf59d5c6c09edc1c59ac3a5dc,http://review.couchbase.org/#/c/71965,2,1673b773f160f198d102a10b1831206f2d66cb84,5376c7bff49b250aef0b3955bd3f74dcda4d138a,0,13/01/17,13/01/17,2,Prepare 1.3.7 Release,"Prepare 1.3.7 Release

Change-Id: Ib5429cb8c3e9d8cdf59d5c6c09edc1c59ac3a5dc",0,0,0,1,0,0,1,NA,NA
72162,I1a4fac8662b7a1a44ac0519b0200b45478dc2e32,http://review.couchbase.org/#/c/72162,9,d7ccb1c1642ee5a49e7857c4239c89dff5904137,a6f2063da4414e6ec68e3b929c59f333441c3a6c,1,18/01/17,07/02/17,571,Add XATTR support,"Add XATTR support

Change-Id: I1a4fac8662b7a1a44ac0519b0200b45478dc2e32",0,1,0,1,1,0,1,1,1
72178,Iee33da4c016f419dc865a529f2d54d5cdb8e59a3,http://review.couchbase.org/#/c/72178,2,917216327d2f978feee641cd62a7152493dd9f2b,2684043aa9ec168c67c8b26f76f0a8cc83357505,0,18/01/17,18/01/17,2,Prepare 1.4.1 Release,"Prepare 1.4.1 Release

Change-Id: Iee33da4c016f419dc865a529f2d54d5cdb8e59a3",1,0,0,1,0,0,1,NA,NA
72363,I86729543c19f96702d5b7c8a75538e209d433b88,http://review.couchbase.org/#/c/72363,3,2684043aa9ec168c67c8b26f76f0a8cc83357505,13b81b50d3770b31ad0fc46841816a8d298a0bf5,0,23/01/17,24/01/17,4,Bump Netty Dependency,"Bump Netty Dependency

Change-Id: I86729543c19f96702d5b7c8a75538e209d433b88",0,0,0,1,0,0,1,NA,NA
72364,I42286cfde6d3c91344cdd0bce56cadd3cd93aeb7,http://review.couchbase.org/#/c/72364,3,307b15b9fa296ccdd290266d0d130c66288633ec,29c44c316a7506458086c67331a70070eab25a9f,0,23/01/17,24/01/17,2,Start 1.4.2 Development,"Start 1.4.2 Development

Change-Id: I42286cfde6d3c91344cdd0bce56cadd3cd93aeb7",0,0,0,1,0,0,1,NA,NA
72365,Ibdeeb975949a8e2262d41c9d70dd369c14170961,http://review.couchbase.org/#/c/72365,16,0f4fc74f56dd72a4991b9da9b2ebf586c556d16f,c78fc31b3fecbc05f592392e03e358a4282583e3,1,23/01/17,05/02/17,2155,WIP: pooled service,"WIP: pooled service

Change-Id: Ibdeeb975949a8e2262d41c9d70dd369c14170961",0,1,0,1,1,0,1,3,1
73037,Ibc0219e008bf1f72dd890474c97886f3db711795,http://review.couchbase.org/#/c/73037,2,800f80278bf35abaa1cb7f56569f772af3490c4e,55e6e177f1ee36197272f8ee484edc9efdf39230,1,02/02/17,07/02/17,128,JVMCBC-341 Keepalive for search service,"JVMCBC-341 Keepalive for search service

Motivation
----------
Add keepalives for search endpoints

Changes
-------
FTS service supports it through GET on /api/ping endpoint, which is a noop and
responds OK

Results
------
Connections cant be nuked due to idleness

Change-Id: Ibc0219e008bf1f72dd890474c97886f3db711795",0,0,1,0,0,0,1,0,0
73193,I8ee68093f1d4e7887a40ef8c4c3550d2eac2eb02,http://review.couchbase.org/#/c/73193,2,6652ac7367c5a8d3c5b5c5ebe277fcd94dc9bfcc,e4fe4bdba6d9519d5f74e586d0c0d56bc8fbb6b5,1,06/02/17,06/02/17,368,JVMCBC-385: Allow to fall back to old services.,"JVMCBC-385: Allow to fall back to old services.

Motivation
----------
Since the new services are implemented in a bugfix release
there should be an escape valve that allows to force and go
back to the old services in case a bug has slipped through.

Modifications
-------------
This changeset simply introduces the old services and modifies
the factory to use them if the com.couchbase.forceOldServices
system property is set to true.

This should not be documented and only used to advice a user
to circumvent a bug if it slipped through testing.

Result
------
We now have an escape valve if a user is running into troubles
with the new services implementation.

Change-Id: I8ee68093f1d4e7887a40ef8c4c3550d2eac2eb02",0,0,0,0,0,0,0,1,1
73195,Iddc1bd4a897189b2c2078a7b77f261d9a6e6ca3e,http://review.couchbase.org/#/c/73195,2,e4fe4bdba6d9519d5f74e586d0c0d56bc8fbb6b5,06416b4b299f4465b122f938d1de7bd07195b799,1,06/02/17,06/02/17,2,JVMCBC-388: Rename misleading ConfigurationProvider outdated line.,"JVMCBC-388: Rename misleading ConfigurationProvider outdated line.

Motivation
----------
The log line on ""outdated configuration"" is misleading since the
polling is actually done proactive every couple seconds. On
DEBUG level it is visible and might give the impression something
is wrong while it isn't.

Modifications
-------------
This changeset rewords the log line to more accurately reflect
on whats going on.

Result
------
Cleaned up misleading debug log line.

Change-Id: Iddc1bd4a897189b2c2078a7b77f261d9a6e6ca3e",0,0,0,0,0,0,0,0,0
73241,Idca3b5180324640da489f141bec5a86627cadcf9,http://review.couchbase.org/#/c/73241,2,ce6a59d28ca8e6807f26ff36c836fb700c90156d,63686be8ceddb91b37521a677f4d69a1eeb47b11,1,07/02/17,07/02/17,12,JVMCBC-385: Make sure free is enabled on start.,"JVMCBC-385: Make sure free is enabled on start.

Motivation
----------
The free on start flag was only set in one constructor by mistake,
rendering some other higher level functionality not working as
expected.

Modifications
-------------
Properly set an endpint to free on start.

Result
------
Endpoints are now ready to always take requests from the upper
level selectors.

Change-Id: Idca3b5180324640da489f141bec5a86627cadcf9",0,0,0,0,0,0,0,0,0
73425,I5e15e36c8adf5e5b3ded85b1329f6584481ef6c9,http://review.couchbase.org/#/c/73425,2,19514943b06f8878612d29b9e2ed3769839bbe83,d239fcc215302b422b41481c05fb65c86a5da490,0,09/02/17,09/02/17,2,Prepare 1.4.2 Release,"Prepare 1.4.2 Release

Change-Id: I5e15e36c8adf5e5b3ded85b1329f6584481ef6c9",1,0,0,1,0,0,1,NA,NA
73445,Iad43d36a0b3b8f1effc2712a47a741bc37a65b9a,http://review.couchbase.org/#/c/73445,6,d239fcc215302b422b41481c05fb65c86a5da490,0e0caca365cc38dbbb3b4dbf107e631512b2bb90,1,09/02/17,02/03/17,1442,WIP: Analytics Support,"WIP: Analytics Support

Change-Id: Iad43d36a0b3b8f1effc2712a47a741bc37a65b9a",0,1,0,1,1,0,1,6,1
73783,Ic72150f5830f15e8ee93d1602b1b220f574a91ea,http://review.couchbase.org/#/c/73783,4,d8ef55748fd9f5e5a04ad5668ba181a6d1af9412,64ba08efd9d83dd318670db090d644fa0e8d7be0,1,16/02/17,28/02/17,4,Avoid concurrent modification/reading of bucketConfigs map.,"Avoid concurrent modification/reading of bucketConfigs map.

Motivation:
-----------
When opening a bucket, the `ClusterConfig` will be modified before performing
`RequestHandler.reconfigure`, which reconfigures all buckets by flatMapping
over an `Observable` that iterates through the `HashMap` in `ClusterConfig`.

This is especially a problem when buckets are opened concurrently, as the
`reconfigure` operation can overlap with the modifications due to opening the
other buckets, leading to a `ConcurrentModificationException` being thrown from
RxJava. Since the modifications aren't synchronised at all, there could
theoretically (though this might be unlikely) be additional problems with
corrupting the internal structure of the HashMap if multiple actual
modifications happen at the same time.

Modifications:
--------------
The `Map` field in `ClusterConfig` is changed from final to volatile, and the
map stored in the field is never itself modified; instead, a new map is created
and will replace the old reference. This means updates (which are infrequent
other than when opening/closing/creating/deleting buckets) are synchronised,
but simply reading from the map (which happens very frequently) only involves
an additional volatile read and does not need to be synchronised with updates.

The two methods that replace the map are now synchronised so they can't drop
updates (synchronising them without the final/volatile change would mean they
would be unable to corrupt the `HashMap` structure).

Results:
--------
No more `ConcurrentModificationException` on reconfiguration, not possible to
have multiple threads modifying a particular HashMap at the same time.

Change-Id: Ic72150f5830f15e8ee93d1602b1b220f574a91ea",0,1,1,0,0,0,1,0,0
73943,If269ccb7b2a78dd81633e209719b7dd59d79e46d,http://review.couchbase.org/#/c/73943,3,0886c512bf3c92462e35c553fa4032eb9b55fa68,da8bdc7878e1afa658621f1c3dc237ec3adac07a,1,20/02/17,28/02/17,33,JVMCBC-391: Reset the reader index of content buffer on NMVB.,"JVMCBC-391: Reset the reader index of content buffer on NMVB.

WIP

Change-Id: If269ccb7b2a78dd81633e209719b7dd59d79e46d",0,0,1,0,0,0,1,0,0
74285,I784ea901d258646b6edf40db7a3564bbb8f52cf5,http://review.couchbase.org/#/c/74285,11,eb507de00b8ccae84b8062465a9bb36b91a3d24a,f9b7b2fe7fab72de81034d88f8c4954626ab0ff5,1,25/02/17,02/03/17,2027,JVMCBC-392 Integrate yasjl as optional,"JVMCBC-392 Integrate yasjl as optional

Motivation
----------
Use a generic json parser for streaming query response

Changes
-------
Adds dependency to yasjl. Modified the old query parser which lived
inside the query handler to abstract query parser which can be switched
using a system property. The default parser is the old one unless
com.couchbase.enableNewQueryResponseParser is set to a value. Extended
tests from old parser.

Change-Id: I784ea901d258646b6edf40db7a3564bbb8f52cf5",0,1,0,0,1,0,1,2,1
74315,I1da500838239959b41c615e0f57d14ef41963436,http://review.couchbase.org/#/c/74315,6,26ebe9b38b1f41a7fe941ac35b6a4ca56ea688ee,cffea536a51d4ccd458cb806c370d8d0ec643c69,1,27/02/17,03/03/17,138,WIP: support ephemeral buckets,"WIP: support ephemeral buckets

this change makes sure that views are not initialized as a service
when the bucket doesn't support it on this node (signified by the
absence of a couchApiBase).

Since its just a service disable we get the fail fast for free like
if the service is just not enabled (same with memcached buckets).

TODO
 - add unit test case which checks ephemeral() getter on eph and
   non eph bucket.
 - figure out a way to shortcut persisto.* calls

Change-Id: I1da500838239959b41c615e0f57d14ef41963436",0,1,0,0,0,0,1,0,0
74394,I18b03531c677f5c000976c0e6e3a75d75cadd520,http://review.couchbase.org/#/c/74394,2,95c8a454e9b47a48e24c351f87e5eccc146b7464,b93a51a3ea03945f52b53b7c07583efb621472ed,0,28/02/17,28/02/17,2,Start 1.4.3 Development,"Start 1.4.3 Development

Change-Id: I18b03531c677f5c000976c0e6e3a75d75cadd520",1,0,0,1,0,0,1,NA,NA
74400,Icae9798d9bf3f608e251952526fdbfe57c8b1716,http://review.couchbase.org/#/c/74400,2,b93a51a3ea03945f52b53b7c07583efb621472ed,07d92eba66a5a243d4efcd37f9b6431b52a5579d,1,28/02/17,01/03/17,4,Use correct default value for endpoints.,"Use correct default value for endpoints.

This is just a correctness fix, since the constants right now
are all the same.

Change-Id: Icae9798d9bf3f608e251952526fdbfe57c8b1716",0,0,0,0,0,0,0,0,0
74620,I175b1acd3be4ac8052ce04e4b376643507db70d7,http://review.couchbase.org/#/c/74620,2,a822998f70b5d7c6ff6fef743bc75af99c05a7a2,6fe8ceba699f451a58389ba2ba7ee3c5c34db64b,1,03/03/17,03/03/17,3,JVMCBC-395 Also add xattr to bucket capabilties,"JVMCBC-395 Also add xattr to bucket capabilties

Motivation
----------
Recent spock build has bucket capabilies with xattr. Cluster configuration
parse fails with ""value not one of declared Enum instance names"".

Modification
------------
Add xattr to bucket capabilities. This is also backward compatible as we
ignore any unknowns.

Result
------
Configuration parse is successful with spock nodes

Change-Id: I175b1acd3be4ac8052ce04e4b376643507db70d7",0,0,0,0,0,0,0,0,0
74777,Idc10aa7d1f4b4645ff5d0faf833c62fc8d751bf8,http://review.couchbase.org/#/c/74777,2,6fe8ceba699f451a58389ba2ba7ee3c5c34db64b,a5613ad089b571ec0a08e33054059d26b973d5a6,0,07/03/17,07/03/17,2,Prepare 1.4.3 release,"Prepare 1.4.3 release

Change-Id: Idc10aa7d1f4b4645ff5d0faf833c62fc8d751bf8",1,0,0,1,0,0,1,NA,NA
74846,I37a6912fd94b1ba46b22099a6d99b1c8809c2863,http://review.couchbase.org/#/c/74846,2,49da6692d743d7595731f8fc296d18b9642127c1,9055598dd7912de26e88270326367191eabaef66,1,08/03/17,16/03/17,2,JVMCBC-399: Perform HELLO before AUTH,"JVMCBC-399: Perform HELLO before AUTH

Motivation
----------
In preparation for the extended error codes the hello
negotiation should come before authentication so that
already as part of auth the server can send more
detailed error messages.

Modifications
-------------
The handler is moved in the pipeline before authentication
instead of afterwards.

Result
------
HELLO now runs before auth, not afterwards. Right now this
doesn't change anything but lays the groundwork for future
enhancements

Change-Id: I37a6912fd94b1ba46b22099a6d99b1c8809c2863",0,0,1,0,0,0,1,0,0
74847,Iaefa0787c19d66c8439b0db2ab4ffb746171e9ad,http://review.couchbase.org/#/c/74847,10,8530c35bc518e75648ed3964464dedc198798724,4597071eafc6c34a50faea168ecc62654c92a75d,1,08/03/17,03/04/17,451,WIP: XERROR,"WIP: XERROR

- add compareTo for ErrorMap with rules
- make respone status converter consume the error map properly

Change-Id: Iaefa0787c19d66c8439b0db2ab4ffb746171e9ad",0,1,0,0,0,0,1,0,0
75073,I634a230577a731afef1695769ba157c6e254ad6c,http://review.couchbase.org/#/c/75073,3,74d47435c48795adbd9ab38c66346e941d17fe8a,cf998f2cc6cb312ec91c30e17cd280d710014ed8,0,13/03/17,15/03/17,2,Start 1.4.4 development,"Start 1.4.4 development

Change-Id: I634a230577a731afef1695769ba157c6e254ad6c",0,0,0,1,0,0,1,NA,NA
75076,Iaead9cffa9e40c2924f963a5958f3ba1518ffa65,http://review.couchbase.org/#/c/75076,21,cf998f2cc6cb312ec91c30e17cd280d710014ed8,a9be29ba1e410fa653e6246553031bef595507be,1,13/03/17,27/03/17,1572,JVMCBC Rbac wip,"JVMCBC Rbac wip

Change-Id: Iaead9cffa9e40c2924f963a5958f3ba1518ffa65",0,1,1,1,1,0,1,6,1
75236,If9b27f70d0dfc02fd32c5108188ab38e17ab093a,http://review.couchbase.org/#/c/75236,3,6ae06feeef9cfd7ddfe345d38b3a8412eb5fbd8c,fec7ce24e0f547939b81c85e7b1bc81184ab70ca,1,15/03/17,24/03/17,89,JVMCBC-402 Fix ignored callbacksOnIoPool in N1ql & Analytics query row callbacks,"JVMCBC-402 Fix ignored callbacksOnIoPool in N1ql & Analytics query row callbacks

Motivation
----------
Async query row will always emit response on a computation pool thread
even if callbackOnIoPool is set

Changes
-------
Use callbacksOnIoPool value to decide if the observeOn computation
thread scheduler should be set for query observables. If the value is
set to true, the callback will continue using the Io pool thread. This
may give a slight performace gain to application by removing the
overhead of thread switching.

Results
-------
CallbacksOnIoPool value is no longer ignored

Change-Id: If9b27f70d0dfc02fd32c5108188ab38e17ab093a",0,0,1,0,0,0,1,2,1
75265,I3dc4d526e69def53bf586f9363f31ff17483910f,http://review.couchbase.org/#/c/75265,5,e7f5d8d133e31dd63057c455190822b7fb577fca,c868ce616d050552294b7c272bf05dd5b760102c,1,16/03/17,24/03/17,245,User management wip,"User management wip

Change-Id: I3dc4d526e69def53bf586f9363f31ff17483910f",0,1,1,1,0,0,1,1,1
75374,Iba6bd747d19be7c93a031ea6235c93cf798309ff,http://review.couchbase.org/#/c/75374,3,c98fd6c10054b27fc256df103f9a11f0a62ded7b,36413d4222e958f095a41d883ba9e2d318789563,1,17/03/17,21/03/17,89,JVMCBC-403 Fix incorrect escape processing in streaming parser,"JVMCBC-403 Fix incorrect escape processing in streaming parser

Motivation
----------
Streaming parser with incorrectly consider escaped quote in a string
like ""\\\"""" as unescaped. Fix to consider the quote as correctly
escaped.

Changes
-------
String bytebuf processor keeps track of last two bytes to check if the
current byte is escaped. This is incorrect in the n-2th byte is already
escaped. So just keep track if the last byte is escaped to make
transitions to escaped or unescaped state.

Results
-------
Query parser now correctly parses continuous escape sequences. Added
unit test to verify.

Change-Id: Iba6bd747d19be7c93a031ea6235c93cf798309ff",0,0,1,0,0,0,1,0,0
75392,I808a51270e35d8dbfdd7f26e44c6e3854183e8d6,http://review.couchbase.org/#/c/75392,3,d1dfdb3c3460280dbd792711369ab4796bf35552,1d9d70f0b5ace5b6074f301e76c75e5a266a3f60,0,18/03/17,24/03/17,14,JVMCBC-XX: Bump Dependencies.,"JVMCBC-XX: Bump Dependencies.

This changeset bumps the following depencies to their new bugfix
versions:

	-> Netty from 4.0.43.Final to 4.0.45.Final
	-> RxJava from 1.2.3 to 1.2.7
	-> Jackson from 2.7.8 to 2.7.9

Change-Id: I808a51270e35d8dbfdd7f26e44c6e3854183e8d6",0,0,1,0,0,0,1,NA,NA
75428,I85599be36e13704693006394b42c0f113375b784,http://review.couchbase.org/#/c/75428,3,5e4a1be76058241a1b55e6d254f8615b05a44ea4,5a37f44c0ee3d0ee9ee90d405d11cb21f660fcc5,1,20/03/17,24/03/17,39,JVMCBC-401: propagate error on endpoint encode.,"JVMCBC-401: propagate error on endpoint encode.

Motivation
----------
If an error happens on encode in the IO pipeline
it is swallowed and turns into a timeout on the
caller side - but it instead should be propagated
back through the request so the user knows whats
going on.

Modifications
-------------
This changeset catches an error during the encoding
phase and if this happens, it fails the request
(which in turn will propagate it back to the user)
instead of failing it silently and never completing.

A test has been added to catch regressions in the
future.

Result
------
Correctly catch and propagate errors on the IO
encode path.

Change-Id: I85599be36e13704693006394b42c0f113375b784",0,0,1,0,0,0,1,0,0
75858,I82a5fa193ffefec41c06e89f5eb269858753c4d2,http://review.couchbase.org/#/c/75858,4,4c4187b2023fb82e68c0980963f6808037177891,acd8f53b376ace302421152a7a02c8e8fab7388d,1,28/03/17,29/03/17,97,JVMCBC-407: Clean up stateful resources on ConfigurationProvider termination.,"JVMCBC-407: Clean up stateful resources on ConfigurationProvider termination.

Motivation
----------
It has been observed that when a Cluster instance is created and deleted many
times in a row, a memory leak shows up which can be characterized as the
following:

The CarrierRefresher subscribes to the 10 second config polling interval
but never unsubsribes it on shutdown. This has no consequences if, in
regular use, only one Cluster instance is created and terminated
on shutdown, but if it is cycled many times one can observe the increased
memory usage in a profiler.

Modifications
-------------
Since right now there has been no coordinated shutdown of attached
ConfigurationProvider resources, a new shutdown method has been added
which in turn closes the config subject as well as coordinates a
shutdown with the refreshers. This gives every component that
holds global state a chance to clean them up.

Result
------
Resources are properly cleaned up on config provider shutdown, not
leaking memory if they are cycled very often.

Change-Id: I82a5fa193ffefec41c06e89f5eb269858753c4d2",0,1,0,0,0,0,1,0,0
76055,I62eb20feaa0c5d9dbb559a94045d3e40d38533bc,http://review.couchbase.org/#/c/76055,2,b8f8df7e0d0d1cf4e799626ee862340647aa0fc0,c2f2c71d60707ffd385c877fea4c0624e71d8af1,1,30/03/17,31/03/17,270,JVMCBC-396 Support to parse profiling info from N1QL query response,"JVMCBC-396 Support to parse profiling info from N1QL query response

Motivation
----------
Parse profile info if available in query response

Changes
-------
Add this support in Yasjl query response parser. The parser looks for
""profile"" json object value. This is only available if the query request
has the raw param profile set.

Result
------
Successfully parse profile info

Change-Id: I62eb20feaa0c5d9dbb559a94045d3e40d38533bc",0,0,0,0,0,0,0,1,1
76059,I08bd7ea3e7755275661503dee7a36deeb4dcc4f0,http://review.couchbase.org/#/c/76059,2,f58e294a33dd85ca207d45964217f5091819a048,e433c6d811f7a7b7c8751f474f175e7d17570a9a,1,30/03/17,30/03/17,37,JVMCBC-408: Deprecate DCP,"JVMCBC-408: Deprecate DCP

Since DCP support has been moved to its own library, we are
deprecating DCP in core-io, with removal slated for 1.5.0.

Change-Id: I08bd7ea3e7755275661503dee7a36deeb4dcc4f0",0,0,0,0,0,0,0,0,0
76061,I4f669d9d76218f3909e11a6430da29bd4230d1a2,http://review.couchbase.org/#/c/76061,3,13541ad67ef3284b632e10cee2e0033f084a8fc8,fb0ab468029092cb59ecd3e71d7eb62e90524402,1,30/03/17,30/03/17,13,WIP: Resolve addresses when parsing ConnectionString,"WIP: Resolve addresses when parsing ConnectionString

Change-Id: I4f669d9d76218f3909e11a6430da29bd4230d1a2",0,0,0,1,0,1,1,0,0
76064,Ib0180082a83422043e9e9aa6f4d07e4cd5c8033a,http://review.couchbase.org/#/c/76064,4,fb0ab468029092cb59ecd3e71d7eb62e90524402,b478a00f9eece435a7fb48cae5dbb5145baa8a8d,1,30/03/17,31/03/17,64,JVMCBC-410: Allow to configure the config polling interval.,"JVMCBC-410: Allow to configure the config polling interval.

Motivation
----------
At the moment the config poll interval is fixed to 10 seconds,
but it should be configurable.

Modifications
-------------
This changeset exposes the setting on the environment and makes
use of it in the CarrierRefresher. Note that when set to 0, it
is considered to be disabled.

Also, the interval cannot be configured lower than 2500
milliseconds to prevent the user from polling at a very high
rate all the time and potentiall overloading the system.

Result
------
Configurable poll interval, with the option to disable it if
needed.

Change-Id: Ib0180082a83422043e9e9aa6f4d07e4cd5c8033a",0,1,0,0,0,0,1,0,0
76077,Ib54a010caa068ba56fb04a4216869a50c0f6753e,http://review.couchbase.org/#/c/76077,3,51874b27372cbca4a08b430922115ded8bdeddd0,7d76e55eff9b40aa01d02e79316c53a53ebb9ae8,1,30/03/17,31/03/17,37,JVMCBC-411: Use ports when building partitioned nodes list,"JVMCBC-411: Use ports when building partitioned nodes list

Motivation
----------
ns_server/cluster_run script allows to run multiple Couchbase Server
nodes on the same network interface just by assigning all services
different ports.

Currently java core assumes that the all nodes will have different
network addresses, and ignores port during reordering addresses for
partitioning algorithm. Because ordering algorithm does not look at
ports, it might lead to duplicates and eventually parse failure.

Modification
------------
Do not trim ports when parsing partition info block.
Check both address and ports when building partitioned nodes list.

Result
------
JVM core library work with ns_server/cluster_run script

Change-Id: Ib54a010caa068ba56fb04a4216869a50c0f6753e",0,0,0,0,0,1,1,1,1
76090,I8dfbe83110d22558aaaded7117f27552016a6718,http://review.couchbase.org/#/c/76090,5,15e2637f10aa4e9b30f046f4ce4cf45d44ebc365,7504a2c18f73ad0f665efb4d253bb2921286a22c,1,31/03/17,31/03/17,4,Fix bytebuf leaks in unit tests,"Fix bytebuf leaks in unit tests

Change-Id: I8dfbe83110d22558aaaded7117f27552016a6718",0,1,0,1,0,0,1,0,0
76091,Id3383a58aab9fe07448b9c22eb1beb3d70e2767d,http://review.couchbase.org/#/c/76091,3,0ca62973a9754ee19c3da4e62e91009e87496b0d,b84a2f50b831bf0d9923f97e9fafa72dd6222df4,1,31/03/17,31/03/17,27,JVMCBC-412 Fix extras leak on IllegalReferenceCountException,"JVMCBC-412 Fix extras leak on IllegalReferenceCountException

Motivation
----------
If there was an error encoding the request, the extras bytebuf allocated
will leak.

Changes
-------
On exception trying to retain content, release extras allocated for the
request and rethrow the exception.

Results
-------
There is no leak now while running leak detector on the encode failure
feature test.

Change-Id: Id3383a58aab9fe07448b9c22eb1beb3d70e2767d",0,0,0,0,0,0,0,1,1
76183,I922a87987589f0b0d719e1a2e33155abcd0f714f,http://review.couchbase.org/#/c/76183,2,b84a2f50b831bf0d9923f97e9fafa72dd6222df4,0da2fe91d6d082a527febb17c4d64d02de6827f2,1,03/04/17,03/04/17,1,JVMCBC-394: Fire channelActive in SelectBucketHandler when disabled.,"JVMCBC-394: Fire channelActive in SelectBucketHandler when disabled.

Motivation
----------
As part of the bucket selection process a new handler was introduced,
but it doesn't fire the channel active event if the feature is
disabled. Since the upper handlers rely on this event to be bubbled
up the code doesn't work properly anymore.

Modifications
-------------
Bubble up the channelActive event if the feature is disabled.

Result
------
Functionality restored.

Change-Id: I922a87987589f0b0d719e1a2e33155abcd0f714f",0,0,0,0,0,0,0,0,0
76213,I4a0249f91b369ff640a9a960f250a892e9003510,http://review.couchbase.org/#/c/76213,2,73597e4ca70463109509f76e0ec5634ac212e2f6,7c5f6a0ec3d3de136201979f2463a067548634e8,1,03/04/17,03/04/17,5,JVMCBC-394 Apply username to newConfig in ClusterConfig bucketconfigs,"JVMCBC-394 Apply username to newConfig in ClusterConfig bucketconfigs

Motivation
----------
To support RBAC username of the user authorized for bucket access is
included in the bucket configuration. The username in the bucket
configuration is not applied to new configs received.

Changes
-------
Since the username is not set on new cluster configuration received on
cluster change, this could lead to auth failures in the key value endpoint
negotiation as the username is pulled from the configuration. So the
change apply the username from the old config to new configurations
received, as the cluster configuration will not by itself contain that
information.

Results
-------
No auth failures on cluster change.

Change-Id: I4a0249f91b369ff640a9a960f250a892e9003510",0,0,0,0,0,0,0,0,0
76265,I2b287e75ff8901b5764d09a6e3775287ab5b75e8,http://review.couchbase.org/#/c/76265,2,7c5f6a0ec3d3de136201979f2463a067548634e8,29675c0b6e9e0f177e5290e9dc188f53c20709d0,0,04/04/17,04/04/17,2,Prepare 1.4.4 release,"Prepare 1.4.4 release

Change-Id: I2b287e75ff8901b5764d09a6e3775287ab5b75e8",1,0,0,1,0,0,1,NA,NA
76434,Ia35fc064de40e1fab5eb7974a2f389bc348d31c8,http://review.couchbase.org/#/c/76434,3,29675c0b6e9e0f177e5290e9dc188f53c20709d0,f88c1230829c319e6d25f774e7a43c8fc00799b8,0,06/04/17,07/04/17,2,Prepare for next development iteration,"Prepare for next development iteration

Change-Id: Ia35fc064de40e1fab5eb7974a2f389bc348d31c8",0,0,0,1,0,0,1,NA,NA
76559,I1a723ed3ae207447c62a58eac530cf1660cf556d,http://review.couchbase.org/#/c/76559,2,f88c1230829c319e6d25f774e7a43c8fc00799b8,273e5c3a8d2dc3448fefb28c4d880fa5aa1ae1b7,1,10/04/17,10/04/17,32,JVMCBC-413: Allow to run HELLO after auth.,"JVMCBC-413: Allow to run HELLO after auth.

Motiviation
-----------
To support EOL server versions it should be possible
to optionally run HELLO after auth (to prevent the
server disconnecting the client over and over again).

Modifications
-------------
This change adds a system property called
com.couchbase.helloAfterAuth, which defaults to
false. If set to true, the pipeline is switched
around to first run the authentication phase
and later hello.

The downside to this is that extended errors on auth
are not available, but this is not a concern with older
servers anyways.

Result
------
Backwards compatibility with older, EOL server versions.

Change-Id: I1a723ed3ae207447c62a58eac530cf1660cf556d",0,0,0,0,0,0,0,0,0
76845,I71e2bf8ab5389d4a0baba811c5a8cff4b1ae5fae,http://review.couchbase.org/#/c/76845,3,273e5c3a8d2dc3448fefb28c4d880fa5aa1ae1b7,a468aecda1978f1a4ff076a3442696013ea4c759,1,14/04/17,19/04/17,108,JVMCBC-415: Enforce CarrierRefresher poll floor.,"JVMCBC-415: Enforce CarrierRefresher poll floor.

Motivation
----------
As part of ""fast failover"" capabilities it has been decided that a
global polling floor of 10ms should be enforced in order to make
sure that the server is not flooded with config requests.

Modifications
-------------
Because all polling is directed through the CarrierRefresher in the
core-io layer, a volatile timestamp has been introduced which is
now updated and checked every time a poll (either through refresh
or tainted pollign) needs to be initiated.

A test has been added which polls quickly and asserts that only
every 10ms or more the actual polling call is directed against
the servers.

Result
------
A floor polling of 10ms is introduced, making sure that the
servers are not flooded with polling requests.

Change-Id: I71e2bf8ab5389d4a0baba811c5a8cff4b1ae5fae",0,0,1,0,0,0,1,0,0
76934,I5aa0d0da031e15c099924588df76493d5f540a5e,http://review.couchbase.org/#/c/76934,4,a468aecda1978f1a4ff076a3442696013ea4c759,29b378b1962cc8e49e98a924c9b3d56e31b5ccf6,1,18/04/17,26/04/17,290,JVMCBC-417: Shift the carrier node refresh list on each attempt.,"JVMCBC-417: Shift the carrier node refresh list on each attempt.

Motivation
----------
Previously the node lists were shuffled once for refresh polling
and always for a refresh attempt, always in ""randomized"" ordering.
This does not guarantee consistent polling of all the confi nodes
in the cluster.

This changeset introduces a more reliable and consistent polling
mechanism, mainly motivated by the new ""fast failover""
requirements.

Modifications
-------------
This changeset adds a global volatile counter that gets used to
consistently shift the given node lists forward, both for
tainted polling and proactive refresh.

The shifting makes sure that eventually every node will get its
turn instead of randomliy shuffling or even just once for a full
refresh polling cycle.

Result
------
Better poll cycle mechanics during rebalance and proactive config
refresh, preparing for ""fast failover"".

Change-Id: I5aa0d0da031e15c099924588df76493d5f540a5e",0,1,1,0,0,0,1,0,0
76997,Iab681891f26b86007073b82ad3df3b328ee088af,http://review.couchbase.org/#/c/76997,8,3ac4fa02038bf72a1a36884bcd1881a3e5665f94,b856fd9947624328ce4f88ff3281236f5129775c,1,18/04/17,27/04/17,333,JVMCBC-418 Add mock support for integration test,"JVMCBC-418 Add mock support for integration test

Motivation
----------
Use CouchbaseMock to test kv error map and allow configuration mock settings
as properties

Changes
-------
- Add dependency to CouchbaseMock which is hosted in
snapshots.couchbase.com.
- Add basic structure for testing kv error map as it is still not used
by the client
- Expose error map from ResponseStatusConverter
- Read properties file test.properties to check if mock is enabled and
also mock related settings.

Results
-------
Now mock can be used for testing kv error map.

Change-Id: Iab681891f26b86007073b82ad3df3b328ee088af",0,1,1,0,0,0,1,0,0
77181,I2df14143bdcf3faae190841f3756ef56c217d349,http://review.couchbase.org/#/c/77181,2,525498e35f3ecab7691203f96130e3798f9eaae9,d3120fc46b452d0875719aaf739dd4acc8f96d8a,1,21/04/17,24/04/17,4,JVMCBC-419 Support changes in user management rest endpoints due to rename of builtin to local,"JVMCBC-419 Support changes in user management rest endpoints due to
rename of builtin to local

Motivation
----------
The user management rest endpoints now use local instead of builtin.

Changes
-------
The path on upsert and remove user has been updated to use local.

Change-Id: I2df14143bdcf3faae190841f3756ef56c217d349",0,0,1,0,0,0,1,0,0
77237,Ic7e8640831cbdb06c2e7dc434567654382ba4208,http://review.couchbase.org/#/c/77237,2,55dad4bb07f34eb18bdccbe3be698a7f5444097a,39ad771120c1abfbb641871a1decd35ce367a127,1,24/04/17,26/04/17,14,JVMCBC-421: Close LatencyStats on removal.,"JVMCBC-421: Close LatencyStats on removal.

Motivation
----------
LatencyStats is holding a weak reference to the pause detector
and it makes sense to clean them up to save the GC some work
and also avoid bloating if the GC is not cleaning them up
right away.

Modifications
-------------
Once the stat is removed, call close on it to make sure the
weak reference internally is cleaned up properly.

Result
------
LatencyStats are properly cleaned up. Hat tip to @mp911de for
letting me know of this.

Change-Id: Ic7e8640831cbdb06c2e7dc434567654382ba4208",0,0,0,0,0,0,0,0,0
77515,Ied419146c6a22f6041db7f7e29e40924f68b7585,http://review.couchbase.org/#/c/77515,6,1bd05d8420830b63ef044d49b28c4e2d03d38adb,e67f0da16cffdf356959bf79e60454f2e27ab50f,1,28/04/17,10/07/17,87,JVMCBC-423 Dont send timed out operations over network,"JVMCBC-423 Dont send timed out operations over network

Motivation
----------
It is not very ideal to send timed out operations on the application to
the server.

Changes
-------
Allow to store a reference to the subscriber in the CouchbaseRequest and
add check to see if the subscriber has unsubscribed from the subscriptions list.
If the subscriber has unsubscribed, the request handler will not further
process the request.

Results
-------
Timed out requests will not be sent to the server. Tests are covered
in java-client.

Change-Id: Ied419146c6a22f6041db7f7e29e40924f68b7585",0,1,1,0,0,0,1,0,0
77611,Iedc927b92528491b309e19221197b008ab9e67cd,http://review.couchbase.org/#/c/77611,2,a44b97876a9fe4c0db99e0505a9d5173c95c9818,6c3a7bdef7ef9e2f02f32e8f4f8450def2f3592a,0,02/05/17,02/05/17,2,Prepare 1.4.5 release,"Prepare 1.4.5 release

Change-Id: Iedc927b92528491b309e19221197b008ab9e67cd",1,0,0,1,0,0,1,NA,NA
77722,If6f2856e41e4103b124172e4d5db6342656f877f,http://review.couchbase.org/#/c/77722,4,a3c629f11f3cdf2f12bbdc3afa8936ae7731f760,29530e03721d3816e82b09f452e9d00e92f84708,1,04/05/17,01/06/17,159,JVMCBC-420 Support for full document set/get with xattrs,"JVMCBC-420 Support for full document set/get with xattrs

Motivation
----------
Allow full document set and get with xattrs using subdoc. This is useful for Spring
data couchbase.

Changes
-------
Add GETDOC and UPSERTDOC with opcodes OP_GET and OP_SET. Allow doc flag
createDocument to be set using SubMultiMutationDocOptionsBuilder and
send it as part of extras.

Result
------
Full doc set/get with subdoc is possible. Tests are covered in
java-client.

Change-Id: If6f2856e41e4103b124172e4d5db6342656f877f",0,1,0,0,0,0,1,1,1
77729,I2ce0b04f691604818181e16cbfed96a899da887b,http://review.couchbase.org/#/c/77729,2,90c1c78433d230acbad403d952176a1ed8f79eac,b8ba230893265cf6485075a886fa40c1de3a0ee5,1,04/05/17,05/05/17,98,JVMCBC-426 Rename attributeAccess to xattr as per RFC change,"JVMCBC-426 Rename attributeAccess to xattr as per RFC change

Change-Id: I2ce0b04f691604818181e16cbfed96a899da887b",0,0,0,1,0,0,1,0,0
78182,Ic2cfbe3b3dbcb2aa2519a20aa11b3a0ac275edda,http://review.couchbase.org/#/c/78182,3,b8ba230893265cf6485075a886fa40c1de3a0ee5,6c5dd7aad221a8a48e82bafa101d644b75b19d61,1,16/05/17,29/05/17,566,JVMCBC-422: Add utility class for inet address management.,"JVMCBC-422: Add utility class for inet address management.

Motivation
----------
In prepraration for bigger changes to the code base around
inet addr management, the code needs a helper/wrapper class
around InetAddress to be more intelligent about reverse
DNS lookups and in the future other functionality.

Modifications
-------------
As a result, this changeset introduces a NetworkAddress class
which acts as a wrapper around InetAddress and has more knowledge
about the environment as well as how it has been initialized.

Based on this it provides accessors to get to the hostname,
ip address or a combination in a best-effort manner. It is intended
to be used troughout the codebase.

In addition utility methods are imported through InetAddresses, copied
from Google Guava with proper attribution in the header.

Result
------
We now have a wrapper class around InetAddress which is more intelligent
and allows us to have proper orchestration around it.

Change-Id: Ic2cfbe3b3dbcb2aa2519a20aa11b3a0ac275edda",0,0,1,0,1,0,1,3,1
78236,I361fd52abd3722956fbbf53868fc9aa6d70d40a4,http://review.couchbase.org/#/c/78236,6,52c386ee428deeeb651ec229fb9c9d66200c5c73,cfb945c6e5ce1e4fa6ffcae1344614ad7bb0082d,1,17/05/17,29/05/17,729,JVMCBC-422: Adapt codebase to use the NetworkAddress.,"JVMCBC-422: Adapt codebase to use the NetworkAddress.

Motivation
----------
The previous change did introduce the NetworkAddress wrapper,
this change modifies the codebase to make use of it.

Modifications
-------------
Code and tests are adapted, various interfaces changed to expose
the new signature. Note that for backwards compat on external
interfaces, the event bus message getters have not been changed.

Result
------
The code now makes use of the address wrapper and allows more
control over the reverse DNS behavior.

Change-Id: I361fd52abd3722956fbbf53868fc9aa6d70d40a4",0,1,1,0,1,0,1,0,0
78393,I7a75413c09e3511bded77f17b816fdd5ac7f6015,http://review.couchbase.org/#/c/78393,3,2e925d2515a34b8b710e853e98a1691341de395d,0b34fbbc0d3583876f4c7da1447b30d0030399f2,1,22/05/17,29/05/17,16,JVMCBC-427: Explicitly only look for IPv4 Addrs,"JVMCBC-427: Explicitly only look for IPv4 Addrs

Motivation
----------
If DNS AAAA records are checked before A records and
IPv6 is forced, it can be the case that the SDK tries
to connect to an Couchbase Server via IPv6 which the
SDK supports but the server doesn't.

Modifications
-------------
The NetworkAddress class now explicitly iterates through
all the found InetAddress instances and looks for one that
maps to IPv4. If none is found, an exception is raised.

Result
------
Better fallback support to IPv4 if the JVM/DNS setup enforces
IPv6.

Change-Id: I7a75413c09e3511bded77f17b816fdd5ac7f6015",0,0,1,0,0,0,1,0,0
78710,I26b9527da25144fb0ced056a19b09714b67d8cd6,http://review.couchbase.org/#/c/78710,2,721ebbe8ee4d4a1339ff10d4a36025b4053b791b,bde45edba712ae6b49df8c19e738bf6c9221de9d,0,29/05/17,29/05/17,2,1.4.6 Development,"1.4.6 Development

Change-Id: I26b9527da25144fb0ced056a19b09714b67d8cd6",1,0,0,1,0,0,1,NA,NA
78711,Ib012a050428eb8451e378369ddbcf533e4f830d4,http://review.couchbase.org/#/c/78711,3,4c12b14aa4f1354621cca80c9da1b11feac33a23,36cdf5291af35205d90656e02ea1fcc58f6beb73,0,29/05/17,29/05/17,4,Use admin properties for test authentication.,"Use admin properties for test authentication.

Motivation
----------
With Couchbase Server 5.0 and RBAC coming, it isn't enough to just
use bucket credentials, also users need to be in place (especially
when working with buckets without passwords!).

Modifications
-------------
Because the admin user has all credentials and is always available,
it makes sense to just authenticate with that user in order to run
the test suite completely.

Result
------
The test suite doesn't fail on the int test with invalid credentials.

Change-Id: Ib012a050428eb8451e378369ddbcf533e4f830d4",0,0,0,0,0,0,0,NA,NA
78712,I38f6f831951a6be153c7f2a62fb7760e26d287fb,http://review.couchbase.org/#/c/78712,2,9a6a3f51f7a5e46edf43192ebda8582e1f0c0a49,576759de1e032437100dd0c4896a709ab1907e7f,1,29/05/17,29/05/17,2,Stop endpoint in test so that it doesn't spam the logs.,"Stop endpoint in test so that it doesn't spam the logs.

Change-Id: I38f6f831951a6be153c7f2a62fb7760e26d287fb",0,0,0,1,0,0,1,0,0
78713,I32ba334179ce4bb6b35b6fb4f08f51fbc7c48531,http://review.couchbase.org/#/c/78713,3,34d1d8c9fd838b0befdaa04041a2928eb0f05362,fb56c6e3f28754b48a616b2999fa712f240c0844,1,29/05/17,30/05/17,8,JVMCBC-428: Correctly map HTTP 401 on ResponseStatus.,"JVMCBC-428: Correctly map HTTP 401 on ResponseStatus.

Motivation
----------
HTTP 401 (unauthorized) has not been mapped properly on the ResponseStatus
code, which can lead to generic FAILURE responses instead of more specialized
ones.

Modifications
-------------
The ResponseStatusConverter now correctly converts 401 into an ""access error"",
similar to the KV conversion.

Also, a test case has been modified so it doesn't fail against Couchbase Server
5.0.

Result
------
Test case passing against Server 5.0.

Change-Id: I32ba334179ce4bb6b35b6fb4f08f51fbc7c48531",0,0,0,0,0,0,0,0,0
78828,Idd98458f9f673c971f8670ff3b8e48bb3e0af115,http://review.couchbase.org/#/c/78828,5,fb56c6e3f28754b48a616b2999fa712f240c0844,bcc56399fb6d6935e647c09258e25e5aba680e9d,1,31/05/17,06/06/17,49,Make test suite compatible with RBAC.,"Make test suite compatible with RBAC.

Motivation
----------
The test suite got modified to work with 5.0 but
then it didn't work with older releases. The
test suite needs to run transparently against
all supported releases properly.

Modifications
-------------
A helper method has been introduced which, before
bootstrapping, loads the config and grabs the
cluster node version.

If its >= 5, then the username and password are
set to admin credentials which are guaranteed
to work in the RBAC scenario. Otherwise, they
stay the same as before (bucket level).

Result
------
The test suite now runs against pre-5.0 and post
5.0 releases.

Change-Id: Idd98458f9f673c971f8670ff3b8e48bb3e0af115",0,1,0,0,0,0,1,0,0
78878,Icd46f534ec984bafabea3657180d17be966cac52,http://review.couchbase.org/#/c/78878,14,1c3e6f3cdf97406f313ddacd55b74989735a938e,810beccc6d07f0d14e87b5936a777957638c3c98,1,31/05/17,02/06/17,447,JVMCBC-414 Add Extended Support phase 2 for KV Error Map,"JVMCBC-414 Add Extended Support phase 2 for KV Error Map

Motivation
----------
Couchbase server 5.0 provides key value error map with hints on handling
errors on response. Add support to parse and consume the error map
hints.

Changes
-------
The following changes have been added to the key value response handler

- Parses the retry specifications available for auto-retry attribute
- Consumes and records the retry specifications on the request itself
- Reconnect, retry if connection state invalidated attribute is present
- Send config invalidated message if config update attribute is present

Updated mock to latest version. Mock integration tests have been added to
verify constant, linear and exponential retries.

Results
-------
Error map is parsed and consumed. Verification tests pass.

Change-Id: Icd46f534ec984bafabea3657180d17be966cac52",0,1,0,0,0,0,1,3,1
79114,Iffeb0ae8dcf90ec3dee65a1d73a5c077d940bf08,http://review.couchbase.org/#/c/79114,2,ec5148c978982bd81748fb83c52b1301e7c39fcc,3f91bfa438366c713cb7951358351403c7d68255,0,06/06/17,06/06/17,2,Prepare 1.4.6 Release,"Prepare 1.4.6 Release

Change-Id: Iffeb0ae8dcf90ec3dee65a1d73a5c077d940bf08",1,0,0,1,0,0,1,NA,NA
79382,Id4125b425f63335064c0a79487231f04c6f03d83,http://review.couchbase.org/#/c/79382,5,d02edb889d423c048a1d07ff74f8019048130d9c,1bd50aca289e86287839a00688ea3176638abe74,1,12/06/17,10/07/17,122,JVMCBC-430 Support createDocument flag in subdoc single path mutations,"JVMCBC-430 Support createDocument flag in subdoc single path mutations

Motivation
----------
Add support to set document flags in Subdoc single path mutation
commands.

Changes
-------
- Add document flags in subdoc single path mutation in the extras if set
- Allow to set createDocument option in subdoc single path Mutation Requests

Results
-------
CreateDocument option available for single path subdoc mutation
requests. Verification tests in SubdocumentDocumentFlags pass.

Change-Id: Id4125b425f63335064c0a79487231f04c6f03d83",0,1,0,0,0,0,1,1,1
79445,I7e228a9e0cef3418c6d7a717ff77bfbf791c94b8,http://review.couchbase.org/#/c/79445,7,fd0832f24af2031eca63aff5607f4097140d686d,8dc05a10fa6166758491f447f62fce995aa80740,1,13/06/17,05/09/17,314,JVMCBC-431 Add support for AddDoc and accessDeleted in subdoc doc flags,"JVMCBC-431 Add support for AddDoc and accessDeleted in subdoc doc flags

wip

Change-Id: I7e228a9e0cef3418c6d7a717ff77bfbf791c94b8",0,1,1,0,0,0,1,3,1
79461,Icd225e452bcab07fe2b546e154c9367d5b3c4b8e,http://review.couchbase.org/#/c/79461,3,6ed18f6d89936e2f2993728ae7b3bcc3047f1065,1229f3da6eda959720f7f85d14701abfa87aa1db,1,14/06/17,20/06/17,50,WIP: x509 support,"WIP: x509 support

Change-Id: Icd225e452bcab07fe2b546e154c9367d5b3c4b8e",0,0,1,1,0,0,1,0,0
79472,Ib1218b11b9e378998ee13b38740ec59fb25c6689,http://review.couchbase.org/#/c/79472,10,33ff871f22ba47f363dcd1eaf3302a427bafb458,79f53e6b84ff2aace0ed16ae3ce59008feef3757,1,14/06/17,10/07/17,302,WIP: enhanced errors,"WIP: enhanced errors

Change-Id: Ib1218b11b9e378998ee13b38740ec59fb25c6689",0,1,0,1,0,0,1,2,1
79521,Ida8e55d0ffe41547a09b0228c853cd41258ab3bd,http://review.couchbase.org/#/c/79521,8,9ac42c1be9a9a5a77bfe590b258269268f816a41,60af262c3e08cb9b64202d796ce91edbd391b560,1,14/06/17,21/08/17,115,User management changes,"User management changes

Change-Id: Ida8e55d0ffe41547a09b0228c853cd41258ab3bd",0,1,0,1,0,0,1,0,0
79716,I8dfd5e940647322f07859f91e2c081ee531bf281,http://review.couchbase.org/#/c/79716,2,f094fd40b05422302a5d8980e27cc71de820669e,123afd058ab831218e726bd391c3cd15d3e7eb16,0,20/06/17,20/06/17,2,Start 1.4.7 Development,"Start 1.4.7 Development

Change-Id: I8dfd5e940647322f07859f91e2c081ee531bf281",1,0,0,1,0,0,1,NA,NA
80214,Ie1c146105eea311660ae252ab737e97801bc7ec7,http://review.couchbase.org/#/c/80214,4,123afd058ab831218e726bd391c3cd15d3e7eb16,c249e34ba72e83809e64f37e7e16f7bbdeecb452,1,01/07/17,03/07/17,196,JVMCBC-432: WIP,"JVMCBC-432: WIP

Change-Id: Ie1c146105eea311660ae252ab737e97801bc7ec7",0,1,0,1,0,1,1,0,0
80361,Ica5128f0d07a058ac5c7dcf6d77f60490bbb4bea,http://review.couchbase.org/#/c/80361,7,c249e34ba72e83809e64f37e7e16f7bbdeecb452,33a0a91fd60ee72c3b865dfa29461aadd4e6c38e,1,07/07/17,10/07/17,196,WIP: extend keepalive support to heartbeats,"WIP: extend keepalive support to heartbeats

Change-Id: Ica5128f0d07a058ac5c7dcf6d77f60490bbb4bea",0,1,1,1,0,0,1,0,0
80491,I364a764f00cd86ddbe402affa86306fb4f3897b9,http://review.couchbase.org/#/c/80491,2,cc4ca188fbd566fe0ef368766c95b3dd175a36aa,97c5b81734c90d12bd54f5d4cf704519bc844ec4,1,11/07/17,11/07/17,4,Dont use RBAC for mock,"Dont use RBAC for mock

Change-Id: I364a764f00cd86ddbe402affa86306fb4f3897b9",1,0,0,1,0,0,1,0,0
80511,Ie6b2e6d1fe399735e977b01a4c55a70a9636941f,http://review.couchbase.org/#/c/80511,2,97c5b81734c90d12bd54f5d4cf704519bc844ec4,8cfa3ddb53287bd21411e422e17b31c8f939f6d9,1,11/07/17,11/07/17,12,Disable XERROR in tests by default.,"Disable XERROR in tests by default.

Motivation
----------
Right now the XERROR tests are not universal and
stable enough to make them always pass against all
kinds of configurations.

This changeset disables it by default and skips tests
that depend on it.

This makes the test suite green again, a separate
effort needs to be taken to make the kv error map
changes more stable to enable them by default again.

Change-Id: Ie6b2e6d1fe399735e977b01a4c55a70a9636941f",1,0,0,0,0,0,1,0,0
80549,I992a05f2688c346023cb2679fcdaea69dfb8fba6,http://review.couchbase.org/#/c/80549,2,8cfa3ddb53287bd21411e422e17b31c8f939f6d9,239c979d67c39a55df089329aa6f0def08153bd9,0,12/07/17,12/07/17,2,Prepare 1.4.7 Release,"Prepare 1.4.7 Release

Change-Id: I992a05f2688c346023cb2679fcdaea69dfb8fba6",1,0,0,1,0,0,1,NA,NA
80574,I3007e25648ee34c0affd0beccab13d1a8c0522df,http://review.couchbase.org/#/c/80574,2,239c979d67c39a55df089329aa6f0def08153bd9,876d4e2c32d4783fde5af05e4ff3263fd1c8af1b,1,12/07/17,12/07/17,3,JVMCBC-439: Fix prepared statement dispatching with node hostname,"JVMCBC-439: Fix prepared statement dispatching with node hostname

Motivation
----------
This is a regression. When the NetworkAddress has been introduced
this codepath in the QueryLocator has not been modified and now
the equality comparison always fails between InetAddr and NetworkAddress
- thanks java for not failng to compile ;-)

Modifications
-------------
Convert to a NetworkAddress on the fly and as a result handle the
equality comparison properly, fixing the regression and allowing the
Prelocated Requests to dispatch properly.

Result
------
Regression fixed.

Change-Id: I3007e25648ee34c0affd0beccab13d1a8c0522df",1,0,0,0,0,0,1,0,0
80656,Ie31d883a28a3aa92ca6e5b7a3ba7112f83fbacc9,http://review.couchbase.org/#/c/80656,2,876d4e2c32d4783fde5af05e4ff3263fd1c8af1b,97d8f294807c8007c4d3bea415655ba645d6e4fd,0,13/07/17,13/07/17,2,Start 1.4.8 Development,"Start 1.4.8 Development

Change-Id: Ie31d883a28a3aa92ca6e5b7a3ba7112f83fbacc9",1,0,0,1,0,0,1,NA,NA
80657,Iea78ac639f312c2b0ebd7affc7a72aa785dff202,http://review.couchbase.org/#/c/80657,2,97d8f294807c8007c4d3bea415655ba645d6e4fd,f95caa25b678cbe5123a6b734451c9cf0abbff8d,0,13/07/17,17/07/17,12,Bump Dependencies,"Bump Dependencies

Change-Id: Iea78ac639f312c2b0ebd7affc7a72aa785dff202",0,0,1,1,0,0,1,NA,NA
81108,I7501f1a3cc93275e26e7644248b0261feecb09aa,http://review.couchbase.org/#/c/81108,10,f95caa25b678cbe5123a6b734451c9cf0abbff8d,325e75bad661cd6049e31f2ba304a16d14f14dfd,1,19/07/17,17/08/17,107,WIP: core hook,"WIP: core hook

Change-Id: I7501f1a3cc93275e26e7644248b0261feecb09aa",0,1,0,1,0,0,1,0,0
81247,I4de29c6e87b5df0b66dd91eb1e461e2a5fb6f077,http://review.couchbase.org/#/c/81247,3,f4396736450d12ce56b3cef83bc6c3fe60970516,29501bf481c8d338c49beac4ad863c4809c87a99,1,21/07/17,28/07/17,41,WIP: store dispatched hostname once done,"WIP: store dispatched hostname once done

Change-Id: I4de29c6e87b5df0b66dd91eb1e461e2a5fb6f077",0,0,1,1,0,0,1,0,0
81973,I02d73a9eb7bd9c8e7f967c2c63fedd6e231e3f41,http://review.couchbase.org/#/c/81973,2,b3a229f7d4eaa650b44462d14c3bcc18183258b1,0750314461df4355ad3aedf7c3895d7af6be4cb9,0,07/08/17,07/08/17,10,Start 1.5.0 Development and Bump Dependencies,"Start 1.5.0 Development and Bump Dependencies

This changeset bumps to 1.5.0-SNAPSHOT and updates
the netty and rxjava dependencies to their latest
bugfix releases as well.

This will be the baseline to release the 1.5.0 branch off.

Change-Id: I02d73a9eb7bd9c8e7f967c2c63fedd6e231e3f41",0,0,0,0,0,0,0,NA,NA
81977,I51a2652eb530f46d9fe57b346b399ea341890f09,http://review.couchbase.org/#/c/81977,2,175141b01a5bd47fa6273ddbe2f6c113b3051ea8,9bc8fc5e6612e3fd67749dff96e333f78500cd8f,1,07/08/17,07/08/17,3261,JVMCBC-443: Remove DCP from Core-IO,"JVMCBC-443: Remove DCP from Core-IO

Motivation
----------
DCP has been factored out into its own project (which has core-io
as a dependency) and we've deprecated it couple months ago.

Modifications
-------------
Now that 1.5.0 is around the corner DCP is removed from core-io
and only lives in a standalone project where it is maintained.

Result
------
Getting rid of unmaintianed and unused code in core-io making it
leaner.

Change-Id: I51a2652eb530f46d9fe57b346b399ea341890f09",0,0,0,0,1,0,1,-9,0
81978,Ie486980995fee373fb20ee9e67fa12142180abb1,http://review.couchbase.org/#/c/81978,3,12d92af744bc76c1fa6a3a3fcc8887c9d829cf01,9f2a3d176cf4febd9f3edf713d65de3d155cb03c,1,07/08/17,11/08/17,2,JVMCBC-416: Set config poll interval to 2.5s by default.,"JVMCBC-416: Set config poll interval to 2.5s by default.

Motivation
----------
As part of the fast failover RFC it was decided that the default
poll interval is reduced to 2.5s to detect config changes more
quickly.

Modifications
-------------
This changeset tunes the poll interval down from 10s to 2.5s.

Result
------
Quicker detection of possible config changes.

Change-Id: Ie486980995fee373fb20ee9e67fa12142180abb1",0,0,1,0,0,0,1,0,0
81986,Icbc6d3f3e480f5f5f5fadf2ed7daad27d922ef46,http://review.couchbase.org/#/c/81986,3,ed9aef4b9d85911fab14f28c873371b074e5d67c,2d917e0b2de141385b95efc78fd047cb5c370007,1,07/08/17,08/08/17,10,JVMCBC-444: Enforce config poll floor at 50ms.,"JVMCBC-444: Enforce config poll floor at 50ms.

Motivation
----------
According to the fast failover RFC, the config poll
floor should be enforced at 50ms, so polling should
not occur more frequently than that.

Modifications
-------------
This changeset changes the environmental setting so
it can be set as low as 50ms but it also adjusts the
carrier refresher (which is responsible for doing the
polling) to ignore all refresh attempts below 50ms so
those triggered from other sources do not happen
higher than the given interval.

Result
------
Config poll floor at 50ms enforced as specified in the
fast failover RFC.

Change-Id: Icbc6d3f3e480f5f5f5fadf2ed7daad27d922ef46",0,0,0,0,0,0,0,0,0
81994,I1e2f4c8650ed47cf7ccd73d639f04f525a2e4bd4,http://review.couchbase.org/#/c/81994,4,af453b5e4acc12edad84c9074dfa8b557c4a862c,f0dcfaf41d1538b71dd531c4f640e708fc5c0326,1,07/08/17,17/08/17,48,JVMCBC-438: LOCKED & Finishing touches for Xerror,"JVMCBC-438: LOCKED & Finishing touches for Xerror

Motivation
----------
With recent development of the xerror & kv error map in the spock
server release, a couple of adjustments need to happen in core-io
to be in-line with it.

Modifications
-------------
This changeset contains the following changes:

 - enable xerror by default now that all regressions are fixed
 - LOCKED is added as a new response status code that needs to
   be handled.
 - The error map is _only_ consumed and checked if the error
   is not known by just looking up the status code.
 - if a ""item-locked"" is found all retry behavior is removed
   from the attribute list to keep backwards-compatible behavior.

Result
------
Extend xerror support while still keeping backwards compatibility
on document locking.

Change-Id: I1e2f4c8650ed47cf7ccd73d639f04f525a2e4bd4",0,1,1,0,0,0,1,0,0
82036,Ie123d6df31cc00db514630e9b1be0a41b14877f7,http://review.couchbase.org/#/c/82036,3,d3cc80b29d43139c119798eeb8a88c4ef12bc9f0,e27c6b49a6a835f143d6b7c5b1dfd67b6a13fbed,0,08/08/17,09/08/17,4,JVMCBC-445: Use an iterator on pool flush to avoid IOOB.,"JVMCBC-445: Use an iterator on pool flush to avoid IOOB.

Motivation
----------
In the PooledService flush implementation, we are iterating
the CopyOnWriteArrayList in a simple for loop with direct
index access - this works as long as there is no concurrent
access on the underlying structure.

If this happens, a ArrayIndexOutOfBoundsException is
possible.

Modifications
-------------
To avoid the ArrayIndexOutOfBoundsException, the COWArrayList
provides a stable iterator() which copies the original list
before iterating, preventing the race condition from
happening in the first place.

The changeset uses the iterator approach rather than the
manual indexing.

Result
------
No more ArrayIndexOutOfBoundsException when iterating and
modifying the endpoint list simultaneously.

Change-Id: Ie123d6df31cc00db514630e9b1be0a41b14877f7",0,0,0,0,0,0,0,NA,NA
82046,Iab049447605b1f7510ad5f6a6ef299557cda1416,http://review.couchbase.org/#/c/82046,3,12b27828f77a08c0b5e0528752fd537f8188fe04,5d3c383e12d52b21cb5b465b87435b28c70c1461,1,08/08/17,08/08/17,78,wip: fix ci errors,"wip: fix ci errors

Change-Id: Iab049447605b1f7510ad5f6a6ef299557cda1416",0,0,0,1,0,0,1,0,0
82054,I89069293cc42beae20c90fcb5464173009e91d0c,http://review.couchbase.org/#/c/82054,7,35102592f9be4e66dff19a156d0c6707163aa49b,54049e0f156dec810134368911772097242ebeae,1,08/08/17,17/08/17,27,JVMCBC-446: Speed up end of row parsing for N1QL parser.,"JVMCBC-446: Speed up end of row parsing for N1QL parser.

Motivation
----------
When parsing N1QL Query rows in a streaming fashion, the
row parser needs to look for start { and end } properly
to find the next row to pass on into the observable.

When the documents are huge the current approach scans
the full buffer over and over again which is inefficient
and can be sped up.

Modifications
-------------
In QueryHandler#parseQueryRows reuse the ClosingPositionBufProcessor and
restart the scan when when it ends at the last run with
int forEachByte(int index, int length, ByteBufProcessor processor).

Result
------
It brings the performance on par with the query launched from the
console on big documents, on certain documents even shaving off
seconds of processing time.

Change-Id: I89069293cc42beae20c90fcb5464173009e91d0c",0,1,1,0,0,0,1,0,0
82199,If28a71c9fddf49c98fad32e2213e4a39ab87e015,http://review.couchbase.org/#/c/82199,3,3bbde03063a9a89a88afce2674df609f6745ee30,929fa598eeb1cf71980d6be52cb38ad03d0d0243,1,11/08/17,11/08/17,17,JVMCBC-449: Sanity check delay upper and lower bounds.,"JVMCBC-449: Sanity check delay upper and lower bounds.

Motivation
----------
The lower and upper boundaries can be easy to mess up and a user
was running into troubles because of this. We need to sanity
check on creation, making it easier to spot user errors.

Modifications
-------------
For linear and exponential delay, the upper and lower boundaries
are asserted and an exceptio is raised immediately if the lower
boundary is larger than the upper one.

Result
------
Immediate feedback on parameter misuse/switch without knowing
whats going on otherwise.

Change-Id: If28a71c9fddf49c98fad32e2213e4a39ab87e015",0,0,0,0,0,0,0,0,0
82441,I848478a0606330648dc033b696086dcc1984d889,http://review.couchbase.org/#/c/82441,2,cd1b2af1f3f5b2b10b5bc3880d3b49b9223a5a39,07b5bf700b04f0bd58b36455d5c43ccb32906fe0,1,18/08/17,18/08/17,83,JVMCBC-451: Add support for Subdocument Get Count,"JVMCBC-451: Add support for Subdocument Get Count

Motivation
----------
In Couchbase Server 5.0, a new lookup command (get count) is introduced
which allows to fetch the number of items for a given path in a document.

Modifications
-------------
This changeset adds the new command to the Handler opcodes and makes sure
that the appropriate single and multi path messages are setup so that
they can be encoded correctly.

Result
------
core-io support for subdocument get count.

Change-Id: I848478a0606330648dc033b696086dcc1984d889",0,0,0,0,0,0,0,0,0
82451,Ideca474fddd9e3f34b6b4f72c23157a666ed3139,http://review.couchbase.org/#/c/82451,2,3e8bdc23bac2c23c70cfd53f4278a3519cb527a1,14bbdc673d19940f745176143c2699effba2b815,1,18/08/17,21/08/17,8,JVMCBC-448: Handle select bucket response status 0x01,"JVMCBC-448: Handle select bucket response status 0x01

Motivation
----------
The server might return with a 0x01 status on select bucket if
it is not found, and we should handle it.

Modifications
-------------
The 0x01 status code (ENOENT) is covered and a descriptive error
message is returned upstream.

Result
------
0x01 response status as error is handled on select bucket.

Change-Id: Ideca474fddd9e3f34b6b4f72c23157a666ed3139",0,0,1,0,0,0,1,0,0
82497,I5f18298945a81df606171e356da96ae2136a32e7,http://review.couchbase.org/#/c/82497,2,de23b20a99f99b1c66a186b31c744ca009b32a12,b2b78b316ad74dbc3d74fc5a7c63835c560bc607,1,21/08/17,21/08/17,22,JCBC-1086: Add support for explicit domain when removing or upserting user.,"JCBC-1086: Add support for explicit domain when removing or upserting user.

Note that this change reorders the arguments (stringly typed...) so that
they are in-line with the get users request.

Change-Id: I5f18298945a81df606171e356da96ae2136a32e7",0,0,0,0,0,0,0,0,0
82501,I13d4c04cd563e740953c968bb235cfd52eea0551,http://review.couchbase.org/#/c/82501,2,b2b78b316ad74dbc3d74fc5a7c63835c560bc607,b77ba022537f1fd3084c0634c6cad6d7309cc0ee,1,21/08/17,22/08/17,6,JVMCBC-437: Increase fuzz to 25 for kv error map retry test.,"JVMCBC-437: Increase fuzz to 25 for kv error map retry test.

This aligns the fuzz value with what libcouchbase is using,
decreasing the possibilities of false-positives when running
the tests.

Change-Id: I13d4c04cd563e740953c968bb235cfd52eea0551",0,0,0,0,0,0,0,0,0
82555,If5639b547ea3b095aec8601c097fde350d9651e3,http://review.couchbase.org/#/c/82555,2,b77ba022537f1fd3084c0634c6cad6d7309cc0ee,9b4cc31bcf102d97565faad257cc00294e76ccb0,1,22/08/17,22/08/17,317,Various test cleanup tasks,"Various test cleanup tasks

Change-Id: If5639b547ea3b095aec8601c097fde350d9651e3",1,0,0,1,0,0,1,0,0
82623,I252afa4dcad50078474285d13c0c38269b17f46d,http://review.couchbase.org/#/c/82623,2,9b4cc31bcf102d97565faad257cc00294e76ccb0,33a765d1487dd4a25898683f39ac8774ad1453cc,1,23/08/17,23/08/17,18,JCBC-1096: Explicitly handle auth errors on observe.,"JCBC-1096: Explicitly handle auth errors on observe.

Motivation
----------
With Server 5.0 and RBAC it is now possible that a user only has
write access but not read access, leading to the situation where
a PersistTo or ReplicateTo might fail after correctly storing
the doc but then the user is not allowed to use the observe
command.

Modifications
-------------
This change explicitly checks for authentication errors and
supplies a helpful message, including the enhanced error
messages back to the user.

Result
------
If the user is performing an op and it now fails because
of an auth issue, the error message is now clear.

Change-Id: I252afa4dcad50078474285d13c0c38269b17f46d",0,0,0,0,0,0,0,0,0
82801,Ide5ede81fd26cac365e91142f50a8e9c6672d94f,http://review.couchbase.org/#/c/82801,2,33a765d1487dd4a25898683f39ac8774ad1453cc,e07b8caf49b475ddd0e7fa42982a1ff12189cd8e,0,28/08/17,30/08/17,4,Bump Netty Dependency,"Bump Netty Dependency

This changeset bumps nettys bugfix release from 4.0.50 to
4.0.51, making sure we stay on top of the latest fixes.

Change-Id: Ide5ede81fd26cac365e91142f50a8e9c6672d94f",0,0,0,0,0,0,0,NA,NA
82917,I19dca0da8e541a48afc96c06378a420f93b00ca2,http://review.couchbase.org/#/c/82917,2,e07b8caf49b475ddd0e7fa42982a1ff12189cd8e,257d186bed0ab487038a94e4e7cbbd2008688f94,1,30/08/17,31/08/17,58,JVMCBC-435: Limit config poll floor only on a per-bucket basis.,"JVMCBC-435: Limit config poll floor only on a per-bucket basis.

Motivation
----------
The config poll floor added in JVMCBC-415 is causing a regression
with properly loading and applying bucket configurations when more
than one bucket is opened at the same time.

Modifications
-------------
The change applied in JVMCBC-415 is applying a refresher-global
poll floor for new bucket configurations. This is problematic
because config refresh attempts for _different buckets_ that are
quickly sent one after another are dropped if below the configured
min floor interval.

Instead, the floor should be in place but it needs to be checked
on a per-bucket basis, giving each bucket a fair chance to grab
a new configuration.

This also remedies the side effect of all this that multiple
bucket configs can end up with varying node list sizes which
in turn results in keeping connections open to nodes which
are not part of the cluster anymore (consider a hard failover).

Result
------
By tracking the poll floor on a per-bucket basis, each bucket
is given a fair chance to grab a new configuration, resulting
in prompt config updates even if more than one bucket is open.

Change-Id: I19dca0da8e541a48afc96c06378a420f93b00ca2",0,0,0,0,0,0,0,0,0
82947,I29f03834e0c28dce416b561d53e1fc525fde193f,http://review.couchbase.org/#/c/82947,2,2cee1ff2e6bc981a5f8a5a6bff92266b80779740,f026353b0c9804ec6bd0ed310429bed741377ce6,1,31/08/17,01/09/17,270,JVMCBC-456: Add unit tests from standalone project.,"JVMCBC-456: Add unit tests from standalone project.

Motivation
----------
This changeset adds the unit tests from the standalone
project for the yasjl parser where the initial development
happened.

Change-Id: I29f03834e0c28dce416b561d53e1fc525fde193f",0,0,0,0,0,0,0,2,1
82948,I88e53bc3055da8111bde8ba44478698775c6bffa,http://review.couchbase.org/#/c/82948,2,0f8cda345ad816c3c2727d7b2750821651ed7ae2,5d87e46fb600fe5fd77aa58098c50c2dfacb1593,1,31/08/17,01/09/17,2,JVMCBC-457: Make new query parser the default.,"JVMCBC-457: Make new query parser the default.

Motivation
----------
The new generic streaming query parser is more reliable and
makes it possible to avoid one-off response parser that are
fragile.

Modifications
-------------
This one has been in the making for a while but behind a feature
flag. With the upcoming minore release its time to promote it to
active by default, but it can always be disabled as a workaround
if any bugs should surface that haven't been covered.

Result
------
The new response parser is enabled by default!

Change-Id: I88e53bc3055da8111bde8ba44478698775c6bffa",0,0,0,0,0,0,0,0,0
82951,I09ec17e2cc841342d339a620aa94441c7c7ffa21,http://review.couchbase.org/#/c/82951,2,ae38bb5c1c07010e386f463d1b528a92ee554d87,cf52e3d2f2d50cf45a0ea4a9991dc6604982bbc0,1,31/08/17,01/09/17,6,JVMCBC-456: current request needs to be set on response.,"JVMCBC-456: current request needs to be set on response.

Motivation
----------
The old query handler did set the currentRequest on the
GenericQueryResponse, but the new parser didn't even if the
response expects it to.

Modifications
-------------
This changeset adds a test to assert for non-nullness of the
request and makes sure it gets set properly by the new parser.

Result
------
The query response has the original request properly set by
the new parser.

Change-Id: I09ec17e2cc841342d339a620aa94441c7c7ffa21",0,0,0,0,0,0,0,0,0
82956,Ie45c1f09e30313e906faa668f499bd2746b40785,http://review.couchbase.org/#/c/82956,2,e2e04840cdc5478c5714d7146f2867104800db10,120dc0591f9054d70e73d2a3abf9f294c9664c2d,1,31/08/17,01/09/17,174,JVMCBC-456: Cleanup the ResponseParser.,"JVMCBC-456: Cleanup the ResponseParser.

This changeset doesn't actually change functionality but rather
does houskeeping like variable scope, javadoc and so forth.

Change-Id: Ie45c1f09e30313e906faa668f499bd2746b40785",0,0,0,0,0,0,0,0,0
82961,I6935ae134a7fd7282b95b7bccb35696134a11989,http://review.couchbase.org/#/c/82961,2,9686618b258aca17a65379ea8be1dde4f1c29980,d46a8c195285ec922b97f4a91fa7aedee4735e60,1,31/08/17,01/09/17,40,JVMCBC-456: Remove unneeded observeOn and fix backpressure.,"JVMCBC-456: Remove unneeded observeOn and fix backpressure.

Motivation
----------
The current parser has two pieces of code which are not working
as intended. Both the observeOn and onBackpressureBuffer calls
actually return the modified object and as a result are ignored
right now.

Modifications
-------------
As it turns out after investigation, the observeOn call is actually
not needed because it doesn't matter from where the subjects are
completed, what matters is where they are consumed from - and this
is handled in a different place.

As a result, this changeset gets rid of the observeOn calls. Since
it has never had any effect the code keeps working as before with
that removal, its just less ambiguous.

The other change in place puts the onBackpressureBuffer() call in
a place where it is actually used, and this is right when the
response is created. Now the observable returned to the user includes
the onBackpressureBuffer() semantics properly.

Result
------
After this changeset is applied, the observeOn semantics are
clarified and the onBackpressureBuffer method is properly applied
to the response.

Change-Id: I6935ae134a7fd7282b95b7bccb35696134a11989",0,0,0,0,0,0,0,0,0
82969,I1adf4f60efcf5ba7f3a87f4ad5e8dae62af9e584,http://review.couchbase.org/#/c/82969,2,265fa718d460d8e07f7a6739193e1bf620f3d41a,5009b774b812a8f18bb130a822b3d8fc8dcf1e13,1,31/08/17,01/09/17,322,JVMCBC-456: Polish JsonPointer and JsonPointerTree.,"JVMCBC-456: Polish JsonPointer and JsonPointerTree.

Motivation
----------
This changeset doesn't change any of the functionality, it just
cleanes up the code, adds javadoc and a couple of test cases
for the JsonPointer.

Change-Id: I1adf4f60efcf5ba7f3a87f4ad5e8dae62af9e584",0,0,0,0,0,0,0,0,0
82971,I041a441b4572a45a170e28dd75adc30a64b44808,http://review.couchbase.org/#/c/82971,2,654fa224714f74d8826c61171d3817dbb4e15400,62df8fcbf13a07ba3d5bb7ea6a2db77ad3065b49,0,31/08/17,01/09/17,201,JVMCBC-456: Basic cleanup of ByteBufJsonParser,"JVMCBC-456: Basic cleanup of ByteBufJsonParser

Motivation
----------
This changeset adds docblocks and tightens the API scope a little
bit of the parser. It also does one optimization.

Modifications
-------------
Other than tightening the API scope a bit and adding javadocs, this
changeset adds a bigger optimization: it caches the EOFException instead
of creating new ones over and over again.

As it can be seen in
http://normanmaurer.me/blog/2013/11/09/The-hidden-performance-costs-of-instantiating-Throwables/
the problem with using exceptions for flow control is that instantiating
them is expensive and can hurt performance.

Since we don't need a stack trace for flow control, statically creating the exception and reusing
it when throwing it helps to significantly reduce the overhead.

Result
------
Small refactoring and one performance optimization applied to the parser.

Change-Id: I041a441b4572a45a170e28dd75adc30a64b44808",0,0,0,0,0,0,0,NA,NA
82976,I455509c53e628afda08322fdcb84c60ec2689c24,http://review.couchbase.org/#/c/82976,4,9b6eae15326522497c38c7bcdd8c7047190c5165,f7f7fcdc886ae92d902a16fab4c419489e931600,0,31/08/17,01/09/17,16,JVMCBC-456: Use Deque instead of Stack,"JVMCBC-456: Use Deque instead of Stack

Motivation
----------
Stack is an older and more or less deprecated collections class
in java, and the JDK recommends moving to a Deque implementation
instead. This also has the benefit of not having to use a
synchronized datastructure where we don't need one, paying an
overhead possibly.

See https://docs.oracle.com/javase/7/docs/api/java/util/Deque.html
for more details.

Modifications
-------------
One can use the Deque as a drop-in-replacement for the Stack since
it provides all the necessary methods. Test pass.

Results
-------
Use a more modern, unsynchronized datastructure instead of the old
Stack one.

Change-Id: I455509c53e628afda08322fdcb84c60ec2689c24",0,1,0,0,0,0,1,NA,NA
83018,I8726d4b24dd15607aa380cd22d8e3f1f7e81eb74,http://review.couchbase.org/#/c/83018,2,f7f7fcdc886ae92d902a16fab4c419489e931600,0050b17f4855459179973ce02acf60e04a72fb88,1,01/09/17,01/09/17,4,JVMCBC-456: Handle JsonPointer with empty token list toString(),"JVMCBC-456: Handle JsonPointer with empty token list toString()

This changeset handles an empty token ref list gracefully when
toString() is subsequently called on JsonPointer (to avoid
an IOOBException).

Change-Id: I8726d4b24dd15607aa380cd22d8e3f1f7e81eb74",0,0,0,0,0,0,0,0,0
83064,Ia0e7d4659811858a2ce11716ce67c467ed2d112a,http://review.couchbase.org/#/c/83064,2,6ed28d20ca5f80ca9d644025fc3e0e94be675883,e32b579bc3d8c0986ffd5b358fe736ddfbf60997,1,03/09/17,03/09/17,21,JVMCBC-458: Discover Analytics service through the server config.,"JVMCBC-458: Discover Analytics service through the server config.

Motivation
----------
The analytics service is now distributed (dp3+) from the server
config in specially enabled builds. If one of those is used we
should pick up the service right from the server config like
with all the other services.

Modifications
-------------
The port info mapping is updated to take the ""cbas"" and ""cbasSSL""
port mappings into account. Note that this now would override
the ports set by the manual analytics enabled properties, but
they are intended to go away anyways once analytics hits GA.

Result
------
Analytics service is now automatically discovered when the
service is enabled on the server.

Change-Id: Ia0e7d4659811858a2ce11716ce67c467ed2d112a",0,0,0,0,0,0,0,0,0
83065,Ia55d4d7e6600a54e2e5de6da18ce8cdc5976fb65,http://review.couchbase.org/#/c/83065,2,74dbd5111504e66cbd47b57cb7de9f31436caddc,aeca747632065cf20e540f2764ebb96c2be17f9c,1,03/09/17,03/09/17,2,JVMCBC-460: Properly discover the FTS SSL service port.,"JVMCBC-460: Properly discover the FTS SSL service port.

Motivation
----------
FTS now properly supports encryption, so we need to make sure that
the ftsSSL port is properly picked up.

Modifications
-------------
Adds the ftsSSL port mapping information and as a result picks up the
encrypted ssl port by default if present in the config.

Result
------
Support fot FTS & SSL.

Change-Id: Ia55d4d7e6600a54e2e5de6da18ce8cdc5976fb65",0,0,0,0,0,0,0,0,0
83079,I2ebef38bb79893bdef519c1a2233f028b0991bbc,http://review.couchbase.org/#/c/83079,10,aeca747632065cf20e540f2764ebb96c2be17f9c,28329020d851ba32c193da48cd6199c2c89ede33,1,04/09/17,05/09/17,414,JVMCBC-461: Add basic health check API support.,"JVMCBC-461: Add basic health check API support.

Motivation
----------

Modifications
-------------

Result
------

Change-Id: I2ebef38bb79893bdef519c1a2233f028b0991bbc",0,1,0,0,0,0,1,0,0
83104,I0ad4cb6da83a63e3493165449a97f3250588f752,http://review.couchbase.org/#/c/83104,3,8ca7f8eaa880b0493c0d3c86576ad089745baf7f,d9343e0872e337d40cc292dfd4ea413945305ea8,0,05/09/17,05/09/17,12,Remove slice before bytebuf copy,"Remove slice before bytebuf copy

It is not necessary for the copy and reduces object allocation in TLAB
by almost 25%.

There are 34K objects in a 10 min 1000 limit travel sample run compared
to 43K objects in TLAB.

Change-Id: I0ad4cb6da83a63e3493165449a97f3250588f752",0,0,0,0,0,0,0,NA,NA
83125,Ic9ab0e48203271b2afd3fa1a5a847833fb194654,http://review.couchbase.org/#/c/83125,2,1f01d1667d74c7a0b954c44d5dea4919cf7d3a11,af32eba2641b0619f7f4ed13b6d1ef79d576a170,1,06/09/17,06/09/17,67,JVMCBC-461: add integration test for health check api,"JVMCBC-461: add integration test for health check api

Change-Id: Ic9ab0e48203271b2afd3fa1a5a847833fb194654",0,0,0,1,0,0,1,0,0
83127,Ia69387848115aba880080da3dd85d18f9e9c6bee,http://review.couchbase.org/#/c/83127,3,7076ac7b143bc3c23022aad4e1943c80b865d297,a545ef09475f0116de91db09d359c9eadd95ec73,1,06/09/17,06/09/17,72,JVMCBC-462: Promote Experimental APIs where appropriate.,"JVMCBC-462: Promote Experimental APIs where appropriate.

Motivation
----------
This changeset works through all the experimental APIs and promotes
them to uncommited & committed where appropriate.

Especially most of the subdoc API has been mature enough so its
worth promoting it in 1.5.0.

Change-Id: Ia69387848115aba880080da3dd85d18f9e9c6bee",0,0,0,0,0,0,0,0,0
83153,I4ef6e739907fe8230ea11e186e76aecc561b7f32,http://review.couchbase.org/#/c/83153,2,a545ef09475f0116de91db09d359c9eadd95ec73,2514be0a1128a7882ce8323be166839ee0b05e57,0,06/09/17,06/09/17,2,Prepare 1.5.0 release,"Prepare 1.5.0 release

Change-Id: I4ef6e739907fe8230ea11e186e76aecc561b7f32",0,0,0,1,0,0,1,NA,NA
83174,I505a8713a7194dab68623deba621220ff56f2dbd,http://review.couchbase.org/#/c/83174,2,2514be0a1128a7882ce8323be166839ee0b05e57,564c8b1aa3531932a26baa7cfd7b88eadb66edc4,0,07/09/17,26/09/17,2,Start 1.5.1 development,"Start 1.5.1 development

Change-Id: I505a8713a7194dab68623deba621220ff56f2dbd",0,0,1,1,0,0,1,NA,NA
83181,I8c9af4ef39bad55bea7d0cb5d15d7bb569bed8a1,http://review.couchbase.org/#/c/83181,4,7c47445067ca690dd3b28788ca374bd7257f6c74,f1d02e96080d326c236dc3ce5e24ab2512ef0c5f,1,07/09/17,26/09/17,103,JCBC-1129 Match RFC spec for Subdocument doc flags addition,"JCBC-1129 Match RFC spec for Subdocument doc flags addition

Changes
-------
Add upsertDocument matching the spec and deprecate createDocument. Also
mark the docOptions interfaces committed.

Change-Id: I8c9af4ef39bad55bea7d0cb5d15d7bb569bed8a1",0,1,1,0,0,0,1,0,0
83185,I03d3ace4474c3cb4f2e73cf48d93b86c98c38381,http://review.couchbase.org/#/c/83185,3,22d3fe9219f4fbeebea5aed50acf8748bb17dd0e,20202acefa3c475c2d797a68238ab10a06987580,1,07/09/17,12/10/17,8,Fix flaky shouldEmitEvent test,"Fix flaky shouldEmitEvent test

The subscription to events is coordinated using a CountDownLatch.

Change-Id: I03d3ace4474c3cb4f2e73cf48d93b86c98c38381",0,0,0,0,0,0,0,0,0
83811,I6695f385fe389213b1d952bbc180ebbc0b6cfaf9,http://review.couchbase.org/#/c/83811,3,a9cff36226c396865aa6066ffba824cb88dd6aa5,6febe3b192fe6baa566fb3dd08c6bf2ac1cdeb8a,1,28/09/17,04/10/17,113,Increase test coverage for the KeyValueSelectBucketHandler.,"Increase test coverage for the KeyValueSelectBucketHandler.

Motivation
----------
This changeset adds a couple of simple test cases to verify the in and output
of the KeyValueSelectBucketHandler.

Change-Id: I6695f385fe389213b1d952bbc180ebbc0b6cfaf9",0,0,0,0,0,0,0,0,0
83812,I21da8544e6eb3bb49cf1e17211ed79cb8042a69e,http://review.couchbase.org/#/c/83812,2,423bd5c19c5465942b15c9aac277cab3ef6261db,399cbaf4c936b6fdadabbb0cefd0ef52c5843b53,1,28/09/17,29/09/17,20,JVMCBC-465: Harden AbstractEndpoint for concurrent reconnects.,"JVMCBC-465: Harden AbstractEndpoint for concurrent reconnects.

Motivation
----------
Under certain circumstances (like failed auth connect), it is possible
that multiple codepaths end up forcing the endpoint to reconnect.
It is important that race conditions are avoided which might lead
to too many reconnects or the endpoint ends up in a state which
it should not belong in.

Modifications
-------------
Three changes are made in this changeset to remedy some of the
effects:

  1) Since DISCONNECTED can be a transient state, the future check
     on success now checks for the actual disconnected variable, which
     is only going to be set if a disconnect is definitive.
  2) on channelInactive, the reconnect logic is only called if the
     channel is in a connected state. This especially prevents the case
     where the channel is already reconnecting and so we don't want
     another attempt piled on top.
  3) In the connect callback handler, if the timeout and the future
     completion race each other, lets make sure we clean up any successful
     channels so they are not lingering around. This hasn't been observed
     in practice yet but it should help harden it.

Result
------
Concurrent reconnects, especially around auth failure retries, should now
be more resilient and lead to more deterministic behavior.

Change-Id: I21da8544e6eb3bb49cf1e17211ed79cb8042a69e",0,0,0,0,0,0,0,0,0
83879,I9ec94c7897f4d021a078e94d5564648c8e8bd499,http://review.couchbase.org/#/c/83879,2,9bebc1807acab1f9303706f8ce2d85725f8171d8,44be0e6c2982d0bd17a6ae55e0621c14a225205b,1,29/09/17,29/09/17,17,JVMCBC-466: Cancel KeepAlive future when channel is removed.,"JVMCBC-466: Cancel KeepAlive future when channel is removed.

Motivation
----------
When ""continuous keepalive"" is enabled, which it is by default
now, then when a socket gets closed the keepalive still keeps
going (or at least tries to), since the scheduled task is not
cancelled.

Modifications
-------------
This changeset makes sure that when the handler is removed, the
future which coordinates the timed execution gets cancelled and
as a result stops the continuous execution attempts.

Result
------
When a node is properly removed the keepalive doesn't keep on
going and potentially leaking sockets.

Change-Id: I9ec94c7897f4d021a078e94d5564648c8e8bd499",0,0,0,0,0,0,0,0,0
83880,Ia574b9fb38e89e51520700685e0b077f1c71a119,http://review.couchbase.org/#/c/83880,3,e697f88af39584f758f8859fd88cc0055cccdc9e,2070ff1521a04f43be3b05a78b0d47c3e24b9527,1,29/09/17,29/09/17,5,JVMCBC-467: don't perform notifyChannelInactive after disconnect.,"JVMCBC-467: don't perform notifyChannelInactive after disconnect.

Motivation
----------
When an explicit disconnect is performed (so an endpoint gets removed
on purpose), it doesn't make sense to log the INFO message, or perform
any other operations in this method at all.

Modifications
-------------
This changeset in the beginning explicitly makes sure that the method
quickly returns when we are disconnecting explicitly.

Note that normally the side effects of this method won't be executed
anyways since the state is DISCONNECTED, but to prevent any side
effects or unintended consequences we short-circuit it right away
at the beginning.

Result
------
No side effects happening on orderly disconnect, but the main impact
is that the misleading message of ""Got notified from Channel as inactive,
 attempting reconnect."" is not shown when the endpoint is explicitly
disconnected (like during a rebalance out).

Change-Id: Ia574b9fb38e89e51520700685e0b077f1c71a119",0,0,0,0,0,0,0,0,0
83945,I1bf1b372288f59f3cddeff0837e12ad0148176f0,http://review.couchbase.org/#/c/83945,2,2070ff1521a04f43be3b05a78b0d47c3e24b9527,7c17ca963033c479d484dcb42151943838e2c47f,0,03/10/17,03/10/17,2,Prepare 1.5.1 Release,"Prepare 1.5.1 Release

Change-Id: I1bf1b372288f59f3cddeff0837e12ad0148176f0",0,0,0,1,0,0,1,NA,NA
83962,I41ef282ce5102d53c1efa1b2ff2c629c4e64e187,http://review.couchbase.org/#/c/83962,2,7c17ca963033c479d484dcb42151943838e2c47f,b92b5914f7d9c46cdd2d3131cdee4ca6a51a70f2,0,03/10/17,03/10/17,2,Start 1.5.2 Development,"Start 1.5.2 Development

Change-Id: I41ef282ce5102d53c1efa1b2ff2c629c4e64e187",0,0,0,1,0,0,1,NA,NA
83963,Id49fc8c4d44993015af01964a799deaf9ca5564a,http://review.couchbase.org/#/c/83963,2,b92b5914f7d9c46cdd2d3131cdee4ca6a51a70f2,6d2dc0d4f2d05644a58cf85fb48debf53d1ae225,0,03/10/17,03/10/17,11,Update developer list in pomfile,"Update developer list in pomfile

Change-Id: Id49fc8c4d44993015af01964a799deaf9ca5564a",0,0,0,1,0,0,1,NA,NA
84186,Ie123d6df31cc00db514630e9b1be0a41b14877f7,http://review.couchbase.org/#/c/84186,2,0da50f7e04bcb352fc40d53f723bfa524eb0c952,d167fba927466f2eae3dae119d368b27c7147cc3,0,10/10/17,10/10/17,4,JVMCBC-445: Use an iterator on pool flush to avoid IOOB.,"JVMCBC-445: Use an iterator on pool flush to avoid IOOB.

Motivation
----------
In the PooledService flush implementation, we are iterating
the CopyOnWriteArrayList in a simple for loop with direct
index access - this works as long as there is no concurrent
access on the underlying structure.

If this happens, a ArrayIndexOutOfBoundsException is
possible.

Modifications
-------------
To avoid the ArrayIndexOutOfBoundsException, the COWArrayList
provides a stable iterator() which copies the original list
before iterating, preventing the race condition from
happening in the first place.

The changeset uses the iterator approach rather than the
manual indexing.

Result
------
No more ArrayIndexOutOfBoundsException when iterating and
modifying the endpoint list simultaneously.

Change-Id: Ie123d6df31cc00db514630e9b1be0a41b14877f7
Reviewed-on: http://review.couchbase.org/82036
Tested-by: Michael Nitschinger <michael@nitschinger.at>
Reviewed-by: Sergey Avseyev <sergey.avseyev@gmail.com>
Reviewed-by: David Nault <david.nault@couchbase.com>",0,0,0,0,0,0,0,NA,NA
84187,Ideca474fddd9e3f34b6b4f72c23157a666ed3139,http://review.couchbase.org/#/c/84187,2,d167fba927466f2eae3dae119d368b27c7147cc3,8a2512abba6b9a644424b4ec562e698c7f4df607,1,10/10/17,10/10/17,8,JVMCBC-448: Handle select bucket response status 0x01,"JVMCBC-448: Handle select bucket response status 0x01

Motivation
----------
The server might return with a 0x01 status on select bucket if
it is not found, and we should handle it.

Modifications
-------------
The 0x01 status code (ENOENT) is covered and a descriptive error
message is returned upstream.

Result
------
0x01 response status as error is handled on select bucket.

Change-Id: Ideca474fddd9e3f34b6b4f72c23157a666ed3139
Reviewed-on: http://review.couchbase.org/82451
Tested-by: Build Bot <build@couchbase.com>
Reviewed-by: Sergey Avseyev <sergey.avseyev@gmail.com>",0,0,0,0,0,0,0,0,0
84188,I252afa4dcad50078474285d13c0c38269b17f46d,http://review.couchbase.org/#/c/84188,2,8a2512abba6b9a644424b4ec562e698c7f4df607,7eb41879093ecc05b06ae081c5cf66113df0c26a,1,10/10/17,10/10/17,18,JCBC-1096: Explicitly handle auth errors on observe.,"JCBC-1096: Explicitly handle auth errors on observe.

Motivation
----------
With Server 5.0 and RBAC it is now possible that a user only has
write access but not read access, leading to the situation where
a PersistTo or ReplicateTo might fail after correctly storing
the doc but then the user is not allowed to use the observe
command.

Modifications
-------------
This change explicitly checks for authentication errors and
supplies a helpful message, including the enhanced error
messages back to the user.

Result
------
If the user is performing an op and it now fails because
of an auth issue, the error message is now clear.

Change-Id: I252afa4dcad50078474285d13c0c38269b17f46d
Reviewed-on: http://review.couchbase.org/82623
Tested-by: Build Bot <build@couchbase.com>
Reviewed-by: David Nault <david.nault@couchbase.com>",0,0,0,0,0,0,0,0,0
84189,I19dca0da8e541a48afc96c06378a420f93b00ca2,http://review.couchbase.org/#/c/84189,2,7eb41879093ecc05b06ae081c5cf66113df0c26a,31245ea38d7fa6364e9dd64fb43a3506a662df95,1,10/10/17,10/10/17,58,JVMCBC-435: Limit config poll floor only on a per-bucket basis.,"JVMCBC-435: Limit config poll floor only on a per-bucket basis.

Motivation
----------
The config poll floor added in JVMCBC-415 is causing a regression
with properly loading and applying bucket configurations when more
than one bucket is opened at the same time.

Modifications
-------------
The change applied in JVMCBC-415 is applying a refresher-global
poll floor for new bucket configurations. This is problematic
because config refresh attempts for _different buckets_ that are
quickly sent one after another are dropped if below the configured
min floor interval.

Instead, the floor should be in place but it needs to be checked
on a per-bucket basis, giving each bucket a fair chance to grab
a new configuration.

This also remedies the side effect of all this that multiple
bucket configs can end up with varying node list sizes which
in turn results in keeping connections open to nodes which
are not part of the cluster anymore (consider a hard failover).

Result
------
By tracking the poll floor on a per-bucket basis, each bucket
is given a fair chance to grab a new configuration, resulting
in prompt config updates even if more than one bucket is open.

Change-Id: I19dca0da8e541a48afc96c06378a420f93b00ca2
Reviewed-on: http://review.couchbase.org/82917
Tested-by: Build Bot <build@couchbase.com>
Tested-by: Michael Nitschinger <michael@nitschinger.at>
Reviewed-by: Sergey Avseyev <sergey.avseyev@gmail.com>",0,0,0,0,0,0,0,0,0
84190,Ia55d4d7e6600a54e2e5de6da18ce8cdc5976fb65,http://review.couchbase.org/#/c/84190,2,31245ea38d7fa6364e9dd64fb43a3506a662df95,66c97991842dac03793cbd833377cce161c57959,1,10/10/17,10/10/17,9,JVMCBC-460: Properly discover the FTS SSL service port.,"JVMCBC-460: Properly discover the FTS SSL service port.

Motivation
----------
FTS now properly supports encryption, so we need to make sure that
the ftsSSL port is properly picked up.

Modifications
-------------
Adds the ftsSSL port mapping information and as a result picks up the
encrypted ssl port by default if present in the config.

Result
------
Support fot FTS & SSL.

Change-Id: Ia55d4d7e6600a54e2e5de6da18ce8cdc5976fb65
Reviewed-on: http://review.couchbase.org/83065
Tested-by: Build Bot <build@couchbase.com>
Reviewed-by: Sergey Avseyev <sergey.avseyev@gmail.com>
Reviewed-by: David Nault <david.nault@couchbase.com>",0,0,0,0,0,0,0,0,0
84191,I21da8544e6eb3bb49cf1e17211ed79cb8042a69e,http://review.couchbase.org/#/c/84191,2,66c97991842dac03793cbd833377cce161c57959,bf269dc9e58ea930ba09bfbc80dd6be9345669ed,1,10/10/17,10/10/17,20,JVMCBC-465: Harden AbstractEndpoint for concurrent reconnects.,"JVMCBC-465: Harden AbstractEndpoint for concurrent reconnects.

Motivation
----------
Under certain circumstances (like failed auth connect), it is possible
that multiple codepaths end up forcing the endpoint to reconnect.
It is important that race conditions are avoided which might lead
to too many reconnects or the endpoint ends up in a state which
it should not belong in.

Modifications
-------------
Three changes are made in this changeset to remedy some of the
effects:

  1) Since DISCONNECTED can be a transient state, the future check
     on success now checks for the actual disconnected variable, which
     is only going to be set if a disconnect is definitive.
  2) on channelInactive, the reconnect logic is only called if the
     channel is in a connected state. This especially prevents the case
     where the channel is already reconnecting and so we don't want
     another attempt piled on top.
  3) In the connect callback handler, if the timeout and the future
     completion race each other, lets make sure we clean up any successful
     channels so they are not lingering around. This hasn't been observed
     in practice yet but it should help harden it.

Result
------
Concurrent reconnects, especially around auth failure retries, should now
be more resilient and lead to more deterministic behavior.

Change-Id: I21da8544e6eb3bb49cf1e17211ed79cb8042a69e
Reviewed-on: http://review.couchbase.org/83812
Tested-by: Build Bot <build@couchbase.com>
Reviewed-by: Mike Goldsmith <goldsmith.mike@gmail.com>
Reviewed-by: David Nault <david.nault@couchbase.com>",0,0,0,0,0,0,0,0,0
84192,I9ec94c7897f4d021a078e94d5564648c8e8bd499,http://review.couchbase.org/#/c/84192,2,bf269dc9e58ea930ba09bfbc80dd6be9345669ed,c4678b1c6701868f280b946d503ae19e29c49da1,1,10/10/17,10/10/17,17,JVMCBC-466: Cancel KeepAlive future when channel is removed.,"JVMCBC-466: Cancel KeepAlive future when channel is removed.

Motivation
----------
When ""continuous keepalive"" is enabled, which it is by default
now, then when a socket gets closed the keepalive still keeps
going (or at least tries to), since the scheduled task is not
cancelled.

Modifications
-------------
This changeset makes sure that when the handler is removed, the
future which coordinates the timed execution gets cancelled and
as a result stops the continuous execution attempts.

Result
------
When a node is properly removed the keepalive doesn't keep on
going and potentially leaking sockets.

Change-Id: I9ec94c7897f4d021a078e94d5564648c8e8bd499
Reviewed-on: http://review.couchbase.org/83879
Reviewed-by: Sergey Avseyev <sergey.avseyev@gmail.com>
Reviewed-by: Mike Goldsmith <goldsmith.mike@gmail.com>
Reviewed-by: David Nault <david.nault@couchbase.com>
Tested-by: Michael Nitschinger <michael@nitschinger.at>",0,0,0,0,0,0,0,0,0
84193,Ia574b9fb38e89e51520700685e0b077f1c71a119,http://review.couchbase.org/#/c/84193,3,c4678b1c6701868f280b946d503ae19e29c49da1,5e197c5d81701086fa3293c883a604066af6e009,1,10/10/17,10/10/17,5,JVMCBC-467: don't perform notifyChannelInactive after disconnect.,"JVMCBC-467: don't perform notifyChannelInactive after disconnect.

Motivation
----------
When an explicit disconnect is performed (so an endpoint gets removed
on purpose), it doesn't make sense to log the INFO message, or perform
any other operations in this method at all.

Modifications
-------------
This changeset in the beginning explicitly makes sure that the method
quickly returns when we are disconnecting explicitly.

Note that normally the side effects of this method won't be executed
anyways since the state is DISCONNECTED, but to prevent any side
effects or unintended consequences we short-circuit it right away
at the beginning.

Result
------
No side effects happening on orderly disconnect, but the main impact
is that the misleading message of ""Got notified from Channel as inactive,
 attempting reconnect."" is not shown when the endpoint is explicitly
disconnected (like during a rebalance out).

Change-Id: Ia574b9fb38e89e51520700685e0b077f1c71a119
Reviewed-on: http://review.couchbase.org/83880
Reviewed-by: Mike Goldsmith <goldsmith.mike@gmail.com>
Reviewed-by: David Nault <david.nault@couchbase.com>
Tested-by: Michael Nitschinger <michael@nitschinger.at>",0,0,0,0,0,0,0,0,0
84194,I00bd41f84a7a4db85adc58f7ccc88437bbceead6,http://review.couchbase.org/#/c/84194,2,5e197c5d81701086fa3293c883a604066af6e009,b73dd50b065e3d05f5986a14e8e130a84762b692,0,10/10/17,10/10/17,2,Start 1.4.8 Development,"Start 1.4.8 Development

Change-Id: I00bd41f84a7a4db85adc58f7ccc88437bbceead6",0,0,0,1,0,0,1,NA,NA
84200,Icb025b867a43fb535fe932c7407c902078f771f7,http://review.couchbase.org/#/c/84200,6,7a485811fc963edad4829282b65b2ac4a87e76e3,dd8249712645bc091199f4998bbb37ceea9b6853,1,10/10/17,16/10/17,186,JVMCBC-468: Allow to optionally specify a different TrustStore,"JVMCBC-468: Allow to optionally specify a different TrustStore

Motivation
----------
In certain deployments it can make sense to split up the KeyManager and
TrustManager certificate management in different files / keystores.

Modifications
-------------
This changeset allows to optionally provide a different keystore for
the trust manager, if its not provided it just falls back to the
global keystore used, as before.

Result
------
More flexible certificate management with the SDK if different
keystores should be used for the key and trust managers

Change-Id: Icb025b867a43fb535fe932c7407c902078f771f7",0,1,1,0,0,0,1,1,1
84270,I502b1dedb1a90fec5c3c53e9883573abdd662c2e,http://review.couchbase.org/#/c/84270,3,aa15a9586af44d679171e40de0f9ada5257edc16,c3973a003200fb1f0cd5dd6e06dee30e18c07251,1,11/10/17,12/10/17,51,JVMCBC-469: Set dispatch hostname as early as possible.,"JVMCBC-469: Set dispatch hostname as early as possible.

Motivation
----------
Previously the dispatch hostname was only set one written down into
netty/after the endpoint. The problem with this approach is that if
we never end up writing down the operation and it times out on the
user side, it might be ""null"" even if we knew where it should've
gone in the first place.

Modifications
-------------
Once the request reaches the node where it should belong, the
dispatch hostname is set immediately, which in effect labels
the request even if the underlying service (and/or endpoint) is
not available at the moment.

The stringified network address is cached in order to avoid creating
it over and over again on each incoming request.

Result
------
More reliable dispatch hostname detection, which can be utilized
better in higher level code.

Change-Id: I502b1dedb1a90fec5c3c53e9883573abdd662c2e",0,0,0,0,0,0,0,0,0
84497,I0b4822f57d5dc0e60b89762db2bcc03e77959e5f,http://review.couchbase.org/#/c/84497,2,f67a4001f8698c043f9c2180d9a8993eec0a87dd,0494ae07cb6573ab9142d6afe0a63fd8c1e882f5,0,17/10/17,17/10/17,2,Prepare 1.4.8 Release,"Prepare 1.4.8 Release

Change-Id: I0b4822f57d5dc0e60b89762db2bcc03e77959e5f",1,0,0,1,0,0,1,NA,NA
84747,I37b3cc1188a807f5a70440a4fd716131da144540,http://review.couchbase.org/#/c/84747,3,4724059c0de07b702b08b0a8ffd755bd6d8f009c,7bba055ff821a636e1aac3999c6e73e6cbba2fb4,1,24/10/17,29/10/17,69,JVMCBC-470: Allow to configure the configPollFloorInterval,"JVMCBC-470: Allow to configure the configPollFloorInterval

Motivation
----------
As part of the Fast-Failover RFC it was agreed to that the
config poll floor interval needs to be configurable as well.

Right now this property is fixed in the carrier refresher,
but it should also be exposed through the environment so
it can be configured accordingly.

Modifications
-------------
This changeset adds the corresponding environment builder
options and then makes use of them in the carrier refresher,
getting rid of the static value.

Result
------
The config poll floor interval is now configurable
through the environment.

Change-Id: I37b3cc1188a807f5a70440a4fd716131da144540",0,0,1,0,0,0,1,0,0
84873,I33e3b872a11b2d577f64867c229afbfac794a954,http://review.couchbase.org/#/c/84873,2,7bba055ff821a636e1aac3999c6e73e6cbba2fb4,205888873bc91f5bad07055966367d1106482b1c,0,29/10/17,30/10/17,14,Bump Dependencies,"Bump Dependencies

Motivation
----------
This changeset bumps both rxjava and the internal dependencies
to their newest bugfix releases.

Change-Id: I33e3b872a11b2d577f64867c229afbfac794a954",0,0,0,0,0,0,0,NA,NA
84957,I06d802d93801b55a0c59d68954e81162786c7966,http://review.couchbase.org/#/c/84957,3,205888873bc91f5bad07055966367d1106482b1c,05f566a4a0146983f98d992f12284ac8e8e7bc1a,1,01/11/17,06/11/17,36,Add useMock configuration option,"Add useMock configuration option

MOTIVATION
----------
JVM-Core integration tests should be able to execute against a running
instance of CouchbaseMock. Internally, there is a useMock property
that can be used, however this defaults to false and requires code
changes to get the integration tests to execute.

MODIFICATIONS
-------------
- Add useMock property to TestProperties and integration.properties
- Remove useMock property from ClusterDependantTest.connect
- Update all usages of ClusterDependantTest.connect to note provide
  useMock

RESULT
------
Setting useMock in integration properties allows integration tests to
execute against a CouchbaseMock instance at the seedNode URI.

Change-Id: I06d802d93801b55a0c59d68954e81162786c7966",0,0,1,0,0,0,1,0,0
85008,Ia0328095812fa0463a777a84913b267b32e46de7,http://review.couchbase.org/#/c/85008,2,60ccbb8658fc1ce7079964debaf1cf50069ee831,0914fdd599ed3fcb373fdd789e971a0b73b86602,1,02/11/17,03/11/17,83,JVMCBC-471: EndpointHealth needs to be resilient to null on addrs.,"JVMCBC-471: EndpointHealth needs to be resilient to null on addrs.

Motivation
----------
It is possible that when asked for EndpointHealth the endpoints
are setup but not connected yet, so the channel is still null
and as a result so are the local and remote addrs inferred.

Modifications
-------------
This is a legit situation, so the code simply needs to cope
with the possibility of being null and should properly react
with safety measures.

Result
------
The code now handles the situation outlined above. Regression
test added for good measure.

Change-Id: Ia0328095812fa0463a777a84913b267b32e46de7",0,0,0,0,0,0,0,0,0
85183,I728db10381c795db8fd861c2e3a402a6515293f7,http://review.couchbase.org/#/c/85183,2,0aed9b3321ce163d7377d9a2a17534f0c457ccb1,5e582eba759e49c0ac865f6b118804389df5309b,1,07/11/17,08/11/17,82,JVMCBC-472: Implement IPv6 bracket syntax support for ConnectionString,"JVMCBC-472: Implement IPv6 bracket syntax support for ConnectionString

Motivation
----------
In order to add IPv6 support, it needs to be possible to pass IPv6 addr
literals when bootstrapping, which is currently broken because explicit
support for the IPv6 syntax hasn't been added.

Modifications
-------------
This changeset adds support (and tests) for the bracketed syntax which
is required in URLs as per https://www.ietf.org/rfc/rfc2732.txt . We
added support for both with and without ports, although they are not
really used at this point (but could be in the future).

Result
------
ConnectionString support for IPv6 bracketed syntax literals.

Change-Id: I728db10381c795db8fd861c2e3a402a6515293f7",0,0,0,0,0,0,0,0,0
85246,I137246a6e42f2ca2c1bad615b19339423b953c0c,http://review.couchbase.org/#/c/85246,2,25b6c5db4f7aea129045298ec6b04464930998fa,6574c2ddd747b4b1e046f597e515abd887cfb947,0,08/11/17,08/11/17,2,Prepare 1.5.2,"Prepare 1.5.2

Change-Id: I137246a6e42f2ca2c1bad615b19339423b953c0c",0,0,0,1,0,0,1,NA,NA
85375,I8c9b85a84ab58e311b73150a4af0268727999004,http://review.couchbase.org/#/c/85375,2,ee6331de19c654bf3f24353faedaf333fe72278d,cc38eabced50770292b9dd8a6e4965c5766a9cd9,0,10/11/17,10/11/17,2,Start 1.5.3 Development,"Start 1.5.3 Development

Change-Id: I8c9b85a84ab58e311b73150a4af0268727999004",0,0,0,1,0,0,1,NA,NA
85376,I5d6f951b8c65c19b6dac4be9c9f041bb4250fd0f,http://review.couchbase.org/#/c/85376,2,cc38eabced50770292b9dd8a6e4965c5766a9cd9,e60d08d001482b778c4bb20e3c562f4fc7bb7926,0,10/11/17,10/11/17,4,JVMCBC-474: Bump netty to 4.0.53.Final,"JVMCBC-474: Bump netty to 4.0.53.Final

Motivation
----------
Bumping netty provides bugfixes and resolves some
compilation issues with the IBM JDK pre JDK 1.8
as reported by users.

Change-Id: I5d6f951b8c65c19b6dac4be9c9f041bb4250fd0f",0,0,0,0,0,0,0,NA,NA
85840,I8cfb22dcd849499b496da29ac079665d02a2a1a0,http://review.couchbase.org/#/c/85840,2,952c0d7466273e4d18e4a830cbd3406c065d147a,92310940057153d55f3f8fb82b426e3771a51122,0,21/11/17,22/11/17,2,JVMCBC-478: fix test failure for LOCKED with GetAndLock,"JVMCBC-478: fix test failure for LOCKED with GetAndLock

This has been an oversight over the 5.0 conversions for the
LOCKED response, because the server in 5.0 didn't actually
respond that way because of a bug. 5.1+ fixes this, so we
also need to handle it properly.

Change-Id: I8cfb22dcd849499b496da29ac079665d02a2a1a0",0,0,0,0,0,0,0,NA,NA
85896,Ica9617931611c0f4c4aa0ba024ce6f6dea9d9db6,http://review.couchbase.org/#/c/85896,2,92310940057153d55f3f8fb82b426e3771a51122,15c332a2f454d0046edb6c81c9ed2c0e14c91409,1,22/11/17,22/11/17,129,JVMCBC-473: Add forceSaslPlain auth method for LDAP compliance,"JVMCBC-473: Add forceSaslPlain auth method for LDAP compliance

Motivation
----------
If users are created on the server through LDAP, we can't use
any other mechanism than PLAIN to perform the authentication.

Modifications
-------------
This changeset introduces, as simple as possible, an environment
setting which allows to force the PLAIN authentication mode which
can be used to work together with LDAP users.

Note that we still ask for the sasl mechs list, we just throw
it away and force the use of PLAIN. We could not send the mechs
list in the first place, but testing and changing would be higher
risk than sticking with the already battle tested auth flow.

Result
------
LDAP user support can be enabled when forcing PLAIN KV
authentication.

Change-Id: Ica9617931611c0f4c4aa0ba024ce6f6dea9d9db6",0,0,0,0,0,0,0,0,0