revision_num,change_id,url,iteration_count,before_commit_id,after_commit_id,at_least_one_updated_java_file,T(created),T(merged),LOC changed,subject,message,cr_smell_lack_of_cr,cr_smell_ping_pong,cr_smell_sleeping_reviews,cr_smell_missing_context,cr_smell_large_changesets,cr_smell_review_buddies,at_least_one_cr_smell,code_smells_difference_count,is_increased
12050,Idd6454bd6574a9337528281df912f51a9fda52ad,http://review.couchbase.org/#/c/12050,5,2c9169e853fd0dafc3a4a7779cd557247fc0e1cf,e8b239ea0b461ff9937feb49a2bfd2d702e3ff52,1,04/01/12,09/01/12,337,Potential Refactoring of Java Client to couchbase-client and spymemcached,"Potential Refactoring of Java Client to couchbase-client and spymemcached

Refactoring changes summary:

Membase has been refactored to Couchbase and associated changes.
This is not final(so no ant checkstyle yet :-)), but, if deemed
OK, we can make it final.",0,1,1,0,0,0,1,12,1
12096,I391d2e967e56b01cd8d88e73a95e50549422873b,http://review.couchbase.org/#/c/12096,1,7c522712c469813187f0bc96ff59524a342f58e9,41c0830fa3dd8e3e3cc6d5a64394a1ff4b005e8e,0,06/01/12,09/01/12,2,Added option to selectively run tests for CI,"Added option to selectively run tests for CI

Change-Id: I391d2e967e56b01cd8d88e73a95e50549422873b",0,0,1,1,0,0,1,NA,NA
12150,Iad899a4593795737f8d74eb6b088168207f003a3,http://review.couchbase.org/#/c/12150,1,2851b8c49d7e40835d65f8fb9e9a9d46a2504165,ec3444b4900f4bacdd19d8cc46236c26bf87025b,1,08/01/12,09/01/12,115,Remove checks for Membase in test cases,"Remove checks for Membase in test cases

This client should always work with Membase and Couchbase
so we do not need to check the server type.

Change-Id: Iad899a4593795737f8d74eb6b088168207f003a3",0,0,0,0,0,0,0,0,0
12151,I2f2431194a1d417a8540e8fb5e5f1a93bdbe3b0a,http://review.couchbase.org/#/c/12151,1,c3e2056eeaf4a280a3fb0b28ff830af80b3bf421,fc09b0e45828bd9fe6aed87b28c9f832016b6fcc,1,09/01/12,09/01/12,8,When adding ops we now use enqueueOperation(),"When adding ops we now use enqueueOperation()

addOp() was removed from MemcachedClient and into memcachedConnection
and then renamed to enqueueOperation. This change makes it so we
now use the new function.

Change-Id: I2f2431194a1d417a8540e8fb5e5f1a93bdbe3b0a",1,0,0,0,0,0,1,0,0
12159,Ic23bc0599038893a8ae63d50bec3529a15cc6b1b,http://review.couchbase.org/#/c/12159,3,dde87ac47598706b502ddb87b5b1cf346243fc3f,63dc5d47ee913b5c98b094a7ec88e37444fa25bd,1,09/01/12,11/01/12,449,Refactored the tap client to run correctly,"Refactored the tap client to run correctly

When we originally broke up Spymemcached and created this
project we left the tap client in a broken state. This change
makes the tap client function correctly and reenables the test
cases that were commented out.

Change-Id: Ic23bc0599038893a8ae63d50bec3529a15cc6b1b",0,0,0,0,0,0,0,-3,0
12160,I9ec314dd2ac65cb904bed978710835135e2a0ac9,http://review.couchbase.org/#/c/12160,3,8814084de2471d192a3379ad6b5055e661b69250,029c152e52fd8636b12b0a6005f6962d8b21812d,1,09/01/12,11/01/12,82,More membase to couchbase refactoring changes,"More membase to couchbase refactoring changes

Changed some more occurences (affects javadocs and log messages)

Change-Id: I9ec314dd2ac65cb904bed978710835135e2a0ac9",0,0,0,0,0,0,0,0,0
12285,Ib6ec24de33ad897d81729dc87624c558fe6c1967,http://review.couchbase.org/#/c/12285,3,5de7dfa4e9b9e4801bbbc2f99bd5b4276ca4f2ca,6cf8bfc52d50a9edece5f17ff532a4fd606ad97e,1,11/01/12,15/01/12,6,Don't check for null ConnectionProvider on shutdown,"Don't check for null ConnectionProvider on shutdown

This should never be null in CouchbaseClient. It is leftover
code from the project split.

Change-Id: Ib6ec24de33ad897d81729dc87624c558fe6c1967",0,0,1,0,0,0,1,0,0
12384,I4d1cf095093f72f9de4b19ffa3c92dfc92d930c3,http://review.couchbase.org/#/c/12384,1,6cf8bfc52d50a9edece5f17ff532a4fd606ad97e,83e72a935f320d1b123e483614d466b43e91d279,0,15/01/12,15/01/12,0,Rename files used for pom file generation,"Rename files used for pom file generation

These files still had the membase in the name so I changed them to
have couchbase in the name.

Change-Id: I4d1cf095093f72f9de4b19ffa3c92dfc92d930c3",0,0,0,0,0,0,0,NA,NA
12576,Ib71d9ab41abd7fe4a396fc6e0cab8e56edc99e46,http://review.couchbase.org/#/c/12576,4,f7a5af2b1f5c891bc3022dc20a243c7bc5bf77b1,c9ef32bebd69bf2c26d8a80eb874a309d800090a,0,22/01/12,22/01/12,80,Changes to stage Maven repository locally,"Changes to stage Maven repository locally

    Added a target mvn-stage to stage repository to {user.home}/mvn-stage
    Based on http://draconianoverlord.com/2010/07/18/publishing-to-maven-repos-with-ivy.html

Change-Id: Ib71d9ab41abd7fe4a396fc6e0cab8e56edc99e46",0,1,0,0,0,0,1,NA,NA
12577,I34b46bc01ec94696dd7d75ea55e5fe5f471e00f5,http://review.couchbase.org/#/c/12577,3,e4a6672f7d66277381f7951451c454ab9f154136,58d1773ff7a5ff401cd115081f33d02cb80907b7,0,22/01/12,22/01/12,20,Corrected BuildInfo and other metadata.,"Corrected BuildInfo and other metadata.

Change-Id: I34b46bc01ec94696dd7d75ea55e5fe5f471e00f5",0,0,0,1,0,0,1,NA,NA
12578,Ife95d2f4b1033caa34e6defae4f7339c3a8a82bc,http://review.couchbase.org/#/c/12578,4,a75ec7f35433fa083ed63489a740178f1e29ba85,f2e6772a40f98955c750d25344d3a95fb56fd0b2,0,22/01/12,22/01/12,13,Corrected stage of maven artifacts to properly include source/docs.,"Corrected stage of maven artifacts to properly include source/docs.

Change-Id: Ife95d2f4b1033caa34e6defae4f7339c3a8a82bc",0,1,0,1,0,0,1,NA,NA
12583,Id41f575ed0b3b9a50d096a5d77754d911ca1312e,http://review.couchbase.org/#/c/12583,1,4fd88bd112b882414584707ed755029a814917a1,3b86cb3628b85db2705cc40e5719435e8d73d8df,0,22/01/12,22/01/12,4,Updated libraries.properties to go with 2.8.0 release.,Updated libraries.properties to go with 2.8.0 release.,0,0,0,1,0,0,1,NA,NA
12674,Ia12887f75748ce0fcf5f3fcf5c11bdd3436cea72,http://review.couchbase.org/#/c/12674,2,4822bd7db46dcf070cb14041a91efc125f5e43e1,7975d7adc07bd554a44b723672bf86df438477b3,1,25/01/12,26/01/12,4,Fixed issue where everything was getting hased to vb 0,"Fixed issue where everything was getting hased to vb 0

The node locator types here are backwards and will cause
everything to be written to and read from vbucket 0.

Change-Id: Ia12887f75748ce0fcf5f3fcf5c11bdd3436cea72",0,0,0,0,0,0,0,0,0
12688,If110e8fe50157411ea0fa81d63b062e577482fc8,http://review.couchbase.org/#/c/12688,3,bd758f46e1a6d0b3a8767c59184c39fd1f476193,334a067ed359b1442ef8a5946a798335f79b6ef8,0,26/01/12,26/01/12,5,Uncomment the resolver for the Couchbase maven repo,"Uncomment the resolver for the Couchbase maven repo

Change-Id: If110e8fe50157411ea0fa81d63b062e577482fc8",0,0,0,1,0,0,1,NA,NA
12689,I2d30d058a57a696e8de196224e568c0e28f477ca,http://review.couchbase.org/#/c/12689,3,f0643548514969c902f0883497d8f630384cef04,470b14fdc44f511af9e2c28d7315115749ed5d67,0,26/01/12,26/01/12,4,Use the master configuration for spymemcached jars,"Use the master configuration for spymemcached jars

This will solve the issue where we were importing jmx
and other things that were not needed.

Change-Id: I2d30d058a57a696e8de196224e568c0e28f477ca",0,0,0,0,0,0,0,NA,NA
12690,Ic4f47da68afcbd4efe542ec1f00627a2c63558cd,http://review.couchbase.org/#/c/12690,1,001aa39a2c889e43faa7491da6203834c94255bc,cfff360eafee93f6d939e3577781f81b6ecdd38a,1,26/01/12,26/01/12,2,Fixed testAvailableServers(),"Fixed testAvailableServers()

With Couchbase we should make sure that we get two ""names"" for
each server. One will be the hostame and the other will be the
ip address.

Change-Id: Ic4f47da68afcbd4efe542ec1f00627a2c63558cd",0,0,0,0,0,0,0,0,0
12841,I34175919faec283d993a57f9a2b5f15646ccce0b,http://review.couchbase.org/#/c/12841,3,7e5530ccda9f9e948aae35ec86551b09838d4e3c,d589195c2af2bcc4bed1bee66eb8ec55a4ee4d4e,0,01/02/12,01/02/12,4,Changed spy jar configuration to default,"Changed spy jar configuration to default

We changed this in spymemcached during the release so that it would
be added as a normal compile time dependency. I changed it in the
pom's but not in the project config that we use for development

Change-Id: I34175919faec283d993a57f9a2b5f15646ccce0b",0,0,0,0,0,0,0,NA,NA
12907,I9a30f21108fcbbd43add4abd2f16af05a3fbe68b,http://review.couchbase.org/#/c/12907,5,d589195c2af2bcc4bed1bee66eb8ec55a4ee4d4e,cf0995e5e36033ee756b378a9ae797a251b14a9d,1,02/02/12,06/02/12,114,Added unlock operation,"Added unlock operation

Based on http://code.google.com/p/spymemcached/issues/attachmentText?id=205&aid=2050003000&name=zynga-patch&token=43het0qMD0x7uoEWDTVfwQCYRZc%3A1328018112032

Change-Id: I9a30f21108fcbbd43add4abd2f16af05a3fbe68b",0,1,1,0,0,0,1,0,0
13046,Ieae49545e1c08f2cb9155f926015046a787c0f5b,http://review.couchbase.org/#/c/13046,5,cf0995e5e36033ee756b378a9ae797a251b14a9d,0ac52a836520411df44b95544029bbb50e1b585d,1,07/02/12,08/02/12,192,Fixes for adding only hostname instead of both hostname and ip address,"Fixes for adding only hostname instead of both hostname and ip address

Change-Id: Ieae49545e1c08f2cb9155f926015046a787c0f5b",0,1,0,1,0,0,1,0,0
13082,I767ed66a6c3b36016300448a2075ada7071dfbae,http://review.couchbase.org/#/c/13082,1,0ac52a836520411df44b95544029bbb50e1b585d,ed2bfc25787f43803fd3fa100b84decfdde58eee,1,08/02/12,13/02/12,6,Fixed checkstyle issues.,"Fixed checkstyle issues.

Change-Id: I767ed66a6c3b36016300448a2075ada7071dfbae",0,0,1,1,0,0,1,0,0
13083,I233a8fc96bb55cf12e73e40f46281dd3870004b5,http://review.couchbase.org/#/c/13083,6,ed2bfc25787f43803fd3fa100b84decfdde58eee,8275d46e115253421469564ea196dcab554fc547,1,08/02/12,20/02/12,203,Use TapStream abstraction in spymemcached,"Use TapStream abstraction in spymemcached

This will allow our tap streams to be able to connect to
all node in the cluster.

Change-Id: I233a8fc96bb55cf12e73e40f46281dd3870004b5",0,1,1,0,0,0,1,1,1
13085,I7cf569e6c96f41af5bab51aabe402662f49282af,http://review.couchbase.org/#/c/13085,4,7dc58b87f746aa27131b834c98ad52a9ee4df5e1,02443507fc5d45f5672c96c833ae8b42ad48a296,1,08/02/12,20/02/12,42,Use TapAck from Spymemcached,"Use TapAck from Spymemcached

This change removes duplicate code.

Change-Id: I7cf569e6c96f41af5bab51aabe402662f49282af",0,1,1,0,0,0,1,-1,0
13372,I8edc64963b074fe558a8e4cd42b3ff9e0af26dc2,http://review.couchbase.org/#/c/13372,2,b417a6292d7d9cb802eb2889b6a7eec4c620044a,884f8382e085dcbde400668205c52dc22d9cbc68,0,20/02/12,20/02/12,4,Depend on spymemcached 2.8.1-SNAPSHOT.,Depend on spymemcached 2.8.1-SNAPSHOT.,0,0,0,1,0,0,1,NA,NA
13373,Ida28a8804777fddf0a8e47f7b3adecbdc7b0b633,http://review.couchbase.org/#/c/13373,2,e0fa0c45ccf1185e0874a7b66967a19eb5700df8,6d1156bcf705c2bfc96897d2f9d67648b1a282d5,1,20/02/12,20/02/12,5,Added a note about TAP interface stability.,Added a note about TAP interface stability.,0,0,0,1,0,0,1,0,0
13394,I1193262637596d0576838a67db7a61ff1447ad37,http://review.couchbase.org/#/c/13394,1,4df862cd3fe0b28d579817ef4ddbf6d37c925822,ea96e546c45f83d7488b4014ae78fe85081b04b0,1,20/02/12,20/02/12,48,Fixed a number of TAP test issues.,Fixed a number of TAP test issues.,0,0,0,1,0,0,1,0,0
13688,I67a5912f2b329151c15cff7fc89ab7ef3700503e,http://review.couchbase.org/#/c/13688,12,ea96e546c45f83d7488b4014ae78fe85081b04b0,7b3297075e490284d1731e19bc102220d12df483,1,29/02/12,21/03/12,4395,Added support for views,"Added support for views

Change-Id: I67a5912f2b329151c15cff7fc89ab7ef3700503e",0,1,0,1,1,0,1,4,1
13847,Ic6957078afdf56c16f2e44c3a269b3e31a8bb466,http://review.couchbase.org/#/c/13847,2,bfc08a8ba05a34d3a4e94f8e5009cf45f1a8694e,b52be1241b187e392e48e65fae2b6013934a81ba,1,09/03/12,12/03/12,1,Fixed a javadoc issue,"Fixed a javadoc issue

Change-Id: Ic6957078afdf56c16f2e44c3a269b3e31a8bb466",0,0,1,1,0,0,1,0,0
13848,Iefa5d36a1263350a5e61f54d2f65796dec9b808f,http://review.couchbase.org/#/c/13848,4,0a4183faebdfa0e084aaaed64624c378058ade4c,7d187e5d3fe54851dd783e469b5cea17a69b07db,1,09/03/12,12/03/12,11,Fix based on http://www.couchbase.com/issues/browse/JCBC-16,"Fix based on http://www.couchbase.com/issues/browse/JCBC-16

Change-Id: Iefa5d36a1263350a5e61f54d2f65796dec9b808f",0,1,1,1,0,0,1,0,0
13849,Id1956b6467ae02c2fae69d7cf252e3c62507cc82,http://review.couchbase.org/#/c/13849,10,b2923b848c85da1ad6d93a88fa6a401473867152,61a73138d918892f8ee434ba654c93531bd6c677,1,09/03/12,21/03/12,26,Fixing views,"Fixing views

With new defualt behavior in Couchbase Server DP4

Change-Id: Id1956b6467ae02c2fae69d7cf252e3c62507cc82",0,1,1,0,0,0,1,0,0
14157,I04508e00b77b7b6e6936f43e3d130ad22e5cdf9d,http://review.couchbase.org/#/c/14157,1,61a73138d918892f8ee434ba654c93531bd6c677,096beb8020ce2535af29f7315960693966d32268,0,21/03/12,22/03/12,4,Add httpcomponents to ivy file for makepom.,Add httpcomponents to ivy file for makepom.,0,0,0,1,0,0,1,NA,NA
14178,I86e4ee1c29f16eff16c3057db12f190158f5ee30,http://review.couchbase.org/#/c/14178,1,096beb8020ce2535af29f7315960693966d32268,836c6b7a84078aad1a63e587ad1c6dab0145b953,0,22/03/12,22/03/12,4,Update dependencies to spymemcached 2.8.1.,Update dependencies to spymemcached 2.8.1.,0,0,0,1,0,0,1,NA,NA
14485,Ifb1a9ebcc7ae64a8590f1123ddde9138c17fe23e,http://review.couchbase.org/#/c/14485,4,636515530fc2044129505fcd363965081177fe67,70ab48b018ff9ac0a28dc7834074f8974db21ed1,1,03/04/12,05/04/12,111,Fix for cbse-124,"Fix for cbse-124

Change-Id: Ifb1a9ebcc7ae64a8590f1123ddde9138c17fe23e",0,1,0,1,0,0,1,0,0
14513,I7254d1d4cf211260644a1491510d51bce219349e,http://review.couchbase.org/#/c/14513,3,8b2737ee328237cf687bff4bfbeb73f991d234ff,858c31bb96d82cf8b4ce2419bde0faab7ad8a7b5,1,04/04/12,05/04/12,198,Reconnect to configuration stream if disconnected. JCBC-19,"Reconnect to configuration stream if disconnected. JCBC-19

With this change, a Bucket which is marked as disconnected will be
later reconnected when noticed by a calling thread.

The logic for this is a little convoluted at the moment, but tests
to be correct.  In the future, this whole section should be refactored
to be a better NodeLocator or something similar.  See JCBC-28.",0,0,0,0,0,0,0,0,0
14562,I1ae53a088077e098313231f2d044a0ca61c1fd46,http://review.couchbase.org/#/c/14562,1,66cf44ea2f339406a6197705845a599f248500c5,ffdf6c0aa9234e6df00a7d118835de41a8f2834e,1,05/04/12,05/04/12,3,Fixed checkstyle errors,"Fixed checkstyle errors

Change-Id: I1ae53a088077e098313231f2d044a0ca61c1fd46",0,0,0,1,0,0,1,0,0
14574,I8541493fdf7e8c504c4cbd512ca43e3416b03829,http://review.couchbase.org/#/c/14574,2,bbfc123df074c9ac4d0c09103f562abcfabf8dcb,61615b74ac93526d222cebc5e4d1f9ebf926d38b,1,05/04/12,05/04/12,206,Reconnect to configuration stream if disconnected. JCBC-19,"Reconnect to configuration stream if disconnected. JCBC-19

With this change, a Bucket which is marked as disconnected will be
later reconnected when noticed by a calling thread.

The logic for this is a little convoluted at the moment, but tests
to be correct.  In the future, this whole section should be refactored
to be a better NodeLocator or something similar.  See JCBC-28.

Change-Id: I8541493fdf7e8c504c4cbd512ca43e3416b03829",1,0,0,0,0,0,1,0,0
14586,I38ef9d66544f30f8101ca04889b8042c1abfc177,http://review.couchbase.org/#/c/14586,1,61615b74ac93526d222cebc5e4d1f9ebf926d38b,78a507c272def20981d5ce406b3d1b91ede0110c,0,05/04/12,05/04/12,4,Change back to spymemcached 2.8.0 for this branch.,"Change back to spymemcached 2.8.0 for this branch.

Change-Id: I38ef9d66544f30f8101ca04889b8042c1abfc177",0,0,0,1,0,0,1,NA,NA
14959,I9a5bcb4c3852976b55b3162fad513156e94aaaf6,http://review.couchbase.org/#/c/14959,5,f1f01ac185e26140c827c463d6d4892178bbe128,443ff7b78d570a53ea7cb719ee5d797b181116a6,1,17/04/12,29/06/12,50,JCBC-20: ViewConnection blocks when no ops pending,"JCBC-20: ViewConnection blocks when no ops pending

When getting the next op in the queue we were using the poll()
function which immediately returns null if the queue is empty. This
immediate return causes the IO thread to spin and consumes a lot of
cpu. What we really want is to block when getting an item from the
queue until one is available. In order to do this we should be using
the take() function.

Change-Id: I9a5bcb4c3852976b55b3162fad513156e94aaaf6",0,1,0,0,0,0,1,0,0
15435,If487df95e2974f0a4c60e3c57978a82596967de6,http://review.couchbase.org/#/c/15435,1,e0c7fa9a8e5dd87e20739afb3ce4448ba1c42145,76a143eeee5ebbe927569774aee19ae47fca1ffb,0,29/04/12,22/05/12,23,Added additional ctor to avoid username. JCBC-38.,"Added additional ctor to avoid username. JCBC-38.

Change-Id: If487df95e2974f0a4c60e3c57978a82596967de6",0,0,0,1,0,0,1,NA,NA
15436,I9d4e1099edbe4d32d80af22b19cfd3dad6bde221,http://review.couchbase.org/#/c/15436,1,76a143eeee5ebbe927569774aee19ae47fca1ffb,a81357e51dd070d107be2f14091f58985c16eec3,0,29/04/12,22/05/12,6,Update dependencies to spymemcached 2.8.1. JCBC-39.,"Update dependencies to spymemcached 2.8.1. JCBC-39.

Change-Id: I9d4e1099edbe4d32d80af22b19cfd3dad6bde221",0,0,0,1,0,0,1,NA,NA
15462,Ifad8da0b4e42f4f58945510de8513e6a7f1424e2,http://review.couchbase.org/#/c/15462,1,a81357e51dd070d107be2f14091f58985c16eec3,ed552c1cd960eb5361907687f39588e8bd51d597,1,30/04/12,30/04/12,4,Missing space added to log message when node is down.,"Missing space added to log message when node is down.

Change-Id: Ifad8da0b4e42f4f58945510de8513e6a7f1424e2",0,0,0,1,0,0,1,0,0
15953,If6bd4c86a28b892018385921b0f7c98172225410,http://review.couchbase.org/#/c/15953,1,a496340aa6c76d10584300e598ada209eb6436c6,be07c81f9e3824e8886b3b331baeb6b5054a7340,1,13/05/12,04/06/12,53,Support error codes in OperationStatus class,"Support error codes in OperationStatus class

Change-Id: If6bd4c86a28b892018385921b0f7c98172225410",0,0,0,1,0,0,1,0,0
15954,I9a894bb86530f36151c5075d2da814a66e3f4e9f,http://review.couchbase.org/#/c/15954,1,be07c81f9e3824e8886b3b331baeb6b5054a7340,e4fabd2b4b731458e79ec62ed721c6bad07e4994,1,13/05/12,02/06/12,2,JCBC-47: Query now copies include_docs correctly,"JCBC-47: Query now copies include_docs correctly

Change-Id: I9a894bb86530f36151c5075d2da814a66e3f4e9f",0,0,0,1,0,0,1,0,0
15955,Ie46923fde6ff5bccbf92a9da6af17769b5e44efa,http://review.couchbase.org/#/c/15955,1,e4fabd2b4b731458e79ec62ed721c6bad07e4994,74ea6a94b66d7f02f0e933bb13137dd42cdb55a5,1,13/05/12,02/06/12,8,Removed redundent code in setStale() function in Query class,"Removed redundent code in setStale() function in Query class

Change-Id: Ie46923fde6ff5bccbf92a9da6af17769b5e44efa",0,0,0,1,0,0,1,0,0
15956,I98ea665c8bae73ae0940863ef84c426cfade01c1,http://review.couchbase.org/#/c/15956,3,74ea6a94b66d7f02f0e933bb13137dd42cdb55a5,fbae58b4e7b2b274e4e72ce7774f05753e0cfcb2,1,13/05/12,02/06/12,8,JCBC-24: Create setGroupLevel() function in Query class,"JCBC-24: Create setGroupLevel() function in Query class

I removed the setGroup(boolean group, int group_level) function
since group overrides group_level making this function useless. I
turned this function into the setGroupLevel() function.

Change-Id: I98ea665c8bae73ae0940863ef84c426cfade01c1",0,0,0,0,0,0,0,0,0
15957,I960a31110484007b9ac6b3735c9cd2ce9ca79e60,http://review.couchbase.org/#/c/15957,2,fbae58b4e7b2b274e4e72ce7774f05753e0cfcb2,b27ffd296e825f3ec208fad3d54c5ae5866f8940,1,13/05/12,04/06/12,18,JCBC-44: Check if op is null before checking if it is cancelled,"JCBC-44: Check if op is null before checking if it is cancelled

Change-Id: I960a31110484007b9ac6b3735c9cd2ce9ca79e60",0,0,0,1,0,0,1,0,0
15958,I1daa439afd2e88b55f04a63b7c42a9a7f18244e2,http://review.couchbase.org/#/c/15958,1,03044d1dc29f215dc23bceb28fb2b2ff850b8c55,3a84e435af8700216f2f7ab03135830ca1959f8a,1,13/05/12,04/06/12,9,JCBC-42: Close properties file after using it,"JCBC-42: Close properties file after using it

Change-Id: I1daa439afd2e88b55f04a63b7c42a9a7f18244e2",0,0,0,1,0,0,1,0,0
16337,Ief068cab934542617a11e2f527d98b9c38affd07,http://review.couchbase.org/#/c/16337,7,5247e2af8f0d9e15e92934bc7c6ea8ef5c0156f7,020cbe99b77fb468f7c3bef3c522c7caab834767,1,23/05/12,24/07/12,193,Use the correct Connection type for the config.  JCBC-53,"Use the correct Connection type for the config.  JCBC-53

Change-Id: Ief068cab934542617a11e2f527d98b9c38affd07",0,1,0,1,0,0,1,1,1
16338,Id0514278608fa1476e21c0f52958860404240561,http://review.couchbase.org/#/c/16338,5,07a1dba560d559efe025cd99fffec18a18a31740,6e9f5d16bb44312ff82fd034de971c947cf66c20,1,23/05/12,24/07/12,63,Ensure config update checks do not overwhelm the system.  JCBC-54.,"Ensure config update checks do not overwhelm the system.  JCBC-54.

Change-Id: Id0514278608fa1476e21c0f52958860404240561",0,1,0,1,0,0,1,0,0
16703,I937829e51621d8ed6a0e54b1b079cc338ffab059,http://review.couchbase.org/#/c/16703,2,db357677f592a7697950cde8ea8b75d4e9dd31f6,e70f797c9b99497ff54eb1ad331615157a993c5a,1,03/06/12,29/06/12,4,JCBC-43: Make VBucketNodeLocator nested classes static final,"JCBC-43: Make VBucketNodeLocator nested classes static final

Change-Id: I937829e51621d8ed6a0e54b1b079cc338ffab059",0,0,1,1,0,0,1,0,0
16765,Iff02589db6e1a3c3f56108a647e37b821b6cc447,http://review.couchbase.org/#/c/16765,1,3739e3428a07e6f7d35252578c99dd31d6ba455a,e9c5ab1cd972787fd13dcbc01739c9b7e012d1b3,0,05/06/12,05/06/12,5,Do not override fetching of AuthDescriptor.  JCBC-59,"Do not override fetching of AuthDescriptor.  JCBC-59

Change-Id: Iff02589db6e1a3c3f56108a647e37b821b6cc447",0,0,0,1,0,0,1,NA,NA
17742,I26a9470a7a39caf913338126dfb918c8774774cd,http://review.couchbase.org/#/c/17742,1,203acc29ed136f7f372e3873826c95796bbd39e2,b4db544bce355ee63d74320bd8018c54b0b2def5,1,29/06/12,29/06/12,2,JCBC-68: Copy key correctly in query,"JCBC-68: Copy key correctly in query

Change-Id: I26a9470a7a39caf913338126dfb918c8774774cd",0,0,0,1,0,0,1,0,0
18094,Iee0b1de24a9ea245b6554aea5a30462cf7b613ef,http://review.couchbase.org/#/c/18094,7,b4db544bce355ee63d74320bd8018c54b0b2def5,4bc96f50691620d236de1e746465352937cd1c7d,1,09/07/12,12/07/12,133,JCBC-72: Return errors when encountering non-200 http responses,"JCBC-72: Return errors when encountering non-200 http responses

Change-Id: Iee0b1de24a9ea245b6554aea5a30462cf7b613ef",0,1,1,1,0,0,1,1,1
18194,I0d3968baa57c3736af2c992eaf169ab6e3dabb37,http://review.couchbase.org/#/c/18194,2,3506dd1646b3827dc988f57d75815a29f9325a6b,528e1aff223daa88d2ce039f4d91289e1a52ff0d,0,11/07/12,11/07/12,6,Change spymemcached dependency to 2.8.2-SNAPSHOT,"Change spymemcached dependency to 2.8.2-SNAPSHOT

Change-Id: I0d3968baa57c3736af2c992eaf169ab6e3dabb37",0,0,0,1,0,0,1,NA,NA
18197,I71288cda2f6fe27c9dc9ae83968efe81d6fe154d,http://review.couchbase.org/#/c/18197,5,8eff82817d44cf37f95058992805c5a2990a2a99,de9191cb85846099eeb98df3d37ab84a56f0710d,1,11/07/12,12/07/12,4,Fixed incoreect error handling in view parsing,"Fixed incoreect error handling in view parsing

This should call setException because setException set errored
to true. If errored is not set then the Future won't properly
throw and exception.

Change-Id: I71288cda2f6fe27c9dc9ae83968efe81d6fe154d",0,1,0,0,0,0,1,0,0
18655,I87007bd428da34badc0d5a10ef17aa50b8132804,http://review.couchbase.org/#/c/18655,1,aaa428d71c5dbb454d7ad84b8b4e47071f49b0bf,49ce895e24c2b245495b58086962d28a474c8a22,1,20/07/12,20/07/12,5,Fix checkstyle errors,"Fix checkstyle errors

Change-Id: I87007bd428da34badc0d5a10ef17aa50b8132804",0,0,0,1,0,0,1,0,0
18755,Ia9800f9f63279c4716963066dc059e88aa009119,http://review.couchbase.org/#/c/18755,1,49ce895e24c2b245495b58086962d28a474c8a22,49a6637caa9449fa90d498fe949fd652e30ed998,0,24/07/12,24/07/12,4,Update deps to spy 2.8.2-SNAPSHOT,"Update deps to spy 2.8.2-SNAPSHOT

This will be replaced before release with the non-snapshot.

Change-Id: Ia9800f9f63279c4716963066dc059e88aa009119",0,0,0,0,0,0,0,NA,NA
18757,I20aa2945bbbbe9f19a56a41224244fe368d5e34e,http://review.couchbase.org/#/c/18757,1,e05f264c2e793dbb27a29560a72d6c0487c4e4e1,e215ba4b8900e3d1a7193c8345011d8b7299eb2a,1,24/07/12,25/07/12,333,"Workaround NOT_MY_VBUCKET during optimization, and test.","Workaround NOT_MY_VBUCKET during optimization, and test.

On SPY-91, it was found that receiving a NOT_MY_VBUCKET
response in the middle of an optimized batch of requests
will upset things by causing the optimized operation itself
to be unqueued for reads, rather than retrying the contained
operation.

Since the severity level is high and the workaround is
straightforward (disable optimization) this commit both
disables optimization and introduces the test which helped
find the cause of the issue.

Recommended way of verifying this would be to remove the
two sections related to disabling optimization and then
verify the test fails.",0,0,0,0,0,0,0,0,0
18758,I6b1d9cba8598799177f686016970ca254e9cec9e,http://review.couchbase.org/#/c/18758,1,e215ba4b8900e3d1a7193c8345011d8b7299eb2a,668bcc793caa98295c0356fe8a8d035863df370b,1,24/07/12,25/07/12,3,Honor TestConfig in syncGetTimeoutsInitClient().,"Honor TestConfig in syncGetTimeoutsInitClient().

Change-Id: I6b1d9cba8598799177f686016970ca254e9cec9e",0,0,0,1,0,0,1,0,0
18807,Ia55c4a4a3ef30affe9fea5d5f9623a79e4b91a4b,http://review.couchbase.org/#/c/18807,2,b7525ea78cc0bb02b0dbcbd496df0c1e63c1452f,5c423f73908f49e9c583b8ace090a53b23053581,1,25/07/12,11/08/12,6,Make fields of HttpOperation volatile for concurrent access.,"Make fields of HttpOperation volatile for concurrent access.

Change-Id: Ia55c4a4a3ef30affe9fea5d5f9623a79e4b91a4b",0,0,0,1,0,0,1,-1,0
18808,Ic1ee33df0a95ce285143269b9cc1246cc8be0913,http://review.couchbase.org/#/c/18808,4,1d48efffc4d43ef1a66819f133b3879a8c016240,b04ad0e32aea2388961c2ddde0f1fdfb2750cc8c,1,25/07/12,19/08/12,18,Added better debug logging on ViewNode error handling.,"Added better debug logging on ViewNode error handling.

Change-Id: Ic1ee33df0a95ce285143269b9cc1246cc8be0913",0,1,0,1,0,0,1,-1,0
19008,I87582b99fa872530a62a336b3144fefc60b63f6e,http://review.couchbase.org/#/c/19008,4,b6eab941e25f8ddee9e466b3ec1396cd96db9e4a,b74a15c010f435c36dd9aae0cd3b7f98ad65f10a,1,29/07/12,30/07/12,119,Fix resubscription by not waiting long and asynch subscribing.,"Fix resubscription by not waiting long and asynch subscribing.

It was found during autofailover testing that the client
did not recover well.  The problem was that we completed the
resubscription on one of the callers threads.  The subscription
can take upward of 700ms, but if the caller adjusts their timeout
for operations to be lower, we don't complete the resubscription.

This change does a couple of things:
1) doesn't allow the connection for any individual HTTP request
   (non-streaming) to take longer than 500ms to establish for
   purposes of faster failover
2) changes resubscription to occur in a thread temporarily
   spawned by the CouchbaseConnectionFactory, so it can complete
   even if the caller's request times out.

This has been tested to show autofailover working correctly.

Change-Id: I87582b99fa872530a62a336b3144fefc60b63f6e",0,1,0,0,0,0,1,2,1
19012,I943c6253c55fa96f6a567dacd2598192f512f21b,http://review.couchbase.org/#/c/19012,2,c27f76da81b496a8856169edf6438212a57f358d,ba90cafde4a1564029f4793f52a6813bf1e85816,1,30/07/12,30/07/12,3,Add a few minor override annotations.,"Add a few minor override annotations.

Change-Id: I943c6253c55fa96f6a567dacd2598192f512f21b",0,0,0,1,0,0,1,0,0
19017,Ib0cc409a440ff5b485d6a188f77867abc79bc204,http://review.couchbase.org/#/c/19017,1,ba90cafde4a1564029f4793f52a6813bf1e85816,3ca81bd5c1b69dab2b8115177815091087a2d537,0,30/07/12,30/07/12,1,Add default test type to ant build.,"Add default test type to ant build.

Change-Id: Ib0cc409a440ff5b485d6a188f77867abc79bc204",0,0,0,1,0,0,1,NA,NA
19018,I71ee47b5f3c3260657ec70644f63d9a58eb73055,http://review.couchbase.org/#/c/19018,1,3ca81bd5c1b69dab2b8115177815091087a2d537,4b0c3685f586df0bef949fff2b8da68a3544ef14,0,30/07/12,30/07/12,40,Added a simple README.,"Added a simple README.

Change-Id: I71ee47b5f3c3260657ec70644f63d9a58eb73055",0,0,0,1,0,0,1,NA,NA
19051,I2f3099dc885de9e78ca67607174408ad5b075d0e,http://review.couchbase.org/#/c/19051,1,4b0c3685f586df0bef949fff2b8da68a3544ef14,49b844e28dc3e294fc9496398600df397311300d,0,31/07/12,31/07/12,4,Update spymemcached depedency to 2.8.2 release.,"Update spymemcached depedency to 2.8.2 release.

Change-Id: I2f3099dc885de9e78ca67607174408ad5b075d0e",0,0,0,1,0,0,1,NA,NA
19068,I6a1e8af54ef13d4a40a5dcc21bb7a939fb63499f,http://review.couchbase.org/#/c/19068,8,c6ea7ab9e2e3c0b3cf603e4c491663be0ee8bb87,c857a8a07c145775abfef0d85db6ddedc248754f,1,31/07/12,19/08/12,321,Changes for the Observe command.,"Changes for the Observe command.

Implemented a set command that uses the Observe.

Change-Id: I6a1e8af54ef13d4a40a5dcc21bb7a939fb63499f",0,1,0,0,0,0,1,3,1
19373,I51dde71b94f99dc0a5db8e9877fa94db45b718f2,http://review.couchbase.org/#/c/19373,3,a44d3a0a24c50707651c355c8bc2cfae0c9e4f55,78c584dd5bfdf092fb305ec4d725f851fd7e9ede,1,08/08/12,08/08/12,205,Add HTTP Basic Authorization for View Requests. JCBC-95,"Add HTTP Basic Authorization for View Requests. JCBC-95

Change-Id: I51dde71b94f99dc0a5db8e9877fa94db45b718f2",0,0,0,1,0,0,1,-2,0
19605,Id044e448f2ec1b9f83c06bacf21ccdc1f123110b,http://review.couchbase.org/#/c/19605,1,861d9c8f91dee3faa3a460470f325a7bdd7f2120,3f4fe2883dc6e546ad9c3f5c5bb2aa9e178427a2,1,14/08/12,14/08/12,9,Fix checkstyle errors,"Fix checkstyle errors

Change-Id: Id044e448f2ec1b9f83c06bacf21ccdc1f123110b",0,0,0,1,0,0,1,0,0
19606,Ieffbb45123cf47153cea662df1a01f5b2266c8d3,http://review.couchbase.org/#/c/19606,3,3f4fe2883dc6e546ad9c3f5c5bb2aa9e178427a2,bd251b86eecbdaf29c5ff2c1ebdc8c3c0267b54e,1,14/08/12,18/08/12,311,JCBC-96: Remove queue mechanism in ViewConnection,"JCBC-96: Remove queue mechanism in ViewConnection

This change removes the queueing mechanism that hold operations
before being given to an individual ViewNode. The operations are
now passed directly to a ViewNode and if there are too many
operations then they are held as pending requests until the
ViewNode is ready to process them. On node shutdown the pending
ops are requeued through a callback function that redistributes
them equally to the rest of the ViewNodes.

Change-Id: Ieffbb45123cf47153cea662df1a01f5b2266c8d3",0,0,1,0,0,0,1,0,0
19673,Idb97b900ec1856b75df631bfe620c73b11bedb1e,http://review.couchbase.org/#/c/19673,2,40527e79805e27a2d3f4cbd322a65f2b91619639,14e7b7264c320f05135287811c0b4d277197ece1,0,16/08/12,18/08/12,4,Depend upon 2.8.3-SNAPSHOT,"Depend upon 2.8.3-SNAPSHOT

Change-Id: Idb97b900ec1856b75df631bfe620c73b11bedb1e",0,0,0,1,0,0,1,NA,NA
19674,Ife8c127ad3d0e9bfc7648f2f8e87e62a5ec4e0f9,http://review.couchbase.org/#/c/19674,3,f2ff93896f8e017f632cb2f8225beaef8bbedefb,bfa9acbae3877a4960b2f7b8321cc4b9cd09d0ca,1,16/08/12,19/08/12,54,"Remove dependency on ErrorCode, which was revereted in spymemcached.","Remove dependency on ErrorCode, which was revereted in spymemcached.

Change-Id: Ife8c127ad3d0e9bfc7648f2f8e87e62a5ec4e0f9",0,0,1,1,0,0,1,0,0
19675,I49d9f44aca5adad8f070cca661c990c9de306853,http://review.couchbase.org/#/c/19675,3,25ffdac3e36a9963826a970cd1040de1e1a68aba,9592d0474dcf3080607d99304e139655dd7ab14b,1,16/08/12,19/08/12,7,Make diagnosis of HTTP connection startup better.,"Make diagnosis of HTTP connection startup better.

Change-Id: I49d9f44aca5adad8f070cca661c990c9de306853",0,0,1,1,0,0,1,0,0
19676,I191ff4bfdd61aec26afb146aa3aa9de4d315f9c0,http://review.couchbase.org/#/c/19676,3,9b82ce98313265da115b569eaae14bc006c8562b,6dd0688b68b2229da2481b1f32ee6be3227fadf7,1,16/08/12,19/08/12,11,Added asserts to ensure expected view handling.,"Added asserts to ensure expected view handling.

Change-Id: I191ff4bfdd61aec26afb146aa3aa9de4d315f9c0",0,0,1,1,0,0,1,0,0
19677,I80ed8bb311afc8dde3970db0cbad6687f58c0048,http://review.couchbase.org/#/c/19677,4,b9f6972a7bf778ba8245828576232199786087dc,1df3a4fc835289f837ffdd5f345ae350e2a72f62,1,16/08/12,19/08/12,369,Change tests to use bucket delete/create instead of flush_all.,"Change tests to use bucket delete/create instead of flush_all.

Recent changes of Couchbase Server 2.0 have flush_all disabled
by default. It's also not correct to re-enable flush_all
(though possible) as it won't really behave correctly.

This change shifts to a bucket delete followed by a bucket create.
It's not the best change in that it introduces a lot of sleep time
instead of checking for bucket availability with some other poll,
but does appear to be reliable.

After the integration of RESTful flush in MB-5170, we should be
able to trim some of the time of running tests again and remove
the sleeps in here.

Change-Id: I80ed8bb311afc8dde3970db0cbad6687f58c0048",0,1,1,0,0,0,1,0,0
19690,Idefa785503f0dae99624af7172ba38f54087a45e,http://review.couchbase.org/#/c/19690,5,5664d7c743088d3257cef306d3c6e87ea9095311,1c09e3745df6b67e3aeaba2c2f5f60d90f96a5ec,1,16/08/12,19/08/12,39,Merge branch 'release10',"Merge branch 'release10'

By Matt Ingenthron (16) and others

* gerrit/release10:
  Added a simple README.
  Add default test type to ant build.
  Add a few minor override annotations.
  JCBC-88: Fix resubscr by not waiting long and asynch subscribing.
  Workaround NOT_MY_VBUCKET during optimization, and test.
  Honor TestConfig in syncGetTimeoutsInitClient().
  Ensure config update checks do not overwhelm the system.  JCBC-54.
  Use the correct Connection type for the config.  JCBC-53
  Update deps to spy 2.8.2-SNAPSHOT
  Fix checkstyle errors
  Do not override fetching of AuthDescriptor.  JCBC-59
  Added additional ctor to avoid username. JCBC-38.
  Missing space added to log message when node is down.
  Reconnect to configuration stream if disconnected. JCBC-19
  Use the correct default Hashing Algorithm - JCBC-29

Conflicts:
	ivy/libraries.properties
	src/main/java/com/couchbase/client/CouchbaseClient.java
	src/main/java/com/couchbase/client/CouchbaseConnection.java
	src/main/java/com/couchbase/client/CouchbaseConnectionFactory.java

Change-Id: Idefa785503f0dae99624af7172ba38f54087a45e",0,1,1,0,0,0,1,0,0
19691,I0225828c83cd70ee3ae9fdea66f226a22c183e32,http://review.couchbase.org/#/c/19691,5,f92d586e45e2d59b99b3c80dad00ea155c1becda,3f34dc68dde148b89cca46326212edfd385df856,1,16/08/12,19/08/12,31,Disable tests related to flush after change to test fixtures.,"Disable tests related to flush after change to test fixtures.

Change-Id: I0225828c83cd70ee3ae9fdea66f226a22c183e32",0,1,1,1,0,0,1,-1,0
19692,Id14c724e9a6ea40f10e4691f09f3bca4f4f8f821,http://review.couchbase.org/#/c/19692,5,171989c9925a669f44a541635b99cac4cf974408,087440422f4ea2861583da077a9a96de508d5a32,1,16/08/12,19/08/12,13,Better logging on testGetAvailableServers in failure case.,"Better logging on testGetAvailableServers in failure case.

Change-Id: Id14c724e9a6ea40f10e4691f09f3bca4f4f8f821",0,1,1,1,0,0,1,0,0
19693,Ib8be84252cc34eb3c5ec12b039abbcb410cd6a54,http://review.couchbase.org/#/c/19693,5,52cf2475e0df5380ef103e7244afcc34f4f6786f,4d702b613cfb22007ca137e87bdb03a0ce6f37da,1,16/08/12,19/08/12,46,Fixes for TapTest based on new flush.,"Fixes for TapTest based on new flush.

Change-Id: Ib8be84252cc34eb3c5ec12b039abbcb410cd6a54",0,1,1,1,0,0,1,0,0
19694,Id4a3268f42124ace70531f10674b817b7464c15c,http://review.couchbase.org/#/c/19694,5,a6c41eb03bf5e7c9f0717e89c9d1e5c5480bc234,ccf101f72524db22cfd422318ec7d89a3a22ea31,1,16/08/12,19/08/12,3,Adapt OptimizedStoreVbucketTest to new test fixtures.,"Adapt OptimizedStoreVbucketTest to new test fixtures.

Change-Id: Id4a3268f42124ace70531f10674b817b7464c15c",0,1,1,1,0,0,1,0,0
19758,I78fd48c5fb18a2622ed0a9f0aa80f317537e70a3,http://review.couchbase.org/#/c/19758,5,8aeb19a3dc268bf0ebf13a537ad9f6302739386c,c7f22ad7f4ac4664b1e56df5e72b3b356af851e6,1,17/08/12,19/08/12,3,Fixes for view authentication when adding design docs.,"Fixes for view authentication when adding design docs.

Change-Id: I78fd48c5fb18a2622ed0a9f0aa80f317537e70a3",0,1,0,1,0,0,1,0,0
19778,I99ad5b5089992a7df2c2ab12e487d043265df21f,http://review.couchbase.org/#/c/19778,5,d3883ad665b85aaf210422735165c26a0f5271a8,a35927a56b5244ae3bdcba282b61312297437fef,1,17/08/12,19/08/12,49,"Add support for a synchronous delete, via observe operation.","Add support for a synchronous delete, via observe operation.

This change adds support for a synchronous delete, including
detection of full delete versus logical delete.

The main use case behind this feature is that if using
Couchbase Server 2.0, and wanting to query views, one may
wish to ensure a delete has been persisted to know that
a subsequent query with .setStale(false) will take the
deletion into account when generating the index.

Change-Id: I99ad5b5089992a7df2c2ab12e487d043265df21f",0,1,0,0,0,0,1,0,0
19838,I2eada518c22bc345c113c0b786e200fd931e0567,http://review.couchbase.org/#/c/19838,3,6823f7bb2142d9083a93cb88934ffd9821ad7cb5,3ef8f1aa1c3428e1699fb075aa5a267d93808ad5,0,19/08/12,19/08/12,0,Rename README since ant clean kept removing it.,"Rename README since ant clean kept removing it.

Change-Id: I2eada518c22bc345c113c0b786e200fd931e0567",0,0,0,1,0,0,1,NA,NA
19839,If9c79e0139ab60261e67195037686de3a446a373,http://review.couchbase.org/#/c/19839,3,ecbb688a77efcc4c468b8b60ab7bc0ff9722e1bf,c80a7b0674b7d23c213f281c88be4d430dbcd4cc,1,19/08/12,19/08/12,32,Checkstyle fixes from merge commit.,"Checkstyle fixes from merge commit.

Initially, I tried to rebase this to be the first commit after
the merge, but git would keep losing it even when using -p during
rebase.

Change-Id: If9c79e0139ab60261e67195037686de3a446a373",0,0,0,0,0,0,0,-1,0
19840,Icd79b614ef53840130abd8ec8adf1ebdb8fccdb4,http://review.couchbase.org/#/c/19840,3,b407244b3696765fc1979d86cd4c1eeb9733da36,377cdecfa57596d73bbbeb5c443a47814f91afa2,1,19/08/12,19/08/12,35,Checkstyle misc. fixes.,"Checkstyle misc. fixes.

This fixes a number of checkstyle issues which have been
around for a while.  Some are still in code review, but a merge
commit is a bit in the way of putting things in the right order.

Change-Id: Icd79b614ef53840130abd8ec8adf1ebdb8fccdb4",0,0,0,0,0,0,0,0,0
19860,Id0713e7df30b0a828af3122ad9623c3e9240c245,http://review.couchbase.org/#/c/19860,1,377cdecfa57596d73bbbeb5c443a47814f91afa2,31b2d00db547f61019ace10aa760f1c295ac36a7,1,20/08/12,20/08/12,2,Minor typo in test log message.,"Minor typo in test log message.

Change-Id: Id0713e7df30b0a828af3122ad9623c3e9240c245",0,0,0,1,0,0,1,0,0
19861,I20765441809571c2660b661032ba3bc4a681165f,http://review.couchbase.org/#/c/19861,1,31b2d00db547f61019ace10aa760f1c295ac36a7,b20cd2e6cebbe512388d4b2e609466891609cf0a,0,20/08/12,20/08/12,4,Update to depend on released spymemcached 2.8.3,"Update to depend on released spymemcached 2.8.3

Change-Id: I20765441809571c2660b661032ba3bc4a681165f",0,0,0,1,0,0,1,NA,NA
19862,Ia810d5b6f1418476fc2118e3501e0c69f2d6da79,http://review.couchbase.org/#/c/19862,1,b20cd2e6cebbe512388d4b2e609466891609cf0a,d37bb88ca6000613e71db40067a5c9cf1d8697b5,0,20/08/12,20/08/12,11,Updated README to map up to the 1.1 DP state.,"Updated README to map up to the 1.1 DP state.

Change-Id: Ia810d5b6f1418476fc2118e3501e0c69f2d6da79",0,0,0,1,0,0,1,NA,NA
19920,I7f9b4a9149f1a952f5a2354f223223d02144da43,http://review.couchbase.org/#/c/19920,2,d37bb88ca6000613e71db40067a5c9cf1d8697b5,cf044ee172163ffa1d9381b166db8aa1d2c89cc7,1,21/08/12,21/08/12,45,Fixes for the Observe Methods,"Fixes for the Observe Methods

Change-Id: I7f9b4a9149f1a952f5a2354f223223d02144da43",0,0,0,1,0,0,1,0,0
22973,I9a1ddd2b57c3a2d5e8801414ab72b4d435c7c5cb,http://review.couchbase.org/#/c/22973,4,a9c19dc41b5508b420c761c955a463b6f7d9807d,c3338b70323d3cc059be31743e3e0dbbb5f2ef8a,1,03/12/12,03/12/12,39,Merge remote-tracking branch 'gerrit/release11c',"Merge remote-tracking branch 'gerrit/release11c'

* gerrit/release11c:
  JCBC-130: Add a timeout for unresponsive http connection fetches.
  Correcting view tests with wrong exception handling.
  [Backport] Cancel view requests when the operation is cancelled.
  JCBC-100: [Backport] Add better error handling on view fetches.

Conflicts:
	src/main/java/com/couchbase/client/CouchbaseClient.java
	src/test/java/com/couchbase/client/ViewTest.java

Also, had to add a minor change to ViewNodeTest.java to add a view
since the NoDocsOperationImpl had changed.

Change-Id: I9a1ddd2b57c3a2d5e8801414ab72b4d435c7c5cb",0,1,0,0,0,0,1,0,0
25027,I82bcb65e48e3d6fde8d5361ee242f89960d38a6f,http://review.couchbase.org/#/c/25027,8,ea9d58ae3d86366186590c08a86a93215222c499,12da3eda72f5b23410ee3c0003feca3a2b331da6,1,07/03/13,20/02/14,101,JCBC-240 Add total number of rows in ViewResponse,"JCBC-240 Add total number of rows in ViewResponse

Change-Id: I82bcb65e48e3d6fde8d5361ee242f89960d38a6f",0,1,0,1,0,0,1,0,0
26557,Ia96f7653630a16e9c922a00882ff7fc1c1c195e8,http://review.couchbase.org/#/c/26557,4,c2e2adfe742ce2f5b9becfedb6e9e77545edd242,45a39c4b32916b0e1fd8967163c73aa5e424a1fd,1,28/05/13,12/08/13,168,JCBC-280 - Support for edit bucket functionality through cbc.,"JCBC-280 - Support for edit bucket functionality through cbc.

Change-Id: Ia96f7653630a16e9c922a00882ff7fc1c1c195e8",0,1,1,1,0,0,1,1,1
27597,Ibac70bf012be80439d4d2a4f894230d0fabadca2,http://review.couchbase.org/#/c/27597,3,80f07aad4e5d4e0c8f50fcaee963e2d7ccf97ea3,60b310766ea1d4ddb1d0e5345ce4e7a8040ce01a,1,22/07/13,01/08/13,16,CouchbaseProperties should use the SPY LoggerFactory.,"CouchbaseProperties should use the SPY LoggerFactory.

Change-Id: Ibac70bf012be80439d4d2a4f894230d0fabadca2",0,0,0,1,0,0,1,0,0
27608,I92f9edb8f5f9f9b7b4f3297a0f7576543840a9f5,http://review.couchbase.org/#/c/27608,3,fb5f2f91d58684705b94d3a332be1fd1875d403c,a93b03a2fa9e71225f3ed65bb34a1776985ba18f,1,22/07/13,22/07/13,21,Adapt Testcase to work with only one server.,"Adapt Testcase to work with only one server.

The % 2 assertion on available servers is not needed (anymore)
and can lead to false negatives on unit test runs with only
one target server in the cluster.

Change-Id: I92f9edb8f5f9f9b7b4f3297a0f7576543840a9f5",0,0,0,0,0,0,0,0,0
27610,Ie6bfac06cf168fddbbd7808a2579ece1e080c700,http://review.couchbase.org/#/c/27610,5,a93b03a2fa9e71225f3ed65bb34a1776985ba18f,ef616c12e55321c0a4afa5c257f461964353ab89,1,22/07/13,30/07/13,116,JCBC-332 : Tests added for observe and arithmetic operations,"JCBC-332 : Tests added for observe and arithmetic operations

Change-Id: Ie6bfac06cf168fddbbd7808a2579ece1e080c700",0,1,1,1,0,0,1,1,1
27761,I5e636672b2cc910a3b3d2272672939ca7edbd4b3,http://review.couchbase.org/#/c/27761,2,ef616c12e55321c0a4afa5c257f461964353ab89,a0de7e8b050648c773d3acf716635160f7cf2fb9,1,30/07/13,01/08/13,5,JCBC-336: Refresh config while polling.,"JCBC-336: Refresh config while polling.

This changeset makes sure the actual config is always used while
polling in the loop. This makes sure a potentially stale config
is reloaded before getting used.

Change-Id: I5e636672b2cc910a3b3d2272672939ca7edbd4b3",0,0,0,0,0,0,0,0,0
27790,I6d73f5dd551d1d9921a25cae8c58783e5f63afed,http://review.couchbase.org/#/c/27790,2,800f1528a6907af903cf29d26cd7bcf03e55ec99,c3babfee0d431dd4fef167789b208ff1a5b44b29,1,31/07/13,01/08/13,50,JCBC-338: Don't allow null for bucket and password.,"JCBC-338: Don't allow null for bucket and password.

This changeset makes sure that the code ""fails fast"" and throws
a semantically correct exception in case null (or an empty bucket
name) is passed in. Otherwise, the data goes through and throws a
NPE exception down the stack.

Change-Id: I6d73f5dd551d1d9921a25cae8c58783e5f63afed",0,0,0,0,0,0,0,1,1
27885,I39693e789222f39a263d365546fda169e1182645,http://review.couchbase.org/#/c/27885,3,9390b91e3bb94549712851e63576e2a639d06c53,fa4672f9ee4cddfba51c04eeeb90b70e465b9c5d,1,02/08/13,02/08/13,8,Fixed Assertion failures from isDone() method call on future,"Fixed Assertion failures from isDone() method call on future

Change-Id: I39693e789222f39a263d365546fda169e1182645",0,0,0,1,0,0,1,0,0
27886,Icfb2e38811db41fe21e767b839bb78e821b77e14,http://review.couchbase.org/#/c/27886,5,7235ad5ff9084d125215756779ba1165fe2fb63a,6ff3742a10a6a429220f6b432c165317b83161fa,1,02/08/13,12/09/13,106,JCBC-330: Exposing expiration on more CAS methods.,"JCBC-330: Exposing expiration on more CAS methods.

This changeset exposes the - already implemented - expiration
setting on CAS methods to more signatures. This makes it easier
to avoid a subsequent touch() on the sync methods and enables
it at all on the persistTo/replicateTo variants.

Change-Id: Icfb2e38811db41fe21e767b839bb78e821b77e14",0,1,0,0,0,0,1,0,0
27916,I4a7acaaa3066180be0e0949023c295aef2eb7685,http://review.couchbase.org/#/c/27916,3,f7393d4a1af016f30581de3f1bea2ce6ba681e1c,0b72ae4182d0be5f1013f8735ac4735329c6a37d,1,05/08/13,06/08/13,9,Only backfill active data.,"Only backfill active data.

Change-Id: I4a7acaaa3066180be0e0949023c295aef2eb7685",0,0,0,1,0,0,1,0,0
28109,I1a2b189947484555e0d51654913d0dd9681de9dc,http://review.couchbase.org/#/c/28109,8,0b72ae4182d0be5f1013f8735ac4735329c6a37d,9548966b26165dfdb209404d7c4fc0f4087e6bde,1,12/08/13,12/09/13,296,WIP: Adding support for listeners in JCBC.,"WIP: Adding support for listeners in JCBC.

Change-Id: I1a2b189947484555e0d51654913d0dd9681de9dc",0,1,0,1,0,0,1,0,0
28389,I27b5ace1dc884f370f14db8ba713221a5e8779fe,http://review.couchbase.org/#/c/28389,2,7668794f33d06ab4a5667300a204b844070f062f,3e633b72ef386a8fa4c0a96e08018a01962cab73,1,20/08/13,27/08/13,4,JCBC-346: Automatically detect SASL mechanisms.,"JCBC-346: Automatically detect SASL mechanisms.

This changeset, together with the corresponding spymemcached
changeset makes sure that the server automatically gets asked
for all supported SASL mechanisms and the most secure one is
selected.

A specific mechanism can be forced by providing a custom
AuthDescriptor.

Change-Id: I27b5ace1dc884f370f14db8ba713221a5e8779fe",0,0,1,0,0,0,1,0,0
28391,I348aaa28ef9c2fea4161750178c1308be4231e7b,http://review.couchbase.org/#/c/28391,3,4bf18f221c4bb665934d7f435eae88d45c8c479d,c7e5abc6cc2052fcdb2c7ac225ddeb011581f440,1,20/08/13,27/08/13,4,JCBC-347: Adjust observe intervals for better performance.,"JCBC-347: Adjust observe intervals for better performance.

By decreasing the observe poll interval, better throughput on
intense replicateTo settings can be achieved. This can also be
modified through the Builder, but setting it to a lower value
should provide a better experience by default.

Also, the max poll cycles have been increased so together now
the max waiting time is 5 seconds.

Change-Id: I348aaa28ef9c2fea4161750178c1308be4231e7b",0,0,1,0,0,0,1,0,0
28473,I5a9c7c888025069942c3db366e36dbd627f643e0,http://review.couchbase.org/#/c/28473,5,f79ee1ed0c699a0cbfe464c84aa82e9db9a2d5db,c19cc46a7c1bf61101f28718af1154ae091249c7,1,22/08/13,13/09/13,30,Harden asyncGetFromReplica.,"Harden asyncGetFromReplica.

This changeset makes sure that also the active node
is considered in the replica list (to get a value
even after a failover happened in the meantime) and
also make sure that if no replica node is active for
the key, reconfiguration is triggered to avoid dead
nodes.

This is in alignment with the getPrimary() operations
which use the same behavior.

Change-Id: I5a9c7c888025069942c3db366e36dbd627f643e0",0,1,0,0,0,0,1,0,0
28477,I4dea46c96ce78f7aaccf6cfff6ecd0629aa19894,http://review.couchbase.org/#/c/28477,3,8fa7b3eb241ede813fb31bd050c4cdadff26b078,163aecc8f07f4a6d79e0ef7554183f5a767dea75,1,22/08/13,27/08/13,17,Avoide race condition in observe replica.,"Avoide race condition in observe replica.

This changeset uses the locator only and avoids a possible
race condition where the config contains stale data that does
not correlate with the locator information.

This can lead to a possible IndexOutOfBounds exception down the
call stack.

Change-Id: I4dea46c96ce78f7aaccf6cfff6ecd0629aa19894",0,0,1,0,0,0,1,0,0
28599,I5b1916c7e3058a819c0787c60bad3cc8b3df4c21,http://review.couchbase.org/#/c/28599,2,163aecc8f07f4a6d79e0ef7554183f5a767dea75,5b002d5ae1aac0717fda10a91a2eed4aa49b8d37,1,27/08/13,04/09/13,48,JCBC-349: Make sure flush() works on memcached buckets.,"JCBC-349: Make sure flush() works on memcached buckets.

This changeset enables the pending flush() tests and makes sure
that they also work on memcached type buckets.

Change-Id: I5b1916c7e3058a819c0787c60bad3cc8b3df4c21",0,0,0,0,0,0,0,0,0
28693,I0bdfa213e1f8577a0ec1efee9c5191cf30792c38,http://review.couchbase.org/#/c/28693,6,69f7109830c09dd892ef781723286d56e6c84741,2b85be82ed589f86758edbd0e1883f8c63752837,1,30/08/13,12/09/13,152,JCBC-333: Only query nodes with active vbuckets.,"JCBC-333: Only query nodes with active vbuckets.

Change-Id: I0bdfa213e1f8577a0ec1efee9c5191cf30792c38",0,1,0,1,0,0,1,-1,0
28764,I0db0906f36a2018e8ed918fa8e99aa2ec9cc7f01,http://review.couchbase.org/#/c/28764,2,8c118a8c30906937c04a6ecf20f7bdd157833dde,3db54f1119fd225f8c338fac51e565cd419520ea,0,03/09/13,03/09/13,2,Make sure ant clean does not wipe .idea directory files.,"Make sure ant clean does not wipe .idea directory files.

Change-Id: I0db0906f36a2018e8ed918fa8e99aa2ec9cc7f01",0,0,0,1,0,0,1,NA,NA
28785,I810f6b4e419a1ddecf58c46d428ada66e17a84c2,http://review.couchbase.org/#/c/28785,6,3db54f1119fd225f8c338fac51e565cd419520ea,9c0b96940f995104fe750166db3c44c58854d0c4,1,04/09/13,10/09/13,219,JCBC-138: Replace nodeList on reconfiguration to reflect changes.,"JCBC-138: Replace nodeList on reconfiguration to reflect changes.

This changeset makes sure that, after a reconfiguration, the new
node list is passed on to the configuration handler so that it is
aware of the new topology.

This changeset now makes it possible that also when only one node
is passed in during construction, all of the other nodes will be
picked up proactively.

Change-Id: I810f6b4e419a1ddecf58c46d428ada66e17a84c2",0,1,1,0,0,0,1,0,0
28786,I81a8bb4db3fd5b6f7955e2d7416918fa3e9cf97c,http://review.couchbase.org/#/c/28786,2,d4238a736f182dd37192a5035fa76a36df5367d8,18109360a427bb961689878d9e05e927dbde444b,1,04/09/13,04/09/13,4,Reset system properties before running the PropertyTests.,"Reset system properties before running the PropertyTests.

Change-Id: I81a8bb4db3fd5b6f7955e2d7416918fa3e9cf97c",0,0,0,1,0,0,1,0,0
28815,Icea367bbe66aa9a3eaea9c85c307e04bf353840f,http://review.couchbase.org/#/c/28815,3,3b59f19daed67224d5b9bd0be552088208ef8d79,677b7e94334288dd1eba3e7a8b68d8b3518a452c,1,05/09/13,05/09/13,16,Upgrade Spymemcached to 2.10.0.,"Upgrade Spymemcached to 2.10.0.

This changeset upgrades the spy dependency and also applies all
needed fixes for the upgrade (it passes the executor along to the
futures).

Change-Id: Icea367bbe66aa9a3eaea9c85c307e04bf353840f",0,0,0,0,0,0,0,0,0
28860,I8b5fe5cd95dfa8800588a623a02d29d924bbd966,http://review.couchbase.org/#/c/28860,6,ada89d0da41a0786f8654b3a6afb68aca53c7586,fb79c2ff73d3e154de161477bbdd70f26b047cb1,1,09/09/13,13/09/13,224,JCBC-344: Support creation params through properties.,"JCBC-344: Support creation params through properties.

! testing todo !

Change-Id: I8b5fe5cd95dfa8800588a623a02d29d924bbd966",0,1,1,0,0,0,1,1,1
28878,I6598491eedc348a2edfe50caa074d62a41d31c8f,http://review.couchbase.org/#/c/28878,2,0bc4df2e03cffd3393da3516974892ced656f96a,c96551fe78584629dbf9c52ee8f60ed459e76561,0,10/09/13,12/09/13,1,Fixing FlushTest and warmup.,"Fixing FlushTest and warmup.

Change-Id: I6598491eedc348a2edfe50caa074d62a41d31c8f",0,0,0,1,0,0,1,NA,NA
28933,Ifbec6e88e2df534724e48a173413ec41d6f35175,http://review.couchbase.org/#/c/28933,3,fe7744206405a2a7c1e00d010f0c8b8a77ea3d7e,a3120205e9b00d5dbd0ac10248e2051ad8dac953,1,12/09/13,12/09/13,5,JCBC-350: One more spot where to fix the race condition.,"JCBC-350: One more spot where to fix the race condition.

This changeset also fixes the possible inconsistency in the observePoll
method, not only in observe itself.

Change-Id: Ifbec6e88e2df534724e48a173413ec41d6f35175",0,0,0,0,0,0,0,0,0
28970,I3ebf070eb7a4db6e9a269be60d6bf36905d475cf,http://review.couchbase.org/#/c/28970,4,39d0f9507ba25a8b72d8bacf2a81ce6130825ac4,5bd4c8b600ac84ceca33ee845f029c19f94cb1b1,0,13/09/13,13/09/13,92,Changing groupId and adding targets for maven central.,"Changing groupId and adding targets for maven central.

Change-Id: I3ebf070eb7a4db6e9a269be60d6bf36905d475cf",0,1,0,1,0,0,1,NA,NA
29374,Ia1987d3dc9ca8cf8c73435ba505ada1fd83f265e,http://review.couchbase.org/#/c/29374,4,72c19afbd5bde635ea84c01766e74a11e3f256e5,ccca57a0f497aa595ff5280cd6100cb50a84ca42,0,07/10/13,09/10/13,80,JCBC-366: Properly override ExecutorService and Metrics.,"JCBC-366: Properly override ExecutorService and Metrics.

Change-Id: Ia1987d3dc9ca8cf8c73435ba505ada1fd83f265e",0,1,0,1,0,0,1,NA,NA
29465,Iacc07dfd949ffaaacb64e68349580952c6c51df2,http://review.couchbase.org/#/c/29465,2,ccca57a0f497aa595ff5280cd6100cb50a84ca42,7faeab93ad6ca66faa4035dba991b7462eec0f00,1,11/10/13,11/10/13,16,Make sure random tests have better chance of succeeding.,"Make sure random tests have better chance of succeeding.

Change-Id: Iacc07dfd949ffaaacb64e68349580952c6c51df2",0,0,0,1,0,0,1,0,0
29466,I103606e82f609231846998b59719fa170bd4624a,http://review.couchbase.org/#/c/29466,2,913368b6700bfb05136ce537c3badd16fa891f91,de967dfb0b942cff8df1ccea92997e7eff4331ac,1,11/10/13,11/10/13,3,Mock should use a empty list instead of null for the servers.,"Mock should use a empty list instead of null for the servers.

Change-Id: I103606e82f609231846998b59719fa170bd4624a",0,0,0,1,0,0,1,0,0
29467,I7476a1dc625000669d40f4f707e5c9003508fe11,http://review.couchbase.org/#/c/29467,2,fc568d965f8265d51a2f0ec453a904d80b4c65f4,4ee5e5effa199af80a23b2b2b0720cbac5fc4966,1,11/10/13,11/10/13,22,Make CouchbaseClientTests more resilient.,"Make CouchbaseClientTests more resilient.

Change-Id: I7476a1dc625000669d40f4f707e5c9003508fe11",0,0,0,1,0,0,1,0,0
29468,Ide6d9c0191fc91a492b64022e2f12afb6f76083c,http://review.couchbase.org/#/c/29468,2,4ee5e5effa199af80a23b2b2b0720cbac5fc4966,7aefcf20a4b0d5b0a32314f39882012a8d565b19,0,11/10/13,11/10/13,4,Updating spymemcached to 2.10.1,"Updating spymemcached to 2.10.1

Change-Id: Ide6d9c0191fc91a492b64022e2f12afb6f76083c",1,0,0,1,0,0,1,NA,NA
29537,I9f2dcb6e37544c237d11e6f4050fe1120344aecb,http://review.couchbase.org/#/c/29537,3,19b8aa774e0c877fa7f920a91c8387fdd193124f,f6ba3f5790ddd750860a09e4aef558d40d77ea3a,1,15/10/13,24/10/13,320,Removing redundant declarations and making more fields final.,"Removing redundant declarations and making more fields final.

Change-Id: I9f2dcb6e37544c237d11e6f4050fe1120344aecb",0,0,1,1,0,0,1,0,0
29538,I5711371b06a255b05c037cbaaa9ea1e46b6bbb68,http://review.couchbase.org/#/c/29538,3,f75a2dd88ef3aa21f00b56fa1ba7831f8360a231,51e5afa9b5e0a4208805779530a44b81b0738e44,1,15/10/13,24/10/13,17,Convert local-used only fields to local.,"Convert local-used only fields to local.

Change-Id: I5711371b06a255b05c037cbaaa9ea1e46b6bbb68",0,0,1,1,0,0,1,0,0
29539,Ia3246b960e2e05515c0d54214b1732cbaf570c8b,http://review.couchbase.org/#/c/29539,2,1dd187f412ecb799752e250402a7828166528e88,69d4673b9fb49ed4aca74ed7da26ed972489cbe6,1,15/10/13,24/10/13,79,JCBC-368: Avoid potential netty deadlock on failing streaming conn.,"JCBC-368: Avoid potential netty deadlock on failing streaming conn.

Change-Id: Ia3246b960e2e05515c0d54214b1732cbaf570c8b",0,0,1,1,0,0,1,0,0
29541,I8d9f3a6c64a41b58c9a25df69fc17864acabd6ff,http://review.couchbase.org/#/c/29541,3,4a6f99e91d42bab236f3ff1f83f27cd64663826d,1dd004c3a1597850f6f94a7cb086eb4a43e718eb,1,15/10/13,31/10/13,2200,Moving CouchbaseClient docblocks to the IF and adding @Override.,"Moving CouchbaseClient docblocks to the IF and adding @Override.

Since the CouchbaseClient grows out of bounds with the recent
additions, moving the docblocks makes it shorter. Also, this is
where they belong to anyway. Actual refactoring of the code
will follow in separate commits.

Change-Id: I8d9f3a6c64a41b58c9a25df69fc17864acabd6ff",0,0,1,0,1,0,1,0,0
29545,Ib101af5f1212123fcb103d335d40fb2bc79f8964,http://review.couchbase.org/#/c/29545,5,d8d54ddad6fe6881869a6fd50149245270e7c42f,ce2fc8a22f17e8632382f390ee8844ea817faaad,1,15/10/13,31/10/13,220,JCBC-369: Fix observePoll delete logic.,"JCBC-369: Fix observePoll delete logic.

This changeset refactors the observePoll method, making it faster
and also correcting the delete logic which is not correct for
certain scenarios (now it is correct with respect to the non-delete
methods).

Change-Id: Ib101af5f1212123fcb103d335d40fb2bc79f8964",0,1,1,0,0,0,1,0,0
29714,I0b044388d570b8e321c6285488d9f07b6c0f163d,http://review.couchbase.org/#/c/29714,3,bb2ed77caef42df92854413205ba06da627c9d88,80be49856a6e1e4646b53c0e69e4b94a2c64c6aa,1,23/10/13,24/10/13,69,JCBC-371: Removing redundant reference of bucket/vBucket.,"JCBC-371: Removing redundant reference of bucket/vBucket.

This changeset removes the redundant this.bucket reference in
the BucketMonitor, reducing memory a bit. Also, the observe
notifiers are now called directly and the needed bucket
config is referenced from the parent ConfigurationProvider.

Change-Id: I0b044388d570b8e321c6285488d9f07b6c0f163d",0,0,0,0,0,0,0,0,0
29735,I63d73e441551b5944206c628dbfd47505ac070cf,http://review.couchbase.org/#/c/29735,2,bf0c1fab0ad6ea9556bb187595243ce4013bb489,dc9c6886f01a4b233a9b9621af8d03465484229f,1,24/10/13,31/10/13,16,Make property tests more solid by clearing them properly.,"Make property tests more solid by clearing them properly.

Change-Id: I63d73e441551b5944206c628dbfd47505ac070cf",0,0,1,1,0,0,1,0,0
29823,I28a74e3f44d28ab8e4f3780ddb158527484fd59d,http://review.couchbase.org/#/c/29823,6,cc0d0cc428de63ef95b789b0cf097d250369cdb7,c41f381770a48a548b4bcf8898c7e51adeb22cd1,1,28/10/13,31/10/13,45,JCBC-373: The replica get future to complete is not thread safe.,"JCBC-373: The replica get future to complete is not thread safe.

This leads to false positives while the future could be completed
but never is because of visibility issues.

Change-Id: I28a74e3f44d28ab8e4f3780ddb158527484fd59d",0,1,1,0,0,0,1,0,0
29848,Ib6b513819ed9a686fdc80956ebb58edf9cfc6a43,http://review.couchbase.org/#/c/29848,5,726892c27c8e3262ff9581749efb9f6de752361a,f26484714e0430ab64f4b0e6a94c3c1416773524,1,29/10/13,31/10/13,161,WIP: make sure active replica doc is also completed.,"WIP: make sure active replica doc is also completed.

Change-Id: Ib6b513819ed9a686fdc80956ebb58edf9cfc6a43",0,1,0,1,0,0,1,0,0
29849,Ic534336f5421e9c0e928520665bde454cee4f653,http://review.couchbase.org/#/c/29849,3,89999d49cbbb0e454ba6587e54dea802f7944e57,f7617b451ade22f42de3152677503876945aaf51,1,29/10/13,31/10/13,213,Refactor the ConfigurationParserJSON for clarity.,"Refactor the ConfigurationParserJSON for clarity.

This changeset doesnt change any functionality but only refactors
and properly comments the ConfigurationParserJSON.

Change-Id: Ic534336f5421e9c0e928520665bde454cee4f653",0,0,0,0,0,0,0,0,0
29850,Ifa8d2eff9a9cd7fe44fabb83ce8ec4ab1192f32b,http://review.couchbase.org/#/c/29850,4,31f8a3136a9011cab6a0b5fa036f47ebe9febe67,874eb485b06ba8979586f1de166e735a77aade95,1,29/10/13,31/10/13,308,Refactor ConfigFactory and optimize VBucket memory heap size.,"Refactor ConfigFactory and optimize VBucket memory heap size.

This changeset refactors the ConfigFactory but not changing how it
works internally. In addition, VBucket objects are moved from int
to short and only allocate as much memory as needed.

Change-Id: Ifa8d2eff9a9cd7fe44fabb83ce8ec4ab1192f32b",0,1,0,0,0,0,1,2,1
29887,If979b5a52ffbcf7e87a4c59bb14f781bf48deaee,http://review.couchbase.org/#/c/29887,5,028fe3629f5942aad0795592dbad87c5407dfc7a,497e598adc75083961f4f8933ffefad6558e4fc0,1,30/10/13,04/11/13,226,Reuse VBucket objects from last Configs to lower GC pressure.,"Reuse VBucket objects from last Configs to lower GC pressure.

This changeset allows to (optionally) pass in a existing Config
and if VBucket objects are the same, those get reused in the new
Config and not creating new ones all the time. This lowers GC
pressure, especially during rebalance phases when 10 or more
CouchbaseClient objects are used.

Change-Id: If979b5a52ffbcf7e87a4c59bb14f781bf48deaee",0,1,0,0,0,0,1,1,1
30009,I6568e1c1fd5d779acf3fd1e52ed2d88b46a1a8b7,http://review.couchbase.org/#/c/30009,2,d79e099f764db21b13c5f53f2fc514c3bb082315,b0c568c4897928e3de0e6c452c8b8102b79f7e88,1,04/11/13,04/11/13,126,Further hardening of ReplicaRead.,"Further hardening of ReplicaRead.

This changeset hardens the implementation of ReplicaRead further
by applying the following changes:

 - Make sure the completedFuture is not overriden by later calls.
 - The ""cancel"" iterations on the monitoredFutures is synched as
   advised by Collections#synchronizedList.
 - Make sure that replica reads are only ""fanned out"" to nodes that
   are actually configured as a replica at the moment. For that
   reason, a new method is added to the VBucketNodeLocator to return
   a list of servable nodes for this specific key.
 - Along the lines of the previous point, make sure that an additional
   request to the proper active master is only sent when it is actually
   reachable (not -1 in the vbucket map).

Change-Id: I6568e1c1fd5d779acf3fd1e52ed2d88b46a1a8b7",0,0,0,0,0,0,0,0,0
30010,I733ae5ecc0965a95299dbe5a8b9ca4f25742be31,http://review.couchbase.org/#/c/30010,3,b0c568c4897928e3de0e6c452c8b8102b79f7e88,51cb45f9d42ccc226627ed8e59b7e486e17893a6,1,04/11/13,04/11/13,11,JCBC-375: Correctly reorder resubscriber to prevent race condition.,"JCBC-375: Correctly reorder resubscriber to prevent race condition.

This changeset makes sure that the old reconfigurable is taken out
of the old provider before it gets shut down to avoid a situation
where it is null, leading to failures on subsequent reconnect
attempts.

Change-Id: I733ae5ecc0965a95299dbe5a8b9ca4f25742be31",0,0,0,0,0,0,0,0,0
30045,I0dab4692c29411d96ddea5297d8fd2959640626b,http://review.couchbase.org/#/c/30045,2,c1b1b65d1002025458b07b808c8c06b047b4b8e8,a9f9bb7575f84bd257f3b01c4d0641ba8be8a56a,1,05/11/13,05/11/13,5,Adapting test case for the latest observe changes.,"Adapting test case for the latest observe changes.

Change-Id: I0dab4692c29411d96ddea5297d8fd2959640626b",0,0,0,1,0,0,1,0,0
30051,I1aed2cbcd5552686b5a141828edf75d6bfb8afd1,http://review.couchbase.org/#/c/30051,2,63a0195ba3687821b0576ce0a8a7e0b1c7531e89,961014dba92ac647e2e6c5618a95b3e7bb835c20,0,05/11/13,05/11/13,4,Upgrade to spymemcached 2.10.2,"Upgrade to spymemcached 2.10.2

Change-Id: I1aed2cbcd5552686b5a141828edf75d6bfb8afd1",0,0,0,1,0,0,1,NA,NA
30372,I4d06b9d80674069c1b46493777cbac4e476554a2,http://review.couchbase.org/#/c/30372,2,8b0cda6b36450bafc52a0550e8ee2ac8ebd09529,f9164401b31ead06c3677fdf9faf18fc4a6bb799,1,18/11/13,28/11/13,67,JCBC-380: Dynamically load ports from incoming config.,"JCBC-380: Dynamically load ports from incoming config.

This changeset makes sure that the 8091 port is not hardcoded
during reconfigure, but loads and applies it dynamically
from the config that comes in from the cluster.

Change-Id: I4d06b9d80674069c1b46493777cbac4e476554a2",0,0,1,0,0,0,1,0,0
30373,Icfa43b63595a362d14c1b0938094fc1d4fcc56b3,http://review.couchbase.org/#/c/30373,3,35d049ace0de09fbd636082f193f65635bb9fc5d,d9c699b597ee4aa63dc04d2a692a0ce9f9050492,1,18/11/13,20/02/14,43,Rename config types for clarity.,"Rename config types for clarity.

This changeset renames the DefaultConfig in CouchbaseConfig and
the CacheConfig into MemcacheConfig to more accurately describe
the type of buckets they are referring to.

Change-Id: Icfa43b63595a362d14c1b0938094fc1d4fcc56b3",0,0,0,0,0,0,0,0,0
30374,Ia4e2d9e11cba976f7aa230029b32bd303bc98df1,http://review.couchbase.org/#/c/30374,2,12edeca8ff8b34483fe4c4cd8ff8a678f6cbfe05,94f92fd0c93655590a1eea28b05e544b4a115630,1,18/11/13,28/11/13,12,Converting deprecated methods on channelbuffer.toString(),"Converting deprecated methods on channelbuffer.toString()

Change-Id: Ia4e2d9e11cba976f7aa230029b32bd303bc98df1",0,0,1,1,0,0,1,0,0
30375,Icf7af9df6b7a1fa3df6892ec0a3b3e4175f86d33,http://review.couchbase.org/#/c/30375,3,0685e174f9c4dcd37643703089ad7d1991ea4158,c88234db9ac94807f930009f6a23f2269a508ee8,1,18/11/13,19/02/14,6,Suppress unchecked warnings on completion listeners.,"Suppress unchecked warnings on completion listeners.

Change-Id: Icf7af9df6b7a1fa3df6892ec0a3b3e4175f86d33",0,0,0,1,0,0,1,0,0
30682,I83c239dc4a7ced77059261ae7c689d0ae6bd54cd,http://review.couchbase.org/#/c/30682,2,c75f99bd0d135054cc8799093b173af5c6a60dcd,2b6d279e9e2942eb7f544d718267984253f8a2ea,0,28/11/13,19/02/14,7,Correcting mailmap for shortlog,"Correcting mailmap for shortlog

Change-Id: I83c239dc4a7ced77059261ae7c689d0ae6bd54cd",0,0,0,1,0,0,1,NA,NA
30702,I91b629f3a69d2c5587d2ea7be5261ed015d8e6e6,http://review.couchbase.org/#/c/30702,2,eb0fea6170a3337f5e558382294e4e70d98646e4,9fc3f8b13ca1d7025e9c685a4d8d6380caef3361,1,29/11/13,02/12/13,15,Add test case for SPY-146.,"Add test case for SPY-146.

This changeset adds a test case to make sure observe with 2-byte
UTF-8 chars works as expected. To pass, this requires at least
spymemcached 2.10.3 in place.

Change-Id: I91b629f3a69d2c5587d2ea7be5261ed015d8e6e6",0,0,0,0,0,0,0,0,0
30779,I65097bf0e5f04e3e08fa8d3d994943445f4de1e8,http://review.couchbase.org/#/c/30779,2,9fc3f8b13ca1d7025e9c685a4d8d6380caef3361,5db1315d3853cbcc38bd621ba73f75e68ea765ea,0,03/12/13,03/12/13,4,Upgrade SPY to 2.10.3,"Upgrade SPY to 2.10.3

Change-Id: I65097bf0e5f04e3e08fa8d3d994943445f4de1e8",0,0,0,1,0,0,1,NA,NA
31017,Ie78466a0ec7e70118d1ed874684f690887ffb688,http://review.couchbase.org/#/c/31017,14,5db1315d3853cbcc38bd621ba73f75e68ea765ea,9b9fe8bf448d2669fd37a08c1d499703de238286,1,11/12/13,31/12/13,2225,JCBC-??: Rewrite View Connection Management,"JCBC-??: Rewrite View Connection Management

This changeset rewrites the connection management of the view layer
by utilizing newer mechanisms in apache httpcore nio.

Change-Id: Ie78466a0ec7e70118d1ed874684f690887ffb688",0,1,1,0,1,0,1,0,0
31214,I626dd989b98940700f92dfdc36cf3ba5dd8c9765,http://review.couchbase.org/#/c/31214,7,ad81ef8ec96cc341f4833cd3f381ffee04917a33,8684cafc5b51cda4d32ec146f8a82f1542c9fb56,1,17/12/13,03/01/14,584,JCBC-361: Add real async observe capabilities.,"JCBC-361: Add real async observe capabilities.

This changeset makes the blocking-in-disguise methods really async,
allowing to run them in parallel as needed. Observe calls are fired
off in the callback pool, returning a new future that overlays
the results of the original one (same behavior as before).

The code is a little more ugly than needed, but it takes care to
inherit the exact same behavor and messages than before.

Todo:
	- add asyncCas + implement async observe for it
	- add tests for the others, to make sure it works

Change-Id: I626dd989b98940700f92dfdc36cf3ba5dd8c9765",0,1,0,0,1,0,1,-5,0
31246,I2df6e086b9911fb1a50a6d2ab08239cbf4c6a342,http://review.couchbase.org/#/c/31246,6,15815c8fa7c955ad920c27d3ac6033dbada4435b,0a27c38f3d398f508b3f2e99872bcd354d723afa,1,19/12/13,31/12/13,786,JCBC-390: Refactor ClusterManager,"JCBC-390: Refactor ClusterManager

The ClusterManager needs to be refactored because the HttpCore dependency
has been upgraded. While the old code would still work, getting rid of
the deprecated pieces makes sense to keep the code consistent with the
view logic.

Change-Id: I2df6e086b9911fb1a50a6d2ab08239cbf4c6a342",0,1,1,0,1,0,1,1,1
31250,Icfb73a6c7c53c83e2957d62226c95638776ef399,http://review.couchbase.org/#/c/31250,4,5b16b8382e54e319ced121fa208386a24f16f756,50de0af96bae122f78f48b09a1c13164a95266d5,1,19/12/13,28/12/13,58,JCBC-386: Add docblock to warn for group and group_level in the same query.,"JCBC-386: Add docblock to warn for group and group_level in the
same query.

Change-Id: Icfb73a6c7c53c83e2957d62226c95638776ef399",0,1,1,1,0,0,1,0,0
31569,Id11eceea654b3b4f1267dc61627d3f477eda445e,http://review.couchbase.org/#/c/31569,2,c2bfea6cf548fcaf6da530387c36ec2892d43b3d,aa67729cd017c99a966beefaa7c972bef052397d,1,03/01/14,03/01/14,22,Fix ClusterManager too optimistic timeouts.,"Fix ClusterManager too optimistic timeouts.

Also, make sure the PaginatorTests pass properly with a larger timeout
since persisting can take longer than the default timeout.

Change-Id: Id11eceea654b3b4f1267dc61627d3f477eda445e",0,0,0,0,0,0,0,0,0
31655,Ifdee7550782c72bb71bc11ddede2c139e3b5436e,http://review.couchbase.org/#/c/31655,3,aa67729cd017c99a966beefaa7c972bef052397d,c03104f566c7dcd79fc2b53381e7a439ef258bb7,1,07/01/14,07/01/14,135,JCBC-361: Add specific observe timeout.,"JCBC-361: Add specific observe timeout.

This changeset adds a longer timeout for futures when persistence
or replication constraints (observe) are used. It currently defaults
to 5 seconds, acknowledging that writing to disk may take longer
than just writing to ram.

The manual setting of maximum number of polls has been deprecated,
because it is now calculated out of the observe timeout and the
observe interval, making it more flexbile and easier to configure.

In summary, regular operations still have the 2.5 second timeout,
but everywhere ""PersistTo"" or ""ReplicateTo"" is used, a longer,
5 second timeout is used instead by default.

Change-Id: Ifdee7550782c72bb71bc11ddede2c139e3b5436e",0,0,0,0,0,0,0,1,1
31667,I12cb58cded7ef106cf727c1eeab93101024d3c56,http://review.couchbase.org/#/c/31667,4,e3ab580fea36f35b30eb9280d5ca0fffcf1a5db2,4cebf3d2cca8164ee8f1f7f29e9c281cd23254bd,1,07/01/14,07/01/14,24,Adding INFO-level config output on init.,"Adding INFO-level config output on init.

This changeset prints info-level output on initialization, making
it easier to report and debug issues when they show up in logs.

Change-Id: I12cb58cded7ef106cf727c1eeab93101024d3c56",0,1,0,0,0,0,1,0,0
31668,I3a2b0df7138404e24619a2ebdbdebca3c74f2412,http://review.couchbase.org/#/c/31668,2,5cd98c52cc6ae866a7b6166a7d24642d0620e009,0e4adc97009dfefcacce4be6d305177ac2fc750f,1,07/01/14,07/01/14,43,JCBC-396: Rename getDesignDocument to align with other methods.,"JCBC-396: Rename getDesignDocument to align with other methods.

This changeset renames the getDesignDocument and async* to
just getDesignDoc. This helps with consistent naming for all
design document operation.

The old method is marked as deprecated.

Change-Id: I3a2b0df7138404e24619a2ebdbdebca3c74f2412",0,0,0,0,0,0,0,0,0
31710,Ia86667ce291ad9c22f4a847510df4383b07fb378,http://review.couchbase.org/#/c/31710,2,a6b73ff9298b1a21c6a7f9b36586e2405d8439ce,6eef5e956db068821fb70a0169d93355b87f02f1,1,08/01/14,08/01/14,8,JCBC-361: Only add CAS if not null.,"JCBC-361: Only add CAS if not null.

Change-Id: Ia86667ce291ad9c22f4a847510df4383b07fb378",0,0,0,1,0,0,1,0,0
31733,Id2ba05399a89c348eda22afd57f3dfda42d0ceae,http://review.couchbase.org/#/c/31733,2,93bcc597ceb7856404f530197f00067f331ffc6c,b9cc288043edc852d064e7841044881f0e1eb399,0,08/01/14,08/01/14,4,Upgrade spymemcached to 2.10.4,"Upgrade spymemcached to 2.10.4

Change-Id: Id2ba05399a89c348eda22afd57f3dfda42d0ceae",0,0,0,1,0,0,1,NA,NA
31734,I90c58ffd02c841bf1dbc1a8b67717d47954fcde1,http://review.couchbase.org/#/c/31734,3,b9cc288043edc852d064e7841044881f0e1eb399,19c3731dd566944e807b9f1bcdb6f53e279e845b,1,08/01/14,08/01/14,112,SPY-149: Notify Listeners after Complete.,"SPY-149: Notify Listeners after Complete.

Change-Id: I90c58ffd02c841bf1dbc1a8b67717d47954fcde1",0,0,0,1,0,0,1,0,0
32305,I59d0b7442b3aac451bfdd277b7d24681423ae7d6,http://review.couchbase.org/#/c/32305,3,19c3731dd566944e807b9f1bcdb6f53e279e845b,a6dcd21536d99014d752fce8f7b5fa0fed7dbbd3,1,13/01/14,13/01/14,31,JCBC-399: Do not signal twice on ViewFuture.,"JCBC-399: Do not signal twice on ViewFuture.

This changeset fixes a regression introduced in the latest
listener changes, which makes sure to not notify the listeners
twice on the ViewFuture (which is triggered only when
setIncludeDocs(true)), avoiding:

java.lang.IllegalStateException: Promise already completed.

Change-Id: I59d0b7442b3aac451bfdd277b7d24681423ae7d6",0,0,0,0,0,0,0,0,0
32306,I4d884c74802ad9906b3a44e91ff9b45f1ca6b650,http://review.couchbase.org/#/c/32306,9,a6dcd21536d99014d752fce8f7b5fa0fed7dbbd3,bf3c474f44e73ec1fab6c261e51f4218094478e6,1,13/01/14,25/02/14,110,Make sure that ViewTests PersistTo.MASTER.,"Make sure that ViewTests PersistTo.MASTER.

This changeset also increases the timeout for the http cluster
operations in the test from 2.5 seconds (operationTimeout) to
the more realistic HttpTimeout (75 seconds). This makes sure that
the tests dont fail on slower machines.

Change-Id: I4d884c74802ad9906b3a44e91ff9b45f1ca6b650",0,1,0,0,0,0,1,0,0
32355,I003f5987f56392bd50b871e7a1eb4182008ccc2b,http://review.couchbase.org/#/c/32355,8,ba774bc695ccd0b17d0aaa1c650697bbb986afb4,dc9add30f566e20ee13f6295ae72eb229752d9f2,1,14/01/14,14/02/14,181,JCBC-400 : New feature test for credential encryption CRAM-MD5 or PLAIN,"JCBC-400 : New feature test for credential encryption CRAM-MD5 or PLAIN

Change-Id: I003f5987f56392bd50b871e7a1eb4182008ccc2b",0,1,0,1,0,0,1,0,0
32425,I83a838ca0c086426779c092001329b00d11a19e7,http://review.couchbase.org/#/c/32425,4,f1b0e0c3b4551a3e6866485b90ccaa6110c08edf,e56eab38ed6a21ed00d1d161b27b87707fa04894,1,15/01/14,14/02/14,245,CCCP: Update Config from NMVB-Responses.,"CCCP: Update Config from NMVB-Responses.

This changeset build on the SPY foundation to pass on NMVB-Responses and
passes it on, after some initial wildcard conversion, directly to the
ConfigurationProvider.

The config then gets parsed and stored as any other configuration coming
from a streaming response. A test case is added to veriy that behaviour.

Change-Id: I83a838ca0c086426779c092001329b00d11a19e7",0,1,0,0,0,0,1,0,0
32589,I13b5029b98c9327cac6927ea35efe529edbb2f84,http://review.couchbase.org/#/c/32589,16,542eb2c32fd482dd696689fde7b31afa513c70e7,d913d8c0855ec45c581df344eb899dc37bdc8634,1,17/01/14,19/02/14,1501,CCCP-WIP: Combined configuration Provider,"CCCP-WIP: Combined configuration Provider

Change-Id: I13b5029b98c9327cac6927ea35efe529edbb2f84",0,1,0,1,1,0,1,1,1
32727,Ib64faa78a983347d38479a1ab1c3ac9c181ae7ed,http://review.couchbase.org/#/c/32727,3,a52e0f633cde9709f1bdfa88b11002d0e3d6e655,2e29704c06e9362df57059f865eba1ef648e38dc,1,22/01/14,31/01/14,31,JCBC-403: Harden reconfigures on view-based workloads.,"JCBC-403: Harden reconfigures on view-based workloads.

This changeset makes sure that even on view-based workloads, lost
streaming connections are detected properly, leading to faster
working states again. In particular, it contains:

 - Signaling an outdated config also on failing http requests
 - Signaling an outdated config on bulkget workloads (by identifying
   inactive nodes)
 - Making sure the proper resubscriber is called with the bucket
   config when the monitor is disconnected.

Change-Id: Ib64faa78a983347d38479a1ab1c3ac9c181ae7ed",0,0,1,0,0,0,1,0,0
33137,I46c2e595ed16d477bbd09062cf554c7df2915928,http://review.couchbase.org/#/c/33137,4,7cd1a1fa2ccf9e86e446b3a5a412f6c427d08fca,ee9dfd6901a46a3d946ef1029ee4e84bef9edca5,0,03/02/14,11/02/14,6,expose the cluster.adminname and cluster.password,"expose the cluster.adminname and cluster.password

currently this seems to me rather hardcoded in the CbTestConfig.java,
maybe I got something wrong but it makes sense to expose those values
along with the server IP and alike in the build.xml.

Change-Id: I46c2e595ed16d477bbd09062cf554c7df2915928",0,1,1,0,0,0,1,NA,NA
33285,Icf881d3de30f11655920091600badba3987e615d,http://review.couchbase.org/#/c/33285,3,b79a585b13d3298052abf0d585c4fe2f722955b2,1dce7b300cd3bedaba739870276a72d59461596f,1,06/02/14,06/02/14,13,Updating Spymemcached to 2.10.5,"Updating Spymemcached to 2.10.5

Change-Id: Icf881d3de30f11655920091600badba3987e615d",0,0,0,1,0,0,1,0,0
33788,I2081ef6cf37b83c8a3cb9c7237b01ccafdcf58eb,http://review.couchbase.org/#/c/33788,4,044d3bb4d9f62550c2461535cb8c42f19d115ad6,ac9a6e5af964aac5c614289698541afe3f4797f5,1,20/02/14,20/02/14,10,Make sure all configs are renamed properly.,"Make sure all configs are renamed properly.

Change-Id: I2081ef6cf37b83c8a3cb9c7237b01ccafdcf58eb",0,1,0,1,0,0,1,0,0
33826,I728da6e02753138e83e96b849edf3213aa2b4f44,http://review.couchbase.org/#/c/33826,3,ac9a6e5af964aac5c614289698541afe3f4797f5,2b5c2d13b552d970ff0a353bc85307c49895f2fc,1,21/02/14,21/02/14,10,(pending verification) Fix potential deadlock when reconfiguring.,"(pending verification) Fix potential deadlock when reconfiguring.

This changeset fixes a potential deadlock which can happen during
reconfiguration and a failing node. When a 500 error response comes
back from the server, the httcore IO pool handles the retry and
passes it back to our logic, where it grabs a new node to ask. This
node list is synchronized.

In parallel, when a reconfiguration happens, we synchronize on this
list and mark the appropriate node in the pool for shutdown. We
arrive in a deadlock situation because in our code the node list
is synchronized (waiting/holding) and in the httpcore code there
is a lock (waiting/holding) on the internal node to shutdown, but
it is still hold by the retry process.

This changeset moves the actual shutdown out of the synchronize
block, making sure that parallel requests can progress. The node
has been removed out of the list already, so it will not be
tried again for a regular view request (and we can shut down the
open connections behind the scenes).

Change-Id: I728da6e02753138e83e96b849edf3213aa2b4f44",0,0,0,0,0,0,0,0,0
33827,I0f65d440ce593d0a795ee068e5d84348b9207b5b,http://review.couchbase.org/#/c/33827,2,3ebc83f9511280e8bae69a6da8491f61d3e0afda,2dab7289a713f23453463319fe816a79cba0ba19,1,21/02/14,21/02/14,10,JCBC-418: Fix potential deadlock when reconfiguring.,"JCBC-418: Fix potential deadlock when reconfiguring.

This changeset fixes a potential deadlock which can happen during
reconfiguration and a failing node. When a 500 error response comes
back from the server, the httpcore IO pool handles the retry and
passes it back to our logic, where it grabs a new node to ask. This
node list is synchronized.

In parallel, when a reconfiguration happens, we synchronize on this
list and mark the appropriate node in the pool for shutdown. We
arrive in a deadlock situation because in our code the node list
is synchronized (waiting/holding) and in the httpcore code there
is a lock (waiting/holding) on the internal node to shutdown, but
it is still hold by the retry process.

This changeset moves the actual shutdown out of the synchronized
block, making sure that parallel requests can progress. The node
has been removed out of the list already, so it will not be
tried again for a regular view request (and we can shut down the
open connections behind the scenes).

Change-Id: I0f65d440ce593d0a795ee068e5d84348b9207b5b",0,0,0,0,0,0,0,0,0
33881,I3dc26b70c3547e42c0181486bc4e189b5e30ace9,http://review.couchbase.org/#/c/33881,2,2dab7289a713f23453463319fe816a79cba0ba19,a6a08822a9eec7ca69bf17deb52af24cc63bb2e3,0,24/02/14,25/02/14,10,Enable SNAPSHOT uploading through ant target.,"Enable SNAPSHOT uploading through ant target.

This changeset adds an additional ant target which deploys snapshot
releases directly into the sonatype snapshot repository.

See https://docs.sonatype.org/display/Repository/Sonatype+OSS+Maven+Repository+Usage+Guide#SonatypeOSSMavenRepositoryUsageGuide-7c.DeploySnapshotsandStageReleaseswithAnt
for more details on how to setup local authentication.

Change-Id: I3dc26b70c3547e42c0181486bc4e189b5e30ace9",0,0,0,0,0,0,0,NA,NA
33884,Id094092280115e66af6962eb8898a6e4b5f27f78,http://review.couchbase.org/#/c/33884,3,653f5bf2eefbd6638195cb72485ae679ccbd014c,369b8196177a78b50d4f8adcae00566a390bd041,1,24/02/14,25/02/14,284,JCBC-417: Expose (async)getsFromReplica.,"JCBC-417: Expose (async)getsFromReplica.

This changeset exposes the same replica read functionality as before,
but this time also exposes its underlying CASValue. The signature is
a mix between a replica get and a gets operation.

Change-Id: Id094092280115e66af6962eb8898a6e4b5f27f78",0,0,0,0,0,0,0,0,0
33907,I48d1f2857f9d4b3e394e994f8a9344ace029a278,http://review.couchbase.org/#/c/33907,2,0a8b2d375d1d902dd50c591366b91cc7824ca5fa,7466c8b7bb1d68a1b69816acab24c4607111f6a1,0,25/02/14,25/02/14,4,Upgrade Spymemcached to 2.10.6,"Upgrade Spymemcached to 2.10.6

Change-Id: I48d1f2857f9d4b3e394e994f8a9344ace029a278",1,0,0,1,0,0,1,NA,NA
33930,I73e9157093d5f0ea82b72d424548d1bc34afd5b5,http://review.couchbase.org/#/c/33930,6,1a52127cd670f6c5d72cca850bf914cc62fdede6,d127f4fba29536f6be5e6166eaaf57b781ebf30e,1,26/02/14,06/03/14,618,JCBC-421: Avoid hitting StringUtils for known non-JSON query params.,"JCBC-421: Avoid hitting StringUtils for known non-JSON query params.

This changeset explicitly checks param which are known to be booleans
or numbers and converts them directly into a string, without going the
(potentially costly) way through the StringUtils check.

Change-Id: I73e9157093d5f0ea82b72d424548d1bc34afd5b5",0,1,0,0,1,0,1,-1,0
34378,Iffce8028c49844eb5a834fcfc1e93e7525128536,http://review.couchbase.org/#/c/34378,3,d127f4fba29536f6be5e6166eaaf57b781ebf30e,2c335a65f9a9b6ef46b0904ec1e768342e65e43d,1,11/03/14,12/03/14,1,JCBC-427: Update enclosed HTTP provider with new configs.,"JCBC-427: Update enclosed HTTP provider with new configs.

This changeset makes sure that the enclosed HTTP configuration
provider also gets new configurations during runtime, so that once
it needs it, it doesnt override a good one with a very old one.

This is particularly important when the HTTP connection gets closed,
because then a ""notifyDisconnect"" would override a good config with
a old and outdated one, leading to inconsistencies.

Change-Id: Iffce8028c49844eb5a834fcfc1e93e7525128536",0,0,0,0,0,0,0,0,0
34380,I654bcecd0a1ffa576b7a5c146dc4580e37a7995e,http://review.couchbase.org/#/c/34380,2,af32cb730c029d766955f3d0277ad982c1f73719,3a2da97c37f558950e6e5ebfba7265edb97e499f,1,11/03/14,12/03/14,60,JCBC-426: Add support for manually disabling carrier or http bootstrap.,"JCBC-426: Add support for manually disabling carrier or http bootstrap.

This changeset adds the possibility to manually disable both carrier and
http bootstrap through system properties.

Carrier: System.setProperty(""cbclient.disableCarrierBootstrap"", ""true"");
Http: System.setProperty(""cbclient.disableHttpBootstrap"", ""true"");

If such a setting is issued, a INFO level message is logged to make it easier
during debugging and failure analysis. Note that in general, tweaking such
params is not necessary, althogh it might help in certain debugging and
failure conditions.

Change-Id: I654bcecd0a1ffa576b7a5c146dc4580e37a7995e",0,0,0,0,0,0,0,0,0
34555,I1b2b8b6fdc130b58c0765cea183010da568aaf0e,http://review.couchbase.org/#/c/34555,3,4ba543ea456ffb99da32bdf46a85eb837133bb65,489d5d2a3fad3ab08880c3b3f6a017b2623b08de,1,17/03/14,04/04/14,54,WIP: Fixing issues with rebalance & cccp in general,"WIP: Fixing issues with rebalance & cccp in general

BucketConfigurationProvider:

- Make sure that configs marked as outdated are not propagated up the
  stack but instead an outdated signal is raised, eventually leading
  to a fresh new correct configuration.

- When carrier config is used, register a connection observer that
  gets notified once the connection is closed and shuts it down, also
  signalling an outdated configuration, leading to a fresh new correct
  configuration.

- Simplifying the HTTP reconfiguration to only subscribe in one place.

CouchbaseConnection:

- Do not queue a node for reconnect if it is not part of the cluster
  anymore.

Change-Id: I1b2b8b6fdc130b58c0765cea183010da568aaf0e",0,0,0,0,0,0,0,0,0
34626,If4d9c83994ad82b0f22d0ea9edc2bc0e9dca7ffe,http://review.couchbase.org/#/c/34626,7,355b506217f64812e6b628945d37d86fdfef3fc4,fea0e841233f0336bf1fd32e9c6d855b2c4e578f,1,18/03/14,04/04/14,190,JCBC-431: Config poller for tainted carrier configurations.,"JCBC-431: Config poller for tainted carrier configurations.

This changeset adds a config poller for tainted carrier configurations.
It spawns once it finds a tainted config and stops once its not tainted
anymore.

What a tainted configuration exactly defines, is implemented in each
configuration implementation. The Provider just checks for the field
and acts accordingly.

Todo:
	- More testing
	- Find out what other characteristics identify a tainted connection.
	  currently, only the forward map is used as an identifier (memcache
	  buckets are never tainted)

Change-Id: If4d9c83994ad82b0f22d0ea9edc2bc0e9dca7ffe",0,1,0,0,0,0,1,0,0
34853,I40831905d61d263522e006774faecca9534e31e2,http://review.couchbase.org/#/c/34853,5,09715d67edfd31b5f633061c6771ea6c57fe6b25,1e0e91ad50613abb2febb7d84151f2881d03e741,0,24/03/14,04/04/14,135,Add development pom.xml,"Add development pom.xml

Motivation
----------
While ivy/ant works for years now, it is a little too hard to get
started when contributing simple patches with IDE setup. Since most
IDEs have good maven support, adding a pom.xml to get up and running
quickly makes it easier to contribute and develop.

Modification
------------
Add a pom.xml which is inteded to get up and running quickly. It is not
designed to do release management, which still happens through the
ant/ivy pipeline.

Result
------
Contributors and developers can import the project more easily and
contribute patches.

Change-Id: I40831905d61d263522e006774faecca9534e31e2",0,1,0,0,0,0,1,NA,NA
34854,I7d2acc94e2fbd220154caf8c5dfe787b9374ca5d,http://review.couchbase.org/#/c/34854,5,f7d325fe82236408f0321fd3e22c73fde83916b0,de37a5e3b7dcb7bd0685365d48f0c850eb04ee14,1,24/03/14,04/04/14,48,JCBC-436: Expose custom auth wait time setting.,"JCBC-436: Expose custom auth wait time setting.

Motiviation
-----------
With changes introduced in spy (SPY-159), it is possible to customize
the auth wait time on the connection factory builder. This time should
be increased for the couchbase SDK and also still be configurable.

Modifications
-------------
The setting is exposed through the regular methods, test have been added.
Note that the default time has been increased to 2.5 seconds, which mirrors
the default OP timeout.

Slight-side effect change: one test has been adapted to some interface
changes in the spymemcached library, which needs to be part of this changeset.

Result
------
The auth wait timeout is now configurable.

Change-Id: I7d2acc94e2fbd220154caf8c5dfe787b9374ca5d",0,1,0,0,0,0,1,0,0
34885,I89898017e2eea1f07a99b8a866d9a1b6e45bb825,http://review.couchbase.org/#/c/34885,6,840c14d0b1e4651e2a3ff430e8ba9f564a0df78a,0c43933e81acdf8fedc4a29f1b991386ee127648,1,25/03/14,04/04/14,14,Pending Verfication: Better NMV handling,"Pending Verfication: Better NMV handling

Motivation
----------
Once the NMVB collection (set) is full, we never reset it back
to a clean state. This means that once full, the primary node
will always be used, even if it returns NMVB itself multiple
times.

Also, because of the heuristics in place, a NMVB will not trigger
a config check for a new config. Since this is a clear pointer to
an outdated config, doing so will get it to a good confing quicker.

Modifications
-------------
If the collection is full, empty it out. This will make room for
subsequent attempts. Also, trigger a ""checkConfigUpdate"" if we need
to reschedule such an operation (thresholds in the CF still apply).

Also the code makes sure that the alternative node is active. This
needs to be in place because it could be that the node in the list
has been removed already, but is still hold as a reference in this
set.

Result
------
More robust handling of NMVB operations.

Change-Id: I89898017e2eea1f07a99b8a866d9a1b6e45bb825",0,1,0,0,0,0,1,0,0
34935,I66ac4e34a32e2da31d1b8a784bcfb39e9ce31f01,http://review.couchbase.org/#/c/34935,4,8adab04a9ec2e7f9922d07dd198830fc3c5ce1b2,063213a08f71fd99708c059734900fcc8283fb5d,1,26/03/14,04/04/14,43,JCBC-439: Fix AuthDescriptor overriding.,"JCBC-439: Fix AuthDescriptor overriding.

Motivation
----------
The AuthDescriptor, even when set through the builder, is ignored on factory
construction. This means that no manual descriptor can be passed in, always
leading to SASL auth list.

Modifications
-------------
The appropriate methods in the builder have been implemented and tests added
to verify the functionality.

Result
------
A custom descriptor can now be passed in and be used to override default auth
settings.

Change-Id: I66ac4e34a32e2da31d1b8a784bcfb39e9ce31f01",0,1,0,0,0,0,1,0,0
35264,I5543c028a2ee7c9bee0035d04f3fb576ee96bcf8,http://review.couchbase.org/#/c/35264,2,96846be05334a67ed9ea6f7869d4c822548a5975,da64a43f72e0438c7520a47d86e6f6c0a8c9ff7b,0,04/04/14,04/04/14,14,Upgrade spymemcached to 2.11.0,"Upgrade spymemcached to 2.11.0

Motivation
----------
Spymemcached 2.11.0 contains many changes that help with more stability
during authentication, reconneaction, and other scenarios. Also, more
methods are exposed for async mutating and typesafe status codes.

Modifications
-------------
Upgrade the dependency and adapt the test cases to fit with the new interface.

Result
------
Upgraded dependency.

Change-Id: I5543c028a2ee7c9bee0035d04f3fb576ee96bcf8",0,0,0,0,0,0,0,NA,NA
35719,Icc9b86661c69436e60f9dc4ace559ecfff4ff28b,http://review.couchbase.org/#/c/35719,2,e8d56ed2da0e91921d3d932e11f6cdc2c3e647d3,6c8e2d86595b5fadee4687f4bc39a67cb3286d82,1,15/04/14,15/04/14,11,Fix ConcurrentModificationException in VBucketNodeLocator,"Fix ConcurrentModificationException in VBucketNodeLocator

Motivation
----------
If a node needs to be removed in the VBucketNodeLocator#fillNodeEntries, the previous
code could lead to a ConcurrentModificationException.

Modifications
-------------
Use an iterator to safely remove it from the map.

Result
------
No more ConcurrentModificationException.

Change-Id: Icc9b86661c69436e60f9dc4ace559ecfff4ff28b",0,0,0,0,0,0,0,0,0
35722,I617561d900129e8ddda86e6ad624760473258a5f,http://review.couchbase.org/#/c/35722,2,6c8e2d86595b5fadee4687f4bc39a67cb3286d82,68cf5fe66a48cfec9e8bc1f5e4084ea94ba00d1d,1,15/04/14,15/04/14,38,Make sure CCCPAwarenessTest always has a bucket.,"Make sure CCCPAwarenessTest always has a bucket.

Motivation
----------
It could be the case that the CCCPAwarenessTest does not have a bucket
to use if used in the wrong order by JUnit for all tests.

Modifications
-------------
The fix makes sure that a default bucket is created, it also makes sure
that the test doesn't fail against more than one node incorrectly.

Result
------
The test is now more failure resilient to false positives.

Change-Id: I617561d900129e8ddda86e6ad624760473258a5f",0,0,0,0,0,0,0,0,0
36290,Ie7ba8992cdaba7114c8d8d1ef273344f71af9c87,http://review.couchbase.org/#/c/36290,4,5abcf346c828ffb84a9f2dc86f865a4495cdde19,c3bfe7e79d799c35774563f591a377c16a79ed4f,1,25/04/14,05/05/14,32776,Migrating Codebase.,"Migrating Codebase.

This changeset removes the 1.* codebase and:
	- Moves to Gradle as the build tool of choice
	- Sets up the new dependencies
	- Adds the first rough codeparts

Change-Id: Ie7ba8992cdaba7114c8d8d1ef273344f71af9c87",1,1,0,0,1,0,1,-33,0
36779,I5244dfc6d6f19288977ef98745d47efe25773093,http://review.couchbase.org/#/c/36779,3,8ed8a9b1d5e9e084fcc939ddcc4c0d13a8932733,c6575b9b68a8a576329deb4e016bc21fb27d91b3,1,07/05/14,07/05/14,60,JCBC-457: Force CCCP config fetching on node reconnect.,"JCBC-457: Force CCCP config fetching on node reconnect.

Motivation
----------
If a node needs to be reconnected, there is a strong indication that
the socket has been closed and this could be because of a topology
change.

Modification
------------
If a reconnect is scheduled, make sure it forces a config update.

Result
------
Quicker detection of topology changes, eventually getting quicker to
a valid config state.

Change-Id: I5244dfc6d6f19288977ef98745d47efe25773093",0,0,0,0,0,0,0,0,0
36828,I302b2192f2fc34ea7df36d3b83ce63197513d7be,http://review.couchbase.org/#/c/36828,2,c6575b9b68a8a576329deb4e016bc21fb27d91b3,30add66fced74a3c425d43197572b845d5fe4ee3,1,08/05/14,08/05/14,38,JCBC-453: Also check for fresh configs with failure modes != redistribute,"JCBC-453: Also check for fresh configs with failure modes != redistribute

Motivation
----------
When a different failure mode is used, it can be the case that a new
configuration is not picked up (ie with cancel).

Modification
------------
This changeset also makes sure we update the config reload threshold
if other failure modes are used.

Result
------
New configurations eventually get picked up even if other failure
modes are used.

Change-Id: I302b2192f2fc34ea7df36d3b83ce63197513d7be",1,0,0,0,0,0,1,0,0
36829,I2209edf896c448b4b14e71572866fd5057a1de30,http://review.couchbase.org/#/c/36829,2,30add66fced74a3c425d43197572b845d5fe4ee3,b91810f623f4e445d08354f81f74a355f2ea129d,0,08/05/14,08/05/14,4,Upgrade spymemcached to 2.11.2,"Upgrade spymemcached to 2.11.2

Change-Id: I2209edf896c448b4b14e71572866fd5057a1de30",1,0,0,1,0,0,1,NA,NA
36843,I36d8e5338b70f1bd1347571a063fac2e09e94d9b,http://review.couchbase.org/#/c/36843,3,9bb6bca0a09c73d4df726ad1fdc0338550721ec0,df50d123d43a5f53fff815f2614dd4f4ce552c0a,1,08/05/14,08/05/14,882,Better JsonDocument handling.,"Better JsonDocument handling.

Change-Id: I36d8e5338b70f1bd1347571a063fac2e09e94d9b",1,0,0,1,1,0,1,1,1
36981,I0eb5af448e8149017962030de6fe054358bd67ea,http://review.couchbase.org/#/c/36981,3,6f0fda94c9a7dda3be3ddedb4970f99e184e35b3,896e896aa8ce48d0c112d98e56e7b9f15762a0f7,1,12/05/14,16/05/14,125,JCBC-459: Ignore Configurations with old (or same) revID.,"JCBC-459: Ignore Configurations with old (or same) revID.

Motivation
----------
If carrier config is used, new configuration arrives in the payload of the
NMVB responses. Since configurations trickle through the server cluster not
100% at the same time, it can happen that we get a outdated configuration from
one of the nodes, where the client already is in the posession of a newer
one.

The server emits a revid with a monotonically increasing number, so if we
have a higher revid we can skip/discard incoming older ones and keep going.
By not ignoring them, the client may run into a situation where it updates
a older config in place for a newer one.

Modifications
-------------
The revnr is parsed out of the configuration, but if no id is set (for backwards
compatibility reasons), -1 is used. In the provider itself, if the number is > 0
it is checked against the current known revnr and if higher the new config
is used and the subscribers are notified.

Result
------
Older configurations will now not be used anymore if a newer version is already
in the posession of the SDK.

Change-Id: I0eb5af448e8149017962030de6fe054358bd67ea",0,0,1,0,0,0,1,0,0
36985,I50d81f0053360b1c073fa90c217bde18abafd78d,http://review.couchbase.org/#/c/36985,2,5d393ad66928c3d4c9f56cad97a5a57868f962cf,a3bd964ea9aa5d3ef977a3da756f16dfa530468f,1,12/05/14,16/05/14,46,JCBC-460: Make sure replica vbucket changes count as significant.,"JCBC-460: Make sure replica vbucket changes count as significant.

Motivation
----------
When a new configuration arise, there is a simple difference heuristic in place
which checks if a new configuration is worth applying or if it only contains
insignificant changes that are not worth the effort of applying a new configuration.

One of those measurements is if vbuckets have changed (the values in the vbuckets
array). One case that was not thought of before is if only replica vbuckets change
and the master buckets stay the same. This has been recently found to be an issue
when configurations are not applied because only the replica vbucket information
has changed.

Modifications
-------------
The algorithm now also checks the content of the replica vbuckets to see if
a significant modification has been made, leading to an update of the map
to the according parties.

Result
------
New configuration is now also applied if only the replica vbuckets change. A
test case has been added to verivy the functionality (and fails without the
change).

Change-Id: I50d81f0053360b1c073fa90c217bde18abafd78d",0,0,1,0,0,0,1,1,1
37267,Id47c4d201e067807fdf87db8ec5b9af6236b95bd,http://review.couchbase.org/#/c/37267,3,32aadaed05cfecf2923c129b49ad34aaa7ff105a,763f087a1897af71590cf967d6ca5fb8865f6898,1,19/05/14,19/05/14,4,Adding maven plugin.,"Adding maven plugin.

Change-Id: Id47c4d201e067807fdf87db8ec5b9af6236b95bd",1,0,0,1,0,0,1,0,0
37382,Iaa747b6576ffba9e38f2d8b5bc6ad9f56d050275,http://review.couchbase.org/#/c/37382,2,763f087a1897af71590cf967d6ca5fb8865f6898,80b8763e60b3abcfd4605e3a7bf2d655fbcaaf22,1,21/05/14,21/05/14,183,refactoring.,"refactoring.

Change-Id: Iaa747b6576ffba9e38f2d8b5bc6ad9f56d050275",1,0,0,1,0,0,1,0,0
37383,Iaca7ba3e39ae24ae66925ac14471c8ac22d80217,http://review.couchbase.org/#/c/37383,3,80b8763e60b3abcfd4605e3a7bf2d655fbcaaf22,bbb47deaeb16580070edda7ab628df960d090942,1,21/05/14,21/05/14,331,add simple n1ql support.,"add simple n1ql support.

Change-Id: Iaca7ba3e39ae24ae66925ac14471c8ac22d80217",1,0,0,1,0,0,1,0,0
37500,Ie988e581eed87b624fd5adb56620746d3cb654c7,http://review.couchbase.org/#/c/37500,2,bbb47deaeb16580070edda7ab628df960d090942,67082457e58ee81c1177d20bf0b1c9c4e5c1765b,1,23/05/14,23/05/14,112,cleanup for first dp.,"cleanup for first dp.

Change-Id: Ie988e581eed87b624fd5adb56620746d3cb654c7",1,0,0,1,0,0,1,0,0
37501,Ifc8f4769c41378948cad4e24827894c0daff7cca,http://review.couchbase.org/#/c/37501,2,67082457e58ee81c1177d20bf0b1c9c4e5c1765b,257c430af8b251a3e9f7e7e075b1dce5de97c1c4,0,23/05/14,23/05/14,69,enriching pom and adding javadoc and sources generation.,"enriching pom and adding javadoc and sources generation.

Change-Id: Ifc8f4769c41378948cad4e24827894c0daff7cca",1,0,0,1,0,0,1,NA,NA
37504,Ib049f03aba417f2f836f40361ea8bf833358da45,http://review.couchbase.org/#/c/37504,2,257c430af8b251a3e9f7e7e075b1dce5de97c1c4,bea4f925dd1a5e7ec2adf2e2c3e00ba5a38cfeb0,0,23/05/14,23/05/14,2,start work on dp2,"start work on dp2

Change-Id: Ib049f03aba417f2f836f40361ea8bf833358da45",1,0,0,1,0,0,1,NA,NA
37718,I7008bfc9b8d5722447a58a4cd415a4caaafb5906,http://review.couchbase.org/#/c/37718,2,cb538fcb7513a62c4ef4afd344dba972526ddd8c,6aced555336e48da989241c8b29fb60d60c267f1,1,02/06/14,02/06/14,710,"JCBC-359, JCBC-408, JCBC-409, : Multiple Javadoc enhancements.","JCBC-359, JCBC-408, JCBC-409, : Multiple Javadoc enhancements.

Motivation
----------
Several javadoc enhancements have been reported where API parts
need clarifications and more information.

Modifications
-------------
ComplexKey, Builder and replica get docs have been enhanced, hopefully
clarifying their usage and behavior.

Result
------
Better docs!

Change-Id: I7008bfc9b8d5722447a58a4cd415a4caaafb5906",0,0,0,0,1,0,1,0,0
37719,I97f0f0eb72e74a6400fecd5d03e8d35e537b4339,http://review.couchbase.org/#/c/37719,2,01b4bd0daeb7af99ef5bacc5c994873ed4ca5191,9680585c36f867dea60a5d4e47bfe31473abadc0,1,02/06/14,02/06/14,2,JCBC-413: Fix race condition in ClusterManager.,"JCBC-413: Fix race condition in ClusterManager.

Motivation
----------
When the ClusterManager response returns with a successful response, it could be that the code waiting
on the result is notified before the corresponding results are stored.

Modifications
-------------
The latch is now counted down after the results have been gathered, avoidin the race condition.

Result
------
The code afterwards waiting on the latch is now only counted down before the results have been gathered.

Change-Id: I97f0f0eb72e74a6400fecd5d03e8d35e537b4339",0,0,0,0,0,0,0,0,0
37722,Idb285bc794c190b876e63383d1eff690ba57d9ba,http://review.couchbase.org/#/c/37722,3,0bba81c6c6b624b603a416594c246036ec8bbf7f,f42199bda7033934ad2d4d5f7ebfe4f136b11c7d,1,02/06/14,02/06/14,32,JCBC-461: Limit the netty worker count for streaming conns.,"JCBC-461: Limit the netty worker count for streaming conns.

Motivation
----------
Under normal circumstances, netty should create worker threads on the fly
and since the client only uses one channel for the bucket streaming connection,
there should every only one be used.

Under failure conditions, it could be the case that many more threads
are created falsly.

Modifications
-------------
The worker count is prevented to one thread only, since only one channel needs
ever to be accessed.

Result
------
Providing a hard upper limit for worker threads prevents thread exhaustion.

Change-Id: Idb285bc794c190b876e63383d1eff690ba57d9ba",0,0,0,0,0,0,0,0,0
37726,I65bbe9ab1b5c27333012268cd3aafa5d8aa528b4,http://review.couchbase.org/#/c/37726,3,dfa37450ddd32ec070611e6a08b049e5a898fa29,8b63790b5d4780339605c0d348555fbe6c4a8f12,1,02/06/14,04/06/14,18,JCBC-463: Harden shutdown procedure in CouchbaseClient,"JCBC-463: Harden shutdown procedure in CouchbaseClient

Motivation
----------
Lingering bucket streaming threads are reported, this could be the case
if something is preventing them from being shut down.

Modifications
-------------
Split up the spymemcached IO and view IO shutdown in two different
try/catch blocks, to make sure the other part always runs, even if
something goes wrong in the other.

Result
------
Shutting down of the config threads now also happens if an exception
is raised during memcached IO shutdown.

Change-Id: I65bbe9ab1b5c27333012268cd3aafa5d8aa528b4",0,0,0,0,0,0,0,0,0
37729,I056b76ea009a689f4ba700730fb281d78d57484d,http://review.couchbase.org/#/c/37729,5,f8764eee7a10d4661e606f3e41fbbef1d51e4d7d,ed54f41fcd719e5523c312dd8951ff84b4257e91,1,02/06/14,04/06/14,121,JCBC-424: Broadcast NOOP on idle state.,"JCBC-424: Broadcast NOOP on idle state.

Motivation
----------
This changeset has two main motivations:

  - Detect rebalancing out nodes  & broken sockets even when there is no load.
  - Help firewalls that close idle sockets.

Modifications
-------------
In addition to a change in spymemcached which calls a method if the selector is woken up
without actually selecting something (so the delay hits), this change correlates the last
write with the woken up time. If the timespan is longer than a given maximum, a NOOP
broadcast is sent, which works like any other operation but immediately triggers broken
sockets and therefore a new configuration will be fetched.

Note that the NOOP broadcast is not sent under load, since the write timestamp will always
be fresh (and the more load the more seldom the method itself will be called from spy).

Result
------
Rebalancing away nodes and broken sockets are much quicker detected and also the socket is
prevented from being closed becasue it is idling too much in case of no load.

Change-Id: I056b76ea009a689f4ba700730fb281d78d57484d",0,1,0,0,0,0,1,0,0
37902,I42b72d131d2d8224b088989ff6ab27ce6e505903,http://review.couchbase.org/#/c/37902,2,7a8279eeb9c86e01f6fc6f957db2dc6df91f6754,63771069fcd8ed48a6fa7b56c8deba0ce53c2d2c,1,05/06/14,05/06/14,379,adding simple DSL for n1ql,"adding simple DSL for n1ql

Change-Id: I42b72d131d2d8224b088989ff6ab27ce6e505903",1,0,0,1,0,0,1,1,1
37903,I7b51952195a55c69d70ef151e493cd5d36c447a8,http://review.couchbase.org/#/c/37903,2,9c3e7b9e573fd8a098e0ce8cf5d7298c56b5a669,ae465c79b46fe92c02fa5c07233e99ae6d3d0760,0,05/06/14,05/06/14,4,Upgrading Spymemcached to 2.11.3,"Upgrading Spymemcached to 2.11.3

Change-Id: I7b51952195a55c69d70ef151e493cd5d36c447a8",1,0,0,1,0,0,1,NA,NA
37960,I985ecc860f16b967eb38e8a47f3297fac50fee6e,http://review.couchbase.org/#/c/37960,6,dddefdf7ea7abd87a892aa6ca79bce4c0e38b860,ec301988bef5f75d3fdbb2dce6730f1e01cf314c,1,06/06/14,16/06/14,3232,WIP: N1QL DSL.,"WIP: N1QL DSL.

Change-Id: I985ecc860f16b967eb38e8a47f3297fac50fee6e",1,1,1,1,1,0,1,-1,0
38364,Ic3c4026494c858e03d63767dd953675104687e0b,http://review.couchbase.org/#/c/38364,3,b6bfae87fb40440555227393fddd8b72083d813b,bebb25f3f376392f2490b3247c5f95b2f47f256e,1,17/06/14,25/06/14,59,JCBC-475: Harden configuration provider on shutdown and restarting of nodes.,"JCBC-475: Harden configuration provider on shutdown and restarting of nodes.

Motivation
----------
The current configuration provider runs into issues when nodes are restarted in
several edge cases. Also, shutdown handling was subject to race conditions, leaving
threads behind and as a result kept JVMs running.

Modifications
-------------
This changeset makes several modifications to the provider:
	- A shutdown variable is introduced and crucial parts of the code are made
	  aware of it, stopping their work if shutdown is true.
	- If a new carrier provider is set, the code now checks if there was an old
	  one in place, shutting it down. This makes sure that no threads are left
	  behind.
	- Only monitor the bucket in http bootstrap, avoiding weird stack overflows
	  if monitoring and bootstrapping does not succeed (if only one node is used
	  and it is restarted).

In addition the used CouchbaseConfigConnection has been clarified a bit so that
from a thread dump it is now visible if a data IO thread is meant or the config
thread for carrier configs.

Result
------
In general, the resulting provider should be more resilient to failure and should not
leave threads behind on shutdown.

Change-Id: Ic3c4026494c858e03d63767dd953675104687e0b",0,0,1,0,0,0,1,2,1
38668,I9b0052dd82bad4edbc54df4d06c98b6b18f31dce,http://review.couchbase.org/#/c/38668,2,13c7db75722a7ac67d60fd419714bddd91d2b38c,6805ba3d7a59ab27133007c439256412854a8b67,1,23/06/14,24/06/14,6,JCBC-476: Rework misleading log message.,"JCBC-476: Rework misleading log message.

Motivation
----------
The message in the changeset is misleading because the ops are now
queued up and therefore more resilient. Also, WARN is too high since
it should be just an INFO message. If auth or anything else fails,
different messages will be shown in the logs anyway.

Modifications
-------------
Change it to INFO level and also rework the text to be more clear
what is happening with the given key.

Result
------
No misleading information anymore which looks falsly suspicious.

Change-Id: I9b0052dd82bad4edbc54df4d06c98b6b18f31dce",0,0,0,0,0,0,0,0,0
38678,I56696a21ed14e9c0669eb5d05941f67a987eeb18,http://review.couchbase.org/#/c/38678,2,fca21b00c2647c5e390ea75dc65e40bb5934c159,eab67eaa0b8924e3455e973b609e5610e333b181,0,23/06/14,24/06/14,9,JCBC-477: Pass down the timeout to the getBulk for views,"JCBC-477: Pass down the timeout to the getBulk for views

Motivation
----------
If no timeout is passed down to the BulkGetFuture, Long.MAX_VALUE
is used as a timeout which, if something goes wrong, basically
translates to block the thread forever. Also, this breaks the
contract since a custom time can always be passed in.

Modifications
-------------
The timeout is now passed down to the bulk get so that a timeout
is properly respected.

Result
------
Correct behavior from the client side.

Change-Id: I56696a21ed14e9c0669eb5d05941f67a987eeb18",0,0,0,0,0,0,0,NA,NA
38739,Ifd952486746f7e707022db7192811cee0192763d,http://review.couchbase.org/#/c/38739,2,ea9fca735ea2bdd0c41e19bfc99295f0bb8de977,b2cb71398f0446dd1fe5a27cad9dcdc02303d66e,1,24/06/14,09/07/14,10,Fixed ViewQueryTest.java,"Fixed ViewQueryTest.java

Change-Id: Ifd952486746f7e707022db7192811cee0192763d",0,0,0,1,0,0,1,0,0
38796,Ic310255e28c498ed6482101f64657978fad8c7ae,http://review.couchbase.org/#/c/38796,2,68a06ab4d7dc20a08122daa106fe33284c247eba,40cb8a4b330b37af1365acf4264e9626a62f21a8,1,25/06/14,25/06/14,33,JCBC-480: Complete replica read ops even if NOT_EXISTS,"JCBC-480: Complete replica read ops even if NOT_EXISTS

Motivation
----------
get(s)FromReplica operations may timeout incorrectly if the document has not been
stored on the server at all, since it waits for a successful response before it
completes the latch and stores the response. Since a non-existing doc response
returns NOT_EXISTS and false success, it will never complete and timeout.

Modifications
-------------
Complete the latch as well if the response is a NOT_EXISTS, indicating a good
response but the document was just not found. This is perfectly fine under the
assumptions that the response is allowed to be non-consistent by contract, even
if it may not be replicated yet.

Result
------
The behavior is now consistent for both found and not found docs.

Change-Id: Ic310255e28c498ed6482101f64657978fad8c7ae",0,0,0,0,0,0,0,0,0
38866,I4362efbba4ea04ff063c85128949a3931c95bd58,http://review.couchbase.org/#/c/38866,2,40cb8a4b330b37af1365acf4264e9626a62f21a8,7fcf673113c201aef6fb94064d7a0337260c197a,1,27/06/14,30/06/14,9,JCBC-482: Select proper replica node for getsFromReplica,"JCBC-482: Select proper replica node for getsFromReplica

Motivation
----------
getsFromReplica did not work when the master node is currently failing because
it had not been scheduled properly. This fix remedies that. Note that
getFromReplica had always worked as expected.

Modification
------------
This changeset adds support for getsFromReplica in the add operation codepath
to properly select the replica node.

Result
------
getsFromReplica now works like getFromReplica even when only replica nodes
are available.

Change-Id: I4362efbba4ea04ff063c85128949a3931c95bd58",0,0,1,0,0,0,1,0,0
39006,I9971faf5b9511f8764667654fc326469e0ad8d9c,http://review.couchbase.org/#/c/39006,2,1e1405693926807dc24ae0a8d85e43e884c0a7cd,66a6f1f3325b2ec1140ecd91e347f61d64f84ea9,0,01/07/14,01/07/14,4,Upgrade spymemcached to 2.11.4,"Upgrade spymemcached to 2.11.4

Change-Id: I9971faf5b9511f8764667654fc326469e0ad8d9c",0,0,0,1,0,0,1,NA,NA
39110,I4f863be52d98e008e5d612066cd75c78ff2a4f43,http://review.couchbase.org/#/c/39110,2,00565f5680aa8b16080981599aa6d0daa3b08974,6f1ac28b8ef265042873cea15738464332965b0a,1,04/07/14,04/07/14,297,Add support for flush.,"Add support for flush.

Change-Id: I4f863be52d98e008e5d612066cd75c78ff2a4f43",1,0,0,1,0,0,1,0,0
39157,If5cb3184860d57df2401a8537edf6d7259e38cec,http://review.couchbase.org/#/c/39157,2,6f1ac28b8ef265042873cea15738464332965b0a,d9174f6a472f14cd34973dcf05db9add2c485ee9,1,07/07/14,07/07/14,22,Adapt ViewResult for null and non-string keys.,"Adapt ViewResult for null and non-string keys.

Change-Id: If5cb3184860d57df2401a8537edf6d7259e38cec",1,0,0,1,0,0,1,0,0
39231,Ic4a69e121621db426560c4aab570e35210678af7,http://review.couchbase.org/#/c/39231,2,d9174f6a472f14cd34973dcf05db9add2c485ee9,cc0a4d85dbae71d3675d46e745fd0fe92d8687ec,0,09/07/14,09/07/14,2,dp2 release tag.,"dp2 release tag.

Change-Id: Ic4a69e121621db426560c4aab570e35210678af7",1,0,0,1,0,0,1,NA,NA
39265,I3383648e962624424c448044b54f43d90c2e092e,http://review.couchbase.org/#/c/39265,2,cc0a4d85dbae71d3675d46e745fd0fe92d8687ec,e54b0d8d7c3e20c1baeb72c8acc129e058213836,1,10/07/14,10/07/14,118,JCBC-489: Add support for replica read.,"JCBC-489: Add support for replica read.

Change-Id: I3383648e962624424c448044b54f43d90c2e092e",1,0,0,1,0,0,1,0,0
39346,Id8644b1fddf7b38168e663a3d5af51e17e56b9c4,http://review.couchbase.org/#/c/39346,3,b62b73cab8d25394070624302e9b50e5439e5048,93d416b8efad510f61d769ddd0f7bb87b00d91cf,1,14/07/14,05/08/14,16,JCBC-464: Clear buckets for HTTP provider on (re)bootstrap.,"JCBC-464: Clear buckets for HTTP provider on (re)bootstrap.

Motivation
----------
Prior to this change, a combination of (re)bootstrapping initiated
by a full cluster shutdown and a previously loaded configuration
led to a invalid state in the HTTP provider. Since it is also used
for a cccp fallback, it always interfered in such a scenario.

Modifications
-------------
The internal problem was that once bootstrapped, the bucket config
was stored and on a re-bootstrap, this old config was taken. That
itself did not cause trouble, but the http streaming config attachment
was broken because some parameters were not set properly (which would
have been on a full bootstrap).

This changeset clears out the bucket configs before a (re)bootstrap
to make sure a full http walk cycle is always done. This provides
more predictable behavior and also avoids a reported NPE.

Result
------
Even if rebootstrapped, it now either gets to a valid configuration
over HTTP and succeed or will retry, without failing with a NPE or
ending up in an invalid state.

Change-Id: Id8644b1fddf7b38168e663a3d5af51e17e56b9c4",0,0,0,0,0,0,0,0,0
39347,Id3c98a6488581c5025811433452551de8cc9a136,http://review.couchbase.org/#/c/39347,4,005ba60fcfdb0ba5818a7393c7c1c4839db33d1a,033337949ebe179bb56ff29a8f014826f50dc894,1,14/07/14,05/08/14,53,JCBC-490: Error log unexpected/unparsable JSON body content.,"JCBC-490: Error log unexpected/unparsable JSON body content.

Motivation
----------
Stack traces with invalid server responses have been reported where
the root cause is unclear. The stack trace does not show the actual
response however so its hard to decipher.

Modifications
-------------
Since normally such a case shouldn't happen, the actual body including
the HTTP header are logged at WARN level to raise proper attention and
make it easier to find the actual cause.

Result
------
Unparsable server results that lead to exceptions are now easier to
decipher and to track down eventually.

Change-Id: Id3c98a6488581c5025811433452551de8cc9a136",0,1,0,0,0,0,1,0,0
39351,I1dbac4c705a52855f14554e1061474a124c387b6,http://review.couchbase.org/#/c/39351,3,7081a7fcfa0927c59908fca86359b7bea9441a0b,1e1a65eab0ea1b5920759606a012d11f1087ad84,1,14/07/14,15/07/14,63,WIP: counter,"WIP: counter

Change-Id: I1dbac4c705a52855f14554e1061474a124c387b6",1,0,0,1,0,0,1,0,0
39412,Ic1563555808084f69506ba87abbbe226b0edbd84,http://review.couchbase.org/#/c/39412,3,1e1a65eab0ea1b5920759606a012d11f1087ad84,eaf45bb5613665b239c8e6c08b05886939721075,1,15/07/14,15/07/14,160,JCBC-492: Add support for getAndLock & getAndTouch.,"JCBC-492: Add support for getAndLock & getAndTouch.

Change-Id: Ic1563555808084f69506ba87abbbe226b0edbd84",1,0,0,1,0,0,1,0,0
39429,I13b72effc2998d17aaf2ac8acfc3c225aef30de3,http://review.couchbase.org/#/c/39429,2,e47b36222801daa8162e98b54fcfe3ca8f47b1cc,d7b4394660d5e83451af8a4925f50cdabd24ca5c,1,16/07/14,17/07/14,38,"JCBC-488: Make sure headers are overriden, not appended on readd.","JCBC-488: Make sure headers are overriden, not appended on readd.

Motivation
----------
If a view operation needs to be retried, the current code adds headers
instead of overwriting them, which leads to broken http requests. As a
result, the server responds with 400 and is unable to process the query.

Modifications
-------------
Changing the code from addHeader to setHeaders overrides the headers
instead of appending them.

Result
------
Valid HTTP requests, even if it needs to be retried.

Change-Id: I13b72effc2998d17aaf2ac8acfc3c225aef30de3",0,0,0,0,0,0,0,0,0
39434,Id5289d2cd54337e6f6c2628ae5ab063e9f8b0fa1,http://review.couchbase.org/#/c/39434,3,278bb9edbcaeaa76b4db2f170711fa059d0ea904,6d2b89f755c13ee7178048c543304ea715e232cb,1,16/07/14,16/07/14,83,JCBC-494: Add support for unlock and touch,"JCBC-494: Add support for unlock and touch

Change-Id: Id5289d2cd54337e6f6c2628ae5ab063e9f8b0fa1",1,0,0,1,0,0,1,0,0
39443,I9dc381a1b7223c4ed3c23c14989e4261f50badba,http://review.couchbase.org/#/c/39443,2,9cd9ac37d61458c4013a345ffc0f9eb36145401f,525f4f6f67dae48bb896dc2fcfc700d35aedb278,0,16/07/14,04/08/14,7,JCBC-495: Quotes round variables to accommodate pathnames with spaces,"JCBC-495: Quotes round variables to accommodate pathnames with spaces

Change-Id: I9dc381a1b7223c4ed3c23c14989e4261f50badba",0,0,0,1,0,0,1,NA,NA
39485,Id81a062531bd9a10fb1dc7c9c878a4ee7b90cd2f,http://review.couchbase.org/#/c/39485,4,7420c730d94a89c08e1506638df1f57c9677b5fe,e69ff43a2fe09b79365005795c5c69c146df09f8,1,17/07/14,18/07/14,352,WIP: observe,"WIP: observe

Change-Id: Id81a062531bd9a10fb1dc7c9c878a4ee7b90cd2f",0,1,0,1,0,0,1,0,0
40058,Icc578a03bdece1ebc9b344ee8fdbe36a2542b6cf,http://review.couchbase.org/#/c/40058,3,31c2b004d093c957ff9735b92a6f16c154f6fb98,6181b69df1a4613583f1e13d2fe6d319bf672f3a,1,30/07/14,05/08/14,8,JCBC-505: Fix concurrency issue in Query builder.,"JCBC-505: Fix concurrency issue in Query builder.

Motivation
----------
Similar to one fix earler in SPY (SPY-170), only the regex matcher is thread safe
resetting it is not, leading to NPEs further down the stack.

Modifications
-------------
Always use a new builder and not reset the old one.

Result
------
Thread safety for the Query class and no exceptions like:

java.lang.NullPointerException
at java.util.regex.Matcher.getTextLength(Matcher.java:1283)
at java.util.regex.Matcher.reset(Matcher.java:309)
at java.util.regex.Matcher.reset(Matcher.java:329)
at com.couchbase.client.protocol.views.Query.quote(Query.java:572)
at com.couchbase.client.protocol.views.Query.setRangeStart(Query.java:400)
at com.couchbase.client.protocol.views.Paginator.fetchNextPage(Paginator.java:180)
at com.couchbase.client.protocol.views.Paginator.hasNext(Paginator.java:160)

Change-Id: Icc578a03bdece1ebc9b344ee8fdbe36a2542b6cf",0,0,0,0,0,0,0,0,0
40263,I710d1b8be9dea88aba0fe28162442951807610de,http://review.couchbase.org/#/c/40263,2,79cf53060c5f3b739784de2a44ccc0a1a877da42,f30a7468f8b26f9ce16e397a4775f6e5b49307a9,1,04/08/14,05/08/14,1,JCBC-503: Release observers on shutdown.,"JCBC-503: Release observers on shutdown.

Motivation
----------
On shutdown of the provider, there are still observers referenced. Making sure they
are not referenced anymore should be part of a clean shutdown procedure.

Modifications
-------------
Clear out the observers array to remove the references.

Result
------
Cleaner shutdown.

Change-Id: I710d1b8be9dea88aba0fe28162442951807610de",0,0,0,0,0,0,0,0,0
40296,I3b3e9c5c5d3f9819c2fb7f40ee1f1186d853d621,http://review.couchbase.org/#/c/40296,3,5bc4175b84d9b90fc84608cfc26ee3e2b1438eb1,52c8e889cdaee436a3b8897b0b01f5c3421582ba,1,05/08/14,05/08/14,1754,Adapt to latest core changes and change View API,"Adapt to latest core changes and change View API

Change-Id: I3b3e9c5c5d3f9819c2fb7f40ee1f1186d853d621",1,0,0,1,1,0,1,1,1
40332,I8e60030809510e79212631cdea1324202ece6a7d,http://review.couchbase.org/#/c/40332,3,52c8e889cdaee436a3b8897b0b01f5c3421582ba,48cabd7a2c45544d98cf1039b671aef8cbecec69,1,06/08/14,06/08/14,339,Adding initial support for connection string.,"Adding initial support for connection string.

Change-Id: I8e60030809510e79212631cdea1324202ece6a7d",1,0,0,1,0,0,1,0,0
40335,Ib1e115186900d69a1075f5637e347c30df195182,http://review.couchbase.org/#/c/40335,3,48cabd7a2c45544d98cf1039b671aef8cbecec69,c154ec3cd522aec1d4a7b9d348abb025a9b1adad,1,06/08/14,06/08/14,340,Re-enabling n1ql querying.,"Re-enabling n1ql querying.

Change-Id: Ib1e115186900d69a1075f5637e347c30df195182",1,0,0,1,0,0,1,1,1
40336,Icc832a0267c826eaa66bca59fd9575147e930cb0,http://review.couchbase.org/#/c/40336,3,c154ec3cd522aec1d4a7b9d348abb025a9b1adad,71d7066d1ee0ad4af308bc982c425b1430198a5f,1,06/08/14,06/08/14,119,moving flush to bucket manager.,"moving flush to bucket manager.

Change-Id: Icc832a0267c826eaa66bca59fd9575147e930cb0",1,0,0,1,0,0,1,0,0
40378,I34fec605442c6e4e631cae1cf7f3c35553e7891c,http://review.couchbase.org/#/c/40378,3,71d7066d1ee0ad4af308bc982c425b1430198a5f,87b61bde3612aaac2711f49ce3ee24835c9fe169,1,07/08/14,07/08/14,567,Adding first batch of design doc support.,"Adding first batch of design doc support.

Change-Id: I34fec605442c6e4e631cae1cf7f3c35553e7891c",1,0,0,1,1,0,1,0,0
40379,Ife751f79c03a276423dcceab09ca17e9cbe67123,http://review.couchbase.org/#/c/40379,2,87b61bde3612aaac2711f49ce3ee24835c9fe169,0988e9898eb6af700f836298068776d2a3e0733c,1,07/08/14,07/08/14,67,Adding more design document tests.,"Adding more design document tests.

Change-Id: Ife751f79c03a276423dcceab09ca17e9cbe67123",1,0,0,1,0,0,1,0,0
40380,I58281af2fc3813a0e91a57551e335670c735a3da,http://review.couchbase.org/#/c/40380,2,0988e9898eb6af700f836298068776d2a3e0733c,eec0d04907a4c19e75a40ce952d41d97a441a506,1,07/08/14,07/08/14,22,slight repackaging of views.,"slight repackaging of views.

Change-Id: I58281af2fc3813a0e91a57551e335670c735a3da",1,0,0,1,0,0,1,1,1
40496,I80ab5e23cacab5885d2556a9cb639924caa3e7ef,http://review.couchbase.org/#/c/40496,2,eec0d04907a4c19e75a40ce952d41d97a441a506,a54c48d8c7534293e01eaff438854d44b3fee04c,1,11/08/14,11/08/14,1510,Moving to transcoder naming and adding a legacy transcoder.,"Moving to transcoder naming and adding a legacy transcoder.

Change-Id: I80ab5e23cacab5885d2556a9cb639924caa3e7ef",1,0,0,1,1,0,1,3,1
40500,I6c8d5297ee4a89c8e6c6014b95558e0fb06a6eac,http://review.couchbase.org/#/c/40500,2,a54c48d8c7534293e01eaff438854d44b3fee04c,303844e7019a38400e5f23e2e48370a5ea693111,1,11/08/14,11/08/14,95,Adding support for append and prepend.,"Adding support for append and prepend.

Change-Id: I6c8d5297ee4a89c8e6c6014b95558e0fb06a6eac",1,0,0,1,0,0,1,0,0
40525,Ie9a11587ec1b3f1b97ee5d48a354955c5cbc7b41,http://review.couchbase.org/#/c/40525,2,303844e7019a38400e5f23e2e48370a5ea693111,3356238212131c154fc2b0c1f73b455b67913d9a,1,12/08/14,12/08/14,38,Fix integer to long classcast exceptions.,"Fix integer to long classcast exceptions.

Change-Id: Ie9a11587ec1b3f1b97ee5d48a354955c5cbc7b41",1,0,0,1,0,0,1,0,0
40527,I5d92e73d1c99da492df18b665852a25318749997,http://review.couchbase.org/#/c/40527,2,3356238212131c154fc2b0c1f73b455b67913d9a,16fc830820ab5556ba17803baa70add0dba6b065,1,12/08/14,12/08/14,30,throw exception on cas mismatch in replace.,"throw exception on cas mismatch in replace.

Change-Id: I5d92e73d1c99da492df18b665852a25318749997",1,0,0,1,0,0,1,0,0
40536,I8f9d51e46d405619d876c95a1d622f2595956dee,http://review.couchbase.org/#/c/40536,2,16fc830820ab5556ba17803baa70add0dba6b065,7d39f37030abdade5cdda09175b6cf12714465d5,1,12/08/14,12/08/14,175,respect reduced views and better object handling.,"respect reduced views and better object handling.

Change-Id: I8f9d51e46d405619d876c95a1d622f2595956dee",1,0,0,1,0,0,1,0,0
40537,I05677cacc41c2316de5e4541f7cfb694e86116f0,http://review.couchbase.org/#/c/40537,2,7d39f37030abdade5cdda09175b6cf12714465d5,ed7ddbc3129d4cd1a5d12a6367c50f727a054779,0,12/08/14,12/08/14,126,change to maven-publish plugin,"change to maven-publish plugin

Change-Id: I05677cacc41c2316de5e4541f7cfb694e86116f0",1,0,0,1,0,0,1,NA,NA
40538,Idddcc68ad29c1a41c8aeeca6412322deb50e5fb2,http://review.couchbase.org/#/c/40538,2,ed7ddbc3129d4cd1a5d12a6367c50f727a054779,58ca853dd3cc9ba5f9665d9f5d77413262fc66cb,1,12/08/14,12/08/14,41,adding more cluster API docs.,"adding more cluster API docs.

Change-Id: Idddcc68ad29c1a41c8aeeca6412322deb50e5fb2",1,0,0,1,0,0,1,0,0
40558,I83c899fa758f95aa0d5b8e40271f8ca2b5a14aa9,http://review.couchbase.org/#/c/40558,2,58ca853dd3cc9ba5f9665d9f5d77413262fc66cb,dc80b160026c8d08017158d6fc1261b7d05a0117,1,13/08/14,13/08/14,256,Remove status from document.,"Remove status from document.

Change-Id: I83c899fa758f95aa0d5b8e40271f8ca2b5a14aa9",1,0,0,1,0,0,1,0,0
40559,I9c3d2c52e4232ba6355bb8ca68ebfa75fddbae5c,http://review.couchbase.org/#/c/40559,2,dc80b160026c8d08017158d6fc1261b7d05a0117,c75af6e02c35c49126054dc274ea61eb85c6c90d,1,13/08/14,13/08/14,4,fix occasionally failing test case.,"fix occasionally failing test case.

Change-Id: I9c3d2c52e4232ba6355bb8ca68ebfa75fddbae5c",1,0,0,1,0,0,1,0,0
40560,Ibcec9c7e3d04922dfebad2e4284537e52ac26119,http://review.couchbase.org/#/c/40560,3,c75af6e02c35c49126054dc274ea61eb85c6c90d,af6acf8ee32a35b50ce62964107e909031b8f97c,1,13/08/14,13/08/14,100,disable custer manager for now.,"disable custer manager for now.

Change-Id: Ibcec9c7e3d04922dfebad2e4284537e52ac26119",0,0,0,1,0,0,1,0,0
40564,I4344504a49682fd070c98da664b5a00fb98a40f6,http://review.couchbase.org/#/c/40564,2,af6acf8ee32a35b50ce62964107e909031b8f97c,6550c9263d74097ef675aaab1711ffbb0725b93f,1,13/08/14,13/08/14,12,provide more overloads for counter.,"provide more overloads for counter.

Change-Id: I4344504a49682fd070c98da664b5a00fb98a40f6",1,0,0,1,0,0,1,0,0
40569,I8ba16abe5ada20c54d577b60bab4532776e4d7e0,http://review.couchbase.org/#/c/40569,2,6550c9263d74097ef675aaab1711ffbb0725b93f,b03022f7bf6e8c9dc7a9d0cb80bd8165a4f00e64,0,13/08/14,13/08/14,6,Prepare dp3 release.,"Prepare dp3 release.

Change-Id: I8ba16abe5ada20c54d577b60bab4532776e4d7e0",1,0,0,1,0,0,1,NA,NA
40572,I00ba2c7c64310f78f0c0605e61c0e4d95f9f3e91,http://review.couchbase.org/#/c/40572,2,b03022f7bf6e8c9dc7a9d0cb80bd8165a4f00e64,e8f3f92bae138b0db3597050dd29305bf91d2bfb,0,13/08/14,13/08/14,4,start work on beta.,"start work on beta.

Change-Id: I00ba2c7c64310f78f0c0605e61c0e4d95f9f3e91",1,0,0,1,0,0,1,NA,NA
40685,I960bf22cb64f8fa93ee4853cfff0bd1103d487c2,http://review.couchbase.org/#/c/40685,2,2f32af1277c269dda03f7caf0c271e7360361c58,e6942a733b13808a8a0e6deb8abd73bbed935dbe,1,18/08/14,29/08/14,133,JCBC-510: Allow optional non-persistent view connections.,"JCBC-510: Allow optional non-persistent view connections.

Motivation
----------
With HTTP 1.1, all connections are by default persistent, unless connection
control headers are set to close. In order to provide more flexbility in how
the client handles those connection, an optional system property can be set
to change it appropriately.

Modifications
-------------
A custom system property has been introduced and the view pipeline has been
modified to take it into account. Tests have been added to verify the
header settings.

Result
------
It is now possible to change socket persistence behavior from a system
property.

Change-Id: I960bf22cb64f8fa93ee4853cfff0bd1103d487c2",0,0,1,0,0,0,1,0,0
40694,Icc6a1d31e373cbc24a0a6b346bbaa6fc77a60d2f,http://review.couchbase.org/#/c/40694,3,8876e0eae9f589c5346e28b5858284d2cc672865,94427d77cd1c61eb559e4e41c43ce6e9fc42db99,1,18/08/14,18/08/14,482,JCBC-515: Simplify environment and collapse properties.,"JCBC-515: Simplify environment and collapse properties.

Change-Id: Icc6a1d31e373cbc24a0a6b346bbaa6fc77a60d2f",1,0,0,1,0,0,1,0,0
40695,I04248ed5d97537e4c111beaead8f4b6a65b2dd07,http://review.couchbase.org/#/c/40695,2,94427d77cd1c61eb559e4e41c43ce6e9fc42db99,289895b9797c90d01fc150cde553993cc988265b,1,18/08/14,18/08/14,79,JCBC-517 - Add overloads for PersistTo/ReplicateTo only.,"JCBC-517 - Add overloads for PersistTo/ReplicateTo only.

Change-Id: I04248ed5d97537e4c111beaead8f4b6a65b2dd07",1,0,0,1,0,0,1,1,1
40724,I74d8970f7ad5cacbe0cc7558884c02b48a4a749f,http://review.couchbase.org/#/c/40724,2,289895b9797c90d01fc150cde553993cc988265b,847b4eaedf213835361c0fde27504c97315570c1,1,19/08/14,19/08/14,26,JCBC-479: Fix comparison failures in unit tests.,"JCBC-479: Fix comparison failures in unit tests.

Change-Id: I74d8970f7ad5cacbe0cc7558884c02b48a4a749f",1,0,0,1,0,0,1,0,0
40726,I4eb81615dc0b3fac8b30709ec178024fc0e896d8,http://review.couchbase.org/#/c/40726,2,847b4eaedf213835361c0fde27504c97315570c1,c816b1c087653fb954f79099fe4044afe837b87e,1,19/08/14,19/08/14,17,Align logging.,"Align logging.

Change-Id: I4eb81615dc0b3fac8b30709ec178024fc0e896d8",1,0,0,1,0,0,1,0,0
40794,I638e38e02e66cb8cc49546c47522131533f62560,http://review.couchbase.org/#/c/40794,2,a2bbb8f98916b68822ece68865d71d0b81abf2b7,ea8da53688e043f7a3b6df510f23b19cda1f8491,1,21/08/14,21/08/14,26,Align environment changes from the core.,"Align environment changes from the core.

Change-Id: I638e38e02e66cb8cc49546c47522131533f62560",1,0,0,1,0,0,1,0,0
40795,Ia793d0a00b8e1e311c4b811227ee9af8c39b4c57,http://review.couchbase.org/#/c/40795,2,ea8da53688e043f7a3b6df510f23b19cda1f8491,9ab0e1c76e20116f079f703ae2be9286cbbb13be,1,21/08/14,21/08/14,27,"JCBC-509, JCBC-514: Make sure the environment is shut down when not shared.","JCBC-509, JCBC-514: Make sure the environment is shut down when not shared.

Change-Id: Ia793d0a00b8e1e311c4b811227ee9af8c39b4c57",1,0,0,1,0,0,1,0,0
40823,Ifb97bd0f5cde95ba68a1358749a2884b4d4bd694,http://review.couchbase.org/#/c/40823,3,9ab0e1c76e20116f079f703ae2be9286cbbb13be,4bafa32deda06fbdd4fe2a539c785f92e7f30d6d,1,22/08/14,22/08/14,149,WIP: bucket info.,"WIP: bucket info.

Change-Id: Ifb97bd0f5cde95ba68a1358749a2884b4d4bd694",1,0,0,1,0,0,1,0,0
40827,I1f50f14bf054d6ec468b1ed88f7ad6ce28a45060,http://review.couchbase.org/#/c/40827,2,4bafa32deda06fbdd4fe2a539c785f92e7f30d6d,deecd23ba52654601586e4237eacae466fe2089c,1,22/08/14,22/08/14,16,JCBC-513: Add support for individual bucket close.,"JCBC-513: Add support for individual bucket close.

Change-Id: I1f50f14bf054d6ec468b1ed88f7ad6ce28a45060",1,0,0,1,0,0,1,0,0
40829,I631194c5b1bd58894fe24dd34001e1e984af83fd,http://review.couchbase.org/#/c/40829,2,deecd23ba52654601586e4237eacae466fe2089c,348fb08048276a4367b12af899f7dffd882287bd,1,22/08/14,22/08/14,70,JCBC-524: Adding support for custom transcoders.,"JCBC-524: Adding support for custom transcoders.

Change-Id: I631194c5b1bd58894fe24dd34001e1e984af83fd",1,0,0,1,0,0,1,0,0
40835,I3018aa71565d2d27a584bc18cb813ca81ec30559,http://review.couchbase.org/#/c/40835,2,348fb08048276a4367b12af899f7dffd882287bd,7e24ee909e9d7313e617dd42c15d6a28254ea0c9,1,22/08/14,22/08/14,190,JCBC-527: support for cluster info.,"JCBC-527: support for cluster info.

Change-Id: I3018aa71565d2d27a584bc18cb813ca81ec30559",1,0,0,1,0,0,1,0,0
40838,I70fb4b4018b2070854791c85dab6f31ce9af328a,http://review.couchbase.org/#/c/40838,3,7e24ee909e9d7313e617dd42c15d6a28254ea0c9,f0e925c98bf0a2c3cfb660155339a36c92bdfc9f,1,22/08/14,22/08/14,599,WIP: bucket management.,"WIP: bucket management.

Change-Id: I70fb4b4018b2070854791c85dab6f31ce9af328a",1,0,0,1,1,0,1,1,1
40846,I2620d37e19590001e30dc0606744a3520398f370,http://review.couchbase.org/#/c/40846,2,f0e925c98bf0a2c3cfb660155339a36c92bdfc9f,06774a24bb459ccb58d078c2d7b4372b8fcaad6b,1,22/08/14,22/08/14,2101,Adding more javadocs.,"Adding more javadocs.

Change-Id: I2620d37e19590001e30dc0606744a3520398f370",1,0,0,1,1,0,1,1,1
40848,I18b9eb1a64cafb646113fa8b03bf464b4fe26eae,http://review.couchbase.org/#/c/40848,2,06774a24bb459ccb58d078c2d7b4372b8fcaad6b,e50473ee1c69d35894812bc196f0c9fb739d0a23,0,22/08/14,22/08/14,4,Releasing 2.0.0-beta,"Releasing 2.0.0-beta

Change-Id: I18b9eb1a64cafb646113fa8b03bf464b4fe26eae",1,0,0,1,0,0,1,NA,NA
40908,I4d22d050cf49c5248526649995c4be80435c158b,http://review.couchbase.org/#/c/40908,2,e50473ee1c69d35894812bc196f0c9fb739d0a23,dd6903d6c3643768fe841e9f7608b8d4f2315e1a,0,26/08/14,26/08/14,4,Start development on .next,"Start development on .next

Change-Id: I4d22d050cf49c5248526649995c4be80435c158b",1,0,0,1,0,0,1,NA,NA
40913,Ib8a3719ac0380cf64486bbea8fb208bb9606f770,http://review.couchbase.org/#/c/40913,3,c3351d73efa6f54a6d49f5db23c84c49cfa87d41,3d294d17d4fe51a72320c2b3450c57be5ac7bda1,1,26/08/14,13/10/14,160,JCBC-531: Add Diagnostics and dump them on startup.,"JCBC-531: Add Diagnostics and dump them on startup.

Change-Id: Ib8a3719ac0380cf64486bbea8fb208bb9606f770",0,0,0,1,0,0,1,0,0
41131,I331a62db595ae4ea1c05bb51b0cad798356c76d9,http://review.couchbase.org/#/c/41131,6,02f0ace17c90e13597513024ac2553a1daffed3e,449385c803575cc600a770b8aaed9d5c2f6c53d3,1,01/09/14,15/09/14,3426,WIP: JCBC-525: More Document and Transcoder Types.,"WIP: JCBC-525: More Document and Transcoder Types.

This (massive) changeset adds documents and their respective transcoders to achieve
both full JSON compatibility and ""common flags"" compatibility.

	- Json* Documents are read backwards compat, but not on write.
	- Only the LegacyTranscoder us fully read/write backwards compat.

Todo:

	- Add tests and impl for:
		* SerializableDocument (private type)
		* LegacyDocument (none)
		* BinaryDocument (binary type)
		* StringDocument (string type)

	- add support for decompression on legacy decodes
	- add support for JsonValue.NULL for all Json types.

Change-Id: I331a62db595ae4ea1c05bb51b0cad798356c76d9",0,1,1,0,1,0,1,1,1
41194,I18d34383c01d89e54c31a0542bd6c24e72006bd4,http://review.couchbase.org/#/c/41194,2,93bf9e1dff0592def8f5829e9213a8d40092d774,268a1210bbe58fc3862ac849569501573c5c732b,0,04/09/14,09/09/14,4,JCBC-540: Renaming couchbase-client artifact to java-client.,"JCBC-540: Renaming couchbase-client artifact to java-client.

This change is made for mainly two reasons:
	- Allow the old and new SDK to be run in parallel
	- Pave the way for more language bindings (like scala-client)

Change-Id: I18d34383c01d89e54c31a0542bd6c24e72006bd4",0,0,1,0,0,0,1,NA,NA
41352,I274e0bcea52f3f91173088d4fb94f5d6697dbf10,http://review.couchbase.org/#/c/41352,7,f88cf2f2a6a034d37b34fd21856650e9583b953d,a3b27a4c5e8bcc4d1f1d40377cae39beead0753f,1,11/09/14,15/09/14,6460,WIP: Synchronous wrapper API.,"WIP: Synchronous wrapper API.

Change-Id: I274e0bcea52f3f91173088d4fb94f5d6697dbf10",0,1,1,1,1,0,1,2,1
41429,I47e7921c8c4ee88309adbfdeaf68f06db48909ef,http://review.couchbase.org/#/c/41429,2,42f2cba250973371a55bb8c64a2e1ccb41b32076,ae9d7ba2eba7b626bff060e5a485c33920c9baf3,1,16/09/14,16/09/14,100,JCBC-560: Also expose versioning information.,"JCBC-560: Also expose versioning information.

This changeset is inline with the latest core-io changes to
expose the actual version in the user agent string, as well as
in the environment to immediately show which version gets used.

Change-Id: I47e7921c8c4ee88309adbfdeaf68f06db48909ef",0,0,0,0,0,0,0,0,0
41431,I5464894994e9b0af719209774fb3abbd373ce3ab,http://review.couchbase.org/#/c/41431,2,ae9d7ba2eba7b626bff060e5a485c33920c9baf3,9e7589c8189dbdbf8cb7bfcad6df466ac652e66b,1,16/09/14,16/09/14,39,JCBC-525: Register transcoders.,"JCBC-525: Register transcoders.

Change-Id: I5464894994e9b0af719209774fb3abbd373ce3ab",0,0,0,1,0,0,1,0,0
41433,Ife2323646f054897709cfae00257f02559e60748,http://review.couchbase.org/#/c/41433,2,9e7589c8189dbdbf8cb7bfcad6df466ac652e66b,5f159396042fe556cae7284b94c8d2f8a86641ea,1,16/09/14,16/09/14,148,JCBC-561: Rename parts from binary to kv (key/value) for more expresiveness.,"JCBC-561: Rename parts from binary to kv (key/value) for more expresiveness.

Change-Id: Ife2323646f054897709cfae00257f02559e60748",1,0,0,1,0,0,1,0,0
41438,I04fe7b56dca99289cd0cac66716acb0463224561,http://review.couchbase.org/#/c/41438,2,5f159396042fe556cae7284b94c8d2f8a86641ea,6a6bdb0c8af4bd05b5d8227bab824a60f1c7c1c3,1,16/09/14,16/09/14,77,JCBC-544: Throw exception if view is not found.,"JCBC-544: Throw exception if view is not found.

Change-Id: I04fe7b56dca99289cd0cac66716acb0463224561",0,0,0,1,0,0,1,0,0
41441,I484efdbb0997b63c5e90122b3cf976133e31d5fd,http://review.couchbase.org/#/c/41441,3,6a6bdb0c8af4bd05b5d8227bab824a60f1c7c1c3,41ac763c495658c12dbe1e22690663f0a59a0600,0,16/09/14,16/09/14,4,Releasing 2.0.0-beta2,"Releasing 2.0.0-beta2

Change-Id: I484efdbb0997b63c5e90122b3cf976133e31d5fd",1,0,0,1,0,0,1,NA,NA
41442,I7b76aaaf09d3d3f5f5b563570da4c677811e9325,http://review.couchbase.org/#/c/41442,3,41ac763c495658c12dbe1e22690663f0a59a0600,c88747370cf7dd6eb88ab9794e3ea353c7da81f1,0,16/09/14,16/09/14,4,Starting development on .next,"Starting development on .next

Change-Id: I7b76aaaf09d3d3f5f5b563570da4c677811e9325",1,0,0,1,0,0,1,NA,NA
41454,Id7674ee81ccd3794e7e9019b2b597889ede58160,http://review.couchbase.org/#/c/41454,2,c88747370cf7dd6eb88ab9794e3ea353c7da81f1,c01e3e4854d4eb07b39205430d1dca00dd916c6c,1,17/09/14,05/10/14,0,Fix typo: SelectDslSomokeTest -> SelectDslSmokeTest.,"Fix typo: SelectDslSomokeTest -> SelectDslSmokeTest.

Change-Id: Id7674ee81ccd3794e7e9019b2b597889ede58160",0,0,0,1,0,0,1,0,0
41484,If32da68c2210b2d86edaef631e68310fb8f85568,http://review.couchbase.org/#/c/41484,2,974586723fbf3f977a6ac6d2784c520cfb7eeed4,c57e43e2ac2652dc37402e315044f61abf76b069,1,19/09/14,19/09/14,182,JCBC-557: Improvide documentation in the .document package.,"JCBC-557: Improvide documentation in the .document package.

Change-Id: If32da68c2210b2d86edaef631e68310fb8f85568",1,0,0,1,0,0,1,0,0
41492,Icb8ae300d9141069ff652a149b19eada59dccded,http://review.couchbase.org/#/c/41492,2,c57e43e2ac2652dc37402e315044f61abf76b069,73b9173b7924634c1d3cda237d9fa35039ff3679,1,19/09/14,19/09/14,2510,JCBC-558: Javadocs for bucket and async bucket.,"JCBC-558: Javadocs for bucket and async bucket.

Change-Id: Icb8ae300d9141069ff652a149b19eada59dccded",1,0,0,1,1,0,1,0,0
41500,Ie2045178c33663cdfe58e1ee1041be0e285fb696,http://review.couchbase.org/#/c/41500,3,73b9173b7924634c1d3cda237d9fa35039ff3679,b22008361189ed033ec49abfa7e0c52f0c1f37d8,0,19/09/14,19/09/14,161,JCBC-565: Adapting README for GA changes.,"JCBC-565: Adapting README for GA changes.

Change-Id: Ie2045178c33663cdfe58e1ee1041be0e285fb696",0,0,0,1,0,0,1,NA,NA
41505,I30be935f28c9e910deda8120c038f514d022ef7e,http://review.couchbase.org/#/c/41505,2,b22008361189ed033ec49abfa7e0c52f0c1f37d8,b26235a40c7869904532bf161a3149ac5a750647,0,19/09/14,19/09/14,6,Releasing 2.0.0,"Releasing 2.0.0

Change-Id: I30be935f28c9e910deda8120c038f514d022ef7e",0,0,0,1,0,0,1,NA,NA
41677,I52de7e70008cddc602169356d4db0b592bcfb682,http://review.couchbase.org/#/c/41677,2,06ec7c2722fe703add3b0206b6aa3f89d5b58060,1c39c34f57cf24f73ba25e34b350581570ff3956,1,26/09/14,26/09/14,3,JCBC-566: Catch ConfigurationException to prevent IO loop death,"JCBC-566: Catch ConfigurationException to prevent IO loop death

When CCCP protocol enabled, there is a likelihood that
ConfigurationException will bubble up and kill the IO loop. When
connectivity will be restored, the client cannot reconnect the nodes.

Change-Id: I52de7e70008cddc602169356d4db0b592bcfb682",0,0,0,0,0,0,0,0,0
41734,I6218ea6ceba7acddfcb4b43d81cc83a3cb6bbf6d,http://review.couchbase.org/#/c/41734,5,1c39c34f57cf24f73ba25e34b350581570ff3956,d798d4e679401bc578e2e69cf8ef86d20a47c492,1,27/09/14,29/09/14,78,Refactor isBinary to have tri-state value,"Refactor isBinary to have tri-state value

Change-Id: I6218ea6ceba7acddfcb4b43d81cc83a3cb6bbf6d",0,1,0,1,0,0,1,0,0
41740,I3d28ad5f8014cb46f1d3e9bd5e2beb8bde9add8a,http://review.couchbase.org/#/c/41740,2,71727f6b53f44441dfc76c49f0e94584d1b68c28,015d7452322cda79eb78f36521b9976a7f7174e7,1,29/09/14,29/09/14,2,Do not reset thresholdLastCheck on each iteration,"Do not reset thresholdLastCheck on each iteration

Change-Id: I3d28ad5f8014cb46f1d3e9bd5e2beb8bde9add8a",0,0,0,1,0,0,1,0,0
41741,I9509e207d1c1c9215ac22de0bd57022dd9270aec,http://review.couchbase.org/#/c/41741,2,3be9bad42989a98f80f286178f80d7cf51dfa1b3,224cf7ab7c30b65fde1d88f41063543f5bd434c0,1,29/09/14,29/09/14,8,JCBC-566: Remove dead code blocking configuration updates,"JCBC-566: Remove dead code blocking configuration updates

In this patch http://review.couchbase.org/32589 Resubscriber class was
removed, but its flag was not. So the boolean state is never changed
here.

Change-Id: I9509e207d1c1c9215ac22de0bd57022dd9270aec",0,0,0,0,0,0,0,0,0
41786,Ie88aeb0624968656e89819de2b931832843e0ad3,http://review.couchbase.org/#/c/41786,2,224cf7ab7c30b65fde1d88f41063543f5bd434c0,9f2fc5b3f5aa2d9f92cffcea15f7e32e5c2aea5e,1,30/09/14,30/09/14,2,Initialize bootstrapProvider member,"Initialize bootstrapProvider member

Fixes NPE in reloadConfig()

  public void reloadConfig() {
    if (bootstrapProvider.isCarrier() && !shutdown) {
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Change-Id: Ie88aeb0624968656e89819de2b931832843e0ad3",0,0,0,0,0,0,0,0,0
41904,I1c4574dac2e02c47cc84271822277552160c9c00,http://review.couchbase.org/#/c/41904,2,8b9626e71ad50efacec23ca5fa63714d552ce002,edd1ae1317acc143a8d6f3df5b7911d54c45a4e5,1,06/10/14,06/10/14,2,Fix link in javadoc,"Fix link in javadoc

Change-Id: I1c4574dac2e02c47cc84271822277552160c9c00",0,0,0,1,0,0,1,0,0
41945,Ibd7e37ae48de197df72713acd7f4daeadc352904,http://review.couchbase.org/#/c/41945,3,edd1ae1317acc143a8d6f3df5b7911d54c45a4e5,c1fc7b875083e42a108def7c4a9dab69b9b01ca7,1,07/10/14,08/10/14,362,JCBC-575: Add support for a RawJsonDocument.,"JCBC-575: Add support for a RawJsonDocument.

Motivation
----------
This changeset adds the capabilities to pass in a raw (already encoded)
JSON document, largely driven by the fact that users may already have their
JSON stack set up and just want to pass in the data. We do not want to get
in the way.

Modifications
-------------
Adds the raw JSON document which justs takes the string, expects its valid,
creates a buffer out of it and stores it down. This also is very low overhead.

Result
------
More flexibility in dealing with JSON documents in combination with custom
JSON marshallers.

Change-Id: Ibd7e37ae48de197df72713acd7f4daeadc352904",0,0,0,0,0,0,0,0,0
41986,I0bbcdd049b7e9888d467084da29560b0cfa35879,http://review.couchbase.org/#/c/41986,3,47c7c83c3ae4e4c74009d281256e22c8437bdf89,d6876b6d45cf8eff676a1e2d76f54f223f204418,1,09/10/14,09/10/14,50,JCBC-578: Validate bucket name before connecting.,"JCBC-578: Validate bucket name before connecting.

Motivation
----------
The bucket name is normally not null when added by the developer at compile
time, but in environments like spring boot or others with runtime configurations
it can happen that the bucket name is null for some reason.

Modifications
-------------
The code now properly checks for that and throws a descriptive exception instead
of failing with an NPE down the codepath.

Result
------
It is immediately clear what went wrong on connecting.

Change-Id: I0bbcdd049b7e9888d467084da29560b0cfa35879",0,0,0,0,0,0,0,0,0
42072,I5206ba13f94d62601e61da72e6a50f34e64347ca,http://review.couchbase.org/#/c/42072,3,029cac4a0117ade4fc19085e06143e2cfe1972b8,a7c25a72c76239bdce715f04c0fe1004cdeaed1b,1,13/10/14,13/10/14,156,JCBC-579: Custom equals() methods for DesignDocument and DefaultView,"JCBC-579: Custom equals() methods for DesignDocument and DefaultView

Motivation
----------
Comparisons are often needed during unit tests or if someone wants to
publish views in an automated manner upfront. Without those custom equals
its very cumbersome to verify equality on all possible fields.

Modifications
-------------
Custom equals methods added based on the properties of the objects, allowing
for a simple DesignDocument.equals(DesignDocument).

Result
------
Equality checks on all possible fields are now very easy.

Change-Id: I5206ba13f94d62601e61da72e6a50f34e64347ca",0,0,0,0,0,0,0,0,0
42073,I7557f27bf44a06d27e1fe9b6f8889ac6bcafbbfa,http://review.couchbase.org/#/c/42073,4,a4be48c62f71f0582899ac8bb7d2493dcd94d532,86ff15a32e627fd5ee178d437297df00695923e7,1,13/10/14,13/10/14,184,JCBC-580: Custom equals for Documents and JsonArray/JsonObject.,"JCBC-580: Custom equals for Documents and JsonArray/JsonObject.

Motivation
----------
Documents and the underlying content types should be able to be
compared easily. This satisfies use cases where a document is
loaded and compared with a different one. Adding custom
equals methods prevents the developer from doing deep
assertions themselves.

Modifications
-------------
Custom equals and hashcodes are applied which take the nested
data into account.

Result
------
It is easy to compare documents and their underlying contents.

Change-Id: I7557f27bf44a06d27e1fe9b6f8889ac6bcafbbfa",0,1,0,0,0,0,1,0,0
42074,I1b5b4c83cb393800713be4c6695fd1853b7760b1,http://review.couchbase.org/#/c/42074,3,86ff15a32e627fd5ee178d437297df00695923e7,798d35dfb26080f89203ad287cfc7e0c61835c48,1,13/10/14,13/10/14,136,JCBC-581: Add a thinkTime to the integration tests when bucket is created.,"JCBC-581: Add a thinkTime to the integration tests when bucket is created.

Motivation
----------
The design doc tests hang when all are run in parallel. This is because a different
test removed all the buckets which is fine, but then the server can't flush the
new bucket so quickly.

The unsolved root cause is that we reliably don't know when the bucket is created.

Modifications
-------------
As a workaround, a configurable think time is added when the bucket is created. This is
most certainly only run once, since the bucket is not thrown away all the time.

Result
------
Integration tests now run through, even when intermingled.

Change-Id: I1b5b4c83cb393800713be4c6695fd1853b7760b1",0,0,0,0,0,0,0,0,0
42075,I4de1c7c52354ed100d05599371c0488f8038bd90,http://review.couchbase.org/#/c/42075,2,b605f2de5059ecc52786b314d26f71b2f6acb31a,8aec1000a1b40b656776f423631a968e5cb72da3,0,13/10/14,13/10/14,2,Set version to 2.0.1-SNAPSHOT,"Set version to 2.0.1-SNAPSHOT

Change-Id: I4de1c7c52354ed100d05599371c0488f8038bd90",0,0,0,1,0,0,1,NA,NA
42076,Ib26e0341a3bc779e27bcdf9fd82001ecec742eb6,http://review.couchbase.org/#/c/42076,3,542a1088fff6400f1d071fbb36fef6cd0cc4c8df,258ebab4b3afc937d4782aac54d26f9852d65aa7,1,13/10/14,13/10/14,2,Fixed ClassCastException Long/Integer on DefaultAsyncClusterManager.getBucket() calls if bucket quota was greater than 2047 MB.,"Fixed ClassCastException Long/Integer on DefaultAsyncClusterManager.getBucket() calls if bucket quota was greater than 2047 MB.

Change-Id: Ib26e0341a3bc779e27bcdf9fd82001ecec742eb6",0,0,0,1,0,0,1,0,0
42110,Ic1b70155c2659283acc347c1a885005cf0430a9b,http://review.couchbase.org/#/c/42110,2,5f9698a05073de66fb5ca6c6131393799e15f720,7871ee4b556ef3d92485b9c26ba8677cf057c3c3,0,14/10/14,14/10/14,2,JCBC-578: Fail observable instead of throwing directly.,"JCBC-578: Fail observable instead of throwing directly.

Motivation
----------
The previously introduced change (07ef89b7a5bd71f6bea849487bd71db0764ef3c3) correctly
works for the synchronous API, but fails the assumptions for the asynchronous one. The
expectation is that the Observable is failed, not the exception thrown on the caller
thread right away.

Modifications
-------------
The observable is failed, instead of throwing right away. For the synchronous API the
change is not noticeable.

Result
------
More uniform error handling for the async API on connection errors by not breaking
the API contract.

Change-Id: Ic1b70155c2659283acc347c1a885005cf0430a9b",0,0,0,0,0,0,0,NA,NA
42111,I677b7522567173fa047b78378ff831b54ec41333,http://review.couchbase.org/#/c/42111,2,7871ee4b556ef3d92485b9c26ba8677cf057c3c3,2fa767a0bf4698931d28803061431a6e7bd4dc07,1,14/10/14,14/10/14,21,JCBC-584: Correctly forward CouchbaseExceptions and prevent from wrapping into Composite.,"JCBC-584: Correctly forward CouchbaseExceptions and prevent from wrapping into Composite.

Motivation
----------
If an exception is re-thrown in an error handler, RxJava will wrap it into a CompositeException.
The intent was to just wrap it into a CouchbaseException if needed to provide a common base, and
the wrong handler method was used.

Modifications
-------------
The observable is now completed properly with the right sequence so that the Composite is not
added by RxJava and the toplevel Exception is still the CouchbaseException (or subclasses).

Result
------
Easier Exception-type based error handling during the connect process.

Change-Id: I677b7522567173fa047b78378ff831b54ec41333",0,0,0,0,0,0,0,0,0
42117,Icbbf424682cbae04ad0f1fa83d4d1412851f08dc,http://review.couchbase.org/#/c/42117,4,2fa767a0bf4698931d28803061431a6e7bd4dc07,3f4bf9f7c11d7949d0682d00f93e60a8fe06e051,1,14/10/14,14/10/14,71,"JCBC-585: Poll for all node on ""healthy"" state on bucket creation.","JCBC-585: Poll for all node on ""healthy"" state on bucket creation.

Motivation
----------
A better alternative to the previously implemented ""think time"" is to poll all nodes info
until they are in a ""healthy"" state - getting out of the ""warmup"" phases. While probably not
100% accurate, it should be good enough for testing and administrative scenarios.

Modifications
-------------
The code now polls every second for the bucket info, grabs the state of each node and only
proceeds if all of them are in a ""healthy"" state.

Result
------
Whena bucket is created or replaced, the code now waits until the bucket is in a healthy
state before reporting success.

Change-Id: Icbbf424682cbae04ad0f1fa83d4d1412851f08dc",0,1,0,0,0,0,1,0,0
42121,I5c4415bbfcc639e5433c59b4a2fcd37f4e765f9d,http://review.couchbase.org/#/c/42121,3,3f4bf9f7c11d7949d0682d00f93e60a8fe06e051,eb146c83149a99e15ac3edecf9bb8c17abbda97d,1,14/10/14,14/10/14,76,JCBC-586: Descriptive exception types for bucket (auth) failures.,"JCBC-586: Descriptive exception types for bucket (auth) failures.

Motivation
----------
In addition to the generic CouchbaseException toplevel exception, more
detailed subclasses allow for more descriptive and narrow error handling.

Modifications
-------------
This change adds specific exceptions for invalid bucket names and passwords,
so that the user can apply custom logic to each of them (probably reporting
it differently, since in general they are non-transient).

Result
------
Easier error handling for the user.

Change-Id: I5c4415bbfcc639e5433c59b4a2fcd37f4e765f9d",0,0,0,0,0,0,0,0,0
42158,I888d1e4d8f809e5c00ddcd202287c44bef0aed49,http://review.couchbase.org/#/c/42158,2,30f00be32a510a5347f3a6a39b4cb041cf88d369,4c86bca6f5ed670360ef485339ec05d6b1e094cd,1,15/10/14,16/10/14,8,JCBC-587: Never quote start/endKeyDocId in the ViewQuery,"JCBC-587: Never quote start/endKeyDocId in the ViewQuery

Motivation
----------
start/endKeyDocIDs are never JSON and therefore are not allowed to be quoted,
breaking the queries when used from the SDK.

Modifications
-------------
Quotes have been removed to correctly send it over HTTP to the view engine.

Result
------
Both fields can now be properly utilized in a view query.

Change-Id: I888d1e4d8f809e5c00ddcd202287c44bef0aed49",0,0,0,0,0,0,0,0,0
42159,Ia5ddae858167cad13989a51837e49b091d5ad413,http://review.couchbase.org/#/c/42159,2,9b398959d39dcba9f633dd50e4f1e41e3d74b4f2,be5212f09960c822bf138291a76dcefd09c78154,1,15/10/14,16/10/14,17,JCBC-590: Enable RawJsonTranscoder by default.,"JCBC-590: Enable RawJsonTranscoder by default.

Motivation
----------
As part of the change introduced in JCBC-??, capabilities were added
to store and retrieve raw JSON data, but it was not enabled by default.

Modifications
-------------
Enables the RawJsonTranscoder (and its document type) by default, which allows
users to consume it without additional effort. Note that this should've been
in the older change and was an oversight.

Result
------
Proper use of the RawJsonDocument is now possible.

Change-Id: Ia5ddae858167cad13989a51837e49b091d5ad413",0,0,0,0,0,0,0,0,0
42203,I33f49052a515b06b8ebee7cadab31c6e1acd8209,http://review.couchbase.org/#/c/42203,2,be5212f09960c822bf138291a76dcefd09c78154,eae9e4b58ad4bc5a5b113d053f236eb11efe53cf,1,16/10/14,17/10/14,74,"JVMCBC-44 : test that if bucket was closed, operations fail fast","JVMCBC-44 : test that if bucket was closed, operations fail fast

Motivation
-----------
When calling close() on a Bucket, one expects not to be able to use the bucket
operations anymore. This was not previously the case (would results in a
TimeoutException from the underlying AsyncBucket after a delay).
Now the core fails the operation with a BucketClosedException.

Modifications
-------------
Added integration tests to check behavior of Bucket once closed. Test both
async and sync cases.

Note that with the core modification, users can be impacted if they were
watching for TimeoutExceptions specifically to detect a closed bucket.

Also did a quick fix on ClusterDependentTest to create test bucket with the
correct password expected later.

Result
------
The following behaviors are expected and tested for :
Blocking operations on a closed bucket immediately throw a BucketClosedException.
Async operation call the subscriber's onError method with BucketClosedException.

Change-Id: I33f49052a515b06b8ebee7cadab31c6e1acd8209",0,0,0,0,0,1,1,0,0
42320,I4b25876114c78621ba392c1dbdaee64e5d16393d,http://review.couchbase.org/#/c/42320,2,eae9e4b58ad4bc5a5b113d053f236eb11efe53cf,1569da40ad865e86c4a89aa083043b287bf063d4,0,21/10/14,21/10/14,3,Make sure test case depends on existing bucket.,"Make sure test case depends on existing bucket.

Motivation
----------
The ConnectionTest did not depend on the general ""ClusterDependentTest""
which made it subject to a potential non-existing bucket, leading to
false-positive assertion errors.

Modifications
-------------
Making it extend ClusterDependentTest.

Result
------
No more failing tests because the bucket doesn't exist by accident.

Change-Id: I4b25876114c78621ba392c1dbdaee64e5d16393d",0,0,0,0,0,0,0,NA,NA
42324,Ic07d4f93be1176f0e47754203426575e75f57b80,http://review.couchbase.org/#/c/42324,2,1569da40ad865e86c4a89aa083043b287bf063d4,60e5c4b6dc7adaac0683957e5d512433d629ff93,1,21/10/14,22/10/14,469,JCBC-597: Refactor View mapping into distinct class.,"JCBC-597: Refactor View mapping into distinct class.

Motivation
----------
This changeset refactors the view result mapping logic into a
separate class, making it easier to grasp and also preparing it
for future enhancements (like transparent retries).

Modifications
-------------
The view query handling is moved into a separate class and extensive
integration tests have been added.

Along the way, a small bug with document() calls on reduced rows has been
fixed as well as better toString() printing on rows.

Result
------
Better readability and testability in the view mapping process.

Change-Id: Ic07d4f93be1176f0e47754203426575e75f57b80",0,0,0,0,0,0,0,0,0
42331,I462a52cb50c1a89e3e7b5cce4037ea96c4fc50c6,http://review.couchbase.org/#/c/42331,2,d6abe552ccef6988228417ea54a38c1b651756a7,ef1fb54ca38f85294bffe8d85e770b4228f99959,1,21/10/14,22/10/14,10,Adjust checks in unit tests,"Adjust checks in unit tests

Motivation
----------
Because of JsonDocument constuctor is not very verbose, it is very easy
to misuse it when it comes to setting expiry. Consider following two
signatures:

  JsonDocument create(String id, JsonObject content, long cas)
  JsonDocument create(String id, int expiry, JsonObject content)

Java does not warn when small literal number used.

The second point is that counter test clearly intent to assert that CAS
changed on each increment/decrement. But it done is some strange way.

Modifications
-------------
For first case, JsonDocument's expiry properly initialized. For the
second case, all combinations used to ensure that CAS does not match

Result
------
More robust unit tests, and more clear intention revealing.

Change-Id: I462a52cb50c1a89e3e7b5cce4037ea96c4fc50c6",0,0,0,0,0,0,0,0,0
42346,I4369c1a6bb25d6f7fb5eeac4c4abd82378682fe6,http://review.couchbase.org/#/c/42346,3,ef1fb54ca38f85294bffe8d85e770b4228f99959,313c2e8744c701255b28be124ad26f7a5c1f6fba,1,22/10/14,22/10/14,172,JCBC-601: Expose returned CAS value on remove() responses,"JCBC-601: Expose returned CAS value on remove() responses

Motivation
----------
Since remove calls on the server return the CAS value, it makes
sense to expose this information to the user.

Modifications
-------------
Builds on the core-io change (JVMCBC-48) and forwards the value into
the actual user-visible response. Test cases and documentation are
adapted appropriately.

Result
------
The user is able to consume the CAS value on remove.

Change-Id: I4369c1a6bb25d6f7fb5eeac4c4abd82378682fe6",0,0,0,0,0,0,0,0,0
42347,I9dc619648227fe0294f42e36e9d3d4f7544b968e,http://review.couchbase.org/#/c/42347,3,d1c3daf50a30c1d0482054a4e4a6ee1c1a627f25,dedacda2386d864c16d2eca36ede085c387aaa39,1,22/10/14,22/10/14,44,JCBC-602: Handle CAS mismatches on remove,"JCBC-602: Handle CAS mismatches on remove

Motivation
----------
When a CAS value is passed down together with a remove request,
the server performs a CAS check. Previously, the response was
not properly respected and the user had no idea if the check
succeeded or not.

Modifications
-------------
To be in line with the other methods, a CASMismatchException
is issued in case of such a state.

Result
------
The user can catch and handle such errors/exceptions now properly
and in line with similar methods.

Change-Id: I9dc619648227fe0294f42e36e9d3d4f7544b968e",0,0,0,0,0,0,0,0,0
42348,I6648ef00525424f046d4dd2f1738a5581adb99f0,http://review.couchbase.org/#/c/42348,2,1ae8396cd673cbf93e4de68c0dd4ebe6a9f35c9c,13305f839b8ac8fc15e2091e69dd99d9d07a89fd,1,22/10/14,22/10/14,70,JCBC-600: Null out content() on append/prepend result.,"JCBC-600: Null out content() on append/prepend result.

Motivation
----------
When a content is appended/prepended to a already existing document,
the server protocol does not return the ""final"" content. It is better
to set the content to null instead of a wrong value - since the actual
content is not just the appended/prepended chunk.

Modifications
-------------
The content is nulled out on append and prepend. Tests have been added
and documentation improved.

Result
------
More accurate application semantics, as well as improved documentation
and testing.

Change-Id: I6648ef00525424f046d4dd2f1738a5581adb99f0",0,0,0,0,0,0,0,0,0
42349,I7f1752fd891ca60a3192c941badd6b16373635b8,http://review.couchbase.org/#/c/42349,2,39c3ea23490afd88d933dae5d6bdfc88b45096eb,f0eee80f645ced98466a0063179296093f759572,1,22/10/14,22/10/14,35,JCBC-589 : Versioning information stored in property file,"JCBC-589 : Versioning information stored in property file

Motivation
----------
For now, versioning information is extracted from the Manifest.MF via
Package class. In cases where the sdk is integrated into a fat jar (or
shadow jar), manifest information is lost, and the sdk cannot give a
complete PACKAGE_NAME_AND_VERSION.

Modifications
-------------
Versioning information is now stored into a properties file, of which a
template is added to src/main/resources folder. Gradle will execute git
command to produce version number and replace tokens in the properties
file with correct strings.

DefaultCouchbaseEnvironment loads the properties file to retrieve the
version number. In case this is not possible the previous behavior of
showing ""unknown"" is maintained.

The file is named com.couchbase.client.java.properties in order to
remain distinguishable even when flattened in a fatjar along with the
java client source for example (a generic name would have caused
potential for the wrong file to be picked up in such a configuration).

Note that if git command cannot be executed by Gradle (eg not in path
under windows), it will put the build date in there (in the format
unknown-yyyyMMdd).

If the sdk cannot get hold of the properties file, then we'll still have
""unknown"" for both implementationVersion and specificationVersion (but
this has been tested inside both shadow jars and manually created fatjar
so this isn't the case as long as the properties file is present there).

Result
------
Building the jar includes a com.couchbase.client.java.properties file
containing complete sdk version info.

Repackaging into a fat jar doesn't break the version retrieval feature.

Change-Id: I7f1752fd891ca60a3192c941badd6b16373635b8",0,0,0,0,0,1,1,0,0
42363,Ia2e7602f707a616655dd46f5db5718e674ba983c,http://review.couchbase.org/#/c/42363,6,f0eee80f645ced98466a0063179296093f759572,46dc5688c033776739ea0155db4328a76a1c506f,1,22/10/14,24/10/14,204,JCBC-604: Move Observe utility class to core-io,"JCBC-604: Move Observe utility class to core-io

Motivation
----------
Each wrapper of core-io library have to implement Observe polling
feature. This way is more error prone and harder to maintain good
quality of this implementation, which in fact will be shared.

Modification
------------
Pull Observe, PersistTo and ReplicateTo utility classes from java-client
to core-io.

Result
------
Duplication reduced (considering java-client and jruby-client
libraries). Potentially expanded coverage for the Observe
implementation.

Change-Id: Ia2e7602f707a616655dd46f5db5718e674ba983c
Depends-On: http://review.couchbase.org/42362",0,1,0,0,0,0,1,0,0
42415,I3c8b01ca556fa941fd8a118ee88bdb8882473d88,http://review.couchbase.org/#/c/42415,4,fba28a9cce72b3d0b5fb54eb8c7e8ffcb59b18cb,3d1391c801cccc53845b00af44527a42f70c4195,1,24/10/14,27/10/14,15,JCBC-589: Setting UserAgent overwrites one in core,"JCBC-589: Setting UserAgent overwrites one in core

Motivation
----------
After modifying the feature to get version number from the sdk, another
problem was found: when attempting to get version from both the core
sdk and the java-client sdk, using the userAgent() method both return
an user agent string with the java-client's information.

What was expected was to get the core sdk information on calling a
DefaultCoreEnvironment's userAgent() method and to get the client sdk
information when calling a DefaultCouchbaseEnvironment's userAgent()
method.

Root Cause:
The USER_AGENT class property in DefaultCoreEnvironment is not shadowed
by DefaultCouchbaseEnvironment, contrary to PACKAGE_NAME_AND_VERSION.
Thus when loading version information, the DefaultCouchbaseEnvironment
overwrites USER_AGENT in core package.

Instead of shadowing PACKAGE_NAME_AND_VERSION, introduced new property
SDK_PACKAGE_NAME_AND_VERSION in DefaultCouchbaseEnvironment.

Introduced a new SDK_USER_AGENT property in DefaultCouchbaseEnvironment
which is the one set by version initialization.

Calling either userAgent() or packageNameAndVersion() to get version
info on the appropriate classes in the core and the java sdk in both
case provides correct information.

DefaultCoreEnvironment provides version information on the core.
DefaultCouchbaseEnvironment provides version info on the java client.

Change-Id: I3c8b01ca556fa941fd8a118ee88bdb8882473d88",0,1,1,0,0,1,1,0,0
42417,I1f62a832fc67eab78b4a12d4f8af371b3c89ab17,http://review.couchbase.org/#/c/42417,3,c062650f58f4dc9ba81eeef231aca0cb7559a8da,d2a1fbda1b3911b5cac1c5cf4949ef5386b5683c,1,24/10/14,27/10/14,292,JCBC-583: Release buffers in transcoders + tests,"JCBC-583: Release buffers in transcoders + tests

Motivation
----------
After some leaks were reported by Netty, it was determined that in the
various transcoders, ByteBuf were inconsistently released. Most of them
take the ByteBuf and convert it in another format (eg JSON) and don't
access the buffer after that, which is a good candidate point for the
release of the buffer.

Additionally, even when the transcoder released the buffer on success
it was not released before throwing a TranscodingException.

We would gain from a standard ""automatic"" way of releasing the buffer
in both success or error in decoding. But transcoders that produce an
output which still holds the buffer (eg BinaryTranscoder) should not
release it.

Modifications
-------------
The AbstractTranscoder now releases the buffer in case of both success
and error, provided the corresponding ""shouldAutoreleaseOnXXX"" methods
return true (which is the default).

BinaryTranscoder has shouldAutoreleaseOnDecode return false, whereas it
has shouldAutoreleaseOnError return true, allowing BinaryDocument to
keep hold of the ByteBuf down the line.

Corresponding tests have been put in place. They test both success and
error in decode operation. BinaryTest checks that the success case
doesn't release the buffer.

On JsonTranscoder, a specific static method converts ByteBuf to Json.
This method doesn't release the buffer, and has been documented and
tested to reflect that this is on purpose.

Result
------
By default, any implementation of AbstractTranscoder will release its
content buffer after decode operation, either successful or in error.

BinaryTranscoder doesn't release buffers on decode success but does on
decode error.

All transcoder tests pass, and check the coherence of the buffer refCnt
reference count after decode operation for the type of transcoder.

Note that something should be done to inform the user that it is his
responsibility to manually release the buffer of a BinaryDocument.

Change-Id: I1f62a832fc67eab78b4a12d4f8af371b3c89ab17",0,0,1,0,0,1,1,0,0
42597,I54c5ebfdc555f3a0441c21068f3192fdfdf96d9c,http://review.couchbase.org/#/c/42597,2,d2a1fbda1b3911b5cac1c5cf4949ef5386b5683c,5eae54be9ebf5b3de62cd648442ff6b594b92dc1,1,30/10/14,30/10/14,31,JCBC-610: Fix decoding of BinaryDocument,"JCBC-610: Fix decoding of BinaryDocument

Motivation
----------
BinaryTranscoder currently refuses to decode BinaryDocuments because
TranscoderUtils says that a document with BINARY_COMPAT_FLAGS is not in
fact a binary document. This is a bug to be corrected.

Modifications
-------------
Refactored TranscoderUtils to recognize BINARY_COMPAT_FLAGS as binary.
Added a mask to easily extract the common flags part of a 32bit integer
and implemented unit tests to check behavior of both the hasBinaryFlags
method and the BinaryTranscoder.

Result
------
New tests passes and BinaryDocuments can be correctly identified by the
adequate TranscoderUtils method, thus decoded by the BinaryTranscoder.

Change-Id: I54c5ebfdc555f3a0441c21068f3192fdfdf96d9c",0,0,0,0,0,1,1,0,0
42609,I3bb051d279a3a207028baa69763059bd98a5954d,http://review.couchbase.org/#/c/42609,4,5eae54be9ebf5b3de62cd648442ff6b594b92dc1,a79180b7a9c5e9b52cd0c8189fe49bd37ee784cb,1,30/10/14,03/11/14,91,JBCB-611: Improve readability of TranscoderUtils,"JBCB-611: Improve readability of TranscoderUtils

Motivation
----------
Dealing with flags, bit shift operators and legacy flag vs common flag
specification is a non-trivial brain gymnastic. Improve readability of
code related to that in TranscoderUtils to make the spec more visible
and the different parts more explicit.

Modifications
-------------
Improved javadoc of the COMMON_FLAGS_MASK, added explicit constants for
LEGACY flags and rewritten initialization of COMPAT flags constants.

Reworked the hasCommonFlags method to only look at common flags bits.

Added a hasCompressionFlags method to correctly detect compression flag
in the future.

Reworked the hasXXXFlags to correctly detect each type of document.

Result
------
All tests pass and flag-related code is more readable and documented.

Change-Id: I3bb051d279a3a207028baa69763059bd98a5954d",0,1,0,0,0,1,1,0,0
42654,Ibe6ce6e2d864b5a33c819252bd7b5957c1a85f94,http://review.couchbase.org/#/c/42654,2,7c87c6c769beaa453d04421cc6fa85740cd24548,d0028667a669c8e19c9668439e35b36442a4d6ca,0,31/10/14,31/10/14,1,JCBC-612: Temporarly disable checkstyle in build,"JCBC-612: Temporarly disable checkstyle in build

Motivation
----------
Having checkstyle plugin activated in gradle build but no checkstyle
configuration yet causes the build to fail.

Modifications
-------------
Disable checkstyle plugin in gradle build until a checkstyle config is
chosen and put in place.

Result
------
Build doesn't fail due to checkstyle errors anymore.

Change-Id: Ibe6ce6e2d864b5a33c819252bd7b5957c1a85f94",0,0,0,0,0,1,1,NA,NA
42711,I7c3b2b22bd42dbc28ff46d5db6a3ca413aa6f744,http://review.couchbase.org/#/c/42711,2,ee0681736d2a50b05f98b6aec34b3d070b9c6d51,1ccbc03efe43d8d62efce4953b36f3a63d788820,1,03/11/14,03/11/14,25,JCBC-620: Make Diagnostics resilient for not found classes,"JCBC-620: Make Diagnostics resilient for not found classes

    Motivation
    ----------
    The code uses com/sun namespaced packages - which we shouldn't be using -
    but are able to optionally utilize them to get more diagnostics information.

    The code previously did check if the classes are proper instances, but it was
    not resilient for environments where the class doesn't exist at all (that is
    on IBM JVMs, as well as OSGi containers and app servers like Wildfly). It prevents
    starting an application.

    Modifications
    -------------
    The code now properly catches such an exception and logs a debug notice that extended
    info is not available and only reduced output is printed.

    Result
    ------
    Properly degrading output and making sure app servers with reduced context are able
    to start.

Change-Id: I7c3b2b22bd42dbc28ff46d5db6a3ca413aa6f744",0,0,0,0,0,0,0,0,0
42738,I042e4e0e59430e2cd9c9817d30db622136da42dd,http://review.couchbase.org/#/c/42738,2,3e805914dfe2c33798af962aa0bdf47957de8352,b05d298bdd00d58ee193bad969b5301ad932a942,0,04/11/14,04/11/14,2,JCBC-623: Upgrade core-io to 1.0.1,"JCBC-623: Upgrade core-io to 1.0.1

Motivation
----------
Upgrading core-io to the latest bugfix release.

Change-Id: I042e4e0e59430e2cd9c9817d30db622136da42dd",0,0,0,0,0,0,0,NA,NA
42739,Ie598021ecf39e980eaaabe1408f6f703b78dd115,http://review.couchbase.org/#/c/42739,2,b05d298bdd00d58ee193bad969b5301ad932a942,17f5a05262837805c6db50927fa06f4aecb71e38,0,04/11/14,04/11/14,2,Prepare 2.0.1 Release,"Prepare 2.0.1 Release

Change-Id: Ie598021ecf39e980eaaabe1408f6f703b78dd115",0,0,0,1,0,0,1,NA,NA
42765,I8af5513cabded82455b383ae441a11ddca28d451,http://review.couchbase.org/#/c/42765,2,17f5a05262837805c6db50927fa06f4aecb71e38,073c18688c7092ebfb038a8d66cdf8e5e342a75d,0,04/11/14,04/11/14,49,JCBC-518: No intro page on the javadoc,"JCBC-518: No intro page on the javadoc

Motivation
----------
We need a simple page to welcome the user and guide him to the best
place to get started. Also, external links to netty and other projects
are needed so that javadoc can resolve them.

Modifications
-------------
This change adds a welcome page with a simple pointer to the best
starting point, as well as external link references to the build
so they are picked up and the user can click his way through.

Result
------
Better navigateability through the javadocs.

Change-Id: I8af5513cabded82455b383ae441a11ddca28d451",0,0,0,0,0,0,0,NA,NA
43130,I79af9e989d65ef17ab7788d6ebffbd7b23e0a054,http://review.couchbase.org/#/c/43130,2,aeed1b02f97993ac3300ce935cadadf590ebe28c,9d8d4d0598b851fbb1885b741bdf3f0445cb863c,0,12/11/14,12/11/14,225,JCBC-613: Add checkstyle.,"JCBC-613: Add checkstyle.

Motivation
----------
We need proper checkstyle rules that need to be enforced across the project.

Modifications
-------------
This change adds the styles we agreed on for now, separate commits will follow
with the actual code changes.

Result
------
Consistent styles!

Change-Id: I79af9e989d65ef17ab7788d6ebffbd7b23e0a054",0,0,0,0,0,0,0,NA,NA
43357,I8addce1e453f9effa578c822456e685753712629,http://review.couchbase.org/#/c/43357,2,9d8d4d0598b851fbb1885b741bdf3f0445cb863c,bd4a0253ac690c3ec548e5df46a2344a435eb666,1,18/11/14,18/11/14,10,JCBC-630: Add toString to Bucket,"JCBC-630: Add toString to Bucket

Motivation
----------
When logging, it is more interesting to see significant information on
a Bucket than just its memory reference (default toString).

Modifications
-------------
Added toString overload for CouchbaseBucket and CouchbaseAsyncBucket.
The String representation is in the form ""Bucket[<name>]"" and
""AsyncBucket[<name>]"".

Result
------
Logged Buckets now display meaningful information.

Change-Id: I8addce1e453f9effa578c822456e685753712629",0,0,0,0,0,1,1,0,0
43359,Ia3ad4e7b7ee9f0b74499aeec0067c88ef9b5925a,http://review.couchbase.org/#/c/43359,3,bd4a0253ac690c3ec548e5df46a2344a435eb666,cdeb13cc496cea35a9b5127874cebca4e44d1b98,1,18/11/14,18/11/14,199,JCBC-624: improve JsonObject.getNUMBER methods,"JCBC-624: improve JsonObject.getNUMBER methods

Motivation
----------
When stored and read back, a JsonObject long field for example can be
restored as an Integer (because it is small enough). This leads to a
ClassCastException when calling the getLong method.
Same is true for the three Number-related get methods : getLong, getInt
and getDouble.

Modifications
-------------
The methods getLong, getInt and getDouble now all expect just a Number
instance in the Json content. If the Number is of the asked type, or if
it is null, it is returned directly. Otherwise it is converted to the
asked type by calling e.g. Number.longValue() method and letting Java
autobox the value.

An integration test  was added (because this is only visible when
storing and transcoding the document), along with two new unit tests in
JsonObjectTest (for conversion and null management).

Result
------
Putting a number in a JsonDocument, storing it and getting it back in
any numerical form now works correctly. Nulls are returned correctly
when value is not present. No more ClassCastExceptions occur as long as
the value is numerical.
All tests pass.

Change-Id: Ia3ad4e7b7ee9f0b74499aeec0067c88ef9b5925a",0,0,0,0,0,1,1,0,0
43362,Ib59f08c2caf15ac8b6d9edd8d513fa020c4549a1,http://review.couchbase.org/#/c/43362,2,cdeb13cc496cea35a9b5127874cebca4e44d1b98,636b06fa0e19f7e7a379628d50305e226eb04015,1,18/11/14,18/11/14,31,"document IndexOutOfBoundsException, not null","document IndexOutOfBoundsException, not null

Motivation
----------
In a JsonArray, the only error condition on get methods is when the
index provided is negative or too large. In this case, methods don't
return null as advertised in documentation but rather throw a
IndexOutOfBoundsException.
This is the correct behavior, and should be reflected in documentation.

Modifications
-------------
Documented the fact that get methods fail in IndexOutOfBoundsException
and not by returning null.
Added a quick unit test to show this Exception is expected.

Result
------
Documentation better reflects behavior of get methods, test passes.

Change-Id: Ib59f08c2caf15ac8b6d9edd8d513fa020c4549a1",0,0,0,0,0,1,1,0,0
43405,Icf29de8990c0a347e04638e45f2b106ca15d6dad,http://review.couchbase.org/#/c/43405,2,636b06fa0e19f7e7a379628d50305e226eb04015,c933f9d45f0188e97272f834a7d1dcb44193261e,0,19/11/14,19/11/14,2,Depend on the latest core-io SNAPSHOT,"Depend on the latest core-io SNAPSHOT

Change-Id: Icf29de8990c0a347e04638e45f2b106ca15d6dad",0,0,0,1,0,0,1,NA,NA
43407,I57c0a7fde683a13342ea78dd718a3417a43816fa,http://review.couchbase.org/#/c/43407,4,c933f9d45f0188e97272f834a7d1dcb44193261e,c0db6cceacae5991bf63d8a5073f5fe2190306a7,1,19/11/14,19/11/14,14,WIP: fix leaks when decoding json.,"WIP: fix leaks when decoding json.

Change-Id: I57c0a7fde683a13342ea78dd718a3417a43816fa",0,1,0,1,0,0,1,0,0
43440,Ie07b66166c91d5440f6f821fefd9493f16c2180e,http://review.couchbase.org/#/c/43440,3,c0db6cceacae5991bf63d8a5073f5fe2190306a7,a52c8438fbd4641d9466972dd44d44d6aa49406e,1,20/11/14,21/11/14,434,JCBC-614: Add Json builders from Map and List,"JCBC-614: Add Json builders from Map and List

Motivation
----------
For quality of life of developper, it is interesting to have factory
methods that allow building JsonObject and JsonArray instances from
respectively a Map and a List.

These source collections should be checked for invalid content such as
null keys or values of unsupported type.

Modifications
-------------
Added factory method from(Map<String, ?>) on JsonObject.
Added factory method from(List<?>) on JsonArray.

Attempting to use such methods with an empty or null collection will
result in the creation of an empty JsonValue.

Added unit tests to check behavior of factory methods, especially in
regard to invalid input (null values, null keys in map, values of an
unsupported type).

Result
------
Users can now build JsonObjects from a Map and JsonArrays from a List.
All new tests pass.

Change-Id: Ie07b66166c91d5440f6f821fefd9493f16c2180e",0,0,0,0,0,1,1,2,1
43554,I0e18fec8bae9102e6be18dbadae5b417367b3899,http://review.couchbase.org/#/c/43554,2,a52c8438fbd4641d9466972dd44d44d6aa49406e,71ec770d10060dfc281ac23478e9df3b0129c0ab,0,24/11/14,24/11/14,2,Set the version to 2.0.2-SNAPSHOT,"Set the version to 2.0.2-SNAPSHOT

Change-Id: I0e18fec8bae9102e6be18dbadae5b417367b3899",0,0,0,1,0,0,1,NA,NA
43556,I7e59c22f001c1053515e60ab74336b9181df785d,http://review.couchbase.org/#/c/43556,4,71ec770d10060dfc281ac23478e9df3b0129c0ab,1d06e0322fdb660f39aaf75d851d267485a138d6,1,24/11/14,02/12/14,363,JCBC-559: Retry View Responses if possible.,"JCBC-559: Retry View Responses if possible.

Motivation
----------
In various scenarios, the server can respond with non 200-status view responses, especially
during failover and rebalance. To make the client more robust, most of these responses indicate
an automatic retry, but not all of them.

The 1.4* SDK had sophisticated retry logic based on http status codes, as well as looking
into the response bodies if needed, so this changeset brings the same functionality to the
2.0 SDK.

Modifications
-------------
In the asynchronous view response stream, there is now a ViewRetryHandler which will inspect
the response status code and if needed, error the stream with a static exception (to avoid
overhead of creating a new one, since its internal only and no stack is needed). This exception
is then captured by an error handler and a retry (after a 10ms delay) is triggered.

Note that all other exceptions will be allowed to pass through, as well as specific error bodies
which have been identified to be ""correct"" responses and need to bubble up to the user - such
as a missing view.

The current code will retry until it gets a successful response, once a fail fast mode is
implemented there can be an option added to cancel it right away.

Result
------
More resilient error handling when transient server response errors are recieved, especially
during rebalance and failover. The implementation is now on par with what we had in the
1.4 SDK.

Change-Id: I7e59c22f001c1053515e60ab74336b9181df785d",0,1,0,0,0,0,1,1,1
43557,I573da4e94c1cdc7c2a9ebc35af654a3ba5bae5be,http://review.couchbase.org/#/c/43557,4,d711439c43bf2bd5388bab0c8800d68a1c4b57bd,1ad984246e3bd4659935115d3c9fddc2b7481ed8,1,24/11/14,05/12/14,25,[DO NOT MERGE] JCBC-633: Add Iterator to sync ViewResult,"[DO NOT MERGE] JCBC-633: Add Iterator to sync ViewResult

!! Only merging this for 2.1 since it adds an IF extension !!

Motivation
----------
Adding an iterator to ViewResult allows for nice for() syntax, without
having to pull out the iterator manually.

Modifications
-------------
Adds the Iterator<ViewRow> interface to the ViewResult and implementation,
just proxying through to the rows() automatically.

Result
------
More streamlined use of ViewResult and rows when iterating sync.

Change-Id: I573da4e94c1cdc7c2a9ebc35af654a3ba5bae5be",0,1,0,0,0,0,1,0,0
43756,I40d4b73c9e0579088b5d35c284567d5168b06d9f,http://review.couchbase.org/#/c/43756,2,31e3f5ce606d00e8d3857dfdd3a527a5f40a284d,9a2e103299817e85d9e4572d1b9a127d9bdd42cb,0,01/12/14,01/12/14,4,JCBC-641: Upgrade Spymemcached to 2.11.5,"JCBC-641: Upgrade Spymemcached to 2.11.5

Motivation
----------
Spymemcached 2.11.5 contains two important fixes, including one where
reconnect can take longer than necessary.

Modifications
-------------
Upgrade the dependency.

Change-Id: I40d4b73c9e0579088b5d35c284567d5168b06d9f",0,0,0,0,0,0,0,NA,NA
43765,I5dd30ae5e06f4cf97dfb37f05322ea368076d013,http://review.couchbase.org/#/c/43765,6,55c42f3c360b82f009532c70418abb3c6cdb0b8c,6a0c9140a4645362f900cad78c5c2c8e37ebf2bd,1,01/12/14,01/12/14,63,JCBC-638: Do not allow null or empty document IDs or negative expiry.,"JCBC-638: Do not allow null or empty document IDs or negative expiry.

Motivation
----------
Null or empty IDs are not suppored and need to be rejected immediately. Also
negative expiration times are ambigous and should be avoided.

Modifications
-------------
This changeset adds IllegalArgumentChecks right into the AbstractDocument to make
sure invalid JsonDocument params are not passed down into the core where they
potentially cause harm.

Result
------
Better usability and stability when not supported Document constructs are
created.

Change-Id: I5dd30ae5e06f4cf97dfb37f05322ea368076d013",0,1,0,0,0,0,1,0,0
43832,Idf3312519f918ee5d584f70e0e60b4b14de02e44,http://review.couchbase.org/#/c/43832,2,49408fc7ab80d9d60f8e6dcb1130b85240a724cd,900a917edb3c0e4242d6017ff7bb749741358310,1,02/12/14,02/12/14,111,JCBC-640: Improve Null handling in JsonValues,"JCBC-640: Improve Null handling in JsonValues

Motivation
----------
There is currently a NULL constant in JsonValue but it cannot be added
in a JsonObject or JsonArray. Furthermore, when one wants to add a null
value to a JsonObject, one has to perform an explicit cast in order to
do it (though the target type doesn't matter).

We aim at providing more ways to handle nulls int JsonObject and Array
and to make those options either more explicit or natural (principle of
least astonishement).

Modifications
-------------
Added putNull method in JsonObject and addNull method in JsonArray.

Furthermore, put(String, Object) and add(Object) respectively recognize
JsonValue.NULL and treat it as a simple null value.

JsonValue.NULL can also be contained in a Map or List passed to the
factory methods of respectively JsonObject and JsonArray and will also
be treated as a simple null value in this case.

Added relevant unit tests.
Added an integration test in JsonDocumentTest to check that null values
are correclty persisted and loaded back.

Result
------
Various ways for the user to include a null value in his JsonObjects or
JsonArrays.
New tests related to nulls pass.

Change-Id: Idf3312519f918ee5d584f70e0e60b4b14de02e44",0,0,0,0,0,1,1,0,0
43904,I4520ffad1a3195ea65fd8e29d01f49e10d1fc698,http://review.couchbase.org/#/c/43904,2,900a917edb3c0e4242d6017ff7bb749741358310,9b4154937614e0e4b236158ea54c346b058212ee,1,03/12/14,03/12/14,706,JCBC-644: More efficient timeout checks when blocking.,"JCBC-644: More efficient timeout checks when blocking.

Motivation
----------
The timeout() operator is very powerful in RxJava, but also has more
overhead and scheduling associated. In the simple case where the code
just needs to block finally and wait for a result, the latch of the
BlockingObservable can be reused - instead of waiting infinitely apply
a custom timeout.

Modifications
-------------
The BlockingObservable code with the latch has been extracted into
a utility class (for internal use only for now). All of the last
resort timeout and blocking calls have been changed to use the
extracted method instead of the Rx timeout() calls.

Note that the blocking operations which expose an Iterator on
Views and Query cannot be converted, because this optimization
only works on single-result operations.

Result
------
Less GC and scheduling overhead, because the simple blocking
latch is reused. It also avoids https://github.com/ReactiveX/RxJava/issues/1919
where possible, although not in all cases.

Change-Id: I4520ffad1a3195ea65fd8e29d01f49e10d1fc698",0,0,0,0,1,0,1,0,0
43956,Ie6ee7e6c3e787fcd2c038873f80419fb8066488d,http://review.couchbase.org/#/c/43956,2,9b4154937614e0e4b236158ea54c346b058212ee,89b070712fc973cb440c6161b9d024cb8a68170b,0,04/12/14,04/12/14,4,Prepare 2.0.2 Release,"Prepare 2.0.2 Release

Change-Id: Ie6ee7e6c3e787fcd2c038873f80419fb8066488d",1,0,0,1,0,0,1,NA,NA
44011,Iebf7537c86629ce26c447b68b5e47814da15d456,http://review.couchbase.org/#/c/44011,2,89b070712fc973cb440c6161b9d024cb8a68170b,a6c55421b3f4cdf1915b24c6d5e0c2a7347cd7c6,0,05/12/14,05/12/14,4,Start 2.1.0 development.,"Start 2.1.0 development.

Change-Id: Iebf7537c86629ce26c447b68b5e47814da15d456",0,0,0,1,0,0,1,NA,NA
44015,I1515710a7f2268c2e396b6adafb161903a59dbc4,http://review.couchbase.org/#/c/44015,9,ba52333a94d0b59319c9e92b60594e2c5ab730cc,cfae12f40caa3665e3f7cc8e3a220f863c999187,1,05/12/14,18/12/14,1742,WIP: Spatial Query,"WIP: Spatial Query

Change-Id: I1515710a7f2268c2e396b6adafb161903a59dbc4",0,1,1,1,1,0,1,1,1
44141,Ie9577fd55f6171406a0176c8b7ec7a4ee4db4bcc,http://review.couchbase.org/#/c/44141,2,05b95e33827af3e98dd0dc33ca4a3317a06b7314,75554f31f2e167da3ed78c222136429327aa2e0e,1,09/12/14,09/12/14,5,JCBC-647: Avoid WARN level log on failed over replica with observe.,"JCBC-647: Avoid WARN level log on failed over replica with observe.

Motivation
----------
During a failover/error condition, the actual number
of replicas will differ from the configured ones. There has always
been a check in place to not send a request to an inactive replica
(identified by -1 in the config). The code path used printed out
a WARN which, under high traffic, can seriously crowd the logs.

Modifications
-------------
The Locator already provides a pre-check to only return the active
replicas, which is used by replica get queries. This change also
makes the code use this path, only looping through the active
replicas and avoiding the very verbose WARN log message over
and over again.

Result
------
Less verbose logs, making it easier to discover actual problems.

Change-Id: Ie9577fd55f6171406a0176c8b7ec7a4ee4db4bcc",0,0,0,0,0,0,0,0,0
44186,I80e78a4a37e4c3b53242c5c0b7155b2f052fc68b,http://review.couchbase.org/#/c/44186,2,4b0c20e9c7b9aaa5fb9f717065a7bec3fc57e0ce,ed429a0481d283230fd38a8bd9a5111d9524d142,1,10/12/14,11/12/14,123,JCBC-651: Allow putting collections in JsonValues,"JCBC-651: Allow putting collections in JsonValues

Motivation
----------
We already added factory methods to JsonObject and JsonArray to create
them from collections (respectively Map and List).
It would be even more easy to also allow such collections to be added
on an instance as sub elements, converting them to the corresponding
allowed type on the fly.

Modifications
-------------
Added put(key, Map) and put(key, List) to JsonObject.
Added add(Map) and add(List) to JsonArray.
All four methods transform the collection to a JsonValue using adhoc
factory method then call the corresponding overload.

Added tests to check this behavior.

Result
------
Users have now more options to add Maps and Lists to a JsonObject or a
JsonArray instance, provided the Map and List conforts to limitations
described in the factory methods. They are added as sub-JsonObject or
sub-JsonArray and should be retrieved as such.

All tests pass.

Change-Id: I80e78a4a37e4c3b53242c5c0b7155b2f052fc68b",0,0,0,0,0,1,1,0,0
44242,I16ff16cfdfd20e6897377c9c003011eee34c8a75,http://review.couchbase.org/#/c/44242,3,ed429a0481d283230fd38a8bd9a5111d9524d142,d05482f17aab18f131bcfd47c9506a9323d80df7,1,11/12/14,11/12/14,14,JCBC-653: Respect development flag on view query.,"JCBC-653: Respect development flag on view query.

Motivation
----------
When development(boolean) is executed on the ViewQuery, the value
is ignored.

In addition, the BBOX param is not used in a regular view query,
so it should be removed.

Modifications
-------------
The changeset respects the development param and removes the unused
BBOX param from the internal datastructure.

Result
------
development(boolean) now works as expected and the unused BBOX param
is removed.

Change-Id: I16ff16cfdfd20e6897377c9c003011eee34c8a75",0,0,0,0,0,0,0,0,0
44380,I705141036b06a103b668ee395d3b426e32425ab3,http://review.couchbase.org/#/c/44380,2,d05482f17aab18f131bcfd47c9506a9323d80df7,a3f93c25cf91bcbfa526a2ea23c1e0c425ac5c62,1,16/12/14,16/12/14,42,JCBC-657: Explicitly release content when not used in transcoder,"JCBC-657: Explicitly release content when not used in transcoder

Motivation
----------
When the content() is not explicitly in the transcoder, it needs to be
released so that on mutating operations, the pool does not leak. Note
that it will leak slowly and not really noticable, because the server
response is very small for non-get responses.

But it should be released so that the chunks can be reused by the pool.

Modifications
-------------
Explicitly release() the content buffer if not null and not used later.

Result
------
Better reusability for the pool on mutating operations, leads to less
memory pressure on the chunks.

Change-Id: I705141036b06a103b668ee395d3b426e32425ab3",0,0,0,0,0,0,0,0,0
44381,I5548129934d366555c821c1a2dc7465707df1e91,http://review.couchbase.org/#/c/44381,3,a3f93c25cf91bcbfa526a2ea23c1e0c425ac5c62,6d7a36e275910f01a2d39d114789d46c2af6c89d,1,16/12/14,16/12/14,3,JCBC-658: LegacyTranscoder cannot work on direct ByteBuf,"JCBC-658: LegacyTranscoder cannot work on direct ByteBuf

Motivation
----------
With the ""no copy"" optimization introduced in 1.1.0 core-io, the
.array() is not available on a direct ByteBuf anymore.

Modifications
-------------
This code fixes the LegacyTranscoder to not operate on the array()
and instead read the bytes into a fresh array.

Result
------
No failing tests and more flexible behavior on both direct and non-direct
byte buffers.

Change-Id: I5548129934d366555c821c1a2dc7465707df1e91",0,0,0,0,0,0,0,0,0
44474,I4b55e35213fbfb52ea9b3490dcf05c1542b07532,http://review.couchbase.org/#/c/44474,3,e287dddc487c25028043b5c6a4a51046e278692f,204975a5324e057d9489bab2da029fc488730178,1,18/12/14,18/12/14,10,JCBC-661: View defer() needs to include the request on retry.,"JCBC-661: View defer() needs to include the request on retry.

Motivation
----------
When defer() is used to retry an operation on resubscribe, the actual
request needs to be created fresh to, since it contains the Subject. If
the core detects that the request included subject is already completed,
it will not retry it but rather return immediately.

Modifications
-------------
Create a new request on every defer for both regular and spatial views.

Result
------
Correctly retrying the request and not failing downstream because
ByteBufs have already been used.

Change-Id: I4b55e35213fbfb52ea9b3490dcf05c1542b07532",0,0,0,0,0,0,0,0,0
44520,Ia93cc63c8f383fc141896a5ff30a66c76d8b2445,http://review.couchbase.org/#/c/44520,6,204975a5324e057d9489bab2da029fc488730178,34ae40c1a3507697181543f5edb560cb5b2c8279,1,19/12/14,05/01/15,554,JCBC-662: Detect server feature availability,"JCBC-662: Detect server feature availability

Motivation
----------
More and more features are only available on newer versions of server,
and the SDK has to maintain a clear picture of the compatibility matrix
which is getting harder to do explicitely via environment variables.

We need a way of easily and programatically detect if a feature is
available on a specific instance of a Cluster (eg Spatial View are only
found on cbserver >= 3.0.2).

Modifications
-------------
Added Version to represent a version number (major.minor.patch).
Added CouchbaseFeature, an enum of all testable features known to the
current version of the SDK with the server version from which each was
available.

Added helper class FeaturesHelper with a method to check for a feature
on a given Cluster (or rather the ClusterManager's ClusterInfo).
It will parse the info, find out the tiniest server version and check
that version vs the feature's minimum required version.

Added utility method 'ignoreIfMissing' on ClusterDependentTest to allow
integration tests to easily skip tests if the required feature is not
available.

Result
------
Anyone is now easily able to check if the connected cluster can provide
a given feature. Internally, integration tests can be skipped if that's
not the case.

All new tests pass.

Change-Id: Ia93cc63c8f383fc141896a5ff30a66c76d8b2445",0,1,0,0,1,1,1,0,0
44522,I5999edbc6c4d223b0bf026b88b8e28b50febc7fa,http://review.couchbase.org/#/c/44522,3,a12821e150c72b825e36d8e5c6fd474b3bdaae2e,9a06d479eaffba53050aee8fcdf8ae91ac9e0889,1,19/12/14,19/01/15,47,JCBC-646: Reuse new observe customization functionality.,"JCBC-646: Reuse new observe customization functionality.

Motivation
----------
The corresponding change in core-io makes it possible to configure
the observe poll interval delay. The java-client needs to be adapted
to make use of the new functionality.

Modifications
-------------
This changeset passes the environment delay down to the observe calls.

Result
------
Configurable observe poll intervals.

Change-Id: I5999edbc6c4d223b0bf026b88b8e28b50febc7fa",0,0,0,0,0,0,0,0,0
44525,Iabacb330724cc4dd0f7f393d8eca42965aef38b3,http://review.couchbase.org/#/c/44525,2,1122b3e4bb700da88d4bd345659a40ba7b37acdf,e5647197d92a9e35459800828c71d249ca8acf12,1,19/12/14,19/12/14,228,Document that TimeoutException are wrapped,"Document that TimeoutException are wrapped

Every operation documented as throwing a TimeoutException in fact throws
a RuntimeException wrapping a TimeoutException.
Updated javadoc to reflect that.

Change-Id: Iabacb330724cc4dd0f7f393d8eca42965aef38b3",0,0,0,0,0,1,1,0,0
44574,I04cc7aa87c11a7b9ec28a70237230bdbb6a6936c,http://review.couchbase.org/#/c/44574,2,e5647197d92a9e35459800828c71d249ca8acf12,03bb529269f96ff2043d84996f4e42b285ea4070,1,22/12/14,22/12/14,100,JVMCBC-663: Correctly escape Json in toString(),"JVMCBC-663: Correctly escape Json in toString()

Motivation
----------
The Json specification indicates that control characters in Json must
be escaped. A subset of characters have a simple escape sequence with
an antislash (eg: \n, \b) while other must be represented in unicode 16
bits representation \uXXXX.

JsonObject and JsonArray currently don't produce escaped Json via their
toString methods.

Modifications
-------------
Modified JsonArray and JsonObject toString methods so that they rely on
the underlying Jackson transcoder to produce an output that is correct
in respect to Json escaping.

Added escaping tests for special characters.

Result
------
Adding a String that contains special characters like a carriage return
in a JsonObject or JsonArray now produce correctly escaped Json when
toString is called. New tests validate that.

Change-Id: I04cc7aa87c11a7b9ec28a70237230bdbb6a6936c",0,0,0,0,0,1,1,0,0
44595,I148fb2694bffe0e4235f5a151186037e92713656,http://review.couchbase.org/#/c/44595,4,fc8071498fb0a94bf646157fbaf3feb9489dbc8f,955cde6e1e710a8899d044a840aa05fc338523d1,1,22/12/14,08/01/15,685,JCBC-665: n1ql-dp4 Refactor Query into Statement,"JCBC-665: n1ql-dp4 Refactor Query into Statement

Motivation
----------
In dp4 queries are not just a string from the query language, but they
can have additional parameters. The current implementation just assume
there's no other relevant parameter.
We need to introduce the concept of a Statement (the current Query dsl)
and allow to construct queries with either just a Statement, or with
parameters (positional or named).

Modifications
-------------
What follows are BREAKING CHANGES:

Refactored Query class into Statement class (including in tests, vars,
javadoc). As a side effect, fixed the references to Query in javadoc of
SpatialViewQuery and ViewQuery.

The Query interface now represents a complete N1QL dp4 query, that is a
Statement and some other params. Such queries are sent to the server by
transforming them into Json (the N1QL server accepts Json body in POST
for queries).
Three implementations have been added: SimpleQuery replaces the use of
Query in previous versions, while ParametrizedQuery and PreparedQuery
allow to fill values for positional or named parameters in a Statement.

Previous methods query(String s) on buckets have been removed. Ad hoc
querying is still possible by providing a complete json representation
of the query, parameters and all included, through the queryRaw method.

The equivalent of previous query(Query q) method is now query(Statement
s) as the original Query interface has been renamed to Statement.

Added tests for the construction of N1QL json from various Queries.

Result
------
User now construct Statements using the DSL, that they use in a Query.
These conforms better to the dp4 specification of N1QL querying, and
will ultimately allow for optional and named parameters to be used.

Change-Id: I148fb2694bffe0e4235f5a151186037e92713656",0,1,0,0,1,1,1,0,0
44642,I92c54bbfde14491db4d0262084a4a9072c298927,http://review.couchbase.org/#/c/44642,3,fb93d70c09f89299c1c6f42bc0b43f260bd12e9c,6f73537b9ca2375d08ab16d488d72d33a5d393b3,1,24/12/14,31/12/14,180,JCBC-669: toMap and toList deep convert JsonValue,"JCBC-669: toMap and toList deep convert JsonValue

Motivation
----------
On JsonObject and JsonArray respectively, toMap and toList are expected
to convert the JsonValue to a collection. But what about sub-values of
type JsonObject/JsonArray? They should also recursively be converted to
java collections.

Modifications
-------------
Instead of just returning a copy of the backing collection, toMap and
toList check each value and if it is a JsonObject/JsonArray, calls the
toMap/toList method recursively.

Also added a sanity check to prevent a JsonValue to add itself as a sub
value (now throwing an IllegalArgumentException).

Added tests to validate these.

Result
------
The user can now convert a JsonObject to a Map and a JsonArray to a
List, without getting any references to the SDK json-related classes in
these (instead only having Maps and Lists where we had JsonObjects and
JsonArrays).

He will also be cut off with an IllegalArgumentException if he tries to
add a JsonValue to itself.

All json-related unit tests pass.

Change-Id: I92c54bbfde14491db4d0262084a4a9072c298927",0,0,1,0,0,1,1,0,0
44697,I1f358b85d865673d77a585dc1fac47b378b4c15d,http://review.couchbase.org/#/c/44697,2,f8faf1653139aa09144214c116f8ef937a04f4f3,84401a2316ab7a751f6489d1b00fff2d7d0abfa0,0,29/12/14,29/12/14,6,Start 2.0.3 development.,"Start 2.0.3 development.

Change-Id: I1f358b85d865673d77a585dc1fac47b378b4c15d",0,0,0,1,0,0,1,NA,NA
44699,I80e78a4a37e4c3b53242c5c0b7155b2f052fc68b,http://review.couchbase.org/#/c/44699,2,84401a2316ab7a751f6489d1b00fff2d7d0abfa0,2476a8f4c2171fd1ec7957bce9de45ad372d3ffd,1,29/12/14,29/12/14,123,JCBC-651: Allow putting collections in JsonValues,"JCBC-651: Allow putting collections in JsonValues

Motivation
----------
We already added factory methods to JsonObject and JsonArray to create
them from collections (respectively Map and List).
It would be even more easy to also allow such collections to be added
on an instance as sub elements, converting them to the corresponding
allowed type on the fly.

Modifications
-------------
Added put(key, Map) and put(key, List) to JsonObject.
Added add(Map) and add(List) to JsonArray.
All four methods transform the collection to a JsonValue using adhoc
factory method then call the corresponding overload.

Added tests to check this behavior.

Result
------
Users have now more options to add Maps and Lists to a JsonObject or a
JsonArray instance, provided the Map and List conforts to limitations
described in the factory methods. They are added as sub-JsonObject or
sub-JsonArray and should be retrieved as such.

All tests pass.

Change-Id: I80e78a4a37e4c3b53242c5c0b7155b2f052fc68b
Reviewed-on: http://review.couchbase.org/44186
Tested-by: Simon Baslé <simon@couchbase.com>
Reviewed-by: Michael Nitschinger <michael.nitschinger@couchbase.com>",0,0,0,0,0,0,0,0,0
44700,I04cc7aa87c11a7b9ec28a70237230bdbb6a6936c,http://review.couchbase.org/#/c/44700,2,2476a8f4c2171fd1ec7957bce9de45ad372d3ffd,316db9363ad8a38036a14647d92dc10b75d7696c,1,29/12/14,29/12/14,100,JVMCBC-663: Correctly escape Json in toString(),"JVMCBC-663: Correctly escape Json in toString()

Motivation
----------
The Json specification indicates that control characters in Json must
be escaped. A subset of characters have a simple escape sequence with
an antislash (eg: \n, \b) while other must be represented in unicode 16
bits representation \uXXXX.

JsonObject and JsonArray currently don't produce escaped Json via their
toString methods.

Modifications
-------------
Modified JsonArray and JsonObject toString methods so that they rely on
the underlying Jackson transcoder to produce an output that is correct
in respect to Json escaping.

Added escaping tests for special characters.

Result
------
Adding a String that contains special characters like a carriage return
in a JsonObject or JsonArray now produce correctly escaped Json when
toString is called. New tests validate that.

Change-Id: I04cc7aa87c11a7b9ec28a70237230bdbb6a6936c
Reviewed-on: http://review.couchbase.org/44574
Tested-by: Simon Baslé <simon@couchbase.com>
Reviewed-by: Michael Nitschinger <michael.nitschinger@couchbase.com>",0,0,0,0,0,0,0,0,0
44701,I16ff16cfdfd20e6897377c9c003011eee34c8a75,http://review.couchbase.org/#/c/44701,2,316db9363ad8a38036a14647d92dc10b75d7696c,f446f88c30c79f9c25c29e3d06ec9dcb2360ebeb,1,29/12/14,29/12/14,14,JCBC-653: Respect development flag on view query.,"JCBC-653: Respect development flag on view query.

Motivation
----------
When development(boolean) is executed on the ViewQuery, the value
is ignored.

In addition, the BBOX param is not used in a regular view query,
so it should be removed.

Modifications
-------------
The changeset respects the development param and removes the unused
BBOX param from the internal datastructure.

Result
------
development(boolean) now works as expected and the unused BBOX param
is removed.

Change-Id: I16ff16cfdfd20e6897377c9c003011eee34c8a75
Reviewed-on: http://review.couchbase.org/44242
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,0,0,0,0
44702,I705141036b06a103b668ee395d3b426e32425ab3,http://review.couchbase.org/#/c/44702,2,f446f88c30c79f9c25c29e3d06ec9dcb2360ebeb,f8b190f4f0b85e0c65d0d5a8b3495aede8be6383,1,29/12/14,29/12/14,42,JCBC-657: Explicitly release content when not used in transcoder,"JCBC-657: Explicitly release content when not used in transcoder

Motivation
----------
When the content() is not explicitly in the transcoder, it needs to be
released so that on mutating operations, the pool does not leak. Note
that it will leak slowly and not really noticable, because the server
response is very small for non-get responses.

But it should be released so that the chunks can be reused by the pool.

Modifications
-------------
Explicitly release() the content buffer if not null and not used later.

Result
------
Better reusability for the pool on mutating operations, leads to less
memory pressure on the chunks.

Change-Id: I705141036b06a103b668ee395d3b426e32425ab3
Reviewed-on: http://review.couchbase.org/44380
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,0,0,0,0
44703,I4b55e35213fbfb52ea9b3490dcf05c1542b07532,http://review.couchbase.org/#/c/44703,3,f8b190f4f0b85e0c65d0d5a8b3495aede8be6383,3429a89b586f203fc3475df7ff77fd727e6b3508,1,29/12/14,29/12/14,5,JCBC-661: View defer() needs to include the request on retry.,"JCBC-661: View defer() needs to include the request on retry.

Motivation
----------
When defer() is used to retry an operation on resubscribe, the actual
request needs to be created fresh to, since it contains the Subject. If
the core detects that the request included subject is already completed,
it will not retry it but rather return immediately.

Modifications
-------------
Create a new request on every defer for both regular and spatial views.

Result
------
Correctly retrying the request and not failing downstream because
ByteBufs have already been used.

Change-Id: I4b55e35213fbfb52ea9b3490dcf05c1542b07532
Reviewed-on: http://review.couchbase.org/44474
Reviewed-by: Simon Baslé <simon@couchbase.com>
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>",0,0,0,0,0,0,0,0,0
44704,Iabacb330724cc4dd0f7f393d8eca42965aef38b3,http://review.couchbase.org/#/c/44704,3,08f6186369ccac122dc71ffabca765463c86ec6d,e906552331e663e7609fecece248645c3fc62ef7,1,29/12/14,29/12/14,236,Document that TimeoutException are wrapped,"Document that TimeoutException are wrapped

Every operation documented as throwing a TimeoutException in fact throws
a RuntimeException wrapping a TimeoutException.
Updated javadoc to reflect that.

Change-Id: Iabacb330724cc4dd0f7f393d8eca42965aef38b3
Reviewed-on: http://review.couchbase.org/44525
Tested-by: Simon Baslé <simon@couchbase.com>
Reviewed-by: Michael Nitschinger <michael.nitschinger@couchbase.com>",0,0,0,0,0,0,0,0,0
44705,I470ce5d9d84cb0702f3ffd58447a88b8d9eb6b6c,http://review.couchbase.org/#/c/44705,2,f2646d5a9c308253d335981376e7e492f4c551cb,088adeb518bfe5d8d9881a74c68537bd67fb6752,1,29/12/14,29/12/14,99,JCBC-668: Remove empty() factory methods on Documents.,"JCBC-668: Remove empty() factory methods on Documents.

Motivation
----------
Recently a (valid) check has been added which makes sure
that every Document has a valid ID. This renders the
empty() factory methods useless, since their usage will
faill imediately.

Modifications
-------------
Remove the empty() factory methods to prevent their usage
and failure at runtime.

Result
------
Preventing incorrect API usage and removing dead methods.

Change-Id: I470ce5d9d84cb0702f3ffd58447a88b8d9eb6b6c",0,0,0,0,0,0,0,0,0
44706,I470ce5d9d84cb0702f3ffd58447a88b8d9eb6b6c,http://review.couchbase.org/#/c/44706,2,a7651d1a99a230ec1e1b39471829842fe220248b,2e1b1d593806e4a5aba8b8eb0f8d0d36eee77d0d,1,29/12/14,29/12/14,99,JCBC-668: Remove empty() factory methods on Documents.,"JCBC-668: Remove empty() factory methods on Documents.

Motivation
----------
Recently a (valid) check has been added which makes sure
that every Document has a valid ID. This renders the
empty() factory methods useless, since their usage will
faill imediately.

Modifications
-------------
Remove the empty() factory methods to prevent their usage
and failure at runtime.

Result
------
Preventing incorrect API usage and removing dead methods.

Change-Id: I470ce5d9d84cb0702f3ffd58447a88b8d9eb6b6c",0,0,0,0,0,0,0,0,0
44896,I00cf65f49151e91b3db18122a59f399f0bd2fdf9,http://review.couchbase.org/#/c/44896,2,c2d4282c9705c9032d6fa7e0c29d9584ee9c990e,a0284b705bd59f0377336b153c6a455045da1923,1,05/01/15,05/01/15,20,JCBC-671: Ignore bad responses after retry handling.,"JCBC-671: Ignore bad responses after retry handling.

Motivation
----------
When the view retry handler kicks in, it retries the view operation, but
the retryWhen handler emits all the ""bad"" responses as well. The code
afterwards instead only expects one good result to be emitted.

Modifications
-------------
The code now only returns the last() result, which is the good one, after
retrying succeeded. In addition, the code properly frees the info bytebufs,
since they are not accessed anymore when retried.

Result
------
Correct retry handling so that ever only one result is emitted.

Change-Id: I00cf65f49151e91b3db18122a59f399f0bd2fdf9",0,0,0,0,0,0,0,0,0
44900,I685dba9c38925affd589a5b8e72c790ba9687498,http://review.couchbase.org/#/c/44900,2,2027b1170dd5139deb84412ccd03c9cc430864fc,7403e8109f21b171e2586fb37ca2e022749d04cf,1,05/01/15,05/01/15,2,JCBC-672: Use timer instead of interval on view retry.,"JCBC-672: Use timer instead of interval on view retry.

Motivation
----------
On a view retry, the handler should only initate the retry once, instead
of over and over again on the interval.

Modifications
-------------
Use the timer instead of interval on the Observable to re-initiate the
retry logic.

Result
------
Correct behaviour on view retry.

Change-Id: I685dba9c38925affd589a5b8e72c790ba9687498",0,0,0,0,0,0,0,0,0
44902,I71573232bd55b8a2f2deb28eb3807932586f8b1b,http://review.couchbase.org/#/c/44902,2,7403e8109f21b171e2586fb37ca2e022749d04cf,d1af34ae3000dac71a498ae37e97474dee085717,1,05/01/15,05/01/15,4,JCBC-673: Retry cancelled view requests too since they are idempotent.,"JCBC-673: Retry cancelled view requests too since they are idempotent.

Motivation
----------
View requests can be freely retried, even when the node is removed and
forefully cancelled because it was in-flight. This makes sure that
less view operations are cancelled at the user level.

Modifications
-------------
Explicitly also retry RequestCancelledExceptions from the core layer.

Result
------
Transparent view retries when a node is removed or failed over.

Change-Id: I71573232bd55b8a2f2deb28eb3807932586f8b1b",0,0,0,0,0,0,0,0,0
44920,I00cf65f49151e91b3db18122a59f399f0bd2fdf9,http://review.couchbase.org/#/c/44920,2,497e569081e82b3a9c4c3f3c9ef53b88b8745ef3,a92077826fe6caa076c6a955eebbaa0d764817df,1,05/01/15,05/01/15,20,JCBC-671: Ignore bad responses after retry handling.,"JCBC-671: Ignore bad responses after retry handling.

Motivation
----------
When the view retry handler kicks in, it retries the view operation, but
the retryWhen handler emits all the ""bad"" responses as well. The code
afterwards instead only expects one good result to be emitted.

Modifications
-------------
The code now only returns the last() result, which is the good one, after
retrying succeeded. In addition, the code properly frees the info bytebufs,
since they are not accessed anymore when retried.

Result
------
Correct retry handling so that ever only one result is emitted.

Change-Id: I00cf65f49151e91b3db18122a59f399f0bd2fdf9
Reviewed-on: http://review.couchbase.org/44896
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,1,1,0,0
44921,I685dba9c38925affd589a5b8e72c790ba9687498,http://review.couchbase.org/#/c/44921,2,a92077826fe6caa076c6a955eebbaa0d764817df,72fee7eb172ca78140efa6cf33ac4719d51d6fc8,1,05/01/15,05/01/15,2,JCBC-672: Use timer instead of interval on view retry.,"JCBC-672: Use timer instead of interval on view retry.

Motivation
----------
On a view retry, the handler should only initate the retry once, instead
of over and over again on the interval.

Modifications
-------------
Use the timer instead of interval on the Observable to re-initiate the
retry logic.

Result
------
Correct behaviour on view retry.

Change-Id: I685dba9c38925affd589a5b8e72c790ba9687498
Reviewed-on: http://review.couchbase.org/44900
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>
Reviewed-by: Sergey Avseyev <sergey.avseyev@gmail.com>",0,0,0,0,0,1,1,0,0
44922,I71573232bd55b8a2f2deb28eb3807932586f8b1b,http://review.couchbase.org/#/c/44922,2,72fee7eb172ca78140efa6cf33ac4719d51d6fc8,c4c2980d4907c6f089df0adfda5c0cbd111e74a2,1,05/01/15,05/01/15,4,JCBC-673: Retry cancelled view requests too since they are idempotent.,"JCBC-673: Retry cancelled view requests too since they are idempotent.

Motivation
----------
View requests can be freely retried, even when the node is removed and
forefully cancelled because it was in-flight. This makes sure that
less view operations are cancelled at the user level.

Modifications
-------------
Explicitly also retry RequestCancelledExceptions from the core layer.

Result
------
Transparent view retries when a node is removed or failed over.

Change-Id: I71573232bd55b8a2f2deb28eb3807932586f8b1b
Reviewed-on: http://review.couchbase.org/44902
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Sergey Avseyev <sergey.avseyev@gmail.com>",0,0,0,0,0,1,1,0,0
45000,I3b7cba7adeeaf8d7a1b32b2d87d25ec3e45f53cc,http://review.couchbase.org/#/c/45000,3,43e9f49d804a0f1fb76b4ed06cf1a1bf352b40ce,f4619ac21741af0b8a7ac48db8d420cabd77ff75,1,06/01/15,08/01/15,582,JCBC-674: API for prepared statements,"JCBC-674: API for prepared statements

Motivation
----------
In N1QL dp4, prepared statements are a bit different from parametrized
statements. Executing a prepared statement requires two steps: obtain
the query plan then later on execute the query plan.

Modifications
-------------
Added classes to represent a PREPARE Statement (the one for step 1, that
allows to obtain an execution plan), and the QueryPlan itself.

PreparedQuery now uses the QueryPlan and can value parameters.

Added methods on (Async)Bucket to obtain a QueryPlan from a
PrepareStatement (step 2 is just using a PreparedQuery in the existing
method).

Refactored the various Query classes with a common base AbstractQuery,
fixed the unit tests in QueryToN1qlTest.

Added a utility class Buffers for some recurring operations on ByteBuf.

Added an integration test for Queries (work in progress).

Result
------
Users can now obtain a QueryPlan from a Statement and execute said plan.

Change-Id: I3b7cba7adeeaf8d7a1b32b2d87d25ec3e45f53cc",0,0,0,0,1,1,1,0,0
45021,I0557050dff1242b782e05a3af1fe8346cfb917ec,http://review.couchbase.org/#/c/45021,2,47621540ce97703f7e36deb5509d954957e6cf19,fad60ffabceb5583b9ef2625448e4a5912f25c57,1,07/01/15,07/01/15,13,JCBC-675: Inverse logic for view retry on 404 responses.,"JCBC-675: Inverse logic for view retry on 404 responses.

Motivation
----------
The current code has troubles to decide if a 404 response should be
propagated or retried, since the response has been changed in 3.0.2
when a view is not found.

Modifications
-------------
This code inverts the logic, checking explicitly for the phrase returned
when a node is not provisioned, making sure only this case is retried
and the others are propagated.

Result
------
More robust handling of 404 responses against different node versions.

Change-Id: I0557050dff1242b782e05a3af1fe8346cfb917ec",0,0,0,0,0,0,0,0,0
45023,I16b3ac391227b5ee68a60315917f50d1b769a480,http://review.couchbase.org/#/c/45023,2,fad60ffabceb5583b9ef2625448e4a5912f25c57,a6d13c8ed1cc32f7d003ce52dc464a31589f15e9,0,07/01/15,07/01/15,47,JCBC-622: Add name and description to generated pom.,"JCBC-622: Add name and description to generated pom.

Motivation
----------
These two properties were previously added by hand, but need to be part
of the POM for maven central publishing.

Modifications
-------------
Added the name and description, similar to the core-io implementation.
Also, Simon and Sergey have been formally added as developers.

Result
------
No more manually adding those properties by hand.

Change-Id: I16b3ac391227b5ee68a60315917f50d1b769a480",0,0,0,0,0,0,0,NA,NA
45024,Ic3860a21b820ba80fee93dffd4e620df59dbd360,http://review.couchbase.org/#/c/45024,3,a6d13c8ed1cc32f7d003ce52dc464a31589f15e9,5024f41d49519afb73ba2b32d94f1d99e8a95533,0,07/01/15,07/01/15,4,Preparing 2.0.3 release.,"Preparing 2.0.3 release.

Change-Id: Ic3860a21b820ba80fee93dffd4e620df59dbd360",0,0,0,1,0,0,1,NA,NA
45025,I0557050dff1242b782e05a3af1fe8346cfb917ec,http://review.couchbase.org/#/c/45025,2,e1e8adac459c5ba45051226b8c4ab89e733ecd27,16efce650598c410a9c0782abbc26b501b8d0265,1,07/01/15,07/01/15,13,JCBC-675: Inverse logic for view retry on 404 responses.,"JCBC-675: Inverse logic for view retry on 404 responses.

Motivation
----------
The current code has troubles to decide if a 404 response should be
propagated or retried, since the response has been changed in 3.0.2
when a view is not found.

Modifications
-------------
This code inverts the logic, checking explicitly for the phrase returned
when a node is not provisioned, making sure only this case is retried
and the others are propagated.

Result
------
More robust handling of 404 responses against different node versions.

Change-Id: I0557050dff1242b782e05a3af1fe8346cfb917ec
Reviewed-on: http://review.couchbase.org/45021
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,0,0,0,0
45026,I16b3ac391227b5ee68a60315917f50d1b769a480,http://review.couchbase.org/#/c/45026,2,15aaac3a8cd45224c1fcb65c17a3b0a721eb5361,6bf2ad67a6012243c489b93a21f47953a4fb23f4,0,07/01/15,07/01/15,49,JCBC-622: Add name and description to generated pom.,"JCBC-622: Add name and description to generated pom.

Motivation
----------
These two properties were previously added by hand, but need to be part
of the POM for maven central publishing.

Modifications
-------------
Added the name and description, similar to the core-io implementation.
Also, Simon and Sergey have been formally added as developers.

Result
------
No more manually adding those properties by hand.

Change-Id: I16b3ac391227b5ee68a60315917f50d1b769a480
Reviewed-on: http://review.couchbase.org/45023
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>
Reviewed-by: Sergey Avseyev <sergey.avseyev@gmail.com>",0,0,0,0,0,0,0,NA,NA
45078,I09e9d7cb82b32afc67c894fed37ed117b18d6574,http://review.couchbase.org/#/c/45078,2,27f91e4a3a9c4804b3d334ee74c852fc40dfbde9,1412f273998b252290d31d8ec86084a6592b3d22,1,08/01/15,09/01/15,143,JCBC-677: remove queryRaw from API,"JCBC-677: remove queryRaw from API

Motivation
----------
Offering a way to bypass the DSL and checked API by providing a full raw
N1QL request will probably lead to abuse.

Modifications
-------------
Encourage going through the API and DSL, which reflect what is really
supported in N1QL, by removing the queryRaw methods from the API.

Only leave it on CouchbaseAsyncBucket as a package-protected method in
order to allow tests and internal usage only.

Result
------
Less right for user to circumvent the client and craft bad N1QL queries.

Change-Id: I09e9d7cb82b32afc67c894fed37ed117b18d6574",0,0,0,0,0,1,1,0,0
45091,If5153f86a09c351a8c3adfdac41a2493cc6e3156,http://review.couchbase.org/#/c/45091,5,b0eab228375284fcfee1f6bb4b6260b2e462ed0c,ba4d66e48d42e7f66e2061ff5a7e90f49ea1f7ac,1,08/01/15,13/01/15,606,JCBC-678: support more parameters for N1QL query,"JCBC-678: support more parameters for N1QL query

Motivation
----------
It makes sense that some request parameters from N1QL specification be
tuned by the user. Offer an API to do that for relevant parameters.

Modifications
-------------
Added QueryParams, following the Parameter Object pattern, to allow to
set various relevant query parameters for N1QL. Added consistency enum.

Added unit tests to check the produced JSON query and the coherence of
the API.

Added method on JsonObject to remove an entry from the JSON, by key.

Result
------
Users now can further tune their N1QL queries with relevant parameters.

Change-Id: If5153f86a09c351a8c3adfdac41a2493cc6e3156",0,1,1,0,1,1,1,0,0
45142,I07a5a5a6c8742301a54e79c3d9a5166879706a58,http://review.couchbase.org/#/c/45142,5,e49ed32cd1a8a6f931246d5b8fe20d9c1c109a6d,e6de68a61f7b429d654afeb4cee209e5f09a8d7c,1,09/01/15,13/01/15,231,JCBC-676: factory methods for all Query,"JCBC-676: factory methods for all Query

Motivation
----------
For consistency with the rest of the API and centralization of Query
creation, use factory methods on Query rather than public constructors.

Modifications
-------------
All xxxQuery constructors made packaged protected, instanciation moved
to Query (now an abstract class).

Change-Id: I07a5a5a6c8742301a54e79c3d9a5166879706a58",0,1,1,0,0,1,1,0,0
45205,I9c3b0c07a9e084a17e7b6cc8a3255b0306c9c7fd,http://review.couchbase.org/#/c/45205,3,f945903e6644ddbe153e3c35f49fd38cae3b0f17,19a473b75a5e24d5d8b8695a925faefd66622024,1,12/01/15,13/01/15,141,JCBC-680: adapt (Async)QueryResult to new response,"JCBC-680: adapt (Async)QueryResult to new response

Motivation
----------
In the core, the response for N1QL has been enriched : multiple errors
and delayed final status on the request. Java client must be adapted to
reflect these changes.

Modifications
-------------
Reworked AsyncQueryResult and QueryResult to better reflect the data in
core response.
CouchbaseAsyncBucket now correctly build the whole data (and should also
correclty release underlying buffers).

Result
------
Core and Client response on Query are closer.

Change-Id: I9c3b0c07a9e084a17e7b6cc8a3255b0306c9c7fd",0,0,0,0,0,1,1,0,0
45214,I7004d1923bf43cf899113da48dd8aa146a458625,http://review.couchbase.org/#/c/45214,6,5da699a291f05a968d9dce418ddaed76369a1162,0fc22c2761fe27aba8be6a79f51b5c18058bd462,1,12/01/15,19/01/15,122,WIP: quicker dead config node detection.,"WIP: quicker dead config node detection.

Change-Id: I7004d1923bf43cf899113da48dd8aa146a458625",0,1,1,1,0,0,1,0,0
45269,Ib9f47101b8014981f55d15e5b42c9c1ea743b774,http://review.couchbase.org/#/c/45269,2,bef1d7ed146a49da6169fcf9a1c61fa9541f6576,bd766e19bc1bddf863c3cced7add7deb3fe092c9,1,13/01/15,13/01/15,15,Enable ByteBuf leak detector and log4j logging on tests.,"Enable ByteBuf leak detector and log4j logging on tests.

Motivation
----------
We need to enable the PARANOID leak detector as well on the client to
make sure we fix all leaks.

Change-Id: Ib9f47101b8014981f55d15e5b42c9c1ea743b774",0,0,0,0,0,0,0,0,0
45276,Id760ec2eecc5a83619367bc42fc7fb1f96182ea1,http://review.couchbase.org/#/c/45276,3,bd766e19bc1bddf863c3cced7add7deb3fe092c9,191d756e0a1cb9e8bd994af53d4f2d05528e8a86,1,13/01/15,15/01/15,17,Skip QueryTest if feature unavailable,"Skip QueryTest if feature unavailable

The QueryTest can be skipped altogether if query is not enabled on the
environment or if server version is under 3.0.0.

Change-Id: Id760ec2eecc5a83619367bc42fc7fb1f96182ea1",0,0,0,0,0,1,1,0,0
45310,I59a539e5fe6bb7cd0d9e54b1a5db1c9c93359bc3,http://review.couchbase.org/#/c/45310,2,eea078b696cca575f2cbe2a42a639a9d32ab1f06,849a53d1368fa01a1a94ebd4b75e6798c5e90554,1,14/01/15,14/01/15,72,JCBC-682: Free ByteBufs on get* before filtering them out.,"JCBC-682: Free ByteBufs on get* before filtering them out.

Motivation
----------
In all get* variants, the results are filtered on non-success. Since
content is still allocated in the responses, it needs to be properly
freed before filtering since the later code never has a chance to
do so properly.

Modifications
-------------
Free the allocated contents when the result is filtered out.

Result
------
No leaks when non-success responses for get* variants are returned.

Change-Id: I59a539e5fe6bb7cd0d9e54b1a5db1c9c93359bc3",0,0,0,0,0,0,0,0,0
45428,I2ac46c9b3c8575e1e5f00268b92fab4b873c31da,http://review.couchbase.org/#/c/45428,2,b80706f3aaeef2078deb69e1e619bbac45e4daec,b3f70e5c37d05d0a3be378f099ad30cd11b6a820,1,16/01/15,16/01/15,119,JCBC-674: Refactor prepared statements.,"JCBC-674: Refactor prepared statements.

Motivation
----------
The current prepared statements API is great, but it can be made a bit
simpler in terms of working with statements. The API can hide the
PrepareStatement and therefore reduce the surface level for the user.

Modifications
-------------
queryPrepare has been streamlined to pepare and it now accepts any
statement. If it is a normal one, it is automatically prepared before
sent to the server.

Result
------
Easier way to access and work with prepared statements.

Change-Id: I2ac46c9b3c8575e1e5f00268b92fab4b873c31da",0,0,0,0,0,0,0,0,0
45437,I77dc9eb9be4f923627755ba5901670bd8591516c,http://review.couchbase.org/#/c/45437,3,b3f70e5c37d05d0a3be378f099ad30cd11b6a820,5d52e4484033c366b2bdd5eae366b06e03befb5a,1,16/01/15,16/01/15,96,JCBC-683: allow raw statements in Query,"JCBC-683: allow raw statements in Query

Motivation
----------
Some statements like ""CREATE PRIMARY INDEX"" are not supported by the DSL
and we should offer users a way of doing them.

Modifications
-------------
Added ""raw"" factory method to Query for such statements + test.

Results
-------
Users can issue non-DSL statements like ""CREATE PRIMARY INDEX"".

Change-Id: I77dc9eb9be4f923627755ba5901670bd8591516c",0,0,0,0,0,1,1,0,0
45438,I7922b563e4c89d966168a122dac2d513d5668449,http://review.couchbase.org/#/c/45438,2,5e27e8869571ff0527fffadc3923813dd2fbb687,139e97b438d06e04cbf1df0c447e9bcab8760037,1,16/01/15,16/01/15,38,JCBC-684: Fix leaks in BucketManager,"JCBC-684: Fix leaks in BucketManager

Motivation
----------
The BucketManager has a few places where ByteBufs are not properly
released.

Modifications
-------------
Properly release allocated ByteBufs back to the allocator.

Result
------
BucketManager does not leak byte buffers anymore.

Change-Id: I7922b563e4c89d966168a122dac2d513d5668449",0,0,0,0,0,0,0,0,0
45439,Iea06c91f19843f0c487a9cd43788bddb884b0673,http://review.couchbase.org/#/c/45439,3,792e71e8701e71f6d26296811edc0a8e8ffee4f4,64044fe29e3dd584b2bf46b8de2c288f5ecdc2e1,1,16/01/15,16/01/15,9,Using raw statement to create index in test,"Using raw statement to create index in test

Making sure that N1QL primary indexes are at least created on default
before testing N1QL features.

Change-Id: Iea06c91f19843f0c487a9cd43788bddb884b0673",0,0,0,0,0,1,1,0,0
45442,I2b0aa18e49bfaebf06b20fc5af78e2f787ac2e41,http://review.couchbase.org/#/c/45442,2,8df49b9fcc91602ece6b558197d6fb3e43370131,3bb8f106684cc363900ceaa406f2c6bb3dfd84e7,1,16/01/15,16/01/15,15,Report unparsable ByteBuf in Excepton.,"Report unparsable ByteBuf in Excepton.

Motivation
----------
When the JSON buffer cannot be parsed for some reason, it needs
to be included in the error message for easier bug hunting.

Change-Id: I2b0aa18e49bfaebf06b20fc5af78e2f787ac2e41",0,0,0,0,0,0,0,0,0
45443,I3d368e175371b64df02ba0125130ea4e0f19172f,http://review.couchbase.org/#/c/45443,3,6326b9ef0b29442be5e098bd7c24646ad82d38a9,2b3a7a6e57d821abba53ad0af7ba4619b3d10c58,1,16/01/15,16/01/15,57,JCBC-685: Offer escaped id Expression method,"JCBC-685: Offer escaped id Expression method

Motivation
----------
Some identifiers in N1QL need to be escaped by backticks, for example
when they contain a dash. We need a method to create such identifier
Expressions.

Modifications
-------------
Added method ""i"" on Expression to create such escaped identifiers. The
method can create a list of identifiers, which are then separated by a
comma and space, each of them then escaped using `.

Result
------
Using identifier like ""beer-sample"" is possible by escaping it using i.

Change-Id: I3d368e175371b64df02ba0125130ea4e0f19172f",0,0,0,0,0,1,1,0,0
45447,Icd167d84a16dc0d182203ec77b08f01520c25639,http://review.couchbase.org/#/c/45447,2,fac5c392a3723427bc476044fb251198bbc29c5d,217cdbbf56fdc57b0bd33fe5cb181eb80974d2bd,1,16/01/15,16/01/15,35,JCBC-686: Make QueryResult iterable.,"JCBC-686: Make QueryResult iterable.

Motivation
----------
If the blocking query API is used, adding the Iterable interface provides
some nice syntactic sugar to iterate over rows with a for loop.

Modifications
-------------
Make the QueryResult implement the Iterable for the QueryRows and return
the iterator right away.

Result
------
Its now easier to just loop over the rows in the blocking api.

Change-Id: Icd167d84a16dc0d182203ec77b08f01520c25639",0,0,0,0,0,0,0,0,0
45450,If35edc4e0e32efc110a8dbba7ececb3eb9515143,http://review.couchbase.org/#/c/45450,5,19a201a3f44af40c114b86515a0b89fcd6641d1e,fd6b423b6708b3b40ef787a0e61e67fc4ccdc0f7,1,16/01/15,16/01/15,154,WIP block straight from constructor in QueryResult,"WIP block straight from constructor in QueryResult

Change-Id: If35edc4e0e32efc110a8dbba7ececb3eb9515143",0,1,0,1,0,1,1,1,1
45462,Icdd3559c68007ba3b6a9dfc0fc4518d739ebf521,http://review.couchbase.org/#/c/45462,2,fd6b423b6708b3b40ef787a0e61e67fc4ccdc0f7,bf6b715d3fe0fd01e1bf0c6440dc9e4b287e7334,0,16/01/15,16/01/15,4,Prepare 2.1.0-dp release,"Prepare 2.1.0-dp release

Change-Id: Icdd3559c68007ba3b6a9dfc0fc4518d739ebf521",0,0,0,1,0,0,1,NA,NA
45463,I63ee74350ffdae9a830d0c9785adde7c4382a12b,http://review.couchbase.org/#/c/45463,2,bf6b715d3fe0fd01e1bf0c6440dc9e4b287e7334,5087978647377b3588ac3a208021e25783404e44,0,16/01/15,16/01/15,4,Change master back to 2.1.0-SNAPSHOT,"Change master back to 2.1.0-SNAPSHOT

Change-Id: I63ee74350ffdae9a830d0c9785adde7c4382a12b",0,0,0,1,0,0,1,NA,NA
45555,I2e12877d0885482d7f8b66624021c6633f12ac92,http://review.couchbase.org/#/c/45555,2,96a97fc888a12e4010fd8ccfc2c28a411128c192,e12ba34bbe144ccee94ed6f7c4e8f6bb6e1adc1d,0,19/01/15,19/01/15,4,Depend on Spymemcached 2.11.6,"Depend on Spymemcached 2.11.6

Change-Id: I2e12877d0885482d7f8b66624021c6633f12ac92",0,0,0,1,0,0,1,NA,NA
45557,I43e9ad9ab2a48ec7fb5394564d380557cf869665,http://review.couchbase.org/#/c/45557,3,a9344083d61936d15b95f2a52e415f01417c7b45,89c733d0a620ba9f090c347cdcc9f01567f2655b,1,19/01/15,19/01/15,87,Fix unit tests with > 3.0.0 compat,"Fix unit tests with > 3.0.0 compat

Motivation & Modifications
--------------------------
Spatial views have changed and currently it is not planned to support
the new format going forward on the 1.4 branch. It needs to be
conditionally disabled.

Also, the test config did incorrectly parse out the version of the nodes,
this has been corrected by backporting the Version regex from 2.1.

Change-Id: I43e9ad9ab2a48ec7fb5394564d380557cf869665",0,0,0,0,0,0,0,0,0
45569,If01897db73218588b612e17addedde91f063f0d1,http://review.couchbase.org/#/c/45569,2,866e6fe9201bb70abcc1922d2f37db2d580496ad,5ea9850fc59848bef807c180d8af4e5756db39b5,1,19/01/15,19/01/15,15,Override environment core builder setters.,"Override environment core builder setters.

Motivation
----------
The core environment builder setters need to be overridden, so that
when used in a fluent API the proper return value is used.

Change-Id: If01897db73218588b612e17addedde91f063f0d1",0,0,0,0,0,0,0,0,0
45572,I8aefd1adae7ed93e8d15ac3cb35d6e7366e289b1,http://review.couchbase.org/#/c/45572,2,5ea9850fc59848bef807c180d8af4e5756db39b5,6dcd36706d1400e3f4d8ce960fe8ce45340bb616,1,19/01/15,26/01/15,90,JCBC-689: Throw exception when cluster manager passwd is wrong.,"JCBC-689: Throw exception when cluster manager passwd is wrong.

Motivation
----------
When a illegal password is used on the cluster manager, a proper
exception needs to be thrown that clearly shows what's going on.

Modifications
-------------
The code now checks the return status and throws a InvalidPasswordException
when it gets an unauthorized response from the server. If it is a different
error, a regular couchbase exception is thrown.

Result
------
Users will detect more quickly when they've entered a wrong password.

Change-Id: I8aefd1adae7ed93e8d15ac3cb35d6e7366e289b1",0,0,1,0,0,0,1,0,0
45796,Ide712a5b2fd836153e77273841c81225581c0924,http://review.couchbase.org/#/c/45796,2,e52c87cf4f87e4394fcb778825886b15891824ff,2224a31bb40d96fd89d13c9c6edce3471226b3d1,0,23/01/15,26/01/15,6,bump latest stable version in README's pom,"bump latest stable version in README's pom

also added links to the forums and blog

Change-Id: Ide712a5b2fd836153e77273841c81225581c0924",0,0,1,0,0,1,1,NA,NA
45860,Ibd7069884f043143c76f187ead8037b5af515e4c,http://review.couchbase.org/#/c/45860,4,7c99b4fe754525eb0d89c6642ef68cc01737a521,0c9270cd18110bb66618455a271834f6c1711c7c,1,26/01/15,26/01/15,164,JCBC-691: Expose n1ql's requestId/clientContextId,"JCBC-691: Expose n1ql's requestId/clientContextId

Motivation
----------
N1QL server assigns a requestId to each request and also lets the caller
set a clientContextId. Both are returned in the response, which allows
to track queries, log, logical operations, etc...

These should be exposed in the client's result.

Modifications
-------------
QueryResult and AsyncQueryResult now have getters for requestId and the
clientContextId.

Added tests for these getters in QueryTest + a test on truncation of the
clientContextId to 64 bytes on server side.

Improved QueryTests a bit.

Change-Id: Ibd7069884f043143c76f187ead8037b5af515e4c",0,1,0,0,0,1,1,0,0
45868,I535d51ba9d67077fba99d209f936efdd5458802d,http://review.couchbase.org/#/c/45868,2,0c9270cd18110bb66618455a271834f6c1711c7c,b0cc213ea71584d4284a9b5821c5c2581c66c16a,1,26/01/15,26/01/15,99,JCBC-692: fix lock on creating DefaultQueryResult,"JCBC-692: fix lock on creating DefaultQueryResult

Motivation
----------
Users reported that all they get when trying to do a n1ql query is a
timeout. This comes from a race condition/deadlock that happens when
instantiating the DefaultQueryResult (blocking on each component of the
AsyncQueryResult).

Modifications
-------------
Only ever block once, in CouchbaseBucket, instead of multiple times in
the DefaultQueryResult constructor, by using a zip.

Constructor now only deals with collections or scalar types, not with
Observables.

Results
-------
Acquiring a query result synchronously should now work as expected.

Change-Id: I535d51ba9d67077fba99d209f936efdd5458802d",0,0,0,0,0,1,1,0,0
45874,Ic5262612156f0487186c0c2b23933caf22c5fc8b,http://review.couchbase.org/#/c/45874,3,607cf652f4e128a9ae1d1d9f41d2b7a296e83963,4a41ffc53378eca905adb92acdb9e655851afe20,1,26/01/15,26/01/15,975,JCBC-542: Expose more specific KeyValue errors.,"JCBC-542: Expose more specific KeyValue errors.

Motivation
----------
This changeset builds on top of JVMCBC-132 and exposes the specific error
codes as proper errors/exceptions to the user. This especially includes
E2BIG and TMPFAIL.

Modifications
-------------
The operations have been modified to take the new errors into account
and convert them into proper exceptions. In addition, a ""catch all""
has been added.

Documentation for all new exceptions has been improved and added.

In addition to the return codes from the server, a proper check has
been put into place so that document IDs are not longer than 250
bytes - which would be rejected by the server anyway.

Result
------
Easier error handling and exposure for errors back up to the user
level.

Change-Id: Ic5262612156f0487186c0c2b23933caf22c5fc8b",0,0,0,0,1,0,1,0,0
45926,I198d226c3d19af3de1471cf0bd419251fea326b8,http://review.couchbase.org/#/c/45926,2,4a41ffc53378eca905adb92acdb9e655851afe20,be1aa4243dddbae0d54d11074bccd4ddb74b14c0,1,27/01/15,27/01/15,50,Add Builder overrides for proper chaining.,"Add Builder overrides for proper chaining.

Motivation
----------
The returned builder needs to be the one from the client, otherwise
the core environment gets built and not the extended one from the
java client.

Modifications
-------------
Builder methods have been properly overriden, and also sanity warnings
have been put into place to tell the user when his max lifetime is
smaller than the max configured blocking timeouts.

Change-Id: I198d226c3d19af3de1471cf0bd419251fea326b8",0,0,0,0,0,0,0,0,0
45928,I5d1648128aa513f27bca36c68ab23a9bc6a9f350,http://review.couchbase.org/#/c/45928,2,fca3571325eb31d50938c3dba70827bca5cb1ffa,3a6bb6bbd8a82d986e3d20ade248163e518363ad,1,27/01/15,27/01/15,450,Improve javadocs for RequestCancelledException.,"Improve javadocs for RequestCancelledException.

Change-Id: I5d1648128aa513f27bca36c68ab23a9bc6a9f350",0,0,0,1,0,0,1,0,0
45929,I6d880d1a5444cac5c67483edd661df60c954fe9d,http://review.couchbase.org/#/c/45929,4,a90777db991cd5e483694214c5abcb0303fd3277,27dbfb004bc0f88e2cc1855f19b0e0952f79e0dc,1,27/01/15,27/01/15,120,JCBC-628: Add parse() to create JsonValues from String,"JCBC-628: Add parse() to create JsonValues from String

Motivation
----------
Add another way of creating JsonObject/JsonArray, from JSON Strings.

Modifications
-------------
Added parse() static method on both classes, named like that to avoid
confusion with from method called with a String.

Added unit tests to check behavior.

Results
-------
Users can now easily create a JsonArray/JsonObject from a JSON String
(provided they know the kind of JSON value the String contains).

Change-Id: I6d880d1a5444cac5c67483edd661df60c954fe9d",0,1,0,0,0,1,1,1,1
45932,I90fc7b605b297b844615e131efe070eef62c6786,http://review.couchbase.org/#/c/45932,4,371beb564ce059da7ba9a47f17e0ddc1d93dbe4a,cbbf609cd74d75c72bcb72fb8307a4cdd047baad,1,27/01/15,27/01/15,123,commit message and jira issue to follow,"commit message and jira issue to follow

Change-Id: I90fc7b605b297b844615e131efe070eef62c6786",0,1,0,1,0,1,1,0,0
45963,I5d410aa7f8d9dd26bbf47434c1ec2f2e30864c67,http://review.couchbase.org/#/c/45963,2,cbbf609cd74d75c72bcb72fb8307a4cdd047baad,16b105701e266c05bfaf0b22c9173f8bcc74a411,0,28/01/15,28/01/15,4,Prepare 2.1.0-dp2 release,"Prepare 2.1.0-dp2 release

Change-Id: I5d410aa7f8d9dd26bbf47434c1ec2f2e30864c67",0,0,0,1,0,0,1,NA,NA
45983,I7168ff9a1341d2d1bd90c7b735e9217c4498610e,http://review.couchbase.org/#/c/45983,2,16b105701e266c05bfaf0b22c9173f8bcc74a411,b905c6df2871381f7fc1476e2343e2e200586a3f,1,28/01/15,29/01/15,309,JCBC-407: Allow DNS SRV bootstrap.,"JCBC-407: Allow DNS SRV bootstrap.

Motivation
----------
In order to allow users to centralize their seed nodes list in
DNS records, DNS SRV should be utilized to automatically fetch
those records.

Modifications
-------------
Not all DNS SRV informations are supported, weighting and priority
are not.

	- dnsSrvEnabled() must be set on the environment.
	- only one record is passed into the seed node list
	- this node is used as the dns srv lookup record
	- the fetched list is then used to bootstrap the cluster

Note that the fallback path is that the node passed in for DNS SRV
bootstrap will be used as the A record for further bootstrap.

Here is a sample set of records (replace _couchbases if you have
sslEnabled on the environment):

_couchbase._tcp.example.com.  3600  IN  SRV  0  0  0  node1.example.com.
_couchbase._tcp.example.com.  3600  IN  SRV  0  0  0  node2.example.com.
_couchbase._tcp.example.com.  3600  IN  SRV  0  0  0  node3.example.com.

Result
------
It is now possible to fetch a bootstrap list through DNS SRV.

Change-Id: I7168ff9a1341d2d1bd90c7b735e9217c4498610e",0,0,0,0,0,0,0,0,0
46030,Ia4538c8ace57a2ba426562d286f725cccc3c5e5b,http://review.couchbase.org/#/c/46030,2,b905c6df2871381f7fc1476e2343e2e200586a3f,941e88541c7a8513fddd20d377bed2b2f3040d8a,1,29/01/15,29/01/15,34,JCBC-696: Expose the list of nodes directly on the BucketInfo.,"JCBC-696: Expose the list of nodes directly on the BucketInfo.

Motivation
----------
Based on user feedback it was identified that direct access to the list
of nodes in the cluster/bucket makes it easier to consume it for
further processing at the user level.

Modifications
-------------
Iterate over the raw response, filter out the hostnames (without port)
and expose it directly as a getter. A test has been modified to make
sure it works as expected.

Result
------
Easier access to the list of nodes in that cluster.

Change-Id: Ia4538c8ace57a2ba426562d286f725cccc3c5e5b",0,0,0,0,0,0,0,0,0
46031,I41e86ec393a88b11db84889282eaa8a632650197,http://review.couchbase.org/#/c/46031,2,45c6a5e3b05b582ef9c0fc0e267cec5e3e135e12,f128e5c03253f9ce679d54981e5617ea5cce3a4c,1,29/01/15,29/01/15,36,Remove printlns from tests.,"Remove printlns from tests.

Change-Id: I41e86ec393a88b11db84889282eaa8a632650197",0,0,0,1,0,0,1,0,0
46037,I698566cb8ca199307330453ddb53f591bbbb1658,http://review.couchbase.org/#/c/46037,2,9b1824dbedca1c4807a676cde9131508f6129677,af5498f4dc64c0c308eced417accc3b048a92573,0,29/01/15,29/01/15,4,Change master back to 2.1.0-SNAPSHOT,"Change master back to 2.1.0-SNAPSHOT

Change-Id: I698566cb8ca199307330453ddb53f591bbbb1658",0,0,0,1,0,1,1,NA,NA
46039,I48efb9bc57c85c3b9caa456755fa2e25b5920860,http://review.couchbase.org/#/c/46039,3,af5498f4dc64c0c308eced417accc3b048a92573,5978b6549f12e93e2efbd9938aabc8872a9e7bfc,1,29/01/15,30/01/15,6,JVMCBC-26: correctly override keepAliveInterval,"JVMCBC-26: correctly override keepAliveInterval

Change-Id: I48efb9bc57c85c3b9caa456755fa2e25b5920860",0,0,0,1,0,1,1,0,0
46075,I241c36eb652f06e333dc6eb27a5392a02b7d7b94,http://review.couchbase.org/#/c/46075,9,ce7b1fe37da569945aeee1bc6c1561b7075eded4,0ab6073403b30c4fadf1c7f7b9b37f7ad64a7139,1,29/01/15,29/01/15,335,wip: locator helper.,"wip: locator helper.

Change-Id: I241c36eb652f06e333dc6eb27a5392a02b7d7b94",0,1,0,1,0,0,1,1,1
46138,If7ad39a80a01690b48cc1fc302e348aa1504036f,http://review.couchbase.org/#/c/46138,2,eb609c934b3ca3e17c9dd6623af256dba8284e8b,faae6865943377e8f83d67abbc2e6ca28f0b5f49,1,30/01/15,30/01/15,6,"Revert ""correctly override keepAliveInterval""","Revert ""correctly override keepAliveInterval""

This reverts commit ce97d37508f048ad3481c1bfbf0fca30a37da3f7.

Change-Id: If7ad39a80a01690b48cc1fc302e348aa1504036f",0,0,0,0,0,1,1,0,0
46140,I8a112cc44f38d513e03fbb5a70ebae4cf34d6100,http://review.couchbase.org/#/c/46140,2,faae6865943377e8f83d67abbc2e6ca28f0b5f49,01e1d3a2d0aa96836a3c3e78864c3c68a90a7530,1,30/01/15,30/01/15,6,correctly override keepAliveInterval,"correctly override keepAliveInterval

this change relates to JVMCBC-21.

Change-Id: I8a112cc44f38d513e03fbb5a70ebae4cf34d6100",0,0,0,0,0,1,1,0,0
46224,I1d2ef62a8005ee4e56cb254eb5460e27252883b7,http://review.couchbase.org/#/c/46224,2,01e1d3a2d0aa96836a3c3e78864c3c68a90a7530,00762a91ee14dfce396672a0873d764fc955e10e,1,02/02/15,02/02/15,4,JCBC-698: Increase disconnect timeout and make Bucket#close() use it.,"JCBC-698: Increase disconnect timeout and make Bucket#close() use it.

Motivation
----------
After closer inspection, the disconnect timeout set to 5 seconds looked too
short. It  has been increased to 25 seconds. Also, the bucket close method
was using the management timeout, but of course should also use the
disconnect timeout.

Change-Id: I1d2ef62a8005ee4e56cb254eb5460e27252883b7",0,0,0,0,0,0,0,0,0
46310,Icb2614e91d624ababc40a2f2794382001e91d1d1,http://review.couchbase.org/#/c/46310,3,00762a91ee14dfce396672a0873d764fc955e10e,90e43a18e5f32459342463b376b85b4ceb576e29,1,03/02/15,03/02/15,43,JCBC-701: Error with DocumentDoesNotExistException on remove,"JCBC-701: Error with DocumentDoesNotExistException on remove

Motivation
----------
Currently the catch-all CouchbaseException is thrown, which does
not provide the proper semantics needed.

Modifications
-------------
Throwing the proper exception makes it possible for the user to
apply fine grained control and retry logic as needed, so this
change adds a test to verify.

Result
------
Correct exception thrown on remove when the document is not found.

Change-Id: Icb2614e91d624ababc40a2f2794382001e91d1d1",0,0,0,0,0,0,0,0,0
46324,I42d0fc2c120474aa187235da268feb1d5ded815e,http://review.couchbase.org/#/c/46324,2,90e43a18e5f32459342463b376b85b4ceb576e29,51999b20a3bce486c284df4f468e388b3f8b3682,1,03/02/15,03/02/15,97,JCBC-702: Avoid flatMap for insert/upsert/replace.,"JCBC-702: Avoid flatMap for insert/upsert/replace.

Motivation
----------
Flatmap is more expensive (gc, syncing) and is not needed in this
case were a simple conversion is happening.

Modifications
-------------
flatMap is converted to a regular map, giving a slight performance
boost and better GC characteristics. In addition, it is now in
line with all the other methods in the bucket for similar
operations.

Result
------
Simpler implementation and slightly better performance and GC
behaviour.

Change-Id: I42d0fc2c120474aa187235da268feb1d5ded815e",0,0,0,0,0,0,0,0,0
46377,I741abbe5ea316e6c19ff91633b5434a50bdc10a3,http://review.couchbase.org/#/c/46377,2,51999b20a3bce486c284df4f468e388b3f8b3682,7fd79e0e7f6c80913d56dde15e40e456d7593ade,0,04/02/15,04/02/15,6,Prepare 2.1.0 Release,"Prepare 2.1.0 Release

Change-Id: I741abbe5ea316e6c19ff91633b5434a50bdc10a3",0,0,0,1,0,0,1,NA,NA
46576,I5c47ebd4345b1c0ebd854c932785858640225767,http://review.couchbase.org/#/c/46576,2,7fd79e0e7f6c80913d56dde15e40e456d7593ade,85b02969c0e3faf474f7804fbb2c2a9ff15f47ea,0,09/02/15,09/02/15,2,Start working on 2.1.1,"Start working on 2.1.1

Change-Id: I5c47ebd4345b1c0ebd854c932785858640225767",0,0,0,1,0,0,1,NA,NA
46580,If8a8b89e9946052c61278e8ef239e75ec8cf3d0b,http://review.couchbase.org/#/c/46580,2,85b02969c0e3faf474f7804fbb2c2a9ff15f47ea,5e1faa90b2c43a2f6989c04ef21b10980d7ec68c,1,09/02/15,09/02/15,311,JCBC-703: Optimize PersistTo.NONE && ReplicateTo.NONE,"JCBC-703: Optimize PersistTo.NONE && ReplicateTo.NONE

Motivation
----------
Currently when someone uses the mutation overloaded methods
with persistence constraints, even when both are set to NONE
the caller incurs some overhead since we call into Observe
at least one time (with flatMap). This can reduce performance
even when those calls are not needed.

Modifications
-------------
Short circuit incoming requests to just use the regular
mutation method and never call into the Observe loops.

Result
------
Better performance, especially in the case where someone uses
the overridden methods and then through some external flag/variable
sets it to NONE.

Change-Id: If8a8b89e9946052c61278e8ef239e75ec8cf3d0b",0,0,0,0,0,0,0,0,0
46582,I76836056b83930bee15e8f3eb58ae480871942aa,http://review.couchbase.org/#/c/46582,2,5e1faa90b2c43a2f6989c04ef21b10980d7ec68c,c7c08eff82227f0a8de3c96f51a6be984c95a1d1,0,09/02/15,09/02/15,2,Depend on core-io 1.1.1-SNAPSHOT,"Depend on core-io 1.1.1-SNAPSHOT

Change-Id: I76836056b83930bee15e8f3eb58ae480871942aa",0,0,0,1,0,0,1,NA,NA
46593,I6afa1d5d9de6cf9e0295ad550624349f50d4d4ae,http://review.couchbase.org/#/c/46593,2,c7c08eff82227f0a8de3c96f51a6be984c95a1d1,ea083eb8541c702611bbe39f38d492a86c2904e1,1,09/02/15,09/02/15,67,JCBC-704: Funnel all durability errors into a DurabilityException.,"JCBC-704: Funnel all durability errors into a DurabilityException.

Motivation
----------
Currently the documentation states correctly that all durability errors which
violate the requirement are caught and raised in the DurabilityException.
This is currently only the case on one mutation method, all the others
need to follow suit.

Modifications
-------------
Properly catch and collect the errors on mutation and remove observe methods.

Also the BinaryTest has been renamed to KeyValueTest for clarity.

Result
------
Proper exception thrown as advertised in the docs.

Change-Id: I6afa1d5d9de6cf9e0295ad550624349f50d4d4ae",0,0,0,0,0,0,0,0,0
46624,I952b7f47aa3489c0ea2be27f675757d3e82f3b34,http://review.couchbase.org/#/c/46624,3,ea083eb8541c702611bbe39f38d492a86c2904e1,e08443d793bfbd4787378ebe8bdc34312bc38eae,1,10/02/15,11/02/15,8,wip: new observe,"wip: new observe

Change-Id: I952b7f47aa3489c0ea2be27f675757d3e82f3b34",0,0,0,1,0,0,1,0,0
46679,I5a9a032376ec63b115500fa2916ac95cb6ac2ea7,http://review.couchbase.org/#/c/46679,3,1b8227726d0ad05c6c2e49daa533c600b3f5ad3f,85d6745d489f711f2c94706259308c2966dd0b12,1,11/02/15,11/02/15,342,wip: serialization,"wip: serialization

Change-Id: I5a9a032376ec63b115500fa2916ac95cb6ac2ea7",0,0,0,1,0,0,1,0,0
46682,Id22ee27957787705be84aba8aeeb70ae5fe27c74,http://review.couchbase.org/#/c/46682,3,db331becc513c978a165c503b1506b1f9b6e06af,46b5b02501e7c7dd60ce0d28f17b9444201b0bd8,1,11/02/15,11/02/15,44,JCBC-707: Avoid String conversions in the JsonTranscoder.,"JCBC-707: Avoid String conversions in the JsonTranscoder.

Motivation
----------
When converting to and from JsonObjects in the JsonTranscoder, we
can avoid going through Strings since Jackson supports writing
and reading into byte arrays directly.

This reduces garbage collection (especially in larger docs), since
no Strings are allocated temporarily in the TLAB.

Modifications
-------------
Add methods which convert to and from JsonObjects to ByteBufs directly
and use them in the transcoder.

Result
------
Less GC produced and quicker conversions.

Change-Id: Id22ee27957787705be84aba8aeeb70ae5fe27c74",0,0,0,0,0,0,0,0,0
46690,I46a80fce5584e179e34aea9a622b5139efecfdda,http://review.couchbase.org/#/c/46690,2,e7b05380e130c9122c3baaf8ae6a93b81edd0316,1fed43a2d9500145c1f4c5b41a59ed141ec8f771,1,11/02/15,11/02/15,18,JCBC-707: Make sure to account for array offsets.,"JCBC-707: Make sure to account for array offsets.

Motivation
----------
When the array is backing more than one ByteBuf the code needs to
make sure to only grab the slice which is actually belonging to
the specific ByteBuf.

Modifications
-------------
Calculate the offset + index range for the byte[] slice before
sending it over to jackson.

Result
------
More resilient extraction logic.

Change-Id: I46a80fce5584e179e34aea9a622b5139efecfdda",0,0,0,0,0,0,0,0,0
46692,I53c6fc1db480ec212b399b01e8bff72bb73e7bf1,http://review.couchbase.org/#/c/46692,3,1ea967b44d6c0f862c890575229443cdc45c4160,4a43fa423f54c8f73b6870ef6b949f83f71e4dcb,1,11/02/15,11/02/15,288,JCBC-708: Exception for most probable lock failures,"JCBC-708: Exception for most probable lock failures

Motivation
----------
For lock related operations, the server doesn't have an explicit error
code for lock-specific errors (like the key is already locked or the cas
provided to unlock is wrong). It returns TEMPFAIL. Another transient
error code is BUSY, where we are sure this is not related to locks.

Distinguish between these two by introducing a new Exception. Don't hide
the ambiguity by returning a CASMismatchException (when the actual error
could be another transient one).

Modifications
-------------
Added new TemporaryLockFailureException, thrown when receiving TEMPFAIL.

BREAKING: unlock now throws TemporaryLockFailureException when the cas
doesn't match, because the server doesn't let us know for sure, so a
CASMismatchException could hide another problem.

Amended tests and added a test for double locking failure.

Results
-------
Client can be sure a transient error is not related to locks when
receiving a TemporaryFailureException.
On the other hand, lock problems are the most probable cause for the new
exception, TemporaryLockFailureException.
Unit tests and integration test pass.

Change-Id: I53c6fc1db480ec212b399b01e8bff72bb73e7bf1",0,0,0,0,0,1,1,0,0
46740,Id68df2eddefc7eb2f05d7bf8a4ff570b9fc18281,http://review.couchbase.org/#/c/46740,2,4a43fa423f54c8f73b6870ef6b949f83f71e4dcb,1fb76f6d6094b348848644ef6619bd96347afc1f,1,12/02/15,12/02/15,93,JCBC-709: Make view and spatial view query serializable.,"JCBC-709: Make view and spatial view query serializable.

Motivation
----------
Making the query objects serializable allows us to transmit them
over the network in connectors like spark.

Modifications
-------------
Serializable interface is extended and also proper equals methods
have been put into place to facilitate equals comparisons.

Result
------
Allow the possibility to serialize query objects.

Change-Id: Id68df2eddefc7eb2f05d7bf8a4ff570b9fc18281",0,0,0,0,0,0,0,2,1
46873,I783d10753c1cbe7bbba4d3940922b78161c9023e,http://review.couchbase.org/#/c/46873,2,2917dce2d9adf05a9e79fe6b1591327abba6bd59,ab313ff8154228d1b5965fc9143ea22c7460393c,1,16/02/15,16/02/15,35,JCBC-700: Set ObserveFuture isDone() properly.,"JCBC-700: Set ObserveFuture isDone() properly.

Motivation
----------
When a ObserveFuture is returned (the underlying one which is always
returned when PersistTo or ReplicateTo overloads are used) the current
code always returns false on isDone, even when done.

Modifications
-------------
Overriding the set() method which is called by the callback to set
the proper status and count down the latch to also set the ""done""
flag.

Adding a test case to verify its working.

Result
------
Proper behavior when calling isDone() on observe overloads.

Change-Id: I783d10753c1cbe7bbba4d3940922b78161c9023e",0,0,0,0,0,0,0,0,0
46934,I1ca76f8b8056bf2e7ef644358ea88691f3814eb9,http://review.couchbase.org/#/c/46934,3,c829195f27422eba220464e04bb7267402622e0b,93f747995049501ab3ca88b66aeb73458f96fcb8,1,17/02/15,17/02/15,136,JCBC-711: Prepare statements to be Serializable,"JCBC-711: Prepare statements to be Serializable

Motivation
----------
In order to use N1QL capabilities in Spark, Query implementations must
be Serializable. This in turns necessitate the underlying statements to
be Serializable...

Modifications
-------------
Introduced an intermediary interface to explicitly distinguish between
the (non-serializable) DSL and other statements. Used this interface in
AbstractQuery to ensure all its fields are Serializable.

Each statement used in various Query implementations is now of the
SerializableStatement kind. When passing in a DSL, it is converted to a
Serializable alternative using RawStatement.

Result
------
Statements stored in Query implementations are now marked Serializable,
paving the way to fully Serializable statements and queries.

Change-Id: I1ca76f8b8056bf2e7ef644358ea88691f3814eb9",0,0,0,0,0,1,1,0,0
46935,Ib73800d8eeff7ef4a9a2c0039cd0dca7d2199c00,http://review.couchbase.org/#/c/46935,2,93f747995049501ab3ca88b66aeb73458f96fcb8,028cb64ac62d90526a8c596daea0018b681ba7f1,1,17/02/15,17/02/15,163,JCBC-711: Make Query and QueryParams serializable.,"JCBC-711: Make Query and QueryParams serializable.

Motivation
----------
To allow N1QL queries to be run through spark and other components,
the queries need to be serializable. Also the params which are
attached to the queries need to be serializable.

Modifications
-------------
Query and QueryParams have been made serializable, tests added to
make sure it works properly.

Result
------
N1QL queries can be used through spark and other components that
require this functionality.

Change-Id: Ib73800d8eeff7ef4a9a2c0039cd0dca7d2199c00",0,0,0,0,0,0,0,1,1
46950,Id9af446886532494529b65926bcf1c3838c75bad,http://review.couchbase.org/#/c/46950,4,028cb64ac62d90526a8c596daea0018b681ba7f1,f21a98ee5acb218c0614bfde2af02e8b50bebaad,1,17/02/15,26/02/15,11,JCBC-712: Cache info() call on the view response.,"JCBC-712: Cache info() call on the view response.

Motivation
----------
Since the underlying core change now does not allow more than one
subscription, the info() call needs to be cached since it can
be accessed twice if the response is != 200.

Modifications
-------------
Cache the info() observable buffer and pass it on, leading to only
one upstream subscription.

Result
------
No double subscription exceptions.

Change-Id: Id9af446886532494529b65926bcf1c3838c75bad",0,1,1,0,0,0,1,0,0
46951,Ia4f3f194973c76e5156a2779309fec50c7f707d6,http://review.couchbase.org/#/c/46951,2,5ef8b048d94e833bde63fec1f53fbad33e24bf39,e0d9b3badea51e97966a1a3037ed3fb9a352482b,1,17/02/15,18/02/15,29,JCBC-713: Fix leak in flush(),"JCBC-713: Fix leak in flush()

Motivation
----------
The upsert response content was not properly released, this is now
fixed.

Change-Id: Ia4f3f194973c76e5156a2779309fec50c7f707d6",0,0,0,0,0,0,0,0,0
47230,I75d798b71a27b188b4bd5fbc273b01acb6eb8e37,http://review.couchbase.org/#/c/47230,2,e0d9b3badea51e97966a1a3037ed3fb9a352482b,ba81d2836560ff8e32f35a67b458ae84e5f38bad,1,23/02/15,23/02/15,76,JCBC-717: expose N1QL signature,"JCBC-717: expose N1QL signature

Motivation
----------
N1QL signature is relevant to some users reviewing N1QL. It is exposed
in the core since JVMCBC-153 and should be exposed as well in client.

Modifications
-------------
Added signature as an Observable<JsonObject> in AsyncQueryResult and as
a JsonObject in QueryResult.
Added an integration test for the signature.

This change depends on JVMCBC-153 in core.

Results
-------
Users can retrieve the signature section of the N1QL response as a
JsonObject.

Change-Id: I75d798b71a27b188b4bd5fbc273b01acb6eb8e37",0,0,0,0,0,1,1,0,0
47399,If00c9aac95a3ab554b9b993c189731fb5ca3b034,http://review.couchbase.org/#/c/47399,4,dc90e783a9c22901d5361a7e495a44ce2e0c2671,4bc7e2e475b2d76883947c26f02a184c4c6a2369,1,26/02/15,26/02/15,452,JCBC-719: Rework bucket flush internals.,"JCBC-719: Rework bucket flush internals.

Motivation
----------
The current flush approach did work, but it was not good for a number of
reasons.

	- It used a blocking poll in an asynchronous call - this should
	  not be done of course.
	- It only did poll for one specific document, but instead we
	  need to poll for documents in all partitions to make sure
	  flush is completely done.

Modifications
-------------
The flushing mechanism is now separated into its own helper class and tests
have been added to make sure its working properly.

Result
------
More correct and functional flush polling against all vbuckets instead of
one.

Change-Id: If00c9aac95a3ab554b9b993c189731fb5ca3b034",0,1,0,0,0,0,1,0,0
47543,I87d37fa3cf26df675d1086754cfd814bff86aca5,http://review.couchbase.org/#/c/47543,2,4bc7e2e475b2d76883947c26f02a184c4c6a2369,9f346d8250a5e252bcb841b2f4373212721e5798,0,02/03/15,02/03/15,6,Prepare 2.1.1 release,"Prepare 2.1.1 release

Change-Id: I87d37fa3cf26df675d1086754cfd814bff86aca5",0,0,0,1,0,0,1,NA,NA
47939,Iaf5e69e0b7fe36db101e78da618d13b726227a58,http://review.couchbase.org/#/c/47939,2,9f346d8250a5e252bcb841b2f4373212721e5798,0d948ebf4cb2c5e73db38dc0c1056079d7fa1210,0,09/03/15,09/03/15,4,Start development on 2.1.2,"Start development on 2.1.2

Change-Id: Iaf5e69e0b7fe36db101e78da618d13b726227a58",0,0,0,1,0,0,1,NA,NA
47946,Iea0987230a305ebc2e881364ceeb5ee26425c742,http://review.couchbase.org/#/c/47946,2,0d948ebf4cb2c5e73db38dc0c1056079d7fa1210,de45915f287d30793f8d92b32100e3f8981c5ae9,1,09/03/15,09/03/15,40,JCBC-723: touch unknown key throws DocumentDoesNotExistException,"JCBC-723: touch unknown key throws DocumentDoesNotExistException

Motivation
----------
Unlike most similar operations, currently touch won't throw a specific
DocumentDoesNotExistException when the provided key is unknown, but a
more generic CouchbaseException with content ""NOT_EXIST"". It can be
expected that the correct and more specific exception be used.

Modifications
-------------
The async touch now throws the DocumentDoesNotExistException when the
provided key is unknown. This is thus true as well of the sync touch.
Tests and documentation has been updated accordingly.

Results
-------
Users receive a more meaningful exception when they try to touch a doc
that doesn't exist.

Change-Id: Iea0987230a305ebc2e881364ceeb5ee26425c742",0,0,0,0,0,1,1,0,0
48006,I41b80d3dc13399e270e2129360d37780a95759c3,http://review.couchbase.org/#/c/48006,2,de45915f287d30793f8d92b32100e3f8981c5ae9,220f2966dffd1f3d07db58494d20d6ae356ba990,1,10/03/15,10/03/15,29,JCBC-724: Dump specific environment parameters,"JCBC-724: Dump specific environment parameters

Motivation
----------
Environment's toString is used to dump parameter values, but for now
the DefaultCoreEnvironment's implementation is used, which doesn't dump
java-client specific parameters.

Modifications
-------------
The core implementation has been changed to expose a protected method
that dumps all parameters into a StringBuilder. This is overridden in
java client to also dump DefaultCouchbaseEnvironment-specific params.

Results
-------
DefaultCouchbaseEnvironment toString now contains parameters specific to
both the core and the java-client.

Change-Id: I41b80d3dc13399e270e2129360d37780a95759c3",0,0,0,0,0,1,1,0,0
48010,If9fba0256363e62b286c696d35176305a25581ab,http://review.couchbase.org/#/c/48010,2,220f2966dffd1f3d07db58494d20d6ae356ba990,d6524c6aa02e0ddf608604a9b89b7fae25876b14,1,10/03/15,10/03/15,351,JCBC-725: expose n1ql metrics as a specific object,"JCBC-725: expose n1ql metrics as a specific object

Motivation
----------
The info() part of the query response describes the metrics in N1QL.
Those are quite well defined and could be represented by a specific
class instead of the raw generic JsonObject.

Modifications
-------------
Introduced QueryMetrics, constructed from a metrics JsonObject.
All query results (sync and async) now return this instead of a more
generic JsonObject.

Additionally, improved the documentation of AsyncQueryResult and
QueryResult and marked some classes/interfaces as Experimental.

Added a unit test case for QueryMetrics.

Results
-------
Extracting meaningful information from the info() part is now easier.
One can still access the underlying raw data by calling asJsonObject().

Change-Id: If9fba0256363e62b286c696d35176305a25581ab",0,0,0,0,0,1,1,1,1
48165,If1fff2808019ed2ae11358e31be48209f980441d,http://review.couchbase.org/#/c/48165,4,316b4ded0683caca42f469f13287a8d44b54d3dd,a8b1e7d624b8b5bb6d7c830caa2a6a8d40c38655,1,12/03/15,12/03/15,20,JCBC-729: Faster decoding of int/long numbers.,"JCBC-729: Faster decoding of int/long numbers.

Motivation
----------
Previously the code was using a rather slow fallback through
an exception from int to long, so decoding long values is not
performant enough.

Modifications
-------------
The code now uses Jackson parser methods to get the Number back
right away (since jackson figures out the type for us), which not
only makes the code simpler but also removes costly path through
the exception.

In addition, some faster direct accessor methods are now used instead
of the one that force conversion.

Result
------
Faster decoding of long values.

Change-Id: If1fff2808019ed2ae11358e31be48209f980441d",0,1,0,0,0,0,1,0,0
48172,Ieca6972038a9094bd370a24571ccc97ef1c378da,http://review.couchbase.org/#/c/48172,2,a8b1e7d624b8b5bb6d7c830caa2a6a8d40c38655,f5be978945ffea412c9748480420095dd464dd10,1,12/03/15,12/03/15,19,Override core environment builder settings.,"Override core environment builder settings.

Change-Id: Ieca6972038a9094bd370a24571ccc97ef1c378da",0,0,0,1,0,0,1,0,0
48311,I69765016f97d0a1247b6d0b2b2386ac78c7f38bd,http://review.couchbase.org/#/c/48311,3,f5be978945ffea412c9748480420095dd464dd10,2f524a55573b9550ee93311d5a1e909c0815602d,1,16/03/15,16/03/15,67,"JCBC-728, JCBC-731: Fix JsonLongDocument decode and counter default value.","JCBC-728, JCBC-731: Fix JsonLongDocument decode and counter default value.

Motivation
----------
The JsonLongDocument decoding process did not take the 0x0 flags into account,
which are used when using the counter operations (since on the server it is
stored as a string, not as a number).

Also, it was uncovered that the counter() default, different to what is documented
defaults to the incr value instead of 0.

Modifications
-------------
This changeset implements the proper decoding process of the JsonLongDocument if
the flags are 0x0 and also sets the counter default value to 0.

Integration tests are now more extensive and test the interaction of the various
counter options together with get and also an upsert operation.

Result
------
Interoperability between counter, get and upsert/insert/replace, as well as
the correct default value as advertised in the docs.

Change-Id: I69765016f97d0a1247b6d0b2b2386ac78c7f38bd",0,0,0,0,0,0,0,0,0
48373,I6d51d834d9f4e1ea101da98d2b1c8ea9369f6c0a,http://review.couchbase.org/#/c/48373,8,2f524a55573b9550ee93311d5a1e909c0815602d,1ca847b31bdb36a13716c6182ac7e4a27c552fbe,1,17/03/15,27/03/15,1142,JCBC-554: Provide retry/backoff utility wrapper,"JCBC-554: Provide retry/backoff utility wrapper

WORK IN PROGRESS

Motivation
----------
Exponential retry and backoff is an useful pattern and it makes sense
to provide an utility class to the SDK users to do that.

Modifications
-------------
Added a Retry utility class that allows to describe a retry pattern via
RetryWithDelayHandler and wrap an Observable in order to apply this
retry pattern.

Added CannotRetryException to denote when a retry attempt failed.

TODO: unit tests.

Result
------
Users can more easily apply a retry pattern to their Observables.

Change-Id: I6d51d834d9f4e1ea101da98d2b1c8ea9369f6c0a",0,1,1,0,1,1,1,0,0
48694,Ie5ca6165bcd6f3a10ab435553db06d80ae8f4d28,http://review.couchbase.org/#/c/48694,3,ce9362f75be17732a3e47213543446d6ff68223d,6a9a3ae71d9185353ee1de3579fcb147beaf1344,1,24/03/15,27/03/15,146,WIP signature can be anything,"WIP signature can be anything

Change-Id: Ie5ca6165bcd6f3a10ab435553db06d80ae8f4d28",0,0,1,1,0,1,1,0,0
48985,Ie984be68b00f5abd75fec3bf68a380bb963b741f,http://review.couchbase.org/#/c/48985,3,9a2fa4ce8841a7d3f0b2b3d28a09f1ced04f4672,322a5db152c9dd53ecf3b97b4c6430b649846ad1,1,31/03/15,01/04/15,173,wip: error related java changes,"wip: error related java changes

Change-Id: Ie984be68b00f5abd75fec3bf68a380bb963b741f",0,0,0,1,0,0,1,0,0
49020,I4e0cda493a4cba961c42cef3b24fdea49e18fb81,http://review.couchbase.org/#/c/49020,2,5ca4be8ec33c03a6884075dc21501444d65c78af,7a89005d665dd5a37909296b9a47b2261303e190,1,01/04/15,01/04/15,13,JCBC-738: Avoid casting op in HttpFuture on timeout.,"JCBC-738: Avoid casting op in HttpFuture on timeout.

Motivation
----------
A bug was reported that the HttpFuture incorrectly casted the
operation to a net.spy one, which is unexpected. In fact, the
cast itself is unnecessary and can be removed.

Modifications
-------------
The timeout exception is now directly exposed to be in line with
the other timeout case on the codepath and as a result is not
subject to a classcast exception anymore as well as consistently
throws a TimeoutException in the timeout case. In fact, the
method directly allows a TimeoutException to be thrown as a
checked exception.

Result
------
No classcast exceptions and correct exception type thrown on all
timeout codepaths.

Change-Id: I4e0cda493a4cba961c42cef3b24fdea49e18fb81",0,0,0,0,0,0,0,0,0
49023,Ia48cb827ff90a1d7511a42fd10fd058dd3dcb845,http://review.couchbase.org/#/c/49023,3,468ff7d31b2e4039610e0b674238d54dbf48c5ed,4a839af83d64564458db3538f757cfbacc1b1aa0,1,01/04/15,01/04/15,13,JCBC-741: Always poll master on observe.,"JCBC-741: Always poll master on observe.

Motivation
----------
To consistently detect concurrent modifications of the
observed document, the client needs to always poll the
master cas state, since it can't be reliably detected
on the client.

So even when just ReplicateTo.* is used, the master
is polled and used for a cas crosscheck.

Modifications
-------------
The isMaster() check blocks have been removed which will
enable master polling all the time, leading to cas
mismatch detection.

Result
------
Consistent concurrent modification check behaviour,
independent if PersistTo is used or not.

Change-Id: Ia48cb827ff90a1d7511a42fd10fd058dd3dcb845",0,0,0,0,0,0,0,0,0
49157,I5a1d869ede982f2d70d6c2a996474fa22d23798f,http://review.couchbase.org/#/c/49157,2,8bef824dfe892824401ba1e02bfb811e45718a74,8651784df0cedde858db3dbd92d44393559b4dd4,0,03/04/15,03/04/15,4,Upgrade Spymemcached to 2.11.7,"Upgrade Spymemcached to 2.11.7

Change-Id: I5a1d869ede982f2d70d6c2a996474fa22d23798f",0,0,0,1,0,0,1,NA,NA
49163,Id3fe2e0375581d1c0c62eeda46cc2322e809fee0,http://review.couchbase.org/#/c/49163,2,80146997a013e74aa15bd7fae21246c2bd879063,317c8e08de64ca233ff79d4a5e18899d3f9f9127,0,03/04/15,03/04/15,4,Prepare 2.1.2 Release,"Prepare 2.1.2 Release

Change-Id: Id3fe2e0375581d1c0c62eeda46cc2322e809fee0",0,0,0,1,0,0,1,NA,NA
49299,Ic6c77bdad967b6c478e84cc5be917d1431f53d15,http://review.couchbase.org/#/c/49299,2,9ec0c49460a7ea71a5e6d643e2d7390dd1a37424,e5f00262f1a415ad685126b07f38bb8956ea079d,0,07/04/15,07/04/15,4,Start development on 2.2.0,"Start development on 2.2.0

Change-Id: Ic6c77bdad967b6c478e84cc5be917d1431f53d15",0,0,0,1,0,0,1,NA,NA
49307,I08b1a7aefa472ef28e5d7c4d42e31e4472cbd329,http://review.couchbase.org/#/c/49307,2,e5f00262f1a415ad685126b07f38bb8956ea079d,c0b0f81a0b12b458336d55162aea800554856764,1,07/04/15,07/04/15,14,Reuse default bucket and hostname.,"Reuse default bucket and hostname.

Motivation
----------
Both the CouchbaseBucket and CouchbaseAsyncBucket previously
defined the default bucket and hostname.

Modifications
-------------
The code changes now expose it public on the async cluster (so it
is also reusable by other parties) and reuse it on the sync cluster
component.

Result
------
Less duplication, more reuse.

Change-Id: I08b1a7aefa472ef28e5d7c4d42e31e4472cbd329",0,0,0,0,0,0,0,0,0
49377,I6b82cd9e6cd14838553b229c3311fd30767c4504,http://review.couchbase.org/#/c/49377,11,c722018ac4b0bc5443d19cb81bc36fc4899f6d1f,d2e98013fe5787021a1753e442df1767b92536e9,1,08/04/15,13/04/15,832,Very VIP: Repository Impl,"Very VIP: Repository Impl

Change-Id: I6b82cd9e6cd14838553b229c3311fd30767c4504",0,1,1,1,1,0,1,3,1
49427,I52717c3c207cc47365d05adfd56722a9b6f03d1e,http://review.couchbase.org/#/c/49427,2,a218aa30e5570fb9a093b9891e25fb11f149d887,7b91cbccff703dd053613221f25c9afcc7ad5a41,0,09/04/15,09/04/15,2,Upgrade Readme to 2.1.2,"Upgrade Readme to 2.1.2

Change-Id: I52717c3c207cc47365d05adfd56722a9b6f03d1e",0,0,0,1,0,0,1,NA,NA
49430,Ifa89bc82334a57d94aafa6b9aff2bfd89ba8502a,http://review.couchbase.org/#/c/49430,2,3dfd97c8a616367ac2fd4747c7607d42a7cc505f,a95939d18f1a0eb0e1a3c1fe813753bfd2048238,1,09/04/15,10/04/15,2,Fix failing assertion test in query,"Fix failing assertion test in query

Change-Id: Ifa89bc82334a57d94aafa6b9aff2bfd89ba8502a",0,0,0,1,0,0,1,0,0
49440,Ib31fc8583f5fb8831297e569f3eb29c580e4481f,http://review.couchbase.org/#/c/49440,3,20814bb3ec5eb98e6e5fc2afbe74e2ed2aba89e6,ed608a7584aa853cc01d38d507d242199f00a2ca,1,09/04/15,10/04/15,165,JCBC-730: Implement exists() functionality.,"JCBC-730: Implement exists() functionality.

Motivation
----------
The exists() method, internally based on the observe command, can
be used to see if a document exists on the server without having
to load the full document.

Modifications
-------------
This changeset implements the exists() method based on the observe
command, by sending a request to the active partition and checking
if it is either persisted or just stored in memory.

Result
------
exists functionality is now available on the bucket api.

Change-Id: Ib31fc8583f5fb8831297e569f3eb29c580e4481f",0,0,0,0,0,0,0,0,0
49449,I65749a0e59ba8be8ec2acc121a9e45876b9892bb,http://review.couchbase.org/#/c/49449,3,0f419ac4fdf6d083b77fc0e4a7c46a1630f52939,b54b74b350f590bb5233fbaec94496cee2e4fd97,1,09/04/15,13/04/15,1769,JCBC-732: Extend Expression class.,"JCBC-732: Extend Expression class.

Motivation
----------
As part of the DSL overhaul for 4.0, the Expression class needs to
be extended.

Modifications
-------------
The Expression class has been overhauled, tests added and lots of overloads
have been put in place so that most of the time, x() can be avoided.

Result
------
More tests and less clutter when working with expressions.

Change-Id: I65749a0e59ba8be8ec2acc121a9e45876b9892bb",0,0,1,0,1,0,1,1,1
49606,I6da78c7518b15c3893939afe3fb4877dd3dcd375,http://review.couchbase.org/#/c/49606,4,b54b74b350f590bb5233fbaec94496cee2e4fd97,48d88ceaa3166457588db6e2d125474f2ad22f2a,1,13/04/15,14/04/15,100,JCBC-748: join/nest key clause uses ON KEYS syntax,"JCBC-748: join/nest key clause uses ON KEYS syntax

Motivation
----------
In N1QL, the correct syntax for a on-keys clause in a NEST or JOIN is
""ON KEYS Expression"" not ""KEYS Expression"" as currently implemented.

Also there's a clause that uses KEYS keyword, but differently:
when referencing primary keys (document IDs), the ""USE KEYS"" syntax
should be used. This syntax expects strings or array of strings (not a
token).
Could be implemented as a useKeys(...) method next to the current keys
methods.

Modifications
-------------
KeysElement now takes an enum to denote the type of KEYS clause.
KeysPath keeps ""keys"" methods for the JOIN side of things, add ""useKeys""
methods for the FROM side of things (referencing a primary key).

keys and useKeys accept an array of Strings. UseKeys with array of size
1 will only produce a String in query, not a JSON array.

Modified unit tests where USE KEYS what meant instead of ON KEYS.

Results
-------
All unit tests passing, one can now do a FROM clause on the primary key,
using useKeys(...) methods. The syntax for JOINs key-clause has been
fixed in keys(...) methods.

Change-Id: I6da78c7518b15c3893939afe3fb4877dd3dcd375",0,1,0,0,0,1,1,0,0
49805,I5a12faa4a934906f6b1ba2ce464c9f487bf2cf3f,http://review.couchbase.org/#/c/49805,2,53cf5e31cf1c1fb2edc5756a01108fdcb84960db,ae4476a92800f582fa3e315751ca6f2c9903240a,1,16/04/15,17/04/15,364,JCBC-749: Bringing includeDocs back to 2.x (2.2.0),"JCBC-749: Bringing includeDocs back to 2.x (2.2.0)

Motivation
----------
The 1.x SDK provides ""includeDocs"" as part of the query, which will trigger a
""bulkGet"" behind the scenes. In the 2.x SDK one can easily simulate that with
flatMap and bulk operations, but it makes it necessary to fall back to
async operations.

If someone is using the sync API, we need to make sure to get the best
performance. Currently, the only option is to call .document() on every
row, which is slow since it does a serial get call for every row.

Modifications
-------------
This changeset adds the ""includeDocs"" query option to the builder. In addition,
the logic checks if it is enabled and if so, it flatMaps the documents through
implict get() calls in the async flow, leading to very efficient bulk calls
even on the blocking API.

The actual API does not change on the rows, because internally it lazily
evaluates if the document is already set or not, which means that the
old behaviour is still there too.

Result
------
Very efficient document loading, even on the blocking API. It can also
be used on the async API for convenience.

Change-Id: I5a12faa4a934906f6b1ba2ce464c9f487bf2cf3f",0,0,0,0,0,0,0,4,1
49859,If783ea54a8fa3334f86c15864c5524a7f9d7934e,http://review.couchbase.org/#/c/49859,2,87e3a0f91d5d4cc061b40e1971ee7b30d007e740,812071d3dd276ca1a6bd4f40c43e683144c46ca0,1,17/04/15,17/04/15,35,JCBC-744: Add support for @Field alias,"JCBC-744: Add support for @Field alias

Motivation
----------
It should be possible to have a different name in the JSON field
than the field name in the object.

Modifications
-------------
The user can now supply an explicit @Field(""alias"") which will be
used as the JSON field key instead of the actual object field name.

Result
------
More flexible field mapping.

Change-Id: If783ea54a8fa3334f86c15864c5524a7f9d7934e",0,0,0,0,0,0,0,0,0
49888,Ibab5bb669f84b4cbc7b0df8bc12cbcccd764f61d,http://review.couchbase.org/#/c/49888,2,146669db397abc01bc7883e44dec0331d8c67b5e,ac7056d7b00fb8b93d825b8431dd9df76b07d27a,1,20/04/15,20/04/15,18,JCBC-744: Bring out annotations one level.,"JCBC-744: Bring out annotations one level.

Motivation
----------
It makes more sense to move the annotations to the repository
level and not under the mapping package.

Modifications
-------------
Moved the annotations package one level up by using the IDE
refactoring facilities.

Change-Id: Ibab5bb669f84b4cbc7b0df8bc12cbcccd764f61d",0,0,0,0,0,0,0,0,0
49889,I2303a5d5e103176521c78e08227f61126b81e0af,http://review.couchbase.org/#/c/49889,2,ac7056d7b00fb8b93d825b8431dd9df76b07d27a,47f3667006e48bc3754a012be420a3dd92a561b5,1,20/04/15,20/04/15,411,JCBC-744: Wrap Entity and Property Metadata,"JCBC-744: Wrap Entity and Property Metadata

Motivation
----------
The entity and property metadata need to be fully encapsulated to
make them testable and also future proof.

Modifications
-------------
The common metadata has been extracted into property and entity
metadata with clearer interfaces.

Result
------
Better separation of concerns.

Change-Id: I2303a5d5e103176521c78e08227f61126b81e0af",0,0,0,0,0,0,0,0,0
49890,I0a96f8e318118036f6ddbf49dfb7d886e5c8d976,http://review.couchbase.org/#/c/49890,2,47f3667006e48bc3754a012be420a3dd92a561b5,c4b6b74da6f5245b6ebcce118b2d4257584b8900,1,20/04/15,20/04/15,31,JCBC-744: Add metadata caching.,"JCBC-744: Add metadata caching.

Motivation
----------
In order to avoid the overhead of re-generating the metadata all
the time, a simple CHM has been added to cache the metadata once
generated.

Modifications
-------------
A ConcurrentHashMap stores the already generated metadata. Note that
there is currently no way of ""expiring"" items, but the number of
entities during runtime remain static and relatively small, most
of the time (since the expectation is that they are not generated
new at runtime).

Result
------
Better performance by avoiding metadata generation overhead all
the time.

Change-Id: I0a96f8e318118036f6ddbf49dfb7d886e5c8d976",0,0,0,0,0,0,0,0,0
49891,I6e4c120379253f60160cf6819ae25c34c024741e,http://review.couchbase.org/#/c/49891,2,c4b6b74da6f5245b6ebcce118b2d4257584b8900,d8a9fffb21ead0e1fe3760b9a9414ffce7927c99,1,20/04/15,20/04/15,44,JCBC-744: Enforce String @Id type.,"JCBC-744: Enforce String @Id type.

Motivation
----------
Since the document ID needs to be a string, the code should check
that early as part of the entity mapping.

Modifications
-------------
A type check has been added on the type and now reports an exception
when the String assertion does not hold.

Result
------
Well defined boundary on what is supported for the @Id types.

Change-Id: I6e4c120379253f60160cf6819ae25c34c024741e",0,0,0,0,0,0,0,0,0
49901,I72459f08dfc622bba75475db4b0cef4456405a1f,http://review.couchbase.org/#/c/49901,3,d8a9fffb21ead0e1fe3760b9a9414ffce7927c99,49a02bdfa4c76777ebb90d5c4edecdeb251615c7,1,20/04/15,21/04/15,373,JCBC-750: let DSL cover n1ql tutorial steps upt to 25,"JCBC-750: let DSL cover n1ql tutorial steps upt to 25

Motivation
----------
in SelectDslSmokeTests, only part of the tutorial steps are covered and
some have evolved. Make sure that steps up to #25 are now covered and up
to date, making simple additions to the DSL if needed.

http://query.pub.couchbase.com/tutorial/#25

Modifications
-------------
SelectDslSmokeTests now tests tutorial steps up to step #25.
Some steps have been updated to reflect changes in DP4.

Functions have been extracted into separate helper classes, by category.
Sort now has an option not to explicitly state the order.

Choice has been made not to provide the DSL for the shortcut AS syntax
(omitting the AS like in ""FROM tutorial t"" vs ""FROM tutorial AS t"").

Results
-------
Smoke tests pass, including new tests for steps 15-25.

Change-Id: I72459f08dfc622bba75475db4b0cef4456405a1f",0,0,0,0,0,1,1,0,0
49940,Ifa89bc82334a57d94aafa6b9aff2bfd89ba8502a,http://review.couchbase.org/#/c/49940,2,36d34a0870f88ae8d513ab8bbcf8680474d0f8a7,995303dc9b6d343e12e23075a3b71ef3c363d257,1,21/04/15,21/04/15,2,Fix failing assertion test in query,"Fix failing assertion test in query

Change-Id: Ifa89bc82334a57d94aafa6b9aff2bfd89ba8502a
Reviewed-on: http://review.couchbase.org/49430
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,1,0,0,1,0,0
49941,I88554300ca6a0ddc9f0b4958eb68193e695b828b,http://review.couchbase.org/#/c/49941,2,4f77f5a654350eba624837b4569df14ab1531dc9,6043363444c5dcae79411898fc42b75d513fb59a,0,21/04/15,21/04/15,4,Depending on 1.1.3-SNAPSHOT.,"Depending on 1.1.3-SNAPSHOT.

Change-Id: I88554300ca6a0ddc9f0b4958eb68193e695b828b",0,0,0,1,0,0,1,NA,NA
49989,I0d943f4919427d64e1283391d353777d6aa84847,http://review.couchbase.org/#/c/49989,2,61d1b4fb55066da07991a14512694ad9c66c0f0b,6e71934d0b8de2964fb0c55b237bafbd3ed45ccb,1,21/04/15,21/04/15,32,fixes tests after integrating JVMCBC-183,"fixes tests after integrating JVMCBC-183

the BinaryResponses need a status code, eg. from the list in
ResponseStatusConverter.

Change-Id: I0d943f4919427d64e1283391d353777d6aa84847",0,0,0,0,0,1,1,0,0
49990,Ia2554799ca7755a4feed2ef73bd1e51b5668f131,http://review.couchbase.org/#/c/49990,3,e2112272df7fad41a54ad702191ee4a948f395c1,3ddc7907952c6a50d43fb2771b35b1482f9c4822,1,21/04/15,21/04/15,385,"JCBC-752: add DSL support for collections (ANY, ARRAY, ...)","JCBC-752: add DSL support for collections (ANY, ARRAY, ...)

Motivation
----------
N1QL language has support for several collections predicates (or
comprehensions): ANY, EVERY, ARRAY and FIRST.

Modifications
-------------
Added new class Collections that allows to build (with its own mini DSL)
the four comprehensions: ANY, EVERY, ARRAY and FIRST.

Added unit tests to verify this mini DSL.
Updated SelectDslSmokeTests where the new DSL could be used instead of a
plain x(...) expression.

Results
-------
Users are now able to use Collections in their expressions (eg. in a
SELECT clause or WHERE clause), as demonstrated in the smoke tests.

Change-Id: Ia2554799ca7755a4feed2ef73bd1e51b5668f131",0,0,0,0,0,1,1,0,0
50061,I5a71614c6d8beb6a8de0b94c086d3c68c66bf91b,http://review.couchbase.org/#/c/50061,5,3ddc7907952c6a50d43fb2771b35b1482f9c4822,4e24d8a40b50cfd379bea51c82949a1e49ce33b1,1,22/04/15,24/04/15,1134,JCBC-???: implement rest of N1QL tutorial and adapt DSL (WIP),"JCBC-???: implement rest of N1QL tutorial and adapt DSL (WIP)

Motivation
----------
/// WORK IN PROGRESS

Modifications
-------------
Added remaining steps from tutorial to smoke tests.

Added functions helpers for Date, Number, String.
Added sum and distinct functions in AggregateFunctions.

GroupByPath can now directly use identifiers in String form.

Modified KeyPath so that distinction between a String constant key vs an
identifier key is more explicit.

Marked various DSL classes as @Experimental.

Results
-------
Except for tutorial steps where DML is used, all steps are covered by
the SelectDslSmokeTest.

Change-Id: I5a71614c6d8beb6a8de0b94c086d3c68c66bf91b",0,1,0,0,1,1,1,0,0
50190,I7bb695915bd35d2567000d04542173937888881a,http://review.couchbase.org/#/c/50190,3,4e24d8a40b50cfd379bea51c82949a1e49ce33b1,394165dbcbd881305c4bd613d6922c63d8fc4a41,1,24/04/15,27/04/15,10,Fix compiler warnings and errors.,"Fix compiler warnings and errors.

Change-Id: I7bb695915bd35d2567000d04542173937888881a",0,0,1,1,0,0,1,0,0
50274,I664a073f8a0b4dba9cdb3ad435172ce977599c75,http://review.couchbase.org/#/c/50274,4,a14c309be7ea9424500d4dc51d6d3754b40e7dd3,0b4ca5ae252e36d5de51f7b87704149e697f4adb,1,27/04/15,27/04/15,1166,JCBC-???: DSL for index creation,"JCBC-???: DSL for index creation

TODO commit message

Change-Id: I664a073f8a0b4dba9cdb3ad435172ce977599c75",0,1,0,0,1,1,1,0,0
50318,Iad0076330536ad523a65164514e6862b53affa94,http://review.couchbase.org/#/c/50318,2,499411a14dabbe0921d643984f1fd188b8a18007,5e22d6cf51c84eea519177e6a58597da98507d79,1,28/04/15,28/04/15,751,JCBC-762: DSL for index dropping and building,"JCBC-762: DSL for index dropping and building

Motivation
----------
After having built DSL for index creation, we can add the two other
index management operations: building a deferred index and dropping an
index.

Modifications
-------------
Added full DSL for index dropping and index deferred building. Starting
point is again in Index static methods.

UsingPath has been renamed to UsingWithPath since in CREATE it combines
the two. A true UsingPath (without other operators) has instead been
introduced for DROP and BUILD.

Drop is implemented using DropPath and UsingPath, build is implemented
using BuildIndexPath, IndexNamesPath (to specify the list of index
names to build) and UsingPath. Corresponding elements (that all escape
names) have been introduced.

Added relevant tests to IndexDslTest.

Results
-------
Indexes can now be dropped via the DSL rather than raw simple queries.
Indexes that are created with the ""defer"" option can now be built using
the DSL as well.

Change-Id: Iad0076330536ad523a65164514e6862b53affa94",0,0,0,0,1,1,1,0,0
50323,I33a3cf9cab5b5ffffff7f0200cf31bf02cd63dfb,http://review.couchbase.org/#/c/50323,4,0a9fd1d7c76281085544c6e8bc5d791fb78e6741,7ec5e1fe554c0eb5e139a7f9207de96dc3f86189,1,28/04/15,28/04/15,861,JCBC-744: Extend repository API to CRUD ops and refactor.,"JCBC-744: Extend repository API to CRUD ops and refactor.

Motivation
----------
Previously only simple get and upsert were implemented, this
changeset adds full CRUD capabilities.

Also, to make it possible to use cas values and other metdata
without interfering with business logic, the EntityDocument
should be introduced.

Modifications
-------------
Both the sync and async repository API has been extended and
proxies through to the underlying bucket API. Tests have been
added to assert basic CRUD type functionality through the object
mapping API.

EntityDocument has been introduced and both sync and async
API have been adapted.

Result
------
More methods available on the repository, but still not fully
on par with the bucket level APIs.

Change-Id: I33a3cf9cab5b5ffffff7f0200cf31bf02cd63dfb",0,1,0,0,1,0,1,0,0
50327,If1860c35fca78c070b44efb3e4964c30181554b9,http://review.couchbase.org/#/c/50327,9,04eb548b7607276b1a4133cb02e13cf1667d1acc,23c419e5fd62f7e8c8d9b879f6638ec41fb91173,1,28/04/15,11/05/15,4175,JCBC-756: DSL for all N1QL functions,"JCBC-756: DSL for all N1QL functions

WIP: Needs Date, JSON, Meta, Number, Object, Pattern-Matching, String,
Type categories. Needs test coverage for Case and Collection.

Motivation
----------
N1QL comes with a large set of functions in different categories, that
should be implemented in corresponding helper classes in the form of
Expression-returning functions.

Modifications
-------------
Added helper classes with all functions (providing high-value overloads
when relevant), in the following categories:
 - Aggregate
 - Array
 - Comparison
 - Conditional

Each is covered by unit tests.

Results
-------
Users can now call N1QL from within the DSL.

Change-Id: If1860c35fca78c070b44efb3e4964c30181554b9",0,1,0,0,1,1,1,0,0
50385,I160e6c922b6d0f7cada92a403e9759e14f63437f,http://review.couchbase.org/#/c/50385,3,57638248863d1b8c312bd3045ed18af4e7de9b97,60c41b54e8f3d5c7e43b9af11800dea91c7870d4,1,29/04/15,29/04/15,133,JCBC-764: fix index creation DSL,"JCBC-764: fix index creation DSL

Motivation
----------
The N1QL was incorrect, which led to the Index creation DSL being
incorrect:
 - where clause should be before using clause, not after
 - with clause should not use backticks

Modifications
-------------
Removed backticks from WithIndexOptionElement.

Modified path for CREATE INDEX so that WHERE comes before USING.

Results
-------
The full DSL for secondary index creation is now correct.

Change-Id: I160e6c922b6d0f7cada92a403e9759e14f63437f",0,0,0,0,0,1,1,0,0
50411,I615df1ff17a270937abce19a7a866172e90bd28b,http://review.couchbase.org/#/c/50411,2,60c41b54e8f3d5c7e43b9af11800dea91c7870d4,ab7cff3f9249b394ba606138e28add12527a945f,0,30/04/15,30/04/15,4,Prepare 2.2.0-dp Release,"Prepare 2.2.0-dp Release

Change-Id: I615df1ff17a270937abce19a7a866172e90bd28b",0,0,0,1,0,0,1,NA,NA
50544,I98023220df294739f097bffd7aa6ae8bb466e42c,http://review.couchbase.org/#/c/50544,2,16d29b69f85c84a1c00217467c9890b3e1b6f861,d0a50ab1d7a3f44c0e5b13d04b4ad08b80befc32,0,04/05/15,04/05/15,8,Prepare 2.1.3 Release,"Prepare 2.1.3 Release

Change-Id: I98023220df294739f097bffd7aa6ae8bb466e42c",0,0,0,1,0,0,1,NA,NA
50705,Ife8a51372be781350f218fec8c93b35926fe0dff,http://review.couchbase.org/#/c/50705,3,1fcb3b9916448351873659a0a704b8a2dfe4d9df,72dafa419c85f0acf701d43cf7f3ef4ec6fdb3a5,1,07/05/15,11/05/15,112,"JCBC-766: ViewQuery passes keys separately to the core, as JSON","JCBC-766: ViewQuery passes keys separately to the core, as JSON

Change-Id: Ife8a51372be781350f218fec8c93b35926fe0dff",0,0,1,1,0,1,1,0,0
50839,I5e92703e2e739660e5f2a0cf9554003f9590aae6,http://review.couchbase.org/#/c/50839,2,72dafa419c85f0acf701d43cf7f3ef4ec6fdb3a5,d0ed0a3755bdb3a6eacc4382efdc6bb400be8c2b,0,11/05/15,11/05/15,6,Back to 2.2.0-SNAPSHOT,"Back to 2.2.0-SNAPSHOT

Change-Id: I5e92703e2e739660e5f2a0cf9554003f9590aae6",0,0,0,1,0,0,1,NA,NA
50841,I935d5d4f6c949b76fc8466af4706ee6762ebb3fb,http://review.couchbase.org/#/c/50841,3,dfde32f08be35ab301352d845f96666646b20be3,fba7a180fa741128910efc6ea6acbb6ffcf9aa0d,1,11/05/15,18/05/15,124,"JCBC-766: ViewQuery passes keys separately to the core, as JSON","JCBC-766: ViewQuery passes keys separately to the core, as JSON

(backported from commit 07e63ed)

Motivation
----------
Recently, a change was made so that the core switches to POST when it
detects that a View query is too large. Body of the post is the keys
parameters (the only one allowed, and also the most probable culprit for
size), extracted for url and set as JSON.
Only problem is that the client url-encodes the keys, which isn't valid
when contained in JSON, so it fails in production.

A change has been made in the core to require keys separately, as a json
array. This must in turn be taken into account in java-client.

Modifications
-------------
ViewQuery.keys() now stores the JSON array separately. When constructing
a ViewQueryRequest, it is directly passed as a JSON string.

Unit tests have been added to make sure keys are stored separately.

An integration test has been added to make sure that a long set of keys
doesn't fail.

Additionally, due to a bug in IntelliJ 14+ not picking up resources
folders for custom sourceSets, resource folder for ""integration"" is now
explicitly ""src/test/resources"". IntelliJ14 will use that due to the bug
and Gradle will pick it up.

Change-Id: I935d5d4f6c949b76fc8466af4706ee6762ebb3fb",0,0,1,0,0,1,1,0,0
50842,I008cb154d232f805df0d110b541563536e5cd326,http://review.couchbase.org/#/c/50842,2,68c4ef0cd7218c9697ab441ba57689cd32725d5b,05be40589a880d39b6c75038ab91a9ec0c6e706a,1,11/05/15,18/05/15,6,JCBC-766: fix ViewQueryTest.shouldHandleKeys,"JCBC-766: fix ViewQueryTest.shouldHandleKeys

the assertion was no longer valid, fixed test and re-ran all unit tests.

Change-Id: I008cb154d232f805df0d110b541563536e5cd326",0,0,1,0,0,1,1,0,0
50963,I40e6a1803a7caf8cdbbfd8eb2f4138b3d88895b4,http://review.couchbase.org/#/c/50963,2,75f22c43d9323e24ae1d7990e42539f1490817cd,f5544f5557946b657d0f25f7dace44605b4653da,1,13/05/15,18/05/15,25,JCBC-769: fix javadoc for RetryBuilder,"JCBC-769: fix javadoc for RetryBuilder

Motivation
----------
The class javadoc for RetryBuilder is incorrect, starting point should
be static methods anyOf, allBut and any.

Modifications
-------------
Fixed the class javadoc.

Also mentioned the behavior when errors keep
occurring past the maxAttempts allowed number of retries (a specific
CannotRetryException is raised), both in class javadoc and on max and
once methods javadoc.

Result
------
Javadoc for RetryBuilder is more accurate.

Change-Id: I40e6a1803a7caf8cdbbfd8eb2f4138b3d88895b4",0,0,1,0,0,1,1,0,0
50964,Ifda20d53ced7828c5b57bd133a32053ed3889cd6,http://review.couchbase.org/#/c/50964,2,bf4714c05db657adf84cccf8eeeb0328e8b94d2a,7bd616dc448fef18b45d781ac920a68c15406234,1,13/05/15,18/05/15,25,JCBC-769: fix javadoc for RetryBuilder,"JCBC-769: fix javadoc for RetryBuilder

Motivation
----------
The class javadoc for RetryBuilder is incorrect, starting point should
be static methods anyOf, allBut and any.

Modifications
-------------
Fixed the class javadoc.

Also mentioned the behavior when errors keep
occurring past the maxAttempts allowed number of retries (a specific
CannotRetryException is raised), both in class javadoc and on max and
once methods javadoc.

Result
------
Javadoc for RetryBuilder is more accurate.

Change-Id: Ifda20d53ced7828c5b57bd133a32053ed3889cd6",0,0,1,0,0,1,1,0,0
51096,I935d5d4f6c949b76fc8466af4706ee6762ebb3fb,http://review.couchbase.org/#/c/51096,2,a94c79fc661c1373c105c70716aa686d5baeb4da,87be9daa1390f441f18a7b6dab4301a5eb265852,1,15/05/15,18/05/15,96,JCBC-768: add unit tests for Case DSL,"JCBC-768: add unit tests for Case DSL

Motivation
----------
The Case DSL has recently been added to the SDK but without unit tests.

Modifications
-------------
Added unit tests for Case helper class to test various CASE...END N1QL
constructs.

Results
-------
Better test coverage for N1QL DSL.

Change-Id: I935d5d4f6c949b76fc8466af4706ee6762ebb3fb",0,0,1,0,0,1,1,0,0
51153,I4565b1d7f6c28773736be0a18a020029f0b7964e,http://review.couchbase.org/#/c/51153,2,2bee9f3c02ccdeff09804e41ee38a9c24c16becf,2f646b0da3e33c86ee9ab0d11c7dd8f7e596f4fc,1,18/05/15,18/05/15,2,JCBC-770: Memcached buckets fail to pick up new configuration.,"JCBC-770: Memcached buckets fail to pick up new configuration.

Motivation
----------
For memcached buckets, the client was able to pick up an initial
configuration, but failed to properly establish a streaming
connection to get subsequent configuration updates.

This resulted in the problem that when memcached nodes are
added, it is not picked up properly and since the ketama
algorithm doesn't make it fail it could only be observed
by looking in the UI. Also, node removals are not
properly picked up.

Modifications
-------------
The root cause of the problem is that the HTTP streaming
connection is not properly attached to one of the servers,
and the reason for that is that the correct bootstrap provider
type was not set and therefore an assertion failed.

Result
------
After setting the bootstrap provider before monitoring the
bucket through a streaming connection, new configs are now
properly picked up (both node add and removals) and delivered
to the subscribers.

Change-Id: I4565b1d7f6c28773736be0a18a020029f0b7964e",0,0,0,0,0,0,0,0,0
51210,I9d86ed082d83746b53b3b248f2dfbc3755bd5404,http://review.couchbase.org/#/c/51210,2,902d86761dafa12c15c012ed745712ec41e05620,de75ebe996890b3f9a60135379636e995ec81795,1,19/05/15,28/05/15,3,JCBC-772: query(Statement) needs to check for a QueryPlan,"JCBC-772: query(Statement) needs to check for a QueryPlan

Motivation
----------
the query(Statement) is intended as a shortcut, but also needs
to take into account that a QueryPlan might be passed in.

Modifications
-------------
The method now checks if the input statement is a query plan and
if so wraps it into a Query.prepared() instead of a Query.simple().

code like bucket.query(QueryPlan) is now possible.

Result
------
Easier way to query with a query plan.

Change-Id: I9d86ed082d83746b53b3b248f2dfbc3755bd5404",0,0,1,0,0,0,1,0,0
51211,I7a61e83214829f69894b41ecb47681d789dbfa63,http://review.couchbase.org/#/c/51211,2,f67ac4889a757f42470700be9a045e284d989981,1701e3b0433612b6064891d395031f742014a47e,1,19/05/15,28/05/15,18,Add toString() to QueryMetrics.,"Add toString() to QueryMetrics.

Change-Id: I7a61e83214829f69894b41ecb47681d789dbfa63",0,0,1,1,0,0,1,0,0
51366,Ie206237d86aca4c4a6b24ba0e29c2db069534a48,http://review.couchbase.org/#/c/51366,2,a5abf8a562114d6d005ace7bf983fb1502ea2049,018e88a8bc6e51f02466c6ea4b2e97b9e0f2c234,1,22/05/15,28/05/15,13,take JVMCBC-201 overloads of ioPool/scheduler into account,"take JVMCBC-201 overloads of ioPool/scheduler into account

Change-Id: Ie206237d86aca4c4a6b24ba0e29c2db069534a48",0,0,1,1,0,1,1,0,0
51438,I35012077e362861188dfe2478347356f2c6365d2,http://review.couchbase.org/#/c/51438,2,f4b66198d6ba48043176eb9b930b792584f10ac4,49b941a174f2fb3567dd095df3d6e807cdeb0119,1,26/05/15,26/05/15,177,JCBC-774 join should accept Expressions in N1QL DSL,"JCBC-774 join should accept Expressions in N1QL DSL

Motivation
----------
Unlike most other cases (like from()), the operations on the LetPath
don't accept Expressions, only Strings. This is counterintuitive when
one wants to escape a namespace in a JOIN for example.

Modifications
-------------
Added Expression overloads in the LetPath (joins, nests, unnests).
Added corresponding tests.

Results
-------
Users of the DSL can now do a JOIN on an Expression, allowing them to
escape the namespace for example.

Change-Id: I35012077e362861188dfe2478347356f2c6365d2",0,0,0,0,0,1,1,0,0
51563,I184dbaa822af4493f3317e2eef1c4345183ffebb,http://review.couchbase.org/#/c/51563,2,c181d153fc00174524d962d0f75d5a6f29f2d689,eab7aee97b60caf3a14dfd9829164ca6aece30ed,1,29/05/15,29/05/15,13,take JVMCBC-201 overloads of ioPool/scheduler into account,"take JVMCBC-201 overloads of ioPool/scheduler into account

(backported by cherry pick from commit 64ee1f2)

Change-Id: I184dbaa822af4493f3317e2eef1c4345183ffebb",0,0,0,0,0,1,1,0,0
51950,I3cb309f65dd60a2c0899972e76d753df6fdc30d6,http://review.couchbase.org/#/c/51950,2,1db8728349d50191c81c65f891c964c84eb75161,cc8d6dd703d3e94661635538bf28d2f145ebab64,1,11/06/15,11/06/15,20,JCBC-780: add sortCount to QueryMetrics,"JCBC-780: add sortCount to QueryMetrics

Motivation
----------
The Query team introduced a new metric that shows the number of results
before it is trimmed down (eg. by a LIMIT clause). This should be also
exposed as a QueryMetrics method.

Modifications
-------------
Added sortCount() method to QueryMetrics.
Modified unit tests to account for it.

Results
-------
Users can now see this metric directly, not having to fall back to the
JsonObject raw version of the metric representation.

Note that if the metric is not returned by the engine, this method
returns 0.

Change-Id: I3cb309f65dd60a2c0899972e76d753df6fdc30d6",0,0,0,0,0,1,1,0,0
52100,Id4872df12d930bca3f429d8e52acdfa16a5b8bb2,http://review.couchbase.org/#/c/52100,3,cc8d6dd703d3e94661635538bf28d2f145ebab64,2091e90fc7970033e7d77ed229c770e852dc5005,1,16/06/15,16/06/15,12,Override Builder methods.,"Override Builder methods.

Change-Id: Id4872df12d930bca3f429d8e52acdfa16a5b8bb2",0,0,0,1,0,0,1,0,0
52101,Id186c5cbd10924b3e653b0718d8c1ac938c91f67,http://review.couchbase.org/#/c/52101,2,67604c12685ffdb2010ab88e01a651f9bb603d2b,e342185eb5518b0d497d93fbc159d0dee92b08ca,1,16/06/15,16/06/15,4,JCBC-781: Allow DCP to be enabled from the builder.,"JCBC-781: Allow DCP to be enabled from the builder.

Motivation
----------
DCP was always enable-able from the system property, and it should
be through the builder too. DCP is still experimental.

Modifications
-------------
Remove the hardcoded exception when enabled so it can be set
through the builder.

Result
------
Users can now explicitly enable experimental DCP support through
the builder.

Change-Id: Id186c5cbd10924b3e653b0718d8c1ac938c91f67",0,0,0,0,0,0,0,0,0
52276,Ie473cb6c3d77d385f144416fd724024c12de2d90,http://review.couchbase.org/#/c/52276,3,9f7b1fa71a029c43af5b66d6b7960df1a62ee63f,99589263487c19a3eba27ac0c9bdb272e34dc0a8,1,19/06/15,19/06/15,22,JCBC-784: Allow to explicitly check for not existing document on counter.,"JCBC-784: Allow to explicitly check for not existing document on counter.

Motivation
----------
Currently, there is no way to fail if the counter document does not exist
at all. In the ""old"" SDK, this option was available.

Since conditionally incrementing or decrementing a counter only when it
exists has its use cases, this functionality should be provided again.

Modifications
-------------
The overload with no initial value now does not forward to ""0"" intial,
but utilizes the protocol level semantics to set the expiry to 0xffffffff
which will return a NOT_EXISTS on the server if the document does not
exist.

This status is now explicitly translated into an exception, leading into
the wanted DocumentDoesNotExistException. Tests have been adapted
properly.

While this is not an API breaking change, it changes behaviour, but
the benefits outweigh the potential breakage (the workaround is to
just manually set 0 as the initial value).

Result
------
The SDK now exposes a proper way to deal with non-existing
documents for the counter operation.

Change-Id: Ie473cb6c3d77d385f144416fd724024c12de2d90",0,0,0,0,0,0,0,0,0
52278,I8a5346ee10a47eefe4d4bcb12e9cc129772c322b,http://review.couchbase.org/#/c/52278,2,9a8c26e7bd2f7b2b526bb5c98edd76d2f1795d95,69c8fd29daac7d7b790381f4ca0769bda5bd78bd,1,19/06/15,19/06/15,20,Adapt tests for recent server and core-io fixes.,"Adapt tests for recent server and core-io fixes.

1.2.0 core API has chanted slightly and also the GSI indexes are
now the default on the server. Test adaptions for proper
compilation and assertions.

Change-Id: I8a5346ee10a47eefe4d4bcb12e9cc129772c322b",0,0,0,0,0,0,0,0,0
52422,I6583a6cee10c9d9ec5f73c15b03273295a7ef5e3,http://review.couchbase.org/#/c/52422,3,a4def60572a992717b3e236789efeff20db89864,fb770e9d4fe193a8d608d1c4f91af3894c8c2cd2,1,23/06/15,23/06/15,78,JCBC-789: Remove AtomicReferences from Blocking#blockForSingle,"JCBC-789: Remove AtomicReferences from Blocking#blockForSingle

Motivation
----------
While profiling SDK code, it was found that there is a portion
of AtomicReferences allocated. It turns out that they can be
replaced with volatiles only, since they only use get/set
semantics.

Modifications
-------------
The subscriber has been refactored out of the helper method since
volatiles are not allowed inside a method. The AtomicReferences
have been replaced with plain volatile calls.

Result
------
Less allocations on the hot code paths, since all the features
of an AtomicReference are not even needed.

Change-Id: I6583a6cee10c9d9ec5f73c15b03273295a7ef5e3",0,0,0,0,0,0,0,0,0
52590,I99dcd4d90730f605a48951f8088cffddc46e0e89,http://review.couchbase.org/#/c/52590,2,fb770e9d4fe193a8d608d1c4f91af3894c8c2cd2,e8d9724e33628f6c2ba70df75a0a5cf943d312d2,1,26/06/15,29/06/15,275,JCBC-767: add use index hint to query DSL,"JCBC-767: add use index hint to query DSL

Motivation
----------
The Query team introduced a new clause to hint at which index(es) to use
in a query. This comes in the form of a USE INDEX clause after the FROM
clause.

Modifications
-------------
Added HintPath and HintIndexElement to represent this new clause.
Introduced a new IndexReference class that wraps an escaped index name
and an optional USING GSI|VIEW suffix.
Added unit tests for the HintPath.

Results
-------
Users can now hint at which index(es) to use. New tests pass.

Change-Id: I99dcd4d90730f605a48951f8088cffddc46e0e89",0,0,1,0,0,1,1,0,0
52702,I00ef787d57a4acb76b344e66476730769ef08318,http://review.couchbase.org/#/c/52702,2,e8d9724e33628f6c2ba70df75a0a5cf943d312d2,564afe9e7fe9d5dfc6388d42ddc3ade2093afccc,1,30/06/15,30/06/15,343,JCBC-790: Ignore partial replica read failures on ReplicaMode.ALL,"JCBC-790: Ignore partial replica read failures on ReplicaMode.ALL

Motivation
----------
The accompanying change in core-io now quickly fails if the replica
is not available. This change silents those errors, leading to
the fact that if the replica is not available, only a subset
(the responding) replicas is returned.

Modifications
-------------
The replica read code has been refactored into its own class for
clarity and better future testability. The code is restructured
so that individual filtering and error handling happens on
a per-operation basis, errors are silenced and logged.

API docs have been updated to reflect this new behaviour.

Result
------
More resilient getFromReplica calls when replicas are not
available.

Change-Id: I00ef787d57a4acb76b344e66476730769ef08318",0,0,0,0,0,0,0,1,1
52705,I00ef787d57a4acb76b344e66476730769ef08318,http://review.couchbase.org/#/c/52705,2,18eaac69d7ba95fb45cfbeed861ea7021b3c4472,3d153b1ec8c23ea0376a51da4f43690d2296579f,1,30/06/15,03/07/15,343,JCBC-790: Ignore partial replica read failures on ReplicaMode.ALL,"JCBC-790: Ignore partial replica read failures on ReplicaMode.ALL

Motivation
----------
The accompanying change in core-io now quickly fails if the replica
is not available. This change silents those errors, leading to
the fact that if the replica is not available, only a subset
(the responding) replicas is returned.

Modifications
-------------
The replica read code has been refactored into its own class for
clarity and better future testability. The code is restructured
so that individual filtering and error handling happens on
a per-operation basis, errors are silenced and logged.

API docs have been updated to reflect this new behaviour.

Result
------
More resilient getFromReplica calls when replicas are not
available.

Change-Id: I00ef787d57a4acb76b344e66476730769ef08318
Reviewed-on: http://review.couchbase.org/52702
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,0,0,1,1
52781,Iae5d07aa91828501a0fd1c97983a293bf2568854,http://review.couchbase.org/#/c/52781,10,3e392663e022d1ddf00ffdb00c78e93f0a42f043,215cd50acf06b50f19ec792202ee744b34bcd243,1,02/07/15,22/07/15,817,JCBC-795: Named Prepared Statement support,"JCBC-795: Named Prepared Statement support

Motivation:
-----------
The query team introduce the possibility to name prepared statements.
Instead of keeping the whole Query Plan, one can simply send the name
which is a way lighter payload.
If not given one in the ""PREPARE..."" statement, the server will generate
a name and cache the plan as well.

Since the cache of plans is not (yet) distributed, we want to be able to
intelligently retry (re-prepare the statement) if the name is not known.
We also want to give a coherent name to our prepared statements in order
to have the same names on all nodes.

Modifications
-------------
This change gets rid of the QueryPlan class, replaced by PreparedPayload
which only stores the name and the original statement (for retry).

the query() method will detect a PreparedQuery and chain retry logic to
it: if the RetryStrategy is best effort, it will peek into the errors()
stream and detect 4040 (name is not found), in which case it will do
a prepare again.

AsyncQueryResult's info is now a stream of QueryMetrics directly in the
constructor signature.

Added a DigestUtils class that can encode a String in SHA1, used as the
identifier for a given statement (low chances of collisions between two
well-formed N1QL statements).

Tests have been added and amended, but integration testing is not
entirely possible while there's no mean of removing a prepared statement
from the server's cache.

Results
-------
All tests pass, a PreparedQuery is retried once if the N1QL service says
it doesn't know about a prepared statement with that particular name.

Change-Id: Iae5d07aa91828501a0fd1c97983a293bf2568854",0,1,1,0,1,1,1,0,0
52828,I47215116d849777276312d7e0ab021fba713ff9a,http://review.couchbase.org/#/c/52828,3,69ca1b415e1c1022276e0750ac6a5afbec8abff0,5d074c5084edbcfdd4a4e705e63431bc386a54d9,1,03/07/15,03/07/15,118,JCBC-652: Support DesignDocument Options,"JCBC-652: Support DesignDocument Options

Motivation
----------
The view engine currently supports 2 options which can be overridden
on a per desing-document basis: updateMinChanges and
replicaUpdateMinChanges. They need to be exposed on the DesignDocument
API so they can be set.

Modifications
-------------
The DesignDocument has been extended to optionally support setting
those two options and will send them as part of the HTTP request
if needed.

Result
------
The options can now be configured by the user when a design document
is created or modified.

Change-Id: I47215116d849777276312d7e0ab021fba713ff9a",0,0,0,0,0,0,0,0,0
52905,I0115259a0d72be7f3f66de3e3fb8961d9fa3d0ad,http://review.couchbase.org/#/c/52905,2,38f461b6751b5ee55f8eea1fa76734a5f9d744c8,a442d05bfa2b5372ed47cba34d33b3ba153a8916,0,07/07/15,07/07/15,6,Prepare 2.1.4 Release,"Prepare 2.1.4 Release

Change-Id: I0115259a0d72be7f3f66de3e3fb8961d9fa3d0ad",0,0,0,1,0,0,1,NA,NA
53012,Ia678444cfb72f1703c85c831746355de53ee20df,http://review.couchbase.org/#/c/53012,2,d446b12160664c6ae2417e1c865634e83615f426,aabfb3d759e9d0061a6b171df62e82676d54d3cf,1,09/07/15,09/07/15,353,JCBC-805: Implement getFromReplica with Iterator,"JCBC-805: Implement getFromReplica with Iterator

Motivation
----------
On the blocking API, at the moment on the List<D> API is available,
which is not flexible enough in the error case. In addition, a
similar Iterator<D> API needs to be exposed where the user can
pull out documents as they arrive (and optionally stop iterating
if they have what they need).

Modifications
-------------
The Iterator blocking API has been added to the Bucket interface
and implemented accordingly. Simple integration tests have been
added with precautions since they only work if the setup is
correct and matching the assertions.

Result
------
More flexible replica read API during node failures.

Change-Id: Ia678444cfb72f1703c85c831746355de53ee20df",0,0,0,0,0,0,0,0,0
53036,I6622aa6da67df0a61ccb89c7bded18f0d6c30899,http://review.couchbase.org/#/c/53036,6,a950716825c9d507c1c8569dd7cd208dae80c911,a77040414cbf35757811c0210057327483ffc375,1,09/07/15,22/07/15,81,JCBC-809: Named Prepared Statement retry handling,"JCBC-809: Named Prepared Statement retry handling

Motivation:
-----------
Since the cache of plans is not (yet) distributed, we want to be able to
intelligently retry (re-prepare the statement) if the name is not known.
We also want to give a coherent name to our prepared statements in order
to have the same names on all nodes.

Modifications
-------------
This change modifies the query() method so it will detect a
PreparedQuery and chain retry logic to it: if the RetryStrategy is best
effort, it will peek into the errors() stream and detect 4040 (name is
not found), in which case it will do a prepare again.

Note that this approach is prone to problems on a cluster with multiple
query nodes, and could even lead to livelock if the retry was performed
continuously. This is why for now we only attempt retry once.

Tests have been added and amended, but integration testing is not
entirely possible while there's no mean of removing a prepared statement
from the server's cache.

Results
-------
All tests pass, a PreparedQuery is retried once if the N1QL service says
it doesn't know about a prepared statement with that particular name.

Change-Id: I6622aa6da67df0a61ccb89c7bded18f0d6c30899",0,1,1,0,0,1,1,0,0
53218,Ieae5c08f1edd41745c9c2d64db657cdc5208fdb7,http://review.couchbase.org/#/c/53218,2,8863b799aa03ed5fb3867baaa78232affbc06686,0a3b79ec1dfabec13b5bc6736c1aba75b8d04c94,1,15/07/15,15/07/15,21,JCBC-810: Cache getFromReplica to avoid eager unsubscription leaks.,"JCBC-810: Cache getFromReplica to avoid eager unsubscription leaks.

Motivation
----------
A common pattern to execute is getFromReplica(ALL) and then use methods
like first() or take(n) to get specific objects out of the observable.

A problem has been identified with eager unsubscriptions and object
leakage (the contained ByteBufs are not properly freed on the unsubscribed
observable).

Modifications
-------------
By using the cache() operator, the emitted values are cached and a potential
unsubscribe is disconnected. Since a maximum of 4 values can be emitted, this
should not be a problem.

The ReplicaMode has been extended to provide how many nodes might be affected
so that a size hint can be provided to cache() and keep the memory overhead
as low as possible.

Result
------
Using first() or take(n) methods on the getFromReplica() method work without
issues and leaks.

Change-Id: Ieae5c08f1edd41745c9c2d64db657cdc5208fdb7",0,0,0,0,0,0,0,0,0
53228,Iecfed8697418932d746b32660adc1b2765b44eb3,http://review.couchbase.org/#/c/53228,2,0a3b79ec1dfabec13b5bc6736c1aba75b8d04c94,38478716e4bfe8e03c9e025afe758a168829f51a,1,15/07/15,15/07/15,790,JCBC-782: Make CouchbaseAsyncBucket cold.,"JCBC-782: Make CouchbaseAsyncBucket cold.

Motivation
----------
Since all the calls against the core layer are considered hot,
this brings along some limitations which are not obvious. The
main issues we ran into in the field are:

	- Retry logic can't work because the retried subject
	  is the same as the failed one.
	- Fallback code is eagerly evaluated, leading to
	  inconsistent and surprising results

By wrapping the hot observables into a defer method, they
work like cold observables.

Modifications
-------------
This changeset only cares about the CouchbaseAsyncBucket
to not make the changeset larger than it should be.

Result
------
All methods on the CAB are now cold.

Change-Id: Iecfed8697418932d746b32660adc1b2765b44eb3",0,0,0,0,1,0,1,0,0
53232,I02ba50d938595ba21810b647a02ad146b164ad82,http://review.couchbase.org/#/c/53232,2,38478716e4bfe8e03c9e025afe758a168829f51a,1cefceb68890ddf4caac19381b07bb14a2365911,1,15/07/15,15/07/15,177,JCBC-782: Make Other Async APIs cold.,"JCBC-782: Make Other Async APIs cold.

Motivation
----------
Since all the calls against the core layer are considered hot,
this brings along some limitations which are not obvious. The
main issues we ran into in the field are:

    - Retry logic can't work because the retried subject
      is the same as the failed one.
    - Fallback code is eagerly evaluated, leading to
      inconsistent and surprising results

By wrapping the hot observables into a defer method, they
work like cold observables.

Modifications
-------------
This changeset moves the rest of the async API to cold.

Result
------
All other methods on the async API are now cold.

Change-Id: I02ba50d938595ba21810b647a02ad146b164ad82",0,0,0,0,0,0,0,0,0
53543,I30b9d10214244c10c25c1a85e14c3ae6ffb8dfbf,http://review.couchbase.org/#/c/53543,2,1d31c3476098459d620fd9844274b23cc5090182,a452e7d099fc132e9d7bad1d8bb81313bae27668,1,22/07/15,22/07/15,75,JCBC-815: Do not let the CouchbaseEnvironment.Builder implement the Env IF.,"JCBC-815: Do not let the CouchbaseEnvironment.Builder implement the Env IF.

Motivation
----------
A constant source of confusion has been the fact that the CouchbaseEnvironment
Builder also implements the CouchbaseEnvironment. Also, this meant that methods
which are not supported on the builder needed to throw exception or (worse)
return null.

Modifications
-------------
This changeset removes the interface implementation and consequently gets
rid of the unneeded getters on the builder.

The environment code has been adapted to access the fields in the builder
directly, instead through its getter methods.

Result
------
The builder is now clearly distinguishable from the built environment
itself and also does not have to throw unsupported exceptions on methods
which are not meant to be called at all.

Change-Id: I30b9d10214244c10c25c1a85e14c3ae6ffb8dfbf",0,0,0,0,0,0,0,0,0
53548,I597e796769fd7ea4fb3d0052d55ad9ba2d7cbd2e,http://review.couchbase.org/#/c/53548,6,a452e7d099fc132e9d7bad1d8bb81313bae27668,ad07fa11f18b9f23bced559ab9e46c28a26a42a6,1,22/07/15,23/07/15,669,JCBC-814: Refactoring query-related code out of AsyncBucket,"JCBC-814: Refactoring query-related code out of AsyncBucket

Motivation:
-----------
In CouchbaseAsyncBucket, the code relative to executing N1QL queries is
starting to take too much space, becoming more difficult to maintain.
Externalize all the actual implementation into a separate class.

Modifications:
--------------
Refactored private methods queryRaw and queryPrepared as well as actual
implementation for prepare into a separate class QueryExecutor.

Results
-------
Code for query execution is isolated and will be easier to find/maintain

Change-Id: I597e796769fd7ea4fb3d0052d55ad9ba2d7cbd2e",0,1,0,0,1,1,1,0,0
53589,I3e19e1d0a859cfd345db18457377b7373e643605,http://review.couchbase.org/#/c/53589,2,51a3e20398f5ec5fdf2181adf990594be7e86435,037146f4ebefcc6b8abfb52a38569362a0357047,1,23/07/15,29/07/15,153,JCBC-816: Make reconfiguration more resilient during edge cases.,"JCBC-816: Make reconfiguration more resilient during edge cases.

Motivation
----------
There are two edge cases which can happen either individually or
together:

  - Full cluster restarts (also single node cluster restarts)
  - Low ops/s. (especially during testing on a single thread
    in a loop, blocking with the default timeout)

If they happen, the client is not able to get to an alternative
node immediately and also the incentive for a reconfiguration
(triggered through ops not finding their primary node) is
lowered.

There are some steps which can be done to make it more resilient and
recovering more quickly.

Modifications
-------------
A bunch of smaller fixes combined provide better reliability
semantics. They are:

  - If an exception happens during bootstrap, it is retried. But if
    an exception happens again during the re-bootstrap, it is now
    caught and ignored to ""keep going"" and wait for new attempts
    through the other heuristics. Propagating the exception into
    the nirvana only has the side effect of potentially shooting off
    live threads which just want to signal a stale connection.

  - The current code had too strict boundary checks in place for when
    a new reconfiguration is triggered, mainly for legacy reasons
    when http streaming only was available. With CCCP, things changed
    a bit. So the code now only makes sure that not more than one
    ""outdated"" attempt is made per second (the 10 ops in a 10 sec
    interval boundary has been removed). This makes sure that even
    under low load, we eventually reach a new configuration as
    quickly as possible.

Tests have been adapted to get rid of the removed boundary check, as
well as a potential NPE has been removed.

Result
------
Under these edge cases, the client now more reliably and more quickly
gets back to a valid configuration.

Change-Id: I3e19e1d0a859cfd345db18457377b7373e643605",0,0,1,0,0,0,1,2,1
53613,I4eb9ba6637fb555ce96f922696189b892405ce59,http://review.couchbase.org/#/c/53613,2,745c7c0255bf72886efb0c855b24fd86754049cf,8547bcba464cc0e2dd6196b879b8f5cdfc22822d,0,23/07/15,24/07/15,4,Prepare 2.2.0-dp2 Release,"Prepare 2.2.0-dp2 Release

Change-Id: I4eb9ba6637fb555ce96f922696189b892405ce59",0,0,0,1,0,0,1,NA,NA
53736,I1dc030bedf687a77bad2c54b0ce887c1cdc39e53,http://review.couchbase.org/#/c/53736,2,8547bcba464cc0e2dd6196b879b8f5cdfc22822d,581caa0a0354b3addc25b576dc30733f506503f9,1,27/07/15,27/07/15,91,JCBC-817: Rename parametrized to parameterized for consistency reasons.,"JCBC-817: Rename parametrized to parameterized for consistency reasons.

Motivation
----------
It was decided, while parametrized is correct in form, that throughout
documentation and SDKs the term ""parameterized"" should be used instead,
since it appears to be the primary form according to the oxford
dictionary.

Since this API hasn't been stableized yet until 2.2.0, we can make this
change now better than later.

Modifications
-------------
This changeset replaces all parametrized occurences with the parameterized
form.

Result
------
Consistent naming of concepts across docs and SDKs.

Change-Id: I1dc030bedf687a77bad2c54b0ce887c1cdc39e53",0,0,0,0,0,0,0,0,0
53737,I1eaf59569ace0b2516b13436c9d71c8e80437096,http://review.couchbase.org/#/c/53737,2,c9d8ce111a57dd64631fcc577fa35d55d615d34e,54dcd77be61ea2853ec23fa8f14e6f2f7eb79d76,1,27/07/15,27/07/15,207,JCBC-818: Disable Prepared Statements for DP2,"JCBC-818: Disable Prepared Statements for DP2

Motivation
----------
The implementation has changed twice already and the server side
communication protocol is still heavily in flux.

This changeset disables prepared statements until we can bring it
back in a solid and supported fashion for 2.2.0 GA.

Change-Id: I1eaf59569ace0b2516b13436c9d71c8e80437096",0,0,0,0,0,0,0,0,0
53798,Id9f3a9bba1721f468a110d5d3160f2cb7077d25b,http://review.couchbase.org/#/c/53798,3,a3aef515010edc96f6917ada2de6bc482a500df7,e6cb5110801b8ccbbf1c4fa52a6899469eca8ae0,1,28/07/15,28/07/15,123,JCBC-819: Implement a Bucket Consumer for Events,"JCBC-819: Implement a Bucket Consumer for Events

Motivation
----------
It makes sense to allow storing events in a couchbase bucket,
mainly to showcase how it works. In production it might come
in helpful if those events are sent to a different cluster
which collects and aggregates those statistics.

Modifications
-------------
Adding the BucketConsumer and allow to use either insert or
update of the documents.

Result
------
A simple to plug consumer which writes the events into a
bucket as json data.

Change-Id: Id9f3a9bba1721f468a110d5d3160f2cb7077d25b",0,0,0,0,0,0,0,0,0
53931,I42985f7e8ca5396b4f76148b04f67f439c2317d5,http://review.couchbase.org/#/c/53931,3,e6cb5110801b8ccbbf1c4fa52a6899469eca8ae0,31556645bf0a27d306dfc517d4e541000bb5a896,1,30/07/15,31/07/15,26,wip: max_parallelism,"wip: max_parallelism

Change-Id: I42985f7e8ca5396b4f76148b04f67f439c2317d5",0,0,0,1,0,0,1,0,0
54133,Id7bf5eb5c3e67f027f746ba92dd15f9c73eea9c2,http://review.couchbase.org/#/c/54133,4,31556645bf0a27d306dfc517d4e541000bb5a896,a7d1b5fb488279a52b972cb870746d32dd64138d,1,05/08/15,05/08/15,677,JCBC-825: Expose MutationToken on Document,"JCBC-825: Expose MutationToken on Document

Motivation
----------
As a prepration for enhanced durability and optimized n1ql queries, the
mutation token needs to be exposed on the document itself.

Modifications
-------------
The Document API has been extended to support the token, but since it is optional
it is backwards compatible (nulling out if not supported).

If the user does not want to use mutation tokens, even custom documents will continue
to work, only if mutation tokens are enabled the custom documents need to implement
one more method to create the document with the mutation token.

Result
------
The mutation token is exposed and can be utilized from user and sdk space.

Change-Id: Id7bf5eb5c3e67f027f746ba92dd15f9c73eea9c2",0,1,0,0,1,0,1,1,1
54138,Ib921765e70a92a572968ac458e24ae3fdb2d4ccf,http://review.couchbase.org/#/c/54138,2,a7d1b5fb488279a52b972cb870746d32dd64138d,8beb747f72226dd94ed048ba7f5e7cd4ae205a02,1,05/08/15,07/08/15,8,JCBC-826: Support for Enhanced Durability,"JCBC-826: Support for Enhanced Durability

Motivation
----------
The java client needs to be adapted in order to pass the mutation
token down to the observe calls.

Modifications
-------------
Adapting the bucket api to call the underlying observe methods
with the mutation token.

Result
------
Observe will now transparently use the new logic if mutation
tokens are enabled.

Change-Id: Ib921765e70a92a572968ac458e24ae3fdb2d4ccf",0,0,0,0,0,0,0,0,0
54168,I434dd438f304ca71ca5cee27e01b21fde15b44a3,http://review.couchbase.org/#/c/54168,4,8beb747f72226dd94ed048ba7f5e7cd4ae205a02,2f30680177ccfed7aab82c94abed0e5a9ad5391c,1,06/08/15,07/08/15,24,wip: always apply a server side timeout,"wip: always apply a server side timeout

Change-Id: I434dd438f304ca71ca5cee27e01b21fde15b44a3",0,1,0,1,0,0,1,0,0
54410,I673d7c66efb454cba412f24fbff36ad01e3f5d76,http://review.couchbase.org/#/c/54410,2,2f30680177ccfed7aab82c94abed0e5a9ad5391c,9ebdcf129093e0d0915bd4b9f26641d3c32fd45e,1,13/08/15,13/08/15,206,JCBC-829: Change API for new prepared statements handling,"JCBC-829: Change API for new prepared statements handling

Motivation
----------
The agreed spec includes transparently handling the prepared statement,
so a new adhoc query option needs to be introduced, as well as the
prepare() methods removed from the public API.

Modifications
-------------
The prepare() API is removed from the async and sync API, and the new
query option is added to the query params.

Result
------
Cleanup for upcoming prepared statement changes.

Change-Id: I673d7c66efb454cba412f24fbff36ad01e3f5d76",0,0,0,0,0,0,0,1,1
54412,I7457549c2168f552a18778e9967d5240a50fcfcc,http://review.couchbase.org/#/c/54412,2,9ebdcf129093e0d0915bd4b9f26641d3c32fd45e,5ccccbab9c20c63a9d2d7d2f7ff0e94ae49c1756,1,13/08/15,14/08/15,173,JCBC-829: Add LRU Query Cache,"JCBC-829: Add LRU Query Cache

Motivation
----------
Since prepared objects are nor transparently cached, we need a thread
safe LRU cache to handle the objects.

Modifications
-------------
Without pulling in a nother library, for now we synchronize a
LinkedHashMap extension which provides LRU semantics with very
little code necessary. In the future, custom implementation can
provide better throughput, but it should be more than enough
to start with.

Result
------
LRU cache implemented, ready to be used in later code.

Change-Id: I7457549c2168f552a18778e9967d5240a50fcfcc",0,0,0,0,0,0,0,0,0
54444,Iaf97e9a08e60a168db75c01f7b875ca3485ade29,http://review.couchbase.org/#/c/54444,7,5ccccbab9c20c63a9d2d7d2f7ff0e94ae49c1756,88ee017f6542fb03de55f91f6d516df4b1e90833,1,14/08/15,19/08/15,406,JCBC-829: WIP - prepared statements handling the designed way,"JCBC-829: WIP - prepared statements handling the designed way

Change-Id: Iaf97e9a08e60a168db75c01f7b875ca3485ade29",0,1,1,1,0,0,1,0,0
54498,I7a054503a8bf1dbbbfdb76e5d7d8c8fc4fb2da1a,http://review.couchbase.org/#/c/54498,2,3e06bfdaceb53eba7461b9b1342e119eb4e65c65,7477eb389de970a9de07e3426e815e35b59b8b8f,1,17/08/15,17/08/15,18,JCBC-830: Handle EXISTS response on append/prepend.,"JCBC-830: Handle EXISTS response on append/prepend.

Motivation
----------
When an append/prepend operation is called with the cas
value set and the requests value does not match with the
server one, it will return with an EEXISTS (same as on
a replace operation, for example).

Modifications
-------------
The proper mapping from EXISTS to a CASMismatchException
has been coded, as well as adding integration tests to
avoid regressions in the future.

Result
------
EXISTS on append/prepend are now properly converted into
the right exception type.

Change-Id: I7a054503a8bf1dbbbfdb76e5d7d8c8fc4fb2da1a",0,0,0,0,0,0,0,1,1
54575,I781576e38012b1a104d90a3c58574ab86bd0efdb,http://review.couchbase.org/#/c/54575,2,7477eb389de970a9de07e3426e815e35b59b8b8f,ec34f0ebb8cbed7e68d025b6018aa3c6146ac00e,1,19/08/15,19/08/15,4,Align System -> RuntimeMetricEvent rename with core.,"Align System -> RuntimeMetricEvent rename with core.

Change-Id: I781576e38012b1a104d90a3c58574ab86bd0efdb",0,0,0,1,0,0,1,0,0
54586,I1a65d8c9a7c78f45277f243cc45efc3e87c8c94f,http://review.couchbase.org/#/c/54586,2,ec34f0ebb8cbed7e68d025b6018aa3c6146ac00e,14d5ab832b571dbb597d440737eeef27d03cfb46,1,19/08/15,19/08/15,14,Override core-io builder methods to align with recent changes.,"Override core-io builder methods to align with recent changes.

Change-Id: I1a65d8c9a7c78f45277f243cc45efc3e87c8c94f",0,0,0,1,0,0,1,0,0
54592,Iffe03bbbe3f760ff20964a71f44ff1b6d575d115,http://review.couchbase.org/#/c/54592,3,4cf35d15a160959291079b56a92af1ef7c810eaa,2d6b66dadd3432e130d524346ec15f2333fc2cf4,1,19/08/15,21/08/15,520,JCBC-829: Retry logic for prepared statements execution,"JCBC-829: Retry logic for prepared statements execution

WIP

Change-Id: Iffe03bbbe3f760ff20964a71f44ff1b6d575d115",0,0,0,0,1,1,1,0,0
54809,I47c45c4456800886b794634a3e01c228c7199381,http://review.couchbase.org/#/c/54809,4,2d6b66dadd3432e130d524346ec15f2333fc2cf4,f574297d5832157b52d493231143fd995bf02151,1,25/08/15,25/08/15,1012,JCBC-833: Prefix all Query-related classes with N1ql,"JCBC-833: Prefix all Query-related classes with N1ql

Motivation:
-----------
In order to maintain naming consistency and avoid confusion, classes
like Query and related (eg. QueryResult, QueryRow) should be prefixed
with N1ql, aligning it with view-related classes like ViewQuery.

Modifications:
--------------
Renamed Query, QueryResult, QueryRow, their async counterparts, concrete
implementations and related tests by prefixing ""Query"" with ""N1ql"".

QueryMetrics and QueryParams have been respectively renamed to
N1qlMetrics and N1qlParams.

QueryExecutor has been renamed to N1qlQueryExecutor. Order of fields and
method declaration has been shuffled around a bit for clarity.

Results:
--------
Less possible confusion when dealing with the various modes of querying
couchbase (view, spatial view, N1QL).

Change-Id: I47c45c4456800886b794634a3e01c228c7199381",0,1,0,0,1,1,1,6,1
54810,Iee1777f8da4d4958ed9787741e75b5465559aaf5,http://review.couchbase.org/#/c/54810,5,e5a66671c163018df80b11f507216c1dea28997b,273dcd4d32e1552db376721003e2d6c6e40d9afc,1,25/08/15,25/08/15,2297,wip: append/prepend/counter observe,"wip: append/prepend/counter observe

Change-Id: Iee1777f8da4d4958ed9787741e75b5465559aaf5",0,1,0,1,1,0,1,2,1
54811,I9e3b8e1784f14c01303e2aa8dee25438c6a7d1ac,http://review.couchbase.org/#/c/54811,2,5b6da172947e62f9197b0971ebbc6df19632280a,ab2cfb9ccd9ba60fc35dfb1b2c7d5350ab1fc4aa,1,25/08/15,25/08/15,14,JCBC-834: Fix spatial query using default query timeout,"JCBC-834: Fix spatial query using default query timeout

Motivation:
-----------
Spatial queries should use the default VIEW timeout instead of the query
timeout.

Modifications:
--------------
Made CouchbaseBucket.query(SpatialViewQuery) use the view timeout from
the environment. Also documented where the default timeouts come from on
view/spatial/n1ql query method javadocs.

Results:
--------
The spatial queries now use the view timeout by default, as advertised.

Change-Id: I9e3b8e1784f14c01303e2aa8dee25438c6a7d1ac",0,0,0,0,0,1,1,0,0
54849,I59ac125a79b0e79b0bb07fc084f544ce976c320d,http://review.couchbase.org/#/c/54849,2,b334e0e5ae95211c598d33b1589d83a4fadad347,6954ce2a58e5a365ec6f6cd1c2c5e47c8c47c321,0,26/08/15,26/08/15,4,Bring metadata in order,"Bring metadata in order

Change-Id: I59ac125a79b0e79b0bb07fc084f544ce976c320d",0,0,0,1,0,0,1,NA,NA
54851,I76bd50b04f4ac80ebc9b667425519af2495bdba5,http://review.couchbase.org/#/c/54851,3,c5f9a2a907a49871541ff052733ffb0a0a8bc799,e2cd03ba326f953e56e52e143b08dfa2488b1d7c,1,26/08/15,26/08/15,141,JCBC-829: Add more unit tests,"JCBC-829: Add more unit tests

Test the extraction of the plan and the fact that the server name is in
the ""executePrepared"" query, along with the ""encoded_plan"".

Change-Id: I76bd50b04f4ac80ebc9b667425519af2495bdba5",0,0,0,0,0,1,1,0,0
54899,If0fcf05decf13f31ad7eae0a61289fcee0b07f50,http://review.couchbase.org/#/c/54899,2,e2cd03ba326f953e56e52e143b08dfa2488b1d7c,65e63a767747894c9f9bbe72e412404e27512ba5,1,28/08/15,28/08/15,52,JCBC-784: Adapt javadocs to reflect counter API changes.,"JCBC-784: Adapt javadocs to reflect counter API changes.

Change-Id: If0fcf05decf13f31ad7eae0a61289fcee0b07f50",0,0,0,1,0,0,1,0,0
54949,I0a909716427a18072bd42bae8c78082526cddb0d,http://review.couchbase.org/#/c/54949,2,65e63a767747894c9f9bbe72e412404e27512ba5,45a8add8973e3262d0ba95cfbd0004da1b03217a,1,01/09/15,01/09/15,4,JCBC-744: Ignore @Id annotated fields in the document body.,"JCBC-744: Ignore @Id annotated fields in the document body.

Motivation
----------
Without this change, every property annotated with @Id will be
included in the JSON content, which just duplicates information
and should be ignored.

Modifications
-------------
Skip properties for the content which have an @Id annotation.

Result
------
ID fields are not duplicated in the content.

Change-Id: I0a909716427a18072bd42bae8c78082526cddb0d",0,0,0,0,0,0,0,0,0
54950,I1169080e981742d383b6000669a0b3083828c1af,http://review.couchbase.org/#/c/54950,2,45a8add8973e3262d0ba95cfbd0004da1b03217a,050630b06a02bd1fa86f2c42ee536a7005e99883,1,01/09/15,01/09/15,25,JCBC-744: Mark Repository as experimental.,"JCBC-744: Mark Repository as experimental.

Change-Id: I1169080e981742d383b6000669a0b3083828c1af",0,0,0,1,0,0,1,0,0
54972,Ie33a6c64f66831d4927fc3f06f55ada51719e9be,http://review.couchbase.org/#/c/54972,2,050630b06a02bd1fa86f2c42ee536a7005e99883,04cbc0e9f65bf11517408f313a809d324b9d7a90,0,02/09/15,02/09/15,6,Prepare 2.2.0 Release,"Prepare 2.2.0 Release

Change-Id: Ie33a6c64f66831d4927fc3f06f55ada51719e9be",0,0,0,1,0,0,1,NA,NA
54986,Ia659b6db5a1c352d803349a7ead4b4312e19f276,http://review.couchbase.org/#/c/54986,2,04cbc0e9f65bf11517408f313a809d324b9d7a90,4b63ce21095e54b7f88e3bd0face61a251dba733,0,02/09/15,02/09/15,4,Prepare 2.2.1 Release Cycle,"Prepare 2.2.1 Release Cycle

Change-Id: Ia659b6db5a1c352d803349a7ead4b4312e19f276",0,0,0,1,0,0,1,NA,NA
55024,I7f45272e9390da042cd6f04ebfa692b404a4c318,http://review.couchbase.org/#/c/55024,3,4b63ce21095e54b7f88e3bd0face61a251dba733,eb4fe2ee212b2ef58047efe9304dbe9e9dbd9d90,0,03/09/15,04/09/15,814,Move to Maven,"Move to Maven

Change-Id: I7f45272e9390da042cd6f04ebfa692b404a4c318",0,0,0,1,1,0,1,NA,NA
55346,I43bcb2ac5d46a5704aaa1243818f4ffa4357a34d,http://review.couchbase.org/#/c/55346,2,eb4fe2ee212b2ef58047efe9304dbe9e9dbd9d90,292d2f57b6c98a6755e6add2fb67669b381fda9f,1,18/09/15,18/09/15,80,JCBC-847: Update status references to new KeyValueStatus class,"JCBC-847: Update status references to new KeyValueStatus class

Motivation
----------
After JVMCBC-240 has been merged in the core, two tests which using
ResponseStatusConverter stopped compiling

Modification
------------
Update tests to use KeyValueStatus class instead

Result
------
Tests compiling again

Change-Id: I43bcb2ac5d46a5704aaa1243818f4ffa4357a34d",0,0,0,0,0,0,0,0,0
55489,Ia54b4cbf0a41b4017c45dc904df59fd904df394d,http://review.couchbase.org/#/c/55489,2,292d2f57b6c98a6755e6add2fb67669b381fda9f,b220df0609c0d507d6e81270e482ce792a542c56,1,24/09/15,30/09/15,198,Added mocked unit tests that experiment with back-pressure,"Added mocked unit tests that experiment with back-pressure

First a classical bulk get pattern scenario is demonstrated, where
BackpressureException is thrown because the ringbuffer is filled (as
simulated by the mock reacting to queue reaching MAX_CAPACITY).

Secondly, a new pattern is demonstrated where natural flow control in
RxJava is used to avoid that BackpressureException, by using the flatMap
maxConcurrent variant.

Change-Id: Ia54b4cbf0a41b4017c45dc904df59fd904df394d",0,0,1,0,0,1,1,0,0
55726,I1124b87cad3b1adcde0d164d6dc588ade22a9a00,http://review.couchbase.org/#/c/55726,2,b220df0609c0d507d6e81270e482ce792a542c56,424584ee5a64ba2ec3443cc9e6c282a77f4dac47,1,02/10/15,13/10/15,156,JCBC-852: Improve docs on view management,"JCBC-852: Improve docs on view management

Motivation:
-----------
Documentation on view management is a bit unclear, especially on how to
add/update a specific view into an existing DesignDocument (what is the
behavior of upsert in this case? can one use getDesignDocument, mutate
the views() list in it and then upsert?).

Modifications:
--------------
Added javadoc on various view-related elements.
Documented how to add a view on upsertDesignDocument's javadoc.
Documented reduce nullability.
Documented ways to create a concrete instance of View.

Added integration tests that showcase and test the behavior of upsert
DesignDocument when one doesn't resend the whole list of view definition
vs doing a get/add view/upsert of the DesignDocument.

This shows that adding a new definition of an existing view will update
it on the server side.

Results:
--------
View management is better documented in javadocs and an integration test
verifies the behavior when adding a view.

Change-Id: I1124b87cad3b1adcde0d164d6dc588ade22a9a00",0,0,1,0,0,1,1,0,0
55733,I053cd8ca8247bb1cfaf0af0ddc69b77a91191a86,http://review.couchbase.org/#/c/55733,3,004710336f5b93db885416204b5369774962aaae,47bbb0cc5cb281cd4cabee4a0cb41efa433330b4,0,02/10/15,02/10/15,4,Prepare 2.1.5 Development,"Prepare 2.1.5 Development

Change-Id: I053cd8ca8247bb1cfaf0af0ddc69b77a91191a86",1,0,0,1,0,0,1,NA,NA
55735,I989a95bf8382c4d46ce31da1ea4d2b761e3ba394,http://review.couchbase.org/#/c/55735,2,47bbb0cc5cb281cd4cabee4a0cb41efa433330b4,254285d773af850c0361b848a7a0ae21c0bde42d,1,02/10/15,02/10/15,6,Override environment builder for compatibility.,"Override environment builder for compatibility.

Change-Id: I989a95bf8382c4d46ce31da1ea4d2b761e3ba394",1,0,0,1,0,0,1,0,0
55845,I601be9ad35abb2966fe38dc1a2dce413c9c94345,http://review.couchbase.org/#/c/55845,16,c030030a6bd294f63308445f087d2a66088eb5a6,86a102c649871d7a0c95146999fec9019872e665,1,06/10/15,28/01/16,2782,WIP: CBFT integration,"WIP: CBFT integration

Change-Id: I601be9ad35abb2966fe38dc1a2dce413c9c94345",0,1,0,1,1,0,1,3,1
55901,I9e3b8e1784f14c01303e2aa8dee25438c6a7d1ac,http://review.couchbase.org/#/c/55901,2,7204b7faea39fbb74e94ebec3f2732a5acfe78c7,a42b210cc21bb56a9010e37b39446e80fa1319f2,1,08/10/15,08/10/15,14,JCBC-834: Fix spatial query using default query timeout,"JCBC-834: Fix spatial query using default query timeout

Motivation:
-----------
Spatial queries should use the default VIEW timeout instead of the query
timeout.

Modifications:
--------------
Made CouchbaseBucket.query(SpatialViewQuery) use the view timeout from
the environment. Also documented where the default timeouts come from on
view/spatial/n1ql query method javadocs.

Results:
--------
The spatial queries now use the view timeout by default, as advertised.

Change-Id: I9e3b8e1784f14c01303e2aa8dee25438c6a7d1ac
Reviewed-on: http://review.couchbase.org/54811
Tested-by: Simon Baslé <simon@couchbase.com>
Reviewed-by: Michael Nitschinger <michael.nitschinger@couchbase.com>",0,0,0,0,0,0,0,0,0
55910,Ida5d25f75aeb3445c503cd0abbda538a2b79e8e2,http://review.couchbase.org/#/c/55910,3,f091424dab94dfa582e08bb882b9d7eb75d19509,3bb7a793c706392379bedbc97fe3c2c069dfa97b,1,08/10/15,09/10/15,79,JCBC-854: Speed up encoding for RawJsonDocument and StringDocument,"JCBC-854: Speed up encoding for RawJsonDocument and StringDocument

Motivation
----------
Encoding the payload of documents, even if they are already in a String
representation takes time. It pays off if we have faster ways to encode
into a utf8 byte stream.

Modifications
-------------
After some help of JMH and netty utilities, we found a faster way to perform
string encoding. This applies to both the raw json document and the string
document. Separate changes for ID handling will come in too.

Here is a comparison on encoding a 11K json document from string to a
bytebuf:

Benchmark              Mode  Cnt      Score     Error  Units
this    avgt   10  21399.090 ± 331.158  ns/op
2.2.0   avgt   10  79338.532 ± 484.240  ns/op

that is nearly an 4x improvement.

Result
------
Faster encoding performance for raw json documents and string documents.

Change-Id: Ida5d25f75aeb3445c503cd0abbda538a2b79e8e2",0,0,0,0,0,0,0,0,0
55949,I1353d85d1e49435a8884fef575b247b61d978a84,http://review.couchbase.org/#/c/55949,3,3bb7a793c706392379bedbc97fe3c2c069dfa97b,910a9e55967d043f9599640277873c2e9ef156dc,1,09/10/15,09/10/15,13,JCBC-855: Cache JsonBooleanTranscoder true/false values.,"JCBC-855: Cache JsonBooleanTranscoder true/false values.

Motivation
----------
Since only true and false can be passed in, there is a very small
finite number of possible buffers to be created.

Modifcations
------------
true and false representations and pre-allocated and then reused
every time they are needed.

Result
------
No need to create these two representations every time.

Change-Id: I1353d85d1e49435a8884fef575b247b61d978a84",0,0,0,0,0,0,0,0,0
55989,If52b3fe7134b9a4e917df84689f1b75d36a5c097,http://review.couchbase.org/#/c/55989,4,910a9e55967d043f9599640277873c2e9ef156dc,021fb5cf626be7a4f8a7903da792ce3aa2336452,0,12/10/15,12/10/15,205,JCBC-856: Upate README for 2.2.1,"JCBC-856: Upate README for 2.2.1

Motivation
----------
The README has been outdated after the change from
gradle back to maven. Also, this is a great opportunity
for more clarity.

Modifications
-------------
The README is now restructured and clarified, also
providing new information on how to contribute.

Result
------
Easier to digest README with updated infos.

Change-Id: If52b3fe7134b9a4e917df84689f1b75d36a5c097",0,1,0,0,0,0,1,NA,NA
55992,Ica920da70cf8f98ddda26c72a8c3eed1bcd5d25a,http://review.couchbase.org/#/c/55992,2,7354148763750428cc0051b9e0b1e2aff76cb89c,e472e6fd3a440d59bc3eae4699376c1f5e0ffdae,0,12/10/15,12/10/15,6,Preparing 2.2.1 Release,"Preparing 2.2.1 Release

Change-Id: Ica920da70cf8f98ddda26c72a8c3eed1bcd5d25a",0,0,0,1,0,0,1,NA,NA
55993,Ie6ec88e463223f683476f132dfaad05c0bbe1343,http://review.couchbase.org/#/c/55993,2,60cd360aaea6f1d86c688440644f40608863e3d4,fe8afb763ac9412192bd5b57155b2fa36dc44cfa,0,12/10/15,12/10/15,4,Preparing 2.1.5 Release,"Preparing 2.1.5 Release

Change-Id: Ie6ec88e463223f683476f132dfaad05c0bbe1343",0,0,0,1,0,0,1,NA,NA
56038,Iaf534a0985274c678fe0add350e8549abb9799bd,http://review.couchbase.org/#/c/56038,2,fe8afb763ac9412192bd5b57155b2fa36dc44cfa,88b10ab7f1c3916a0823d743bc4a4908c7db4c77,1,13/10/15,13/10/15,2,Fix assertion for 4.0 GA,"Fix assertion for 4.0 GA

Change-Id: Iaf534a0985274c678fe0add350e8549abb9799bd",1,0,0,1,0,0,1,0,0
56056,I0bb7f5fd3e7a558830b12d8f940d1ee6ef8b33e8,http://review.couchbase.org/#/c/56056,2,a2597cad97a95a67b776b400634fab707f3812c2,38d5db292feadbd4cf2cb018b71c4415ed83e142,1,13/10/15,13/10/15,27,Fix property replacement in build process.,"Fix property replacement in build process.

Change-Id: I0bb7f5fd3e7a558830b12d8f940d1ee6ef8b33e8",0,0,0,1,0,0,1,0,0
56152,I7a367cc2eb95d212f82197a9d3b4a3038b4e6772,http://review.couchbase.org/#/c/56152,3,38d5db292feadbd4cf2cb018b71c4415ed83e142,31dc4a3aa46c9c357871c69e563e4587c61027af,0,15/10/15,16/10/15,4,Start working on 2.2.2,"Start working on 2.2.2

Change-Id: I7a367cc2eb95d212f82197a9d3b4a3038b4e6772",0,0,0,1,0,0,1,NA,NA
56153,Ib4835643fac1a9b56f10d6ffe725b5afb1f0c843,http://review.couchbase.org/#/c/56153,6,b5798266c0bd726bbd8319253376202f41c5a34d,5a8872ff471b13ebebcb02c85b694021763ce972,1,15/10/15,16/10/15,128,WIP: cache bucket references,"WIP: cache bucket references

Change-Id: Ib4835643fac1a9b56f10d6ffe725b5afb1f0c843",0,1,0,1,0,0,1,0,0
56189,I5b5cc27f5f9880e0118ddacc36effc9c4fff19a2,http://review.couchbase.org/#/c/56189,3,5a8872ff471b13ebebcb02c85b694021763ce972,208e8511a5bd77acdae9f027968b50d989dfe9c7,1,16/10/15,16/10/15,621,Polish Couchbase(Async)Cluster.,"Polish Couchbase(Async)Cluster.

Note that this change doesn't change behaviour, it is
just adding docblocks and refactoring code a little so
it can be understood more easily.

Change-Id: I5b5cc27f5f9880e0118ddacc36effc9c4fff19a2",0,0,0,0,1,0,1,0,0
56191,I9a24e02394ba2257a8825e9e1d392421d0ce6e76,http://review.couchbase.org/#/c/56191,2,208e8511a5bd77acdae9f027968b50d989dfe9c7,e83c1b0064e4719cd21182eca7d6bb6fc860bb95,1,16/10/15,16/10/15,6,Adapt to JVMCBC-256 shutdownAsync changes.,"Adapt to JVMCBC-256 shutdownAsync changes.

Modification
------------
Since shutdown on the environment is now deprecated, the code and
comments now refer explicitly to shutdownAsync.

Change-Id: I9a24e02394ba2257a8825e9e1d392421d0ce6e76",0,0,0,0,0,0,0,0,0
56209,I917946d3503f49ee6dc309443654479ca22e7bf0,http://review.couchbase.org/#/c/56209,2,e83c1b0064e4719cd21182eca7d6bb6fc860bb95,4e63b54bf0fa463e914fd3be3afad3e035b9dd1b,1,19/10/15,19/10/15,32,JCBC-864: Remove with Durability Requirements does not honor CAS,"JCBC-864: Remove with Durability Requirements does not honor CAS

Motivation
----------
It was found that when the remove operation with document and
durability requirements was used, the contained CAS value
was not honored. This meant that potential cas mismatches
were not raised to the user level.

Modifications
-------------
The root cause of the issue was that the document was casted
down to its ID, not passing the cas value down to the core
layer.

The code has been refactored so that both ID- and Document-
based durability requirements now use a common helper method
to avoid code duplication while making sure the CAS value
is honored where possible.

An integration test has been added to avoid future
regressions.

Result
------
Remove with document and durability requirements now
properly respects the CAS value and allows to detect
CAS mismatches on remove.

Change-Id: I917946d3503f49ee6dc309443654479ca22e7bf0",0,0,0,0,0,0,0,0,0
56291,I7f06a4d6144c15983e729d544042bb28715179dd,http://review.couchbase.org/#/c/56291,2,6f8a9f10930a9b67d7e4eb5efe95138035b4beb5,662418c7f8ef0462941eefa4e0c0f6dcea97a74c,1,21/10/15,22/10/15,8,JCBC-865: Fix multiple WHEN in CASE,"JCBC-865: Fix multiple WHEN in CASE

Motivation:
-----------
The correct syntax for CASE is not to separate multiple WHEN with any
separator, while currently a comma is used.

Modifications:
--------------
Removed the comma separator when multiple WHEN are added to a CASE.

Result:
-------
The multiple WHEN CASE now produces correct n1ql statement.

Change-Id: I7f06a4d6144c15983e729d544042bb28715179dd",0,0,0,0,0,1,1,0,0
56603,Ic72594aec0c0f60d5d0d9547c25b6ed1e4388704,http://review.couchbase.org/#/c/56603,2,662418c7f8ef0462941eefa4e0c0f6dcea97a74c,3fc5a41d6a00e316438a5b23e384c1c71e94e9cd,1,02/11/15,02/11/15,16,JCBC-870: Fix double opening of AsyncBucket for each Bucket,"JCBC-870: Fix double opening of AsyncBucket for each Bucket

Motivation:
-----------
During opening of a (sync) Bucket, two AsyncBucket would get opened:
the first one from the call to AsyncBucket.openBucket, and the second
one in the constructor of the CouchbaseBucket.
This is problematic since the closing of a bucket will mark only the
internal AsyncBucket as closed, not the one in the AsyncCluster's
cache, leading to bad internal state.

Modifications:
--------------
CouchbaseBucket now has a constructor that takes an AsyncBucket to reuse
instead of creating one from scratch. The old constructor is kept in
place as part of the public API but isn't used internally anymore.

Results:
--------
No double opening of AsyncBuckets, closing a Bucket will correctly mark
all corresponding AsyncBuckets as closed.

Change-Id: Ic72594aec0c0f60d5d0d9547c25b6ed1e4388704",0,0,0,0,0,1,1,0,0
56625,I1cc3e0884ae4f99eb8db24a93ad805abbd879f9b,http://review.couchbase.org/#/c/56625,2,3fc5a41d6a00e316438a5b23e384c1c71e94e9cd,82b5d0624fc536a91496f243258696fb41108baa,1,03/11/15,03/11/15,27,JCBC-873: Point out that mutating cluster ops are async,"JCBC-873: Point out that mutating cluster ops are async

Motivation
----------
The previous javadocs did not make it clear that even if  the server
responds with a success and the observable/call is completed, the
operation on the server itself is asynchronous and might not be
finished yet.

Modifications
-------------
Enhance javadoc to point out the fact.

Result
------
More clarity in the javadoc on server side behaviour for cluster
management operations.

Change-Id: I1cc3e0884ae4f99eb8db24a93ad805abbd879f9b",0,0,0,0,0,0,0,0,0
56629,I761657d092b43713d05e0f30aba0c1ccb7c8fab1,http://review.couchbase.org/#/c/56629,3,06fac05d6ce8532123fffd531a2c08f77f5700c2,496655e250d6baa20ed025223b03ac08b05088bc,1,03/11/15,03/11/15,194,JCBC-872: Add Javadocs for parameterized queries,"JCBC-872: Add Javadocs for parameterized queries

Motivation
----------
A quick sample on how to use positional or named parameterized
queries needs to be part of the javadocs to ease adoption.

Modifications
-------------
The N1qlQuery methods have been extended with javadoc blocks
explaining the concepts and showing examples on how to use them.

Result
------
Helping with easier adoption for parameterized queries.

Change-Id: I761657d092b43713d05e0f30aba0c1ccb7c8fab1",0,0,0,0,0,0,0,0,0
56630,Ic7a3aaf7d96661e9348857f8e5785c25be05d2f9,http://review.couchbase.org/#/c/56630,2,7b6c25383e0d42bf6119aa90adbd0a0e9bdea6c7,1e879f9852574401b62f7d57d3bf570112e4d15d,1,03/11/15,03/11/15,60,JCBC-844: Clarify javadocs of upsert.,"JCBC-844: Clarify javadocs of upsert.

Motivation
----------
It has been brought to attention that the javadoc for upsert is
misleading and does not clarify that upsert is not actually performing
a replace operation and does not take the CAS into account.

Modifications
-------------
The javadocs now use overwrite instead of replace in the wording,
as well as contain a paragraph which states that CAS is not respected
and the corresponding replace method needs to be used instead.

Result
------
More clarity for the upsert javadocs.

Change-Id: Ic7a3aaf7d96661e9348857f8e5785c25be05d2f9",0,0,0,0,0,0,0,0,0
56642,I9e1053be04493d7932b9e4efb77a1691c279c76b,http://review.couchbase.org/#/c/56642,2,79e2c78cb4425e4e17989be7a43caca6db2dce73,7a6abfc1591de1cecb929ed5c6aabcdd2f247190,1,03/11/15,03/11/15,163,JCBC-871: N1ql status exposed in result,"JCBC-871: N1ql status exposed in result

Motivation:
-----------
So far only the boolean status of a N1QL response was exposed on the
result object. This has become kind of confusing when users started to
use server-side timeouts, since in case of timeout only the status is
changed to ""timeout"" (no errors, no rows). So it makes sense to expose
the raw status as well.

Modifications:
--------------
N1QL status is exposed through the status() method. The finalSuccess()
method now relies on ""status()"" in the DefaultAsyncN1qlQueryResult.

Result:
-------
Exact status of a N1QL query can always be determined by using status().

Change-Id: I9e1053be04493d7932b9e4efb77a1691c279c76b",0,0,0,0,0,1,1,0,0
56689,Ie87dfcc3e6051db8daecb3d56cad9ac210241756,http://review.couchbase.org/#/c/56689,2,7a6abfc1591de1cecb929ed5c6aabcdd2f247190,014034eb76da271aa5a35c4fdda43ba3e9cf23d6,1,05/11/15,05/11/15,12,Override DCP flow control settings in CouchbaseEnvironment,"Override DCP flow control settings in CouchbaseEnvironment

Change-Id: Ie87dfcc3e6051db8daecb3d56cad9ac210241756",0,0,0,1,0,0,1,0,0
56698,I917946d3503f49ee6dc309443654479ca22e7bf0,http://review.couchbase.org/#/c/56698,2,c76f426ed15e47331331c1bc8c0b910b34cfc339,ffcdefe3ca0c3192a497af8f75b2df1642b8341f,1,05/11/15,05/11/15,29,JCBC-864: Remove with Durability Requirements does not honor CAS,"JCBC-864: Remove with Durability Requirements does not honor CAS

Motivation
----------
It was found that when the remove operation with document and
durability requirements was used, the contained CAS value
was not honored. This meant that potential cas mismatches
were not raised to the user level.

Modifications
-------------
The root cause of the issue was that the document was casted
down to its ID, not passing the cas value down to the core
layer.

The code has been refactored so that both ID- and Document-
based durability requirements now use a common helper method
to avoid code duplication while making sure the CAS value
is honored where possible.

An integration test has been added to avoid future
regressions.

Result
------
Remove with document and durability requirements now
properly respects the CAS value and allows to detect
CAS mismatches on remove.

Change-Id: I917946d3503f49ee6dc309443654479ca22e7bf0
Reviewed-on: http://review.couchbase.org/56209
Tested-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
Reviewed-by: Sergey Avseyev <sergey.avseyev@gmail.com>
Reviewed-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,0,0,0,0
56738,I90b2fa24ad692c53bf7199f1841815cdd849b169,http://review.couchbase.org/#/c/56738,4,d1708933cfeca2954261174b63ed86ed8a39a019,aa154a88f99ed36a769c0d890aaced34bb7bd369,1,06/11/15,06/11/15,297,JCBC-876: Add integration tests for DML,"JCBC-876: Add integration tests for DML

Motivation
----------
Since 4.0 ships DML as experimental and 4.1 will ship it as GA, it
makes sense for the java client to have appropriate tests in place.

Modifications
-------------
This changeset starts with this effort and adds integration tests
for INSERT, UPSERT, UPDATE and DELETE. One test for DELETE has
been ignored for now until MB-16732 is resolved.

Note that MERGE tests have not been added yet. More tests will
certainly be added as the development of the fluent API for those
kinds of statements progresses.

Result
------
First batch of integration tests for N1QL DML.

Change-Id: I90b2fa24ad692c53bf7199f1841815cdd849b169",0,1,0,0,0,0,1,0,0
56973,Ic7c3b260b5c2b92150a81c465c9ed0a5a37d93fb,http://review.couchbase.org/#/c/56973,3,aa154a88f99ed36a769c0d890aaced34bb7bd369,ae19792e356f2f906588597536e3863042adc82e,1,12/11/15,12/11/15,3,Disable test case until DML issue resolved on the server side.,"Disable test case until DML issue resolved on the server side.

Change-Id: Ic7c3b260b5c2b92150a81c465c9ed0a5a37d93fb",0,0,0,1,0,0,1,0,0
56974,I89414ab3d9921cf416459a8e5a400e4aa7b6be34,http://review.couchbase.org/#/c/56974,2,05aa7a6773cfdb4394ca82691b2c346150c76309,ead87266f6b3ff180fbd69e482b537ddd9d85f47,0,12/11/15,12/11/15,6,Prepare 2.2.2 Release,"Prepare 2.2.2 Release

Change-Id: I89414ab3d9921cf416459a8e5a400e4aa7b6be34",0,0,0,1,0,0,1,NA,NA
57103,I5eca2162d3b5c844635dbf1b8d0aa7c03edcdb8f,http://review.couchbase.org/#/c/57103,2,e462c6105d589e931378097db45138a60906ec28,0460f7765c397e3fbb48b1964e1d460f65549de3,1,17/11/15,23/11/15,279,JCBC-881: Expose custom transcoder with durability requirements.,"JCBC-881: Expose custom transcoder with durability requirements.

Motivation
----------
On the CouchbaseClientIF, all the mutation methods expose a custom
transcoder, but only without durability requirements. It is a valid
use case to use a custom transcoder with durability requirements.

Modifications
-------------
Add API which allows to use the durability requirements together
with a custom transcoder.

The changeset itself is low risk, since the methods are available
internally, only the approrpiate overloads have been added which
now call the underlying methods explicitly with the transcoder.

Result
------
Mutations with a custom transcoder and durability requirements
can now be used easily.

Change-Id: I5eca2162d3b5c844635dbf1b8d0aa7c03edcdb8f",0,0,1,0,0,0,1,0,0
57106,I1ff1e0c712d7c9bb7a828ca8d21c3c55b21c8cee,http://review.couchbase.org/#/c/57106,2,ce1dd1a0f8c5a6354a30908d59541dc8b2c6c9fc,5ba5d1d350602a661daa5dc4043973c9f25a7ec7,1,17/11/15,23/11/15,2,JCBC-776: Fix typo in log message.,"JCBC-776: Fix typo in log message.

Change-Id: I1ff1e0c712d7c9bb7a828ca8d21c3c55b21c8cee",0,0,1,1,0,0,1,0,0
57375,Ibf80a144ec0d01fa18f26ca6474bf317955cd4bc,http://review.couchbase.org/#/c/57375,6,b287e2752a41f6b571018a0c3752108ce32a64be,c71c9eface6d3661d39843069ff58a2e36439c11,1,01/12/15,03/12/15,914,JCBC-855: Improve writability of integration tests,"JCBC-855: Improve writability of integration tests

Motivation:
-----------
When writing an integration test case that has special requirements
(like a dedicated bucket, avoid the flush phase, use a different bucket
name, ...), it has become very difficult to rely on inheritance of
ClusterDependentTest base class (as JUnit doesn't behave very well with
abstract parent classes). There was a need for a different more flexible
approach.

Modifications:
--------------
Most of the code mutualized in ClusterDependentTest has been moved into
a CouchbastTestContext class. This context holds the references to the
Cluster, Bucket, BucketManager, etc...

It also provides utility methods to perfom assertions on the context (eg
is N1QL available) and lifecycle management (cluster disconnect, ...).

Such a context should be created in a @BeforeClass method on each test
case instead of it extending ClusterDependentTest, by using the
CouchbaseTestContext.builder() builder.

ClusterDependentTest has been made deprecated and is mirroring the old
behavior by relying on CouchbaseTestContext internally.

Results:
--------
Using the CouchbaseTestContext with the associated builder allows for
far more flexible integration tests. For example it is possible to set a
specific bucket name then to have it being created in an adhoc way (by
appending a timestamp to the given name), so that it can be destroyed
after the testcase.

Change-Id: Ibf80a144ec0d01fa18f26ca6474bf317955cd4bc",0,1,0,0,1,1,1,0,0
57404,I4eb8dd46be00325ccb5e4c4c680cfcc39dad9f8d,http://review.couchbase.org/#/c/57404,2,85116c18a9588ab1aaa308b43eeac6856a197188,c9e150a56d3adb6d21874b5b80415b1393673352,0,02/12/15,02/12/15,6,Prepare 2.1.6 Release,"Prepare 2.1.6 Release

Change-Id: I4eb8dd46be00325ccb5e4c4c680cfcc39dad9f8d",0,0,0,1,0,0,1,NA,NA
57424,If512b6dfc758804a16614e89950d6bc1e976fc55,http://review.couchbase.org/#/c/57424,5,731015e8e3185334e51589dbddc2a94efececd9c,0ed05405f403b9640eea8e1549555d0a2006636f,1,02/12/15,07/12/15,115,JCBC-886: Add few N1QL prepared integration tests,"JCBC-886: Add few N1QL prepared integration tests

Motivation
----------
These adhoc tests have been frequently made without an automated test
and it makes sense to add them to the harness:
 - test preparation and execution of a ""SELECT sum(...)"" statement
 - test preparation and execution of a statement with both placeholders

Modifications
-------------
Added three tests to N1qlQueryTest integration testcase. The ""sum"" one
only works with CB server 4.1.0 onwards and is thus ignored in lower
versions.

Result
------
More test cases for N1QL and prepared statements (adhoc false).

Change-Id: If512b6dfc758804a16614e89950d6bc1e976fc55",0,1,1,0,0,1,1,0,0
57462,I1057bd1c05d9696bcc579613a3e1a701d011b824,http://review.couchbase.org/#/c/57462,2,f4cb8e97aabac20e9de30c2f39b82cb918f47416,36608a66c2321c88209a0ec15dbcc23e97421f90,0,04/12/15,04/12/15,46,JCBC-888: Improve Maven-based javadoc generation,"JCBC-888: Improve Maven-based javadoc generation

Motivation:
-----------
The Maven-based build had a few missing elements not ported from the
Gradle build (footer, title, etc...).
Additionally, the java-client javadoc didn't link to the core-io javadoc
(eg for classes like CouchbaseEnvironment having parent classes in the
core).

Modifications:
--------------
All elements of the javadoc previously set in the Gradle build are also
set in the Maven build.

Added offline linking of the core-io javadoc. This is done by locally
unpacking the core-io javadoc jar and using that as the target for
linking (since the docs are not yet published on the web at this point).
The generated urls reflect the url where the core docs are expected to
be published.

Results:
--------
Better javadoc packaged by the Maven build.

Change-Id: I1057bd1c05d9696bcc579613a3e1a701d011b824",0,0,0,0,0,1,1,NA,NA
57530,I9b4224bf7b640e4e2543a53a5747ba418e6f8a75,http://review.couchbase.org/#/c/57530,5,0c18a193cfea5bc13167cf001d4618f2115b970e,00bfa02bfa8f15cfa28f1788a34550f3b75d856b,1,08/12/15,16/12/15,1437,JCBC-777: Index Management,"JCBC-777: Index Management

WIP integration tests

Change-Id: I9b4224bf7b640e4e2543a53a5747ba418e6f8a75",0,1,1,0,1,1,1,2,1
57844,Iedc14746dcc5c254c6fdc1845c423e6dc719cbe0,http://review.couchbase.org/#/c/57844,15,7a757ef4dd90fa815bfbdf9b1bea5e66ec0b889e,cbc5ddfc8c03408bcc30c609b4567625555a067b,1,16/12/15,17/02/16,232,WIP: implementing at_plus,"WIP: implementing at_plus

Change-Id: Iedc14746dcc5c254c6fdc1845c423e6dc719cbe0",0,1,0,1,0,0,1,1,1
57848,Ib23dc941d491fcff607cfc542b561b6d211abbc1,http://review.couchbase.org/#/c/57848,2,bc6a4448ae284213016d9a9a41536074d073ffb8,b5afa1cae824c67049752436cd3646ac12408db5,1,16/12/15,16/12/15,3,JCBC-777: fix index watching max attempts,"JCBC-777: fix index watching max attempts

Motivation:
-----------
Previous commit had a mistake with too low a max_attempts, and we
actually want to let only the timeout break the polling.

Modifications:
--------------
Max attempt has been increased to Integer.MAX_VALUE, letting the timeout
as the only probable cause for the polling to stop (that and all indexes
going online).

Change-Id: Ib23dc941d491fcff607cfc542b561b6d211abbc1",0,0,0,0,0,1,1,0,0
57910,I707fbebcbbd4f8ec8edc442ff5fcb7d4a722f2e7,http://review.couchbase.org/#/c/57910,2,3aa87228e16d19bc0251933cd49141716c384063,03f347f2064faed25a97b8564a5793372e611cd9,1,17/12/15,17/12/15,15,JCBC-893: Assert KV handling of UTF16 keys,"JCBC-893: Assert KV handling of UTF16 keys

Motivation:
-----------
Couchbase Server is supposed to only accept UTF8-encoded keys. The aim
of this change is to verify that UTF16 characters in keys are correctly
encoded and accepted by the server.

Modifications:
--------------
Integration test with a UTF16 key added to the integration test suite.

Change-Id: I707fbebcbbd4f8ec8edc442ff5fcb7d4a722f2e7",0,0,0,0,0,0,0,0,0
58002,I203db476ec23c9ef8f1060ca15abee75ec80ea6c,http://review.couchbase.org/#/c/58002,4,80eb52cbba7f5177eabddc4c041013330609d885,f0cf39f72faf1bbd98b7921f5afe315b63f41c50,0,21/12/15,23/12/15,194,Added a lot of details to CONTRIBUTING.md,"Added a lot of details to CONTRIBUTING.md

Motivation
----------
After a user attempted to contribute and was stuck, it appeared that
the CONTRIBUTE.md document is a bit terse.

Modifications
-------------
Added more detailed steps for contributing to java-client.

Change-Id: I203db476ec23c9ef8f1060ca15abee75ec80ea6c",0,1,0,0,0,1,1,NA,NA
58027,I4bc1a972dd913c2813943e2fc0d0da3ebd913395,http://review.couchbase.org/#/c/58027,8,409cd985b08bcfe71ead78f53070f43c6151464a,283afc23826051f26a493f091c12461295ae9a06,1,22/12/15,24/12/15,14,Support ancient Membase servers that don't have controllers and index,"Support ancient Membase servers that don't have controllers and index

Change-Id: I4bc1a972dd913c2813943e2fc0d0da3ebd913395",0,1,0,1,0,0,1,0,0
58040,I9d1fffe590d31c2b61bd726133ee92f48d1cecf2,http://review.couchbase.org/#/c/58040,4,59e32da64a0bd1f8e96c5e662940b6aec9b68e3f,f210ae2d044dfec0d60f27df9177e254b73d87f2,1,22/12/15,22/12/15,64,wip: current bucket,"wip: current bucket

Change-Id: I9d1fffe590d31c2b61bd726133ee92f48d1cecf2",0,1,0,1,0,0,1,0,0
58055,Id0e3b822c844b45144caf4df3588d835d77d3b07,http://review.couchbase.org/#/c/58055,7,f210ae2d044dfec0d60f27df9177e254b73d87f2,1e2a38bc9fe295d38152e6f297442538abc00a39,1,22/12/15,04/01/16,1011,WIP: insert and upsert builder API,"WIP: insert and upsert builder API

Change-Id: Id0e3b822c844b45144caf4df3588d835d77d3b07",0,1,0,1,1,0,1,0,0
58061,Ief241279a2ed84514d728f2df4be1c3d93e4419f,http://review.couchbase.org/#/c/58061,5,a423cf79fc52e9e006fa170a8d91ae008fde79fa,f9f8cd3eb8df70f4b1afcc2ee31e355406123806,1,22/12/15,04/01/16,1617,wip: delete and update,"wip: delete and update

Change-Id: Ief241279a2ed84514d728f2df4be1c3d93e4419f",0,1,0,1,1,0,1,0,0
58111,Ib4cf179fa2b34aa19947ce76e9c85121c669c84a,http://review.couchbase.org/#/c/58111,2,31c26abeebce45f72e904eee5ef6ba7b4f7ec0c5,2c9ae579a105932fba0fbc00cef12ef72c295cfe,1,24/12/15,24/12/15,51,JCBC-895: Prevent overflow on MAX_VALUE retry,"JCBC-895: Prevent overflow on MAX_VALUE retry

Motivation:
-----------
Retry attempt being set to Integer.MAX_VALUE actually causes an
overflow because the internal retry mechanism adds 1 to the given
attempt limit.

Modifications:
--------------
RetryBuilder and RetryWithDelayHandler both cap the maxAttempt parameter
to Integer.MAX_VALUE - 1 and document this limitation of their input.

DefaultAsyncBucketMananger was setting such a maxAttempt so it has been
modified as well to directly provide a correct value.

Unit tests added to check that the input value of maxAttempts is
decremented by one if it is MAX_VALUE.

Result:
-------
No more ""java.lang.IllegalArgumentException: Count can not be negative""
error when the maxAttempts is set to MAX_VALUE.

Change-Id: Ib4cf179fa2b34aa19947ce76e9c85121c669c84a",0,0,0,0,0,0,0,0,0
58115,Ib4cf179fa2b34aa19947ce76e9c85121c669c84a,http://review.couchbase.org/#/c/58115,2,5e58636513e7a8f93f72ceb76689a7fd2c4afe78,67f0a3c2db57574d5688f22384f541cfc6fc1d52,1,24/12/15,24/12/15,46,JCBC-895: Prevent overflow on MAX_VALUE retry,"JCBC-895: Prevent overflow on MAX_VALUE retry

Motivation:
-----------
Retry attempt being set to Integer.MAX_VALUE actually causes an
overflow because the internal retry mechanism adds 1 to the given
attempt limit.

Modifications:
--------------
RetryBuilder and RetryWithDelayHandler both cap the maxAttempt parameter
to Integer.MAX_VALUE - 1 and document this limitation of their input.

Unit tests added to check that the input value of maxAttempts is
decremented by one if it is MAX_VALUE.

Result:
-------
No more ""java.lang.IllegalArgumentException: Count can not be negative""
error when the maxAttempts is set to MAX_VALUE.

Change-Id: Ib4cf179fa2b34aa19947ce76e9c85121c669c84a",0,0,0,0,0,0,0,0,0
58156,I7b895b067382231214146f50d31be432126d9776,http://review.couchbase.org/#/c/58156,5,bed376085eda525836641f9578bd7468fbcace30,d6e483bbfd93205c6452f0ee83aaa75ac96fd42f,1,30/12/15,04/01/16,1298,wip: merge dsl,"wip: merge dsl

Change-Id: I7b895b067382231214146f50d31be432126d9776",0,1,0,1,1,0,1,0,0
58204,I633b4fea1bb1b78ab15dfea87fa1ca14ca18a413,http://review.couchbase.org/#/c/58204,2,77f7aeae2e343e96c51ffa4213b154488be0760f,94c485f5897b3cd16ec906d2908847370592428e,0,04/01/16,04/01/16,4,Prepare client version 2.2.3,"Prepare client version 2.2.3

Change-Id: I633b4fea1bb1b78ab15dfea87fa1ca14ca18a413",0,0,0,1,0,1,1,NA,NA
58205,I16055ed6f8572c00e0f0c970c40af7908fc73078,http://review.couchbase.org/#/c/58205,3,da84df65d225aa109c1e01bd384869d9656031dc,c0a18d4da415db8cef73dafe2877190b4e57a9b9,1,04/01/16,04/01/16,607,JCBC-757: Element Builder cleanup and test fixes.,"JCBC-757: Element Builder cleanup and test fixes.

Motivation
----------
This changeset adds missing license headers and sets the right
annotations for the dsl/element namespace. It also fixes some
dml tests to use the right identifier syntax.

Change-Id: I16055ed6f8572c00e0f0c970c40af7908fc73078",0,0,0,0,1,0,1,0,0
58223,Ifce305713329f0d63073fab3012129211e4c41f6,http://review.couchbase.org/#/c/58223,15,a96af1fcf9b7cd64329357ee95417e06a924c770,1c751d567226ac53a91cd462971106074a8ba130,1,04/01/16,19/01/16,5336,WIP: JCBC-849: Implement subdoc,"WIP: JCBC-849: Implement subdoc

Change-Id: Ifce305713329f0d63073fab3012129211e4c41f6",0,1,1,1,1,1,1,3,1
58251,Iccba6857088294c6f1f4efe683c9cbae3d6dabb3,http://review.couchbase.org/#/c/58251,2,11a7f4f82607f9b3f58ee4770c763c1d27621c93,18e71100338d0c440ab5b3a3045d3c9a54f09d4d,0,05/01/16,05/01/16,6,Prepare release 2.2.3,"Prepare release 2.2.3

Change-Id: Iccba6857088294c6f1f4efe683c9cbae3d6dabb3",0,0,0,1,0,1,1,NA,NA
58316,Ic02e68133b106d00237f88ae064144d93d67549a,http://review.couchbase.org/#/c/58316,2,18e71100338d0c440ab5b3a3045d3c9a54f09d4d,bd9f27ce21b7a21a2bdd46bdfb345b18265eb737,0,06/01/16,07/01/16,4,Start development of 2.2.4,"Start development of 2.2.4

Change-Id: Ic02e68133b106d00237f88ae064144d93d67549a",0,0,0,1,0,1,1,NA,NA
58891,I7a06ef027310711a4741728bc255861cfa769964,http://review.couchbase.org/#/c/58891,2,68c606455e8761d0dbb971d31383f381d963ee18,378b411068d7879656f086800e943496e9f9cfd1,1,21/01/16,21/01/16,6,JCBC-904: Override socketConnectTimeout in builder,"JCBC-904: Override socketConnectTimeout in builder

Motivation:
-----------
DefaultCouchbaseEnvironment's Builder doesn't override its parent's
socketConnectTimeout method, breaking the capability of fluently
building the environment as soon as it is used.

Modifications:
--------------
Added socketConnectTimeout override in the CouchbaseEnvironment Builder.

Result:
-------
CouchbaseEnvironment can be fluently built even when using the socket
timeout.

Change-Id: I7a06ef027310711a4741728bc255861cfa769964",0,0,0,0,0,1,1,0,0
58892,Idbec2295fbd751007403b2731e2fa55fbd7eea05,http://review.couchbase.org/#/c/58892,2,47475987b40c15d0dcb0f3861ce9c817005a0497,0d7f15e1d90d6ea03dcd3f3100596120ec87e168,1,21/01/16,21/01/16,4,JCBC-903: Fix CouchbaseFeature version 3.5 -> 4.0,"JCBC-903: Fix CouchbaseFeature version 3.5 -> 4.0

Motivation:
-----------
There is no Couchbase Server version 3.5.0, and N1QL and Spatial View
appeared in 4.0.0.

Modifications:
--------------
Replaced 3.5.0 with 4.0.0 in relevant CouchbaseFeatures.

Change-Id: Idbec2295fbd751007403b2731e2fa55fbd7eea05",0,0,0,0,0,1,1,0,0
58893,I3cf087f4b60d4a22b766a12092737bafb8a610c4,http://review.couchbase.org/#/c/58893,4,89ae2cedf6779ea7734e5b305ffeefa0cf669bc3,0d28bd46e7208ff60ac9cca867cc5e2cd862854a,1,21/01/16,23/02/16,654,JCBC-906: Index Management experimental API second iteration,"JCBC-906: Index Management experimental API second iteration

Motivation:
-----------
After the first experimental API implementation in JCBC-777, an SDK RFC
was created and a few elements received feedback, hence this second
iteration.

Modifications:
--------------
New specific exceptions have been added for case where index creation is
attempted on already existing index, and where drop of an index that
doesn't exist is attempted.

The watchIndex method has been removed in favor of just using the
more generic watchIndexes with a single parameter.

Change-Id: I3cf087f4b60d4a22b766a12092737bafb8a610c4",0,1,0,0,1,0,1,0,0
59015,Ic30ff590d60a5008fcd4905b4b8526917568529d,http://review.couchbase.org/#/c/59015,3,3ba7cf6fdfc612ae89330599efb590bdd395f65e,a71bd8f01f849ea6807af271aed5deb2b009657b,1,25/01/16,27/04/16,177,"JCBC-838: ViewQuery toString is for logging, added toQueryString","JCBC-838: ViewQuery toString is for logging, added toQueryString

Motivation:
-----------
toString shouldn't usually have special semantics that would prevent
changing the representation (as it is more for human consumption, logs,
etc...).

Currently ViewQuery.toString outputs the parameters that would go into
a GET url, omitting isDevelopment, isIncludeDocs and keys.

Modifications:
--------------
toString is now purely about string representation, including the design
document name, the view name, ""dev"" if isDevelopment == true,
""includeDocs"" if isIncludeDocs == true, as well as the content of keys
if filled in.

Keys dump will be truncated to 140 characters (since it can grow quite
large in the body) and information about the total length is also
displayed if truncated.

The former value of toString is now returned by ""toQueryString()"", which
is used as the GET parameters payload when executing the query.

Result:
-------
toString now displays more information and can be further evolved.
toQueryString is used for payload.

Change-Id: Ic30ff590d60a5008fcd4905b4b8526917568529d",0,0,1,0,0,1,1,-1,0
59037,Ie072d459ce89373ab8614264fcca9e09959f541d,http://review.couchbase.org/#/c/59037,4,6d8362c1d4a79f27201b61b7d5091d790bf2c052,92c0a49f0254d026f6ee3e68544e796ead5fa0a9,1,25/01/16,28/01/16,187,JCBC-859: Store N1QL raw byte[] and deserialize lazily,"JCBC-859: Store N1QL raw byte[] and deserialize lazily

Motivation:
-----------
Some users don't want a N1QL row value as a JsonObject but would rather
prefer to deserialize it themselves (perhaps directly to a domain object
of theirs).

Modifications:
--------------
N1qlQueryRow and AsyncN1qlQueryRow now both take the raw byte[] at
construction, as well as an ObjectMapper.

value() will lazily invoke the objectMapper on the raw byte[] to convert
it to a JsonObject, so that never calling value() nor toString() but
byteValue() instead will never perform JSON deserialization, allowing
users to do that themselves (and probably saving them a few ms).

Result:
-------
Custom deserialization of a N1QL row value can be done without paying
the cost of JsonObject deserialization.

Change-Id: Ie072d459ce89373ab8614264fcca9e09959f541d",0,1,1,0,0,1,1,0,0
59133,I3b2c97a4ef2906412686a36bf2ddd0c4cfd2ba00,http://review.couchbase.org/#/c/59133,2,c1ffd3cbe999a86b2ae63ed001d7c6a7b0311533,214791f0f18ccaa430891ebddc6c071afd0f4631,1,27/01/16,27/01/16,75,JCBC-909: Add toString for LookupSpec/MutationSpec,"JCBC-909: Add toString for LookupSpec/MutationSpec

Motivation
----------
When getting results from a multi-operation in subdoc, users will
probably want to output the specification next to the result at some
point. This is not made easy by the fact that the specs have no proper
toString method.

Modifications
-------------
Added short toString implementation for both multi specs.
Format is ""{COMMAND:path}"".

MutationSpec doesn't output the fragment value, as it could be large,
but suffixes the COMMAND with "", createParents"" if this option is
activated on the mutation.

Result
------
A LookupSpec or a MutationSpec can be used in an output now that their
toString method is implemented.

Change-Id: I3b2c97a4ef2906412686a36bf2ddd0c4cfd2ba00",0,0,0,0,0,1,1,0,0
59250,I3ca3998f13d40051297c228aa64661c785e2a5d1,http://review.couchbase.org/#/c/59250,6,eee7bc61ce708ed6b4024d1fbeb09e05ffe2628f,3d2b4c2993ac8e2fb7aa357afa71609f7ed66641,1,29/01/16,05/02/16,295,JCBC-910: additional view query option to get items in original order or not,"JCBC-910: additional view query option to get items in original order or not

Motivation
----------
View query result order is randomly mixed; But it should be consitent sometimes.

Modifications
-------------
Apply addtitional enum paremeter DocumentEmitMode:
- DocumentEmitMode.FLAT (default): same as former action.
- DocumentEmitMode.CONCAT: preserves order, but slower than flatMap
- DocumentEmitMode.CONCAT_EAGER: use concatMapEager newly introduced in rxjava 1.0.15, as fast as flatMap

Result
------
A user can choose view query result order consistency.

Change-Id: I3ca3998f13d40051297c228aa64661c785e2a5d1",0,1,0,0,0,0,1,0,0
59251,I7c37b885ac16ca584c5a2629a681c25230119992,http://review.couchbase.org/#/c/59251,2,31542224c9fb15f2c93dab54c3842c26e1c3115a,f2bb9aaa752545a4395f0435e4a3af5b78c84a41,1,29/01/16,29/01/16,925,Disable Subdoc multi-mutate support,"Disable Subdoc multi-mutate support

Motivation:
-----------
The protocol for multiple mutations is likely to change before a DP
version of the server is released, so offering support for it is too
early.

Modifications:
--------------
Made classes and code related to multi mutation requests/responses not
public and/or commented. The API mutateIn has been commented out.

Result:
-------
Single subdoc operations and multi lookups are still available as
experimental, but multi-mutation is not.

Change-Id: I7c37b885ac16ca584c5a2629a681c25230119992",0,0,0,0,1,1,1,0,0
59258,Ie236ed0beb26251c4f9d84ef911906e508b0d41a,http://review.couchbase.org/#/c/59258,2,b9001a341af2c51fd991ee3b9c46fadc1a7cc09c,8f7d4855d09a5df8c15883eca7596768bb35caa7,1,29/01/16,29/01/16,4,JCBC-912: Explicitly check that the retry information is not null.,"JCBC-912: Explicitly check that the retry information is not null.

Motivation
----------
If the server returns a NMVB with an empty response, the code needs
to check for this case and do not potentially throw a NPE if this
case remains undetected.

Modifications
-------------
The code checks if the buffer which potentially contains the new
config is not null and if it is just returns (nothing to do here
at this point).

Result
------
Better resiliency for the NMVB config optimizations implemented
in the server for the watson timeframe.

Change-Id: Ie236ed0beb26251c4f9d84ef911906e508b0d41a",0,0,0,0,0,0,0,0,0
59291,Idd432bb1ff3328b6567e88c7d155e36038ad2c19,http://review.couchbase.org/#/c/59291,2,a91c117c1039ddf62b29208493fdbc3d36a9a81d,36cfe423ce4d3ed5908cbb1cc7abeb4ea3fe9c00,0,29/01/16,01/02/16,10,JCBC-914: Remove String.join,"JCBC-914: Remove String.join

join is available only from java 8, so using just append

Change-Id: Idd432bb1ff3328b6567e88c7d155e36038ad2c19",0,0,0,0,0,0,0,NA,NA
59342,I4fca83105e8cdd9a5c0e8031b20543711a437221,http://review.couchbase.org/#/c/59342,2,36cfe423ce4d3ed5908cbb1cc7abeb4ea3fe9c00,424348d54a24b00fb5ff5954142a760d89ac0ca8,0,01/02/16,01/02/16,22,JVMCBC-286: Enforce usage of Java 6 APIs only,"JVMCBC-286: Enforce usage of Java 6 APIs only

Motivation:
-----------
When developing against a recent JDK, it's not sufficient to just set
the targetVersion to 1.6, as the compiler will happily produce Java 6
bytecode that uses APIs introduced in a more recent version (eg Java 8).
This results in code that can't run on a Java 6 JRE.

The Animal-Sniffer tool has a Maven integration that allows to check for
such bad usage and prevent the build process to finish.

Modifications:
--------------
Used Animal-Sniffer Maven plugin to enforce correct usage of JDK 6 APIs
only, executed during compile phase.

Result:
-------
Using a too new API when developing against a recent JDK will be
detected when using Maven to build, and refused.

Change-Id: I4fca83105e8cdd9a5c0e8031b20543711a437221",0,0,0,0,0,1,1,NA,NA
59451,I38d0822d3817e148516de0a6e9b770df4216b9d2,http://review.couchbase.org/#/c/59451,2,424348d54a24b00fb5ff5954142a760d89ac0ca8,0d54a5de076d563f60640e236543708cb154425d,0,03/02/16,03/02/16,6,Prepare 2.2.4 Release,"Prepare 2.2.4 Release

Change-Id: I38d0822d3817e148516de0a6e9b770df4216b9d2",0,0,0,1,0,0,1,NA,NA
59508,I0b4d04f770692345571fe627f4966122dafbf757,http://review.couchbase.org/#/c/59508,2,0d54a5de076d563f60640e236543708cb154425d,0e2e70f30d542d8ca31dd6de8769d0a37c1ac988,0,04/02/16,04/02/16,4,Start development of 2.2.5,"Start development of 2.2.5

Change-Id: I0b4d04f770692345571fe627f4966122dafbf757",0,0,0,1,0,1,1,NA,NA
59557,I20dba8b7f3a4bc09483b9898682988a8136be080,http://review.couchbase.org/#/c/59557,2,0e2e70f30d542d8ca31dd6de8769d0a37c1ac988,2644f56075f72da94ebc17ced29504ac4c829736,0,05/02/16,07/02/16,41,JCBC-918: README fixes: CONTRIBUTING.md link and typo,"JCBC-918: README fixes: CONTRIBUTING.md link and typo

Change-Id: I20dba8b7f3a4bc09483b9898682988a8136be080",0,0,0,1,0,1,1,NA,NA
60041,I127749b93563811403db34d09ccb8d9b75a3d290,http://review.couchbase.org/#/c/60041,2,2644f56075f72da94ebc17ced29504ac4c829736,7f17223eb692c50e8bace7bd6591cbf5b7fd9d6e,1,16/02/16,16/02/16,4,[temp] adapt to sudboc refactor in core,"[temp] adapt to sudboc refactor in core

LookupResult is now renamed MultiResult<Lookup>. Adaptation to refactor
pending java-client side API rework.

Change-Id: I127749b93563811403db34d09ccb8d9b75a3d290",0,0,0,0,0,1,1,0,0
60201,I0038af9b543464832a15cd204dad20c83ab745eb,http://review.couchbase.org/#/c/60201,7,7f17223eb692c50e8bace7bd6591cbf5b7fd9d6e,6077f10251dcc54c2d59b9cd1634d1a850b2b6b3,1,18/02/16,23/02/16,7332,wip subdoc v2,"wip subdoc v2

Change-Id: I0038af9b543464832a15cd204dad20c83ab745eb",0,1,1,1,1,1,1,2,1
60243,Ie74d3b812c72ffb2fee982879b6325964ded5f3f,http://review.couchbase.org/#/c/60243,2,aad498fcb69c5eff7f25398642fd2f9bd7a51a1a,3f3a06308fd5014bcdc84eb2219cdc999d16eb44,1,19/02/16,19/02/16,114,JCBC-804: Bring AT_PLUS in line with the latest RFC changes.,"JCBC-804: Bring AT_PLUS in line with the latest RFC changes.

Motivation
----------
The latest RFC simplifies the proposal by reducing some of the
feature set for the first iteration. Since those concepts were
not implemented yet, the actual java implementation also got
simplified and streamlined.

Modifications
-------------
Method signatures updated and internal data structures and
processing simplified as well.

Note that the unique seqno match has been updated and is now
done when the tokens are inserted, rather than when it is
processed. This also optimizes for the case where only ever
on token is passed in.

Result
------
Java code in line with the latest RFC iteration.

Change-Id: Ie74d3b812c72ffb2fee982879b6325964ded5f3f",0,0,0,0,0,0,0,0,0
60548,I89f360ba49269b515d71c103f665073ea47e1a82,http://review.couchbase.org/#/c/60548,2,9eca51807d064099bc1856c62b3deaf685ab6e53,8133740d06feb3269ac7ac19ccf5b912b71848f7,1,26/02/16,26/02/16,2,"JCBC-921: Fix merge of at_plus, adapt to subdoc change","JCBC-921: Fix merge of at_plus, adapt to subdoc change

This fixes compilation of at_plus N1qlParams after the merge of both
changes (subdoc builder API and at_plus support).

Change-Id: I89f360ba49269b515d71c103f665073ea47e1a82",0,0,0,0,0,0,0,0,0
60562,Idecf6403a5bfa5896a682422a2636c10d0fa3e2d,http://review.couchbase.org/#/c/60562,3,8133740d06feb3269ac7ac19ccf5b912b71848f7,9a26839ea060dc291a7b8d3963403e21a08c3ece,1,26/02/16,18/03/16,305,JCBC-875: retrybuilder advanced error predicate + doOnRetry,"JCBC-875: retrybuilder advanced error predicate + doOnRetry

Motivation:
-----------
When using the RetryBuilder, one can have an even more complex check to
perform on the exception do determine if it should be retried or not.
Currently the only possible check is on the exception type, but not its
content (eg. message, or special fields in the exception).

Similarly, sometimes one wants to perform a side-effect action when the
retry occurs, and this is not possible in the current implementation.

Modification:
-------------
Added two features to the RetryBuilder:

 * one can construct the builder based on a Func1<Throwable, Boolean>
   predicate, that will allow to tell if the error should trigger a
   retry, allowing inspection of the whole error.
 * added a doOnRetry() method that gets notified every time a retry is
   scheduled with: the retry attempt number, the exception triggering
   the retry, the scheduled delay (duration and unit) after which the
   retry will occur.

The signature for the doOnRetry, a specialized Func4, can be simplified
using the RetryBuilder.OnRetryAction interface.

Results:
--------
RetryBuilder gives even more control on when to retry, and allows you to
add side-effects to each retry attempt.

Change-Id: Idecf6403a5bfa5896a682422a2636c10d0fa3e2d",0,0,0,0,0,1,1,0,0
60696,Ia86845af18407654f35a810f488ae6d14754f511,http://review.couchbase.org/#/c/60696,2,c72af314b39878a5cc3e12190a1b730fb7ab2a33,e51326e3f88f12b61970c09508e22084c335057d,0,01/03/16,01/03/16,6,Prepare 2.2.5 Release,"Prepare 2.2.5 Release

Change-Id: Ia86845af18407654f35a810f488ae6d14754f511",1,0,0,1,0,0,1,NA,NA
60700,Iec2c97adc81652df07203b6cd1b0fa751f5339f4,http://review.couchbase.org/#/c/60700,2,e51326e3f88f12b61970c09508e22084c335057d,6e5ba96e72ba4eabb3402a274ff84f1c224952c6,0,01/03/16,01/03/16,4,Start Development on 2.2.6,"Start Development on 2.2.6

Change-Id: Iec2c97adc81652df07203b6cd1b0fa751f5339f4",0,0,0,1,0,0,1,NA,NA
60922,Idf02e0744e32153440e0652c6e5c3b69c86ee5dd,http://review.couchbase.org/#/c/60922,2,6e5ba96e72ba4eabb3402a274ff84f1c224952c6,51dfb99350869895150b24c3661eced2e5588167,1,04/03/16,11/03/16,228,JCBC-925: N1QL helper to build updateFor clause,"JCBC-925: N1QL helper to build updateFor clause

Motivation:
-----------
When doing an UPDATE, in the set you can provide an ""update-for"" clause
that looks like FOR variable IN path WHEN condition END. The current DSL
allows to provide that as a single Expression, leaving the user puzzled
about the exact syntax.

Modifications:
--------------
A new category of helpers is introduced in the dsl.clause package. In
this case, a UpdateForClause is provided that allows to guide the user
in constructing the proper update-for Expression.

Added unit tests for the builder in UpdateDslTest.

Result:
-------
User can now be guided by the API in constructing the updateFor clause.

Change-Id: Idf02e0744e32153440e0652c6e5c3b69c86ee5dd",0,0,1,0,0,1,1,0,0
61226,I11989d1b48a6a614b06d85326cc7e8f4429e450f,http://review.couchbase.org/#/c/61226,5,74d096367273e89a26d55ab699fb03efbe88d31a,1b3dd4d201e809004455b8ff5f174b5589534b6b,1,10/03/16,10/03/16,12,Override builders from core,"Override builders from core

Change-Id: I11989d1b48a6a614b06d85326cc7e8f4429e450f",0,1,0,1,0,0,1,0,0
61423,I0a3ad3c69f235325756f1d9b2e7dba89a7461186,http://review.couchbase.org/#/c/61423,5,8863a565827b148ca1555300e639d7b0c7bdd82b,0670d055f558bacf070c0147aeea6af3b5d9f006,1,14/03/16,14/03/16,90,JCBC-928: Allow custom primary name in Index DSL,"JCBC-928: Allow custom primary name in Index DSL

Motivation:
-----------
In N1QL, additional primary indexes can be constructed by giving them a
name. Dropping such indexes is done via the same syntax as dropping a
secondary index: ""DROP INDEX namespace.name"".

Modifications:
--------------
The Index DSL has been augmented to allow creating and dropping of such
custom-named indexes. For dropping, a new method name was necessary due
to colliding signatures, so ""dropCustomPrimaryIndex"" was chosen.

Result:
-------
Custom primary indexes can now be dealt with with the Index DSL.

Change-Id: I0a3ad3c69f235325756f1d9b2e7dba89a7461186",0,1,0,0,0,1,1,0,0
61426,Iec77e6d47b6d3c35199bb1e343f9591b1023f86f,http://review.couchbase.org/#/c/61426,2,0670d055f558bacf070c0147aeea6af3b5d9f006,58514e7040b617d084cc4f4b0f5202b58a976a1b,1,14/03/16,14/03/16,196,JCBC-926: Index management of named primary indexes,"JCBC-926: Index management of named primary indexes

Motivation:
-----------
Since the Index DSL allows creation and drop of custom named primary
indexes, the Index Management API can also offer to deal with this.

Modifications:
--------------
BucketManager and async version now have 2 additional methods which take
an index name for a primary index: createNamedPrimaryIndex and its drop
counterpart dropNamedPrimaryIndex. This allows for creation of several
primary indexes.

Results:
--------
Named primary indexes can be dealt with in the Index Management API.

Change-Id: Iec77e6d47b6d3c35199bb1e343f9591b1023f86f",0,0,0,0,0,1,1,0,0
61569,Ifdd94521a891d313d9982830c0e4e7c3325e2c1d,http://review.couchbase.org/#/c/61569,2,58514e7040b617d084cc4f4b0f5202b58a976a1b,b8e1fcdd679fe992368e13ee5c796b9f0ca0fa97,1,16/03/16,16/03/16,4,JCBC-935: Avoid key encoding for length check.,"JCBC-935: Avoid key encoding for length check.

Motivation
----------
The AbstractDocument grabs the bytes() of the incoming document ID
and checks if more than 250 bytes are stored and if so will raise
an error. This is problematic for two reasons:

 - It is using getBytes() which does not use UTF-8 like the underlying
   logic in core-io, so it is not 100% accurate.
 - The same check is already performed in core-io.

Modifications
-------------
The code now just uses String#length() for a quick sanity check and
relies on core-io for exact boundary checks on edge cases. This reduces
garbage created and avoids the intensive work of encoding a document
ID just for the sake of checking how long it is.

Result
------
Less work and GC, but more or less the same effect. Exact checks
are performed in the KeyValueLocator in core-io anyways.

Change-Id: Ifdd94521a891d313d9982830c0e4e7c3325e2c1d",0,0,0,0,0,0,0,0,0
61570,Ia74739c9bde475599e210b660e8ff8833509042e,http://review.couchbase.org/#/c/61570,2,b8e1fcdd679fe992368e13ee5c796b9f0ca0fa97,f3ca863ba45a29b904d8f4b83be36ead14ef6363,1,16/03/16,16/03/16,24,JCBC-937: Size hint for JsonObject and JsonArray,"JCBC-937: Size hint for JsonObject and JsonArray

Motivation
----------
If we know how large the final JsonObject or JsonArray will be,
it makes sense to initialize the internal Map or List already
with the target size to avoid excessive resizing.

Modifications
-------------
Add new private constructors with explicit size hint and apply
it if possible in both the array and the object.

Result
------
Less resizing needed of the internal map if the size can be
estimated upfront.

Change-Id: Ia74739c9bde475599e210b660e8ff8833509042e",0,0,0,0,0,0,0,0,0
61582,I9d4e2d43f6296e305881759a16149ecb27130041,http://review.couchbase.org/#/c/61582,2,367f11ff407ba0541a89a4db7e17e406704b8c3a,4e5b2224364eb4cfa1b3a15496177b53421d1576,1,16/03/16,18/03/16,159,JCBC-936: Index management only cares about GSI,"JCBC-936: Index management only cares about GSI

Motivation:
-----------
The index management API was designed to work only on GSI indexes. It is
important to ensure that a simple name allows unique identification of
an index within this API. Currently it is not made explicit in javadoc
and `listIndexes` can also return VIEW type indexes.

Modifications:
--------------
Javadoc has been improved to mention that the API only ever deals with
GSI type indexes.

ListIndexes has been updated to only consider GSI indexes, and the tests
have been updated accordingly.

Results:
--------
All methods in the Index Management API only deal with GSI, and this has
been made clearer in the documentation.

If in the future a listIndexes variant that lists also VIEW indexes is
needed, we can easily add that.

Change-Id: I9d4e2d43f6296e305881759a16149ecb27130041",0,0,0,0,0,1,1,0,0
61651,I62f8e81065529872457f0976a5e371570909e621,http://review.couchbase.org/#/c/61651,2,b3372081bafd289ce358081aec98e31cf99888c5,e935f53adc2378ae9e902740f1ea2e90e45babc6,1,17/03/16,18/03/16,534,JCBC-931: Rework subdoc error/rename array methods,"JCBC-931: Rework subdoc error/rename array methods

Motivation:
-----------
Third iteration of the Subdocument RFC introduces changes in how
errors should be handled, particularly changing a few errors and
associated server returned codes for counter.

It also clarifies that, even for a single spec, mutation builder
execution should always throw a MultiMutationException in case of
a subdocument-level error.

Finally, it renames pushFront/pushBack/addUnique to arrayPrepend,
arrayAppend and arrayAddUnique respectively.

Modifications:
--------------
AsyncMutateInBuilder has been modified to reflect the changes
above.
the MutateInBuilder as well as the tests have been adapted.

Results:
--------
Better coherence of the implementation with the SDK RFC's third
iteration.

Change-Id: I62f8e81065529872457f0976a5e371570909e621",0,0,0,0,1,1,1,1,1
61712,I2d3ab0abba64493c12a1d09bb5033155c21d9345,http://review.couchbase.org/#/c/61712,4,70ad7daed2dba86efce19090d8840177cc9c51bf,1ddd194d6243f3e629f021c1ff3339e779d664f6,1,18/03/16,31/03/16,754,JCBC-938: Multi values in array mutations WIP,"JCBC-938: Multi values in array mutations WIP

Change-Id: I2d3ab0abba64493c12a1d09bb5033155c21d9345",0,1,1,1,1,1,1,2,1
61924,I8051f8cd6af442bfa1483fb8caa5ae59a8f6b9a2,http://review.couchbase.org/#/c/61924,2,c349e2d5149185a32ac3f61c5f0cfcd4935492ee,6d3932684241fff00f503d662e10da4c10d804b9,1,24/03/16,24/03/16,2,JVMCBC-315: Use double for ack threshold in Builder,"JVMCBC-315: Use double for ack threshold in Builder

Change-Id: I8051f8cd6af442bfa1483fb8caa5ae59a8f6b9a2",0,0,0,1,0,0,1,0,0
62119,Ic8031efa2dd5a0c3280091b4675ea64aea034a15,http://review.couchbase.org/#/c/62119,3,6d3932684241fff00f503d662e10da4c10d804b9,344ac7bb82ca6b33985e5dc15cd31df94800273e,1,29/03/16,31/03/16,262,JCBC-940: Rename subdoc builder doXXX methods to execute(),"JCBC-940: Rename subdoc builder doXXX methods to execute()

(NOTE: this is still in design and not officially part of the RFC)

Motivation:
-----------
The RFC unified name for execution of a builder is now execute(). The
previous name, do(), was incompatible eg. with Java, being a keyword.

Modifications:
--------------
doMutate() and doLookup() are now all renamed execute().

Results:
--------
The execution methods of the builders are the same across SDK thanks to
strictly following the RFC.

Change-Id: Ic8031efa2dd5a0c3280091b4675ea64aea034a15",0,0,0,0,0,1,1,1,1
62239,I7d11a73ed292d7d6a4b22a83008a2ed8548241aa,http://review.couchbase.org/#/c/62239,2,c238c326981ff13f32ea007bff856a800d53d46a,43abf713241667e745da87c5a81febfccd82792d,1,31/03/16,01/04/16,48,JCBC-926: Drop the named prefix in primary index management,"JCBC-926: Drop the named prefix in primary index management

Motivation:
-----------
Method to deal with named primary indexes in previous JCBC-926 change
had the ""Named"" prefix (eg. createNamedPrimaryIndex), which is redundant
and can be dropped (these methods then becoming simple overloads of the
existing xxxPrimaryIndex methods).

Modification:
-------------
Renamed createNamedPrimaryIndex methods to createPrimaryIndex (overload)
and dropNamedPrimaryIndex to dropPrimaryIndex.

Results:
--------
Dealing with default-named or custom-named primary indexes is now just
done through overloaded methods, simplifying the API.

Change-Id: I7d11a73ed292d7d6a4b22a83008a2ed8548241aa",0,0,0,0,0,1,1,0,0
62278,Ibe51662983c5ca1f46710ab8796f3712d61dc0ed,http://review.couchbase.org/#/c/62278,2,21d0ddf549711995cd4c6451ac531ae9b4634cc3,b577e44822d88a9535fe4fb65d56d5f2907ce841,0,01/04/16,01/04/16,2,Bump core-io to 1.2.7-SNAPSHOT,"Bump core-io to 1.2.7-SNAPSHOT

Change-Id: Ibe51662983c5ca1f46710ab8796f3712d61dc0ed",0,0,0,1,0,0,1,NA,NA
62293,I75e7a923864be2d36276bad91a67247bdd7b2a11,http://review.couchbase.org/#/c/62293,2,3612292f73f47beda5d6f31bb738274643294763,5aad9fb733dbfb1a1681a1744978721370ca0ebf,1,01/04/16,01/04/16,104,JCBC-943: Refactor version information in env,"JCBC-943: Refactor version information in env

Motivation:
-----------
The various places where the version information can be accessed are
all displaying the information from the core, not the java-client:
 - packageNameAndVersion
 - userAgent
 - toString

Furthermore, there is no way of just getting the version number, or
even the git-generated build number. These two methods have been added
to the core and the same could be done for the client.

Modifications:
--------------
Added clientVersion() and clientBuild() methods to get these specific
version number relative to the java-client.

Modified the construction of SDK_PACKAGE_NAME_AND_VERSION so that it
takes information relative to the java-client, not the core. It also
now includes the git version of the core.

Stopped shadowing USER_AGENT from core and instead defined a specific
static SDK_USER_AGENT. Made sure both SDK_xxx are used as default in the
builder, but the builder still allows to redefine them.
This ensures that the toString method reflects the package name and
version of the java-client.

Added tests around these methods.

Results:
--------
Much better availability of version information in the environment, both
concerning java-client and core-io layers.

Change-Id: I75e7a923864be2d36276bad91a67247bdd7b2a11",0,0,0,0,0,1,1,-1,0
62350,I0fe0edafd143c7f65db9997f4295b968b9803ab8,http://review.couchbase.org/#/c/62350,8,5aad9fb733dbfb1a1681a1744978721370ca0ebf,6f6cabff3ef2612763ca255f142c58a011961f3a,1,04/04/16,04/04/16,278,JCBC-945 WIP,"JCBC-945 WIP

Change-Id: I0fe0edafd143c7f65db9997f4295b968b9803ab8",0,1,0,1,0,1,1,1,1
62357,I1b20e1f197b020ea6af164e226cee17977a4f7fe,http://review.couchbase.org/#/c/62357,2,ecf28e06af15e3345f2d825e2785ae99b5c29518,de508fe70e520323bce76b9fd329e60c99153e43,1,04/04/16,04/04/16,2,JCBC-946: Escape n1ql PREPARE's name when used,"JCBC-946: Escape n1ql PREPARE's name when used

Motivation
----------
When a PREPARE statement is issued with a specific name, said name
should be escaped in case it is a N1QL keyword or contains minuses...

Modifications
-------------
PREPARE name is escaped in PrepareStatement.

Change-Id: I1b20e1f197b020ea6af164e226cee17977a4f7fe",0,0,0,0,0,1,1,0,0
62358,Id08b8ef78e1e287734ba567f149bfa2b144f4f38,http://review.couchbase.org/#/c/62358,2,de508fe70e520323bce76b9fd329e60c99153e43,c270854afcfe6e6129d375e801775a6a4a2b68ed,1,04/04/16,04/04/16,3,JCBC-948: Only check for error name in prepared retry,"JCBC-948: Only check for error name in prepared retry

Motivation
----------
For prepared statements, part of the current retry process involves
checking for the content of an error message in case of error code 5000.

The message in its entirety is checked, but the message phrasing could
change in the future. There's however an error name in there that is
guaranteed by the query team not to change, so it can be checked instead
of the whole message phrase.

Modifications
-------------
During prepared statement retries, only the ""queryport.indexNotFound""
part of the string is now checked.

Result
------
Better future-proofness of the ""should we retry that prepared statement""
check.

Change-Id: Id08b8ef78e1e287734ba567f149bfa2b144f4f38",0,0,0,0,0,1,1,0,0
62359,Icceb5d59b481d01388963edf56d9ddb167b9cdc8,http://review.couchbase.org/#/c/62359,2,c270854afcfe6e6129d375e801775a6a4a2b68ed,886b67434776b77d1dedc72a1112d914044182a7,1,04/04/16,04/04/16,3,JCBC-947: Close testcontext bucket before deleting it,"JCBC-947: Close testcontext bucket before deleting it

Motivation
----------
Not closing an adhoc Bucket before deleting it at the end of a test run
can lead to authentication errors logs, especially starting with 4.5.

Modifications
-------------
CouchbaseTestContext's destroyBucketAndDisconnect method now also
closes the bucket before triggering its deletion (if adhoc).

Result
------
Less false positive errors in test logs.

Change-Id: Icceb5d59b481d01388963edf56d9ddb167b9cdc8",0,0,0,0,0,1,1,0,0
62360,I0c548dd68b30c526f7bf7e1cc8f3d41c1cdfbaae,http://review.couchbase.org/#/c/62360,2,886b67434776b77d1dedc72a1112d914044182a7,190dfecdfdeffec909e7a4086ea16c6adced11c6,1,04/04/16,04/04/16,2,[fix test] JCBC-946: escaped PREPARE name,"[fix test] JCBC-946: escaped PREPARE name

Change-Id: I0c548dd68b30c526f7bf7e1cc8f3d41c1cdfbaae",1,0,0,1,0,0,1,0,0
62442,I8dc07cc2d69911fb2e2e74015955ce5cfea53b8a,http://review.couchbase.org/#/c/62442,2,7264a469e65bb23dfb9520a42bc07f87d2e5f077,aa3141a6c6ae7423c057cf3df595151a3cfd7933,0,05/04/16,05/04/16,6,Prepare 2.2.6 Release,"Prepare 2.2.6 Release

Change-Id: I8dc07cc2d69911fb2e2e74015955ce5cfea53b8a",0,0,0,1,0,0,1,NA,NA
62535,Id48831c435300e1ee49b87f8400d07b6dcbad269,http://review.couchbase.org/#/c/62535,3,aa3141a6c6ae7423c057cf3df595151a3cfd7933,9c76a6c90f9a2fc9d1afd2843a9d4360f1502914,0,07/04/16,07/04/16,4,Start working on 1.3.0,"Start working on 1.3.0

Change-Id: Id48831c435300e1ee49b87f8400d07b6dcbad269",0,0,0,1,0,0,1,NA,NA
62648,I1532ca9af116c00bd3d8fd3c43c6d6859132d287,http://review.couchbase.org/#/c/62648,25,1ed7e994b0560dd0290f41ba076d4d3abcd42033,54408a8bef886d8e49ffd7b366de0226f93cdbec,1,11/04/16,13/05/16,7605,WIP: FTS per RFC,"WIP: FTS per RFC

Change-Id: I1532ca9af116c00bd3d8fd3c43c6d6859132d287",0,1,0,1,1,0,1,9,1
62772,I0b3372ac97e8f4c84c8b2eb7a43394736c604a5b,http://review.couchbase.org/#/c/62772,10,994c3b82c61ac14e271a6e69534bb96a767541c2,94fd260c065535991b896b0d21761422b97b2eb0,1,13/04/16,13/05/16,11683,Relicensing Couchbase copyrighted files from MIT to Apache2,"Relicensing Couchbase copyrighted files from MIT to Apache2

As was the original intention for the LICENSE.

 - Integration Tests

Change-Id: I0b3372ac97e8f4c84c8b2eb7a43394736c604a5b",0,1,0,0,1,1,1,1,1
62849,Ib52d636b7c01dd222d2523676151c607745699a5,http://review.couchbase.org/#/c/62849,2,f4abbfc840f0064c9591c14fec767cb06f8f9243,3cf836c86537306df822c79ab4f9415ac9078d4c,0,14/04/16,14/04/16,8,Update Spymemcached to 2.12.1,"Update Spymemcached to 2.12.1

Change-Id: Ib52d636b7c01dd222d2523676151c607745699a5",0,0,0,1,0,0,1,NA,NA
63526,I5ab9cc7e047a30156a07796c2afc7ec67e3fb825,http://review.couchbase.org/#/c/63526,2,384d6c139c6d1828364d59696659adb58f05ea35,fc56217fe92f368633985474134897a41a1cd709,1,29/04/16,29/04/16,455,"JCBC-952: Add condition, method name prefix to index management","JCBC-952: Add condition, method name prefix to index management

Motivation
----------
During REVIEW phase for the rfc, some feedback has been raised:
 - The watchIndexes boolean ""includePrimary"" feels clunky and can
 always be replaced by the primary name (default ""#primary"") anyway,
 should probably be removed
 - With FTS coming, having a differenciating prefix in method names
 would help (proposed ""n1ql"" as in createN1qlIndex,
 dropN1qlPrimaryIndex...)
 - The createN1qlIndex method should allow for a form of Expression to
 be given in order to specify a WHERE clause for the index.
 - IndexInfo should therefore have a String condition() method that
 shows the where clause, or empty string if none.

Modifications
-------------
All the above suggestion have been implemented. Convenience createIndex
methods (the ones taking a vararg) don't allow to set a condition.
Integration tests have been updated.

Result
------
Index Management API is more complete and now allows to deal with
conditional indexes.

Change-Id: I5ab9cc7e047a30156a07796c2afc7ec67e3fb825",0,0,0,0,0,1,1,1,1
63529,I33f5ede1efe4a4f5fe5c2ea79d1388d2a187fca9,http://review.couchbase.org/#/c/63529,2,1de184ef9494a966394bfda39aecf0138f901632,5199763d9d566bf6d5c0861844a626092951b028,0,29/04/16,29/04/16,4,Start 2.2.7 development,"Start 2.2.7 development

Change-Id: I33f5ede1efe4a4f5fe5c2ea79d1388d2a187fca9",0,0,0,1,0,1,1,NA,NA
63530,I5ab9cc7e047a30156a07796c2afc7ec67e3fb825,http://review.couchbase.org/#/c/63530,2,5199763d9d566bf6d5c0861844a626092951b028,5c2decf4cfd4fb71b43555fbd88766a0c1ebbfab,1,29/04/16,29/04/16,455,"JCBC-952: Add condition, method name prefix to index management","JCBC-952: Add condition, method name prefix to index management

Motivation
----------
During REVIEW phase for the rfc, some feedback has been raised:
 - The watchIndexes boolean ""includePrimary"" feels clunky and can
 always be replaced by the primary name (default ""#primary"") anyway,
 should probably be removed
 - With FTS coming, having a differenciating prefix in method names
 would help (proposed ""n1ql"" as in createN1qlIndex,
 dropN1qlPrimaryIndex...)
 - The createN1qlIndex method should allow for a form of Expression to
 be given in order to specify a WHERE clause for the index.
 - IndexInfo should therefore have a String condition() method that
 shows the where clause, or empty string if none.

Modifications
-------------
All the above suggestion have been implemented. Convenience createIndex
methods (the ones taking a vararg) don't allow to set a condition.
Integration tests have been updated.

Result
------
Index Management API is more complete and now allows to deal with
conditional indexes.

Change-Id: I5ab9cc7e047a30156a07796c2afc7ec67e3fb825
Reviewed-on: http://review.couchbase.org/63526
Tested-by: Simon Baslé <simon@couchbase.com>
Reviewed-by: Michael Nitschinger <michael.nitschinger@couchbase.com>
(backported via cherry pick from commit 1278245)",0,0,0,0,0,1,1,1,1
63533,I29f83f4d15cdd82599f1c61efea09e66a9840bd3,http://review.couchbase.org/#/c/63533,2,4a5a1a3f96178999080163cbdf81309b251eb67d,95259c0303f977589f5f12c1888d6843518bd6f5,1,29/04/16,29/04/16,66,[fix test] Adapt some tests to Watson changes,"[fix test] Adapt some tests to Watson changes

Change-Id: I29f83f4d15cdd82599f1c61efea09e66a9840bd3",0,0,0,1,0,1,1,0,0
63621,I2c6830baed75e17b278e4effbbe0ae54d63322e6,http://review.couchbase.org/#/c/63621,5,95259c0303f977589f5f12c1888d6843518bd6f5,5750055283494c96b24d1e8e7a238a60370f0f43,1,03/05/16,03/05/16,483,JCBC-953: Implement MutationState for AT_PLUS querying.,"JCBC-953: Implement MutationState for AT_PLUS querying.

Motivation
----------
This changeset brings the java-client implementation on par with the
RFC on AT_PLUS querying. It implements the MutationState class which
represents an aggregate of one or more MutationTokens and exposes it
as another option on N1qlParams.

Modifications
-------------
The following changes have been made over the previous AT_PLUS
implementation:

  - All the marshalling/exporting of tokens has been moved into the
    MutationState class.
  - The N1qlParams now use the MutationState class marshalling when
    preparing the N1QL query options.
  - Tests have been added for the MutationState class.

Result
------
Compliance with the AT_PLUS RFC and more centralized handling of
many mutation tokens.

Change-Id: I2c6830baed75e17b278e4effbbe0ae54d63322e6",0,1,0,0,0,0,1,0,0
63628,I0774962a3091c819603ffcbe7d7ed840ba20ea4a,http://review.couchbase.org/#/c/63628,3,5750055283494c96b24d1e8e7a238a60370f0f43,e1b8cfa03d73a70f279ce69941692ebe78b61867,1,03/05/16,03/05/16,101,JCBC-953: Add support for MutationState import.,"JCBC-953: Add support for MutationState import.

Motivation
----------
Since exporting is supported, importing also needs to be supported.

Modifications
-------------
This changeset implements import from both raw json string as well
as our JsonObject. Equality has been implemented but the MutationState
checks if the elements are contained (since ordering is not important
and can lead to false negatives on the equality checks).

Result
------
Serialized MutationState can now be turned into actual objects and
then used when querying.

Change-Id: I0774962a3091c819603ffcbe7d7ed840ba20ea4a",0,0,0,0,0,0,0,0,0
63785,Ie43bce592486d7a289102bb6e0f9ff92c8d8fc90,http://review.couchbase.org/#/c/63785,2,9e561e901e9ed0a74d8471625b447ff87010fdc9,fbbe97a7b63d0a3a979e7e7fa145ddc2036558fd,0,06/05/16,06/05/16,8,Prepare 2.2.7 Release,"Prepare 2.2.7 Release

Change-Id: Ie43bce592486d7a289102bb6e0f9ff92c8d8fc90",0,0,0,1,0,1,1,NA,NA
63849,I1dea32cc60bcc23335f3949071445467ae54cb22,http://review.couchbase.org/#/c/63849,2,3d2103357d054610f9dab8aa0d44efa3ddedf314,3f4e1ab9caf543671c6865e763367d134093f08b,1,10/05/16,10/05/16,21,JVMCBC-255: Remove CouchbaseEnvironment#disconnectTimeout,"JVMCBC-255: Remove CouchbaseEnvironment#disconnectTimeout

Motivation
----------
The disconnectTimeout implementation is removed in this changeset
since this is now handled directly in the core and we just use the
overridden implementation.

Change-Id: I1dea32cc60bcc23335f3949071445467ae54cb22",0,0,0,0,0,0,0,0,0
63851,I64eb3c90e1fbdf294f9927ca96cbe90a5349fc23,http://review.couchbase.org/#/c/63851,3,3f4e1ab9caf543671c6865e763367d134093f08b,73c3e351a03ba784a639d0a5e7ca824195143177,1,10/05/16,10/05/16,46,JVMCBC-271: Remove queryEnabled from core builder overrides.,"JVMCBC-271: Remove queryEnabled from core builder overrides.

Motivation
----------
queryEnabled and queryPort have been deprecated for quite some time and are
now removed, since they are not needed anymore. This changeset removes the
builder overrides, since the other pieces have been removed in core-io.

Change-Id: I64eb3c90e1fbdf294f9927ca96cbe90a5349fc23",0,0,0,0,0,0,0,0,0
63854,If6801d307b2c732880c169fdda972f82fd6d2185,http://review.couchbase.org/#/c/63854,2,73c3e351a03ba784a639d0a5e7ca824195143177,67fe2edb862cb8aa960bc860a6ae5e7be842a21c,1,10/05/16,10/05/16,13,Override Builder methods from core-io.,"Override Builder methods from core-io.

Change-Id: If6801d307b2c732880c169fdda972f82fd6d2185",0,0,0,1,0,0,1,0,0
63860,I658d478049d62cc8bb707bf1b51aeff68f80c862,http://review.couchbase.org/#/c/63860,2,67fe2edb862cb8aa960bc860a6ae5e7be842a21c,f629cd93d83f429a9cdabdc2c68929684e065748,1,10/05/16,10/05/16,58,JCBC-954: Remove Expirmental Annotation from Subdoc APIs,"JCBC-954: Remove Expirmental Annotation from Subdoc APIs

Motivation
----------
Since Couchbase Server 4.5 GA is around the corner and the subdoc
API has been stabilized, the experimental annotations should be
removed to signal the maturity and production grade usage of
the feature.

Modifications
-------------
On all public APIs the stability changed to committed, on some
of the internal APIs it changed to uncommitted since we don't
need to be super strict there.

Result
------
Stable and GA grade subdoc feature - yay!

Change-Id: I658d478049d62cc8bb707bf1b51aeff68f80c862",0,0,0,0,0,0,0,0,0
63971,I0421debca61726b440ef377b8cf680312d024b75,http://review.couchbase.org/#/c/63971,2,7d0bf81c1624080d668ed00c6cd171376bd88186,8d6173a834f80794fa9b8813316506c7aa51b29b,1,12/05/16,12/05/16,12,JCBC-956: Change stability level of RetryBuilder + others,"JCBC-956: Change stability level of RetryBuilder + others

Motivation:
-----------
RetryBuilder has been an Experimental API for enough time now and can
be promoted to Committed.
N1qlQueryExecutor can also be promoted, to Uncommitted.
Finally, Blocking having been copied to the core, it should be marked as
deprecated.

Modifications:
--------------
Promoted the APIs, made Blocking deprecated.

Change-Id: I0421debca61726b440ef377b8cf680312d024b75",0,0,0,0,0,1,1,0,0
63972,I4424a6f662271bbba58b41ae1970b3576e779abb,http://review.couchbase.org/#/c/63972,2,4c75b5f2136c9e39ec6b4f95245f295e0a79c5ed,f95859ff9cba66b7e9415ca8e8db205cbf27bc6e,1,12/05/16,12/05/16,4,JCBC-954: Fix AsyncBucket still having Experimental subdoc,"JCBC-954: Fix AsyncBucket still having Experimental subdoc

Motivation:
-----------
A previous change promoted most of the subdoc API implementation to the
Committed level, but forgot to do that in AsyncBucket.

Modifications:
--------------
Promoted the subdoc methods in AsyncBucket to Committed as well.

Change-Id: I4424a6f662271bbba58b41ae1970b3576e779abb",0,0,0,0,0,1,1,0,0
63974,Ic8cd2008fec865ee868df07a573f45e322e01480,http://review.couchbase.org/#/c/63974,2,71c73d64dbac45b0cfb7524ba998f06b660f32d2,6b30aa5d98ee5fbb5300bb5078b88518c5c87577,1,12/05/16,12/05/16,7,JVMCBC-335: Allow customization of RingBuffer waiting strategy.,"JVMCBC-335: Allow customization of RingBuffer waiting strategy.

Motivation
----------
Different alternatives are available that can be use to tune the Java client performance.

Modifications
-------------
Overrided waitStrategy in DefaultCouchbaseEnvironment builder.
Other modifications: http://review.couchbase.org/#/c/63867/

Result
------
Ability to customize the waiting strategy for requests/repsonses on ring buffer.

Change-Id: Ic8cd2008fec865ee868df07a573f45e322e01480",0,0,0,0,0,0,0,0,0
64210,Ia35ac8266e54a3ecc4e439c2f0a809a83312283d,http://review.couchbase.org/#/c/64210,3,a596c4d06832830aae51a6a627281e8cab6f64f5,2c136fd276ba6a7d3c672d76d9a3d00a37e08734,1,19/05/16,19/05/16,18,JCBC-960: Expression method to wrap in parenthesis,"JCBC-960: Expression method to wrap in parenthesis

Motivation
----------
Often, N1QL statements will need to explicitly define evaluation order
by using parenthesis. There is currently no method to do that and one
as to fallback to string concatenation inside of an x() call.

Modifications
-------------
Added the `par()` method that infixes an Expression inside parenthesis.

Result
------
Better looking wrapping of Expression in parenthesis.

Change-Id: Ia35ac8266e54a3ecc4e439c2f0a809a83312283d",0,0,0,0,0,1,1,0,0
64278,Ia00d907b62a1b9dde828ce3678c347e4307ce0e5,http://review.couchbase.org/#/c/64278,2,5c8a779ea0d39f6636a0dcd5c7bf045e030436b2,bf941717e61bcd9ef8158b4450831d18735f75f1,1,23/05/16,23/05/16,2,JCBC-961: Make isOrderRetained public,"JCBC-961: Make isOrderRetained public

Motivation:
-----------
Sometimes it can be useful to be able to programmatically rework the
parameters of a query, notably includeDocs target class (eg. in Spring
Data). But since the isOrderRetained() tuning is not accessible, there's
no way to ensure that it is maintained when resetting the target class.

Modifications:
--------------
ViewQuery.isOrderRetained() is now public.

Results:
--------
Order retained parameter can be kept when modifying the target class of
includeDocs in a ViewQuery.

Change-Id: Ia00d907b62a1b9dde828ce3678c347e4307ce0e5",0,0,0,0,0,1,1,0,0
64289,Ic50c4c733a8385ca0aaa358b6b29dc357ae55de3,http://review.couchbase.org/#/c/64289,2,bf941717e61bcd9ef8158b4450831d18735f75f1,354bd31631b5f7aab7a1fbea74d711294856eff5,1,23/05/16,23/05/16,1861,JCBC-958: remove FTS poc implementation,"JCBC-958: remove FTS poc implementation

Change-Id: Ic50c4c733a8385ca0aaa358b6b29dc357ae55de3",0,0,0,1,1,1,1,-3,0
64293,I52c3b51df80499c395779a430f65d7ff7f4809eb,http://review.couchbase.org/#/c/64293,2,354bd31631b5f7aab7a1fbea74d711294856eff5,e8171184ad2af3a649e84e61a97d77529367fa8f,1,23/05/16,24/05/16,443,JCBC-959 - Rename fts package to search,"JCBC-959 - Rename fts package to search

Change-Id: I52c3b51df80499c395779a430f65d7ff7f4809eb",0,0,0,1,0,1,1,9,1
64323,Ibd5115760232098b8788a61e13838c0d086bc3f1,http://review.couchbase.org/#/c/64323,2,e8171184ad2af3a649e84e61a97d77529367fa8f,8250a67a92ecbfa03845051d115cb260b0fa0142,1,24/05/16,27/05/16,38,JCBC-955: Mark Index Management API as stable,"JCBC-955: Mark Index Management API as stable

Motivation:
-----------
RFC3 (couchbaselabs/sdk-rfcs#6) has been accepted by all SDKs and can
now be considered stable.

Modifications:
--------------
Removed Experimental annotations.

Change-Id: Ibd5115760232098b8788a61e13838c0d086bc3f1",0,0,1,0,0,1,1,0,0
64389,I69e0c88f11bc787b5eb4e71f2775137d0832d505,http://review.couchbase.org/#/c/64389,3,47c3d53c52e74496784d08170138527d1846980d,e0a9a785cbcf16b208562af217dd473cb491676e,1,25/05/16,25/05/16,1055,JCBC-962: Refactor SearchParams into SearchQuery,"JCBC-962: Refactor SearchParams into SearchQuery

Motivation
----------
Most SDKs don't have the concept of a N1qlParams separate object for
storing query-level parameters, so it has been decided that the FTS
API would not include such an object either, but rather allow setting
of the global request parameters through a ""builder"" fluent API on the
SearchQuery root object.

Modifications
-------------
Removed SearchParams. All methods now are in SearchQuery.
SearchQuery is in charge of exporting the whole JSON through query()
method.
It does so by preparing a JsonObject, injecting parameters into it and
letting the AbstractFtsQuery inject its payload into another ""query""
JsonObject.

Tests have been modified to take that refactor into account.

Result
------
Setting of FTS top level parameters is simpler, just using SearchQuery,
and marshalling to JSON is simpler as well, by just calling export().

Change-Id: I69e0c88f11bc787b5eb4e71f2775137d0832d505",0,0,0,0,1,1,1,-1,0
64390,I47e5265f663218cc58eb80b1021614229c0d0189,http://review.couchbase.org/#/c/64390,2,e0a9a785cbcf16b208562af217dd473cb491676e,25ac7d75a73a3262c50b8d7bd4c3c107201f771b,1,25/05/16,25/05/16,111,JCBC-963: Facet name is kept in SearchQuery,"JCBC-963: Facet name is kept in SearchQuery

Motivation:
-----------
In RFC10 (couchbaselabs/sdk-rfcs#17), some SDKs can directly map the
object representation to JSON. In the previous design of facets, having
the name attribute as part of the SearchFacet made that problematic.
It has been decided that the name of a facet should only be set on the
SearchQuery in which the facet is added (which would also allow reuse of
facets across queries, with different names).

Modifications:
--------------
SearchFacet has no name attribute anymore, moved into the SearchQuery.

Change-Id: I47e5265f663218cc58eb80b1021614229c0d0189",0,0,0,0,0,1,1,0,0
64394,I10e8f5542d307052e96e7a46da068a325fca140d,http://review.couchbase.org/#/c/64394,2,25ac7d75a73a3262c50b8d7bd4c3c107201f771b,f2343ffc2bedbff03e8cbaf8a1ba2f1f84e9fe82,1,25/05/16,25/05/16,4,JVMCBC-332: Fix dependent code to not use the ff-map on locating the node.,"JVMCBC-332: Fix dependent code to not use the ff-map on locating the node.

Change-Id: I10e8f5542d307052e96e7a46da068a325fca140d",0,0,0,1,0,0,1,0,0
64402,I8a0e3dd553294b7928bdb6a115f4d5ffc40a4556,http://review.couchbase.org/#/c/64402,4,83d700e5d81b9a1929b32284138544aaafd3bd04,3411371a6e0099f6b4ec972833058529845060c2,1,25/05/16,27/05/16,297,JCBC-957: Add support for consistency in FTS,"JCBC-957: Add support for consistency in FTS

Motivation
----------
In Couchbase 4.5, FTS queries can have two levels of consistency:
 - unbounded (default)
 - at-plus

The later needs the query to include a vector with vbucketId / sequence
numbers of the earliest acceptable mutations to consider.

Modifications
-------------
Added parameter builder for consistency to SearchQuery:
 - scanConsistency to set a simple consistency via enum (for now just
 NOT_BOUNDED)
 - consistentWith(...) with either documents, fragments or a
 MutationState to set an AT_PLUS consistency.

Added MutationState.exportForFts() export method to get the FTS-desired
format for the vector. For now, only the SearchQuery's index is
supported in the vector.

Result
------
Basic AT_PLUS consistency as well as unbounded consistency can be set
on a SearchQuery.

Change-Id: I8a0e3dd553294b7928bdb6a115f4d5ffc40a4556",0,1,0,0,0,1,1,0,0
64573,If7f1d8faa02d743357841e7980c291fcb5fdcaf2,http://review.couchbase.org/#/c/64573,2,3411371a6e0099f6b4ec972833058529845060c2,47065dbd2f5ad654994af0fd8a7383c8f056ba7c,1,30/05/16,31/05/16,9,[chores] Ignore travel-sample FTS demo test,"[chores] Ignore travel-sample FTS demo test

Motivation:
-----------
The SearchQueryTest integration test case should only require an FTS
index on the beer-sample dataset. Travel-sample based test can be
useful as a quick mean of running FTS queries on that sample bucket,
but should not be considered as part of the normal integration test.

Modifications:
--------------
Travel-sample based integration test has been Ignored, can be run
manually from the IDE.

Change-Id: If7f1d8faa02d743357841e7980c291fcb5fdcaf2",0,0,0,0,0,1,1,0,0
64590,I6cddd130e1ad86e6ff8c68935bfb1097718c31fb,http://review.couchbase.org/#/c/64590,2,fd9b90dc6571cad9782d7259b87a9c52a927baa9,57d6e2f7997246e7f444a8426b1d78ca64208b9b,1,31/05/16,31/05/16,25,JCBC-968: DocumentFragment does not carry CAS on multi lookup,"JCBC-968: DocumentFragment does not carry CAS on multi lookup

Motivation
----------
It has been found that under multi lookup scenario, the DocumentFragment
always returns a cas of 0.

Modifications
-------------
Adapt to the related core-io change (JVMCBC-337) and pass on the CAS
value. Note: since in the previous implementation the core response
was not in scope anymore the code has been refactored slightly as
a nested observable to get it in scope.

Result
------
On multi lookup, the CAS is now part of the DocumentFragment.

Change-Id: I6cddd130e1ad86e6ff8c68935bfb1097718c31fb",0,0,0,0,0,0,0,0,0
64592,I84afb91234bdae391069bb84c95adfd269b96f7c,http://review.couchbase.org/#/c/64592,3,57d6e2f7997246e7f444a8426b1d78ca64208b9b,e14fe4775590a307dfa3247c21171290e0b57dd3,1,31/05/16,01/06/16,42,(wip) JCBC-964,"(wip) JCBC-964

Change-Id: I84afb91234bdae391069bb84c95adfd269b96f7c",0,0,0,1,0,0,1,0,0
64642,I5e141d49c75bdf9d4cbd6707003f8e5d65ee95a9,http://review.couchbase.org/#/c/64642,3,e14fe4775590a307dfa3247c21171290e0b57dd3,2c2c76869dd791d04ab21471f2b0086925d08ae7,1,01/06/16,01/06/16,69,JCBC-965: Add option for generic N1QLParams.,"JCBC-965: Add option for generic N1QLParams.

Motivation
----------
There are a bunch of undocumented and experimental params
that can be used with the N1QL query engine. It doesn't make
sense to expose them as stable API but it should be possible
to supply them if needed.

Modifications
-------------
This changeset adds a raw API where generic params (but they
still need to be valid json, so the code checks) can be stored
and they are passed down at query time.

Result
------
It is possible to supply generic, raw N1QL params if needed.

Change-Id: I5e141d49c75bdf9d4cbd6707003f8e5d65ee95a9",0,0,0,0,0,0,0,1,1
64709,Ia00d907b62a1b9dde828ce3678c347e4307ce0e5,http://review.couchbase.org/#/c/64709,2,3290268be33986af029429256b6d1b6069d06093,8403a852d57909e193142bca2d64f4f61d654daa,1,03/06/16,03/06/16,2,JCBC-961: Make isOrderRetained public,"JCBC-961: Make isOrderRetained public

Motivation:
-----------
Sometimes it can be useful to be able to programmatically rework the
parameters of a query, notably includeDocs target class (eg. in Spring
Data). But since the isOrderRetained() tuning is not accessible, there's
no way to ensure that it is maintained when resetting the target class.

Modifications:
--------------
ViewQuery.isOrderRetained() is now public.

Results:
--------
Order retained parameter can be kept when modifying the target class of
includeDocs in a ViewQuery.

Change-Id: Ia00d907b62a1b9dde828ce3678c347e4307ce0e5
Reviewed-on: http://review.couchbase.org/64278
Reviewed-by: Michael Nitschinger <michael@nitschinger.at>
Tested-by: Simon Baslé <simon@couchbase.com>",0,0,0,0,0,0,0,0,0
64710,I6a22ae77b9a7814792a0c33ce2ce70d13b8e0b59,http://review.couchbase.org/#/c/64710,3,bc134961916e7131ebd6edd7cd76cd228752e32d,c2fd95c7c5cab2371f9f160590389c3e8a1646b7,1,03/06/16,03/06/16,58,JCBC-971: Support Vararg for Subdoc LookupIn,"JCBC-971: Support Vararg for Subdoc LookupIn

Motivation
----------
Instead of chaining gets together like .get(""foo"").get(""bar"") it
should be possible to also shortcut to .get(""foo"", ""bar"") while
still supporing the other style.

Modifications
-------------
The exists and get argument on the LookupInBuilder (incl. Async)
now support the String as a vararg.

Result
------
More flexible ways to specify the fields to lookup or check for
existence.

Change-Id: I6a22ae77b9a7814792a0c33ce2ce70d13b8e0b59",0,0,0,0,0,0,0,0,0
64818,I29f83f4d15cdd82599f1c61efea09e66a9840bd3,http://review.couchbase.org/#/c/64818,2,a5d726a354f26db5521b322c5be370e6488e259d,d13fcc8c5bb0ddcb0b717cf482626523b3f31628,1,08/06/16,08/06/16,66,[fix test] Adapt some tests to Watson changes,"[fix test] Adapt some tests to Watson changes

Change-Id: I29f83f4d15cdd82599f1c61efea09e66a9840bd3
Reviewed-on: http://review.couchbase.org/63533
Tested-by: Simon Baslé <simon@couchbase.com>
Reviewed-by: Michael Nitschinger <michael.nitschinger@couchbase.com>",0,0,0,1,0,1,1,0,0
64820,I9a6672b03a0292f27a2df307bcdcc1385e0c05fa,http://review.couchbase.org/#/c/64820,2,d13fcc8c5bb0ddcb0b717cf482626523b3f31628,f723c05b449047cc646e1ff423a7d4668ab5f82b,0,08/06/16,08/06/16,12,Prepare 2.2.8 Release,"Prepare 2.2.8 Release

Change-Id: I9a6672b03a0292f27a2df307bcdcc1385e0c05fa",0,0,0,1,0,1,1,NA,NA
64847,Iff09885637039fcb850710d865a2480c7f1a6575,http://review.couchbase.org/#/c/64847,5,e24802f38a98a0c63ee269bfbe9eefcb0fa0f430,e9237f4234a056f2c143fac63634be075829aa01,1,09/06/16,09/06/16,68,JCBC-973: Fix detection of disabled flush on bucket.,"JCBC-973: Fix detection of disabled flush on bucket.

Motivation
----------
A changed introduce in order to fix JVMCBC-199 regressed the
functionality to detect a bucket where flush is disabled but
nonetheless executed.

Modifications
-------------
The code now checks on the broader != success instead of a
specific error code. Note that success for http includes all
kinds of 2XX error codes, as a result even if the server responds
with 201 or 202 it works.

Result
------
FlushDisabledException raised again if flush disabled.

Change-Id: Iff09885637039fcb850710d865a2480c7f1a6575",0,1,0,0,0,0,1,0,0
64881,Id485cd7456f1032da588712999aade49d3bd4546,http://review.couchbase.org/#/c/64881,2,e9237f4234a056f2c143fac63634be075829aa01,d29acb6718ea17c454b7bd08d7749c109c60d279,0,10/06/16,10/06/16,6,Prepare 2.3.0 Release,"Prepare 2.3.0 Release

Change-Id: Id485cd7456f1032da588712999aade49d3bd4546",0,0,0,1,0,0,1,NA,NA
64928,If960f13c75c2b50e73de0ee83fdadd6666cb860b,http://review.couchbase.org/#/c/64928,3,d29acb6718ea17c454b7bd08d7749c109c60d279,1c5d6b7b3d107962d615312f212f7c81b1e1c9df,1,14/06/16,14/06/16,12,"JCBC-975: squid:S1149 - Synchronized classes Vector, Hashtable, Stack and StringBuffer should not be used","JCBC-975: squid:S1149 - Synchronized classes Vector, Hashtable, Stack and StringBuffer should not be used

Motivation
----------
Use StringBuilder rather than StringBuffer in several classes

Modifications
-------------
Using StringBuilder instead of StringBuffer in several classes

Result
------
Several classes (most of them in the FTS search package) were using StringBuffer rather than StringBuilder in their toString() methods.

Change-Id: If960f13c75c2b50e73de0ee83fdadd6666cb860b",0,0,0,0,0,0,0,0,0
64953,Idd44c1f6aa4cc9842820883a28554fd0357ee088,http://review.couchbase.org/#/c/64953,6,1c5d6b7b3d107962d615312f212f7c81b1e1c9df,e54f1857b57e7e52815e3e6a876213fd8b7bb414,1,15/06/16,29/08/16,71,"JCBC-975: Multiple code improvements - squid:S1444, squid:S1854, squid:ClassVariableVisibilityCheck, squid:CommentedOutCodeLine, squid:S1481, squid:S3008, squid:S2786","JCBC-975: Multiple code improvements - squid:S1444, squid:S1854, squid:ClassVariableVisibilityCheck, squid:CommentedOutCodeLine, squid:S1481, squid:S3008, squid:S2786

Motivation
----------
Code Quality improvements

Modifications
-------------
Code quality improvements in several classes. Made some static field constants. Removed commented out sections.

Result
------
Code quality improvements and slight refactoring of the code.

Change-Id: Idd44c1f6aa4cc9842820883a28554fd0357ee088",0,1,0,0,0,0,1,0,0
64958,Ifec2784b6eea7dfe07ce68e9d3e7a7489ec20b6a,http://review.couchbase.org/#/c/64958,2,9908d6ef89334ea9039dcbaa28643455cf0ee4a0,01d28f9cc8833d266183b48179a0840a5a033c52,1,15/06/16,15/06/16,125,"JCBC-978: Fix Index DSL ""WITH nodes"" option","JCBC-978: Fix Index DSL ""WITH nodes"" option

Motivation:
-----------
When creating a N1QL index, the WITH nodes option should be passed to
the service as a JSON array of node names. However, the index DSL is
not exporting an array.

Modifications:
--------------
Added ""withXXX"" methods that support passing in multiple node names, and
made all nodes-related processing produce a JSON array.

Results:
--------
Indexes can be created on specific node(s) using the Index DSL.

Change-Id: Ifec2784b6eea7dfe07ce68e9d3e7a7489ec20b6a",0,0,0,0,0,1,1,0,0
65050,Id013cbfac64fb163ace86ad82c15832682722009,http://review.couchbase.org/#/c/65050,2,01d28f9cc8833d266183b48179a0840a5a033c52,86c4844081f293b2de57865029205f96021aaa43,1,20/06/16,20/06/16,3,Override builder method from core-io.,"Override builder method from core-io.

Change-Id: Id013cbfac64fb163ace86ad82c15832682722009",0,0,0,1,0,0,1,0,0
65052,Ic1b6bd31a4ae31658b620d7420750dcceb65feef,http://review.couchbase.org/#/c/65052,2,86c4844081f293b2de57865029205f96021aaa43,8ed5d2a857d0e5bc31e67d6d8b1c2397438fec3a,0,20/06/16,20/06/16,4,Start 2.3.1 Development,"Start 2.3.1 Development

Change-Id: Ic1b6bd31a4ae31658b620d7420750dcceb65feef",0,0,0,1,0,0,1,NA,NA
65110,I9a7afd17938bb5c6cc464c887c925e3d4379f242,http://review.couchbase.org/#/c/65110,2,8ed5d2a857d0e5bc31e67d6d8b1c2397438fec3a,96a0b972af144102d054a4f550549be8e3bdd2b1,0,21/06/16,21/06/16,6,Prepare 2.3.1 Release,"Prepare 2.3.1 Release

Change-Id: I9a7afd17938bb5c6cc464c887c925e3d4379f242",0,0,0,1,0,0,1,NA,NA
65530,I9ff92cc28f27135d0bb0586a0df92f29e66fe7a4,http://review.couchbase.org/#/c/65530,2,96a0b972af144102d054a4f550549be8e3bdd2b1,c4d8cbcc1e1a25c5ff3bf98acefebc777298f45b,1,06/07/16,06/07/16,7,JCBC-984: Don't broadcast query plan to non-query nodes.,"JCBC-984: Don't broadcast query plan to non-query nodes.

Motivation
----------
When a query plan needs to be broadcasted to all the nodes
it is important that in an MDS setup those broadcasts are
not sent to non-query nodes since their requests will never
be able to complete (retried forever and time out eventually).

Modifications
-------------
The code has been adapted to filter() out any nodes that do
not have the QUERY service enabled.

Result
------
Query plan is only broadcasted to query nodes.

Change-Id: I9ff92cc28f27135d0bb0586a0df92f29e66fe7a4",0,0,0,0,0,0,0,0,0
65620,Iefd877582e8001a5f06477520cc687a98a900c4b,http://review.couchbase.org/#/c/65620,5,c4d8cbcc1e1a25c5ff3bf98acefebc777298f45b,baf17acff363f6f48ea489d7cf9131ee5a654a1f,1,08/07/16,26/07/16,437,JCBC-985:,"JCBC-985:

Motivation
----------
During the REVIEW phase, the following problems have been identified
with FTS RFC that affect the implementation:

 - StringQuery should be QueryStringQuery
 - there is an additional plaintext error case: HTTP 412 when a
 consistency is requested but cannot be fulfilled within the timeout
 - highlight style is actually optional
 - errors is not an array but an object, and when it is present, hits
 can be null

Modifications
-------------
 - StringQuery has been renamed to QueryStringQuery, and the static
 factory method from string to queryString.
 - highlight now has several overloads that can omit the style. when
 used, the style is actually set to new special enum SERVER_DEFAULT.
 - HTTP 412 case leads to a ResponseStatus.FAILURE, which is now
 interpreted as a FtsConsistencyTimeoutException
 - HTTP 200 with execution errors now parses both a JsonArray and a
 JsonObject. The case where hits is null is also handled.

Added unit tests and integration tests, most notably for the error
handling cases.

Result
------
The error handling of FTS is more correct (and a bug with it is fixed).
Other comments from rfc review have been taken into account.

Change-Id: Iefd877582e8001a5f06477520cc687a98a900c4b",0,1,1,0,0,1,1,-1,0
66034,I7cb65f1983f78d5154a4f5ed016b230208959b16,http://review.couchbase.org/#/c/66034,5,8391f17724aa35bdbbd13033a075f9afba4cff13,bcc10985fd7511134568e0dfa7b382a860de334b,1,21/07/16,21/07/16,482,JCBC-987: Add observe support for subdoc mutateIn,"JCBC-987: Add observe support for subdoc mutateIn

(Todo):
  - javadocs
  - integration tests

Motivation
----------
Since a subdoc mutation is very similar to a regular kv-based
mutation it is important to also optionally check for the given
durability requirements. The support is all there, it just needs
to be exposed properly on both the blocking and non-blocking APIs.

Modifications
-------------
This changeset adds more variants to the execute() method on the
MutateInBuilder (both sync and async) which, after a successful
subdoc mutation, performs the durability requirement polling.

It behaves exactly like the fulldocument counterpart.

Result
------
It is now possible to specify durability requirements for subdoc
mutations.

Change-Id: I7cb65f1983f78d5154a4f5ed016b230208959b16",0,1,0,0,0,0,1,0,0
66087,I6f5bf17c226c9626a9c20f84421546063a4c04db,http://review.couchbase.org/#/c/66087,3,bcc10985fd7511134568e0dfa7b382a860de334b,4f9979dd0792420e2dc78214e52dbc3dd5bf1c8c,1,22/07/16,22/07/16,44,"JCBC-988: Test ctx createIfMissing, bucketSample","JCBC-988: Test ctx createIfMissing, bucketSample

Motivation
----------
When using sample bucket in an integration test, if the sample isn't
loaded, the CouchbaseTestContext will create a small bucket.

That can lead to puzzling test errors as such test will offen assume
sample data to be present in bucket, while it will be empty in the
case above.

Creating a bucket if it is missing should be tunable, and an easy way
of forcing that to false should be offered for sample buckets.

Modifications
-------------
Added a createIfMissing method to choose between automatic creation or
throwing an exception when the requested bucket is missing.

Added a bucketSample method to express that a sample bucket must be
used. This is equivalent to createIfMissing(false) + adhoc(false) +
flushOnInit(false) + bucketName(sampleName) + bucketPassword("""").

Result
------
Tests that use a sample are less likely to fail in odd ways when the
sample bucket hasn't been loaded, and instead fail fast at init time.

Change-Id: I6f5bf17c226c9626a9c20f84421546063a4c04db",0,0,0,0,0,1,1,0,0
66149,Icc383f918429a16a83ce44d539f92d21a0b2c09b,http://review.couchbase.org/#/c/66149,9,4f9979dd0792420e2dc78214e52dbc3dd5bf1c8c,186fe573791b7a3a2852ddfa1f167885aebb02b2,1,25/07/16,28/07/16,1349,WIP JCBC-983: Simple client for cluster REST API,"WIP JCBC-983: Simple client for cluster REST API

Motivation
----------
The Couchbase cluster exposes a REST API, of which some methods are
exposed as native Java methods on the SDK. It would be useful to offer
a simple mean of querying the other endpoints from within the SDK.

To that end, the RestApiRequest message was added to the core and now
needs to be exposed in the client itself.

Modifications
-------------
Added a ClusterApiClient class that can be used to prepare API requests
(as RestBuilder objects) and execute them.

RestBuilder has several methods that can be chained together to build
the full request. The request can then be executed by calling one of
the execute() methods.

Result
------
A simple way of querying the cluster REST API is available directly in
the Java SDK.

Change-Id: Icc383f918429a16a83ce44d539f92d21a0b2c09b",0,1,1,0,1,1,1,1,1
66197,I1c5aef19c62d747f0ac992116485c8aa22669bd4,http://review.couchbase.org/#/c/66197,2,5ddfe5d97c9dd7f859c1150e48fa52ea23e17871,8bee697c8d9ae238f6fdd610663b09c17313e514,0,26/07/16,26/07/16,4,Start 2.3.2 development,"Start 2.3.2 development

Change-Id: I1c5aef19c62d747f0ac992116485c8aa22669bd4",0,0,0,1,0,0,1,NA,NA
66199,I27a868ea62eb3ea046f7432b8732dcd6e267039c,http://review.couchbase.org/#/c/66199,3,8bee697c8d9ae238f6fdd610663b09c17313e514,f5589e33cd2bd17c88da57bea0af396c1ed3db8c,1,26/07/16,26/07/16,18,JCBC-976: Rename ScanConsistency to SearchConsistency,"JCBC-976: Rename ScanConsistency to SearchConsistency

Motivation:
-----------
In order to better distinguish the two types of consistencies,
FTS ScanConsistency needs to be renamed to SearchConsistency.

Modifications:
--------------
Renamed the enum to SearchConsistency.
Renamed the builder method to searchConsistency().

Change-Id: I27a868ea62eb3ea046f7432b8732dcd6e267039c",0,0,0,0,0,1,1,0,0
66218,I7a9e6a433a177b617168e714bd85d62d07ad47be,http://review.couchbase.org/#/c/66218,2,01c820a3c904f101e8a1d13cb09e7cb7fbb8af32,ecafb4843d0bda47f643ade7b72e9f348c4d3bb8,1,26/07/16,27/07/16,281,JCBC-982: BucketSettings raw and customSettings,"JCBC-982: BucketSettings raw and customSettings

Motivation
----------
Methods of BucketSettings don't cover the full range of possible values
either from the server (when getting bucket info) or when configuring
a bucket. It also varies with each major Couchbase version.

Getting the buckets info could be enriched with a generic raw() method,
while configuring a bucket could take additional generic map of custom
settings.

Modifications
-------------
BucketSettings now has a raw() method to represent the raw information
as returned by the server.
It is set when calling build() on the default builder.

BucketSettings for configuration (from client to server) can now have
additional settings through the customSettings() method. These are set
on the builder via the withSetting and withSettings methods.

The insert/update bucket payload is built using a testable method that
will consider the customSettings(), BUT will ignore them if they would
overwrite a setting that has a corresponding method.

Result
------
Bucket settings can now be read fully from the server and also set
fully, even if native methods are missing. This is more future-proof.

Change-Id: I7a9e6a433a177b617168e714bd85d62d07ad47be",0,0,0,0,0,1,1,1,1
66290,I690088c090aa11279235c625ed1e81f846d13b1b,http://review.couchbase.org/#/c/66290,4,ecafb4843d0bda47f643ade7b72e9f348c4d3bb8,01d2b699fb70b6514f82807f5ac0d08613e6c545,1,28/07/16,28/07/16,41,WIP,"WIP

Change-Id: I690088c090aa11279235c625ed1e81f846d13b1b",0,1,0,1,0,1,1,0,0
66454,Iadc5402bc528ef36518a69dbd84c5c6795a103f8,http://review.couchbase.org/#/c/66454,2,55fe1e9235c6b8f54c4debc24352146ba7d7d07d,10603ec99199eda9081bdc578e733a0fb2418434,0,03/08/16,03/08/16,8,JCBC-991: Ensure README points to new documentation URLs,"JCBC-991: Ensure README points to new documentation URLs

Motivation:
-----------
With Couchbase Server 4.5 and the 2.3.x line of Java SDK, the docs
have been reorganized and have new URLs.

Modifications:
--------------
Modified the README so it points to most recent documentation.

Change-Id: Iadc5402bc528ef36518a69dbd84c5c6795a103f8",0,0,0,0,0,0,0,NA,NA
66649,I94f70e55fc18fc29f405d3e5e6282cfa6060e9ec,http://review.couchbase.org/#/c/66649,2,10603ec99199eda9081bdc578e733a0fb2418434,2fd9e9704d31c92f2bb1baa63672d2bb0aee0446,0,10/08/16,10/08/16,6,Prepare 2.3.2 Release,"Prepare 2.3.2 Release

Change-Id: I94f70e55fc18fc29f405d3e5e6282cfa6060e9ec",1,0,0,1,0,0,1,NA,NA
66801,Ia58107462cbeb8b3b2b86402a8e5e11c2ee92c3e,http://review.couchbase.org/#/c/66801,7,2fd9e9704d31c92f2bb1baa63672d2bb0aee0446,f2041b3b846edacddb4765cd556ffe9c7712d88b,1,16/08/16,25/08/16,1041,JCBC-901: Introduce Authenticator for implicit credentials,"JCBC-901: Introduce Authenticator for implicit credentials

Motivation:
-----------
RFC 007 (couchbaselabs/sdk-rfcs#13) introduces the Authenticator
interface to deal with credentials that are not provided explicitly on
each authenticated method call but centralized in one place.

Modifications:
--------------
Added the Authenticator interface and its first implementation based on
login/password pairs, PasswordAuthenticator.

Internally, Authenticator deals with Credential objects. The contexts in
which Authenticator can provide credential are enumerated in the
CredentialContext enum.

The Authenticator is set on the CouchbaseEnvironment. It can be both
mutated and changed later on, either via the env or a convenience method
on Cluster.

The following Cluster methods make use of the Authenticator when no
explicit credential is provided: clusterManager(), openBucket() and
openBucket(String bucketName).

Results:
--------
Implicit credentials can be retrieved from a configurable Authenticator,
which paves the way for further authentication modes support and cluster
level authentication.

Change-Id: Ia58107462cbeb8b3b2b86402a8e5e11c2ee92c3e",0,1,1,0,1,1,1,2,1
66831,I1e89d2ef864787284784ac384d9dc10ad6295c46,http://review.couchbase.org/#/c/66831,2,fb3fdeceaae5bd03b0b3b6590b306fb0e3dff87a,a9382eb0add4b1f80d48704b341a56c88d3d675b,0,17/08/16,17/08/16,4,Start development of 2.3.2,"Start development of 2.3.2

Change-Id: I1e89d2ef864787284784ac384d9dc10ad6295c46",0,0,0,1,0,1,1,NA,NA
66868,I6131fb0bee7230c60e92892b818876115406488e,http://review.couchbase.org/#/c/66868,2,a9382eb0add4b1f80d48704b341a56c88d3d675b,d36feee05da73c5fca5f97059fe4a0eae47cdf95,1,18/08/16,24/08/16,487,JCBC-995: Improve customization of subdoc serialization,"JCBC-995: Improve customization of subdoc serialization

Motivation:
-----------
Subdocument uses the shaded Jackson MAPPER as its default implementation
for serialization and deserialization.

The FragmentTranscoder can be customized, and this is especially useful
on the write path, but the implementation can be a bit tricky.
In order to support custom serialization, a better abstract class would
be useful.

Additionally, the read path is more complex especially when multiple
operations are performed, as the LookupSpec is lost and as such there
is no way for the client to provide a target Class that can be natively
used for the deserialization.

In order to support custom deserialization, the raw bytes should be
exposed so the user can work with its own deserialization mechanism.

Modifications:
--------------
Added an optional rawContent getter on SubdocOperationResult.

Added an includeRaw option to the LookupInBuilders that will opt-in into
putting a copy of the raw JSON bytes into the result for GETs. This is
opt-in due to the sometimes undesirable memory overhead this implies.

Added a new abstract FragmentTranscoder that deals with byte arrays
instead of ByteBuf, making it easier to implement a concrete transcoder.

Results:
--------
Custom transcoders for subdoc can be written more easily and custom
deserialization can also be applied using the rawContent value.

Change-Id: I6131fb0bee7230c60e92892b818876115406488e",0,0,1,0,0,1,1,0,0
66987,Ibc7443c028e803cc9f28d48cbba50612c0ee1301,http://review.couchbase.org/#/c/66987,2,556ccc01e1b93cfbbd2cb3842bb7bf6bbbb83721,b5e29ae59d80e84370ff5bd1193212450efce2b7,1,23/08/16,24/08/16,517,JCBC-998: Util class for raw json N1QL/FTS,"JCBC-998: Util class for raw json N1QL/FTS

Motivation
----------
Both FTS and N1QL request messages exist that allow to get the raw JSON
response out of the service (either in String or ByteBuf form).

In order to make execution of these messages easier (especially those
based on ByteBuf), an utility class outside of the Bucket API makes
sense (as it would otherwise have to be a fully committed API, shared
between SDKs).

Modifications
-------------
Added RawQueryExecutor and its async counterpart AsyncRawQueryExecutor
as such utility classes.

Each allow to get a response in JsonObject or String form, as well as
implementing a custom deserialization easily.

Result
------
N1QL and FTS queries can be executed with a JSON response using the new
utility classes. The N1QL methods are integration tested.

Change-Id: Ibc7443c028e803cc9f28d48cbba50612c0ee1301",0,0,0,0,1,1,1,0,0
67193,I5b10086f44e3b921b10c4640de5aaa1eabd43d0f,http://review.couchbase.org/#/c/67193,3,96a95d61d003f48990fd1ba4234e1c7ff7cca97e,20f9674923837973ecbfb96ed59d43db59b1bd7a,1,31/08/16,31/08/16,31,JCBC-1001: Fix oversight on non-committed N1QL API,"JCBC-1001: Fix oversight on non-committed N1QL API

Motivation
----------
Some of the N1QL Result and Row interfaces and implementations
are currently marked as experimental although they shouldn't since
they are officially supported and stable.

Modifications
-------------
Rework the stability annotations on the various n1ql row and result
files as well as related n1ql classes to indicate the correct
stability.

Result
------
The stabilized N1QL APIs are marked like they should be.

Change-Id: I5b10086f44e3b921b10c4640de5aaa1eabd43d0f",0,0,0,0,0,0,0,0,0
67383,I09d56dad46ad3bb2d27c2d7664a5ac41c284b439,http://review.couchbase.org/#/c/67383,2,20f9674923837973ecbfb96ed59d43db59b1bd7a,31ee25ac8f9190f5fa8fe279d62c735d7964cbc1,0,06/09/16,06/09/16,6,Prepare 2.3.3 Release,"Prepare 2.3.3 Release

Change-Id: I09d56dad46ad3bb2d27c2d7664a5ac41c284b439",1,0,0,1,0,0,1,NA,NA
67630,I4001c492a7829f713fe6bc98945a19102d9e9da1,http://review.couchbase.org/#/c/67630,5,31ee25ac8f9190f5fa8fe279d62c735d7964cbc1,2f6e6a421290e403aca07ae12b5d30abe026a3c3,1,13/09/16,20/09/16,494,JCBC-851: Cluster Level Querying,"JCBC-851: Cluster Level Querying

Motivation:
-----------
Breaking from the historical model of data manipulation at the bucket
level, N1QL allows to perform JOINS over multiple buckets.

Even though it *is* technically possible to perform such a query from
a Bucket (by making sure that all relevant credentials other than the
ones for the root bucket are provided in the N1qlQuery), it is a bit
counterintuitive.

Cluster-level querying aims at providing a more intuitive way of doing
such bucket-spanning queries.

Note that the configuration and resource management of the SDK makes it
so that performing a N1QL query still has the prerequisite that a
bucket is currently opened in the Cluster.

Modifications:
--------------
Mirrored the query API from Bucket/AsyncBucket to Cluster/AsyncCluster.

The sync version delegates to the AsyncCluster, while the async version
attempts to find an open AsyncBucket and delegate the execution of the
query to it.
The query is enriched with the credentials taken from the currently
configured Authenticator.

The function that allows to go from an AsyncN1qlQueryResult to a sync
one has been extracted in N1qlQueryExecutor. It is reused by the query
implementation in CouchbaseCluster.

Results:
--------
N1QL queries spanning multiple buckets (including password protected
ones) can be more intuitively performed from the Cluster/AsyncCluster.

This functionality and its specific error condition (no open bucket)
are tested in an integration test.

Change-Id: I4001c492a7829f713fe6bc98945a19102d9e9da1",0,1,1,0,0,1,1,1,1
67632,If47d4da2a9e11ce3c3be20da13077b4d79efbf9a,http://review.couchbase.org/#/c/67632,2,c6e535b41741563dfa2a99ef304d52780ae6977f,69cd2bc2b6d6d036fdc0bfe8ca014abe9b416330,0,13/09/16,13/09/16,4,Start development of 2.3.4,"Start development of 2.3.4

Change-Id: If47d4da2a9e11ce3c3be20da13077b4d79efbf9a",0,0,0,1,0,1,1,NA,NA
68089,I81732c4f0d70732bdb6a25f2b7ee9f5f68a54589,http://review.couchbase.org/#/c/68089,3,886cb7f263967ffbbdcbb4e373c7cfea9314081f,239ef017eba874a0e12d9854bb3e99e63d0c9b3d,1,28/09/16,28/09/16,61,JCBC-1006: Rename PasswordAuthenticator to ClassicAuthenticator.,"JCBC-1006: Rename PasswordAuthenticator to ClassicAuthenticator.

Recent changes to the RFC proposed this renaming and this changeset
implements the rename accordingly.

Change-Id: I81732c4f0d70732bdb6a25f2b7ee9f5f68a54589",0,0,0,0,0,0,0,1,1
68090,I778cb9d7c5c6a8b528018c659765ecc002ef42ce,http://review.couchbase.org/#/c/68090,3,675e2ef874bdee056fa4c930332894867775763d,dcdd84fa7a421142ab740456393bd3f33d20627e,1,28/09/16,28/09/16,7,JCBC-1004: Clarify expiry setting on subdoc mutate.,"JCBC-1004: Clarify expiry setting on subdoc mutate.

Motivation & Modifications
--------------------------
The javadoc needs to be clarified in order to avoid confusion what
happens to the doc expiry when mutation a fragment. Since behind
the scenes a full doc replace is performed (on the server), the
behaviour mirrors full KV operations.

Change-Id: I778cb9d7c5c6a8b528018c659765ecc002ef42ce",0,0,0,0,0,0,0,0,0
68385,Ib3a541da500a208060ebd45acf911ca9eee25c99,http://review.couchbase.org/#/c/68385,2,3002f531af7f7d0ff2499745ba0e23d4fe54ff67,160625c5073b6608822997440fe443cf00a02224,0,05/10/16,05/10/16,6,Prepare 2.3.4 Release,"Prepare 2.3.4 Release

Change-Id: Ib3a541da500a208060ebd45acf911ca9eee25c99",1,0,0,1,0,0,1,NA,NA
68796,I577e0fb66b0e8d7b8c5bd271c686cf0318139c74,http://review.couchbase.org/#/c/68796,2,160625c5073b6608822997440fe443cf00a02224,0758370c97556946e18221f831e264bef4a95436,1,17/10/16,24/10/16,45,"JCBC-1015: Expose ""pretty"" setting for N1QL","JCBC-1015: Expose ""pretty"" setting for N1QL

This changeset exposes the ""pretty"" setting for N1QL queries that
allow to reduce network overhead.

Note that this is only supported with Couchbase Server 4.5.1 or
later.

Change-Id: I577e0fb66b0e8d7b8c5bd271c686cf0318139c74",0,0,1,0,0,0,1,1,1
69167,I03c9cd72e3d097bdfa7b35957acb72f8dbef4102,http://review.couchbase.org/#/c/69167,11,aea3a4a49d9b8c923fa79ab56c9f132df85b4b51,9aebbce610a603068a4fbd0264788d5a7d93d79f,1,24/10/16,02/11/16,3446,JCBC-900 Add Map datastructure support,"JCBC-900 Add Map datastructure support

Motivation
----------
Provide higher level data structure support over Subdoc APIs. This aims
for a rich developer experience by ready-to-use data structures like
list, map, queue and set for creating and populating couchbase
documents.

Changes
-------
Added AsyncCouchbaseMap interface which uses subdocument dict upsert api
to add dictionay items to document, subdocument path remove to remove
items and uses full document get to calculate size. Provided bucket
level sync and async api wrapping the AsyncCouchbaseMap interface. Added
MutationOptionBuilder interface to build mutation operation contraints. Added
DataStructure tests to verify the correctness.

Results
-------
CouchbaseMap data structure experimental apis on CouchbaseBucket and
CouchbaseAsyncBucket.

Change-Id: I03c9cd72e3d097bdfa7b35957acb72f8dbef4102",0,1,0,0,1,0,1,0,0
69417,I5528736831f83a3ac71fad4b68b271a2e9526548,http://review.couchbase.org/#/c/69417,2,720bb46cc9c6995b06437354c43ac1ddca8cd1a7,69d788dd5c60474b2ea4b58a1d626dd06107674d,0,02/11/16,02/11/16,6,Prepare 2.3.5 Release,"Prepare 2.3.5 Release

Change-Id: I5528736831f83a3ac71fad4b68b271a2e9526548",1,0,0,1,0,0,1,NA,NA
69909,I21bf323c436c5f2a1e3955cc20a1cfca9f6dd97b,http://review.couchbase.org/#/c/69909,5,69d788dd5c60474b2ea4b58a1d626dd06107674d,4d6496faef82a1632d020b674e0d54afd913d4f5,1,15/11/16,30/11/16,445,"JCBC-1017, JCBC-1018: Fix inconsistencies with rfc","JCBC-1017, JCBC-1018: Fix inconsistencies with rfc

Motivation
----------
Fix the inconsistencies with the rfc and other sdks

Changes
-------
- Added createDocument option in MutationOptionBuilder with default
  value as false, so only when the user sets it as true, the underlying
  document will be created
- Changed queue methods to be QueuePush and QueuePop
- Chanded list methods from listPush, listShift to be listAppend and
  listPrepend
- Updated the documentation to reflect createDocument option change

Change-Id: I21bf323c436c5f2a1e3955cc20a1cfca9f6dd97b",0,1,1,0,0,0,1,0,0
69991,Idae1953c3dc3e4e0f174f6256edc57142e501bff,http://review.couchbase.org/#/c/69991,10,cfaf0f2cf478f08027d7d77eeaa74b1bfdf29e1e,9542e57a97994f0ce117183b304287702f69b669,1,17/11/16,01/12/16,2266,JCBC-1020 Collections like interface for datastructures,"JCBC-1020 Collections like interface for datastructures

Motivation
----------
Create a separate class for the data structures and provide a
collections like interface

Changes
-------
Created separate classes for the data structures. They implement methods
which have similar naming convention to collections, however they do not
extend from the standard collections interface due to method signature
conflicts. The implementations are just wrappers around the existing
bucket level data structure methods. Verified correctness with
datastructure tests.

Results
-------
CouchbaseList, CouchbaseMap, CouchbaseQueue, CouchbaseSet classes added.

Change-Id: Idae1953c3dc3e4e0f174f6256edc57142e501bff",0,1,0,0,1,0,1,4,1
69995,Ib64c5e1f1c2950bdb1df7d6511f69bfc859c5c58,http://review.couchbase.org/#/c/69995,6,5badfb0b966335420cbbbe19877c79dd23a23e00,e1b0ea4dbb80025b0071654871f7dfb741a7d64b,1,17/11/16,01/12/16,18,JCBC-1016 Throw PathNotFound instead of SUBDOC_PATH_NOT_FOUND,"JCBC-1016 Throw PathNotFound instead of SUBDOC_PATH_NOT_FOUND

Motivation
----------
Throw PathNotFound exception on get paths instead of
SUBDOC_PATH_NOT_FOUND

Changes
-------
Check response status on subdoc lookup and throw PathNotFoundException
instead of generic CouchbaseException with subdoc reponse status. This
is added for mapGet and listGet methods.

Change-Id: Ib64c5e1f1c2950bdb1df7d6511f69bfc859c5c58",0,1,0,0,0,0,1,0,0
70001,I29854297ac599ccbdfef99b6e512a456e8c48026,http://review.couchbase.org/#/c/70001,4,f3450a6f95564e4b1165c0adececf24d517fd0a6,0e283c314353be9e475f0d70c3bdc6f63ed5ef8a,1,17/11/16,01/12/16,17,JCBC-981 Add a toString() on N1qlQuery,"JCBC-981 Add a toString() on N1qlQuery

Motivation
----------
Return a string when toString is called instead of Query object hashcode

Changes
-------
Override toString in SimpleN1qlQuery and ParameterizedN1qlQuery to
return query statement string

Change-Id: I29854297ac599ccbdfef99b6e512a456e8c48026",0,1,0,0,0,0,1,0,0
70046,If76b8fa77b09d3597358c659ec5bfe26fa3e6e9d,http://review.couchbase.org/#/c/70046,3,950c5c638531ec2d216425363842b28817f3a493,a8b433ad4817a3e86fe5142be04c9c9263b81c01,1,17/11/16,01/12/16,24,JCBC-1023 Ignore FTS tests if search service not found,"JCBC-1023 Ignore FTS tests if search service not found

Motivation
----------
Since FTS is an individual service, we may not be
enabling it always while running integration tests.

Changes
-------
Add ignoreIfSearchServiceNotFound to test context, which tries a search
query and does not continue with the tests if a
ServiceNotAvailableException is returned.

Results
-------
Fts tests will be ignored if search service is not found

Change-Id: If76b8fa77b09d3597358c659ec5bfe26fa3e6e9d",0,0,0,0,0,0,0,0,0
70146,I356602c1bb58de03cc281c7e5b3e37ea99cb522b,http://review.couchbase.org/#/c/70146,2,561ef18b0c82580d4a4dedcc6034e1cd4850cb16,c3ed50a505aad1224fa0a82d908adc9af4f5941e,1,21/11/16,30/11/16,6,JCBC-1021: Print raw data if document decoding failed.,"JCBC-1021: Print raw data if document decoding failed.

Motivation
----------
To better debug flag and decoding related issues it makes sense to
warn-log all known details at the point of decoding.

Modifications
-------------
Adds a WARN log to the decoding section of the abstract transcoder
which logs and dumps all known information for that specific document
at the time of failure.

Result
------
More insight into why a document failed to decode properly.

Change-Id: I356602c1bb58de03cc281c7e5b3e37ea99cb522b",0,0,1,0,0,0,1,1,1
70148,Icbb12bed5cb808b80398da23f8b8735df2c97820,http://review.couchbase.org/#/c/70148,2,2a623b62f60119b374403bb54ae9be6b940268e9,3c111b58eb68d52ebce18795a959ae564591a68a,1,21/11/16,30/11/16,40,"JCBC-1024: Add ""sort"" option to FTS query.","JCBC-1024: Add ""sort"" option to FTS query.

Motivation
----------
Couchbase Server 4.6 introduces the possibility to
apply a custom sorting order (not only on the score in
descending order), the Java SDK needs to expose this
option as well.

Modifications
-------------
A ""sort"" option is provided which allows the user to specify
an array of sort fields, including the special ones like
""_score"" and ""_id"" as well as using a ""-"" prefix for descending
order.

Result
------
FTS compatibility for Server 4.6 which allows the user to specify
a custom sort order.

Change-Id: Icbb12bed5cb808b80398da23f8b8735df2c97820",0,0,1,0,0,0,1,0,0
70253,I4889d800e3d1835705c6e94992179db93bfae378,http://review.couchbase.org/#/c/70253,5,f43ab8977f4fc919f43a900af6dec3f95ae522d6,68ee46b85f0e076c6803510b24f48490e2b188b4,1,22/11/16,01/12/16,350,JCBC-1026: Early unsubscription can trigger buffer leaks.,"JCBC-1026: Early unsubscription can trigger buffer leaks.

Motivation
----------
It has been observed that when early unsubscription happens in observable
sequences (like firing a timeout() chained in) the up the stream byte buffers
are not properly released and lead to buffer leaks.

As far as currently observed, the blocking API is not affected and the leak
only happens during early unsubscribe, not during normal operations.

Modifications
-------------
The current logic with defer() as converting a hot into a cold observable
is not suffcient since when the unsubscribe happens the Subject is not
checked again and as a result its content (which may includes pooled
resources like ByteBufs) are leaked.

As a result this changeset proposes an alternative defer() implementation
which subscribes a second time to the async subject and in parallel monitors
the subscription of the ""main"" observable. If a value is passed into the
subject and the subscription is gone, it releases the buffers to avoid
a leak. This works under the assumption that there can only be one subscriber
and the deffered observable is indeed a subject.

So far this holds true for all conditions inside our client but to double
check and make errors explicit we have an instanceof check in place which
will fail hard if that constraint is violated, otherwise the hidden
side effects would be very hard to debug.

Result
------
Code like this does not leak anymore:

bucket.async().get(""foo"").timeout(1, TimeUnit.MICROSECOND).subscribe();

It in general provides much better guarantees wich making sure that
if an early unsubscribe happens the underlying buffers are freed if
they are refcounted and their count is > 0 (to avoid double frees).

The joys of object pooling.

Change-Id: I4889d800e3d1835705c6e94992179db93bfae378",0,1,0,0,0,0,1,0,0
70551,I76f83715db1564718dcbe4725b65461ffe347a31,http://review.couchbase.org/#/c/70551,3,10c0a3b37ba890a279af99a146ba110deeee9537,c6499c7bcca91e41ce448fc85391fb3ed5eb33bf,1,02/12/16,06/12/16,7,Override core-io builder.,"Override core-io builder.

Change-Id: I76f83715db1564718dcbe4725b65461ffe347a31",0,0,1,1,0,0,1,0,0
70682,Ia9b068bef0cf25b7c409064a1c7b60d12ef3ea88,http://review.couchbase.org/#/c/70682,2,dd083146f67a854406b8a83fffe40b8b47bf5aa9,d3cec4a603d2e930cea60d46090fcb33c906fa01,0,06/12/16,06/12/16,6,Prepare 2.3.6 Release,"Prepare 2.3.6 Release

Change-Id: Ia9b068bef0cf25b7c409064a1c7b60d12ef3ea88",0,0,0,1,0,0,1,NA,NA
70865,I57604b69c722b4263366a9e26272df4bea772f15,http://review.couchbase.org/#/c/70865,2,d3cec4a603d2e930cea60d46090fcb33c906fa01,d8bc7c6f42b165e1bdf44afced3742647a4f4458,0,12/12/16,12/12/16,4,Start 2.4.0 Development,"Start 2.4.0 Development

Change-Id: I57604b69c722b4263366a9e26272df4bea772f15",0,0,0,1,0,0,1,NA,NA
70951,I0fc71041f4567f5904b538bcb5688358b571bf81,http://review.couchbase.org/#/c/70951,7,d8bc7c6f42b165e1bdf44afced3742647a4f4458,5821c0e0f4df4b31851c1377f9f81b3c763377f5,1,14/12/16,30/12/16,156,JCBC-1029: Long running prepared query observables may get released early,"JCBC-1029: Long running prepared query observables may get released
early

Changes
-------
Integration test for the fix JVMCBC-379. Prepared tests use travel-sample bucket
as it requires long running query. Prepared tests are ignored by default.

Change-Id: I0fc71041f4567f5904b538bcb5688358b571bf81",0,1,1,0,0,0,1,0,0
71182,I24460e247cebc8d7b4275ec55f22cc7591693485,http://review.couchbase.org/#/c/71182,4,21b1ed9fa7cfc54a3e82b0f8ce7f1945135f4d0a,4e7869cd5e06a717f23702f0ebcf637916d627bb,1,21/12/16,22/12/16,21,Author:    Bernal Varela Gómez <bernalvarela@gmail.com>,"Author:    Bernal Varela Gómez <bernalvarela@gmail.com>

exceptionsConstructorsReview-1: Revision of the Exceptions constructors with no params

Motivation
----------
All the java client exceptions having a a method with no parameters dont make a super call.
The oracle compiler in compilation time add this call but all the exceptions have as father the CouchbaseException and his no params constructor nor have the super call.

This is a problem because the stack trace is never initialized.

Modifications
-------------
Add super() to all the constructors.

Result
------
The Exception is correctly initialized.

Change-Id: I24460e247cebc8d7b4275ec55f22cc7591693485",0,1,0,0,0,0,1,0,0
71299,I102d034ee5cc38d35f2acf9bf01bf1908fb9ebf1,http://review.couchbase.org/#/c/71299,3,4e7869cd5e06a717f23702f0ebcf637916d627bb,9c66239cd664288a30339f37d15738404ede9e0f,1,27/12/16,28/12/16,194,JCBC-1022: Stabilize APIs for the 2.4.0 series,"JCBC-1022: Stabilize APIs for the 2.4.0 series

Motivation
----------
This changeset updates the stability annotations which either should
be stabilized already or are intended to be for the 2.4.0 timeframe:

	- Bucket-Level Datastructures
	- Authenticator

Change-Id: I102d034ee5cc38d35f2acf9bf01bf1908fb9ebf1",0,0,0,0,0,0,0,0,0
71317,I710d1fc00d1426f3f7e7489a02f1b1e46dc13301,http://review.couchbase.org/#/c/71317,4,7e6232020d71f300633af6ebc4103d6934a0d08c,e87c11675a05465a91b0bc85be5278954045eb6c,1,28/12/16,30/12/16,7,Use connection string from core-io,"Use connection string from core-io

Change-Id: I710d1fc00d1426f3f7e7489a02f1b1e46dc13301",0,1,0,1,0,0,1,0,0
71319,Ie29dd53ebefd3e999b696cb15199353b382a2bc1,http://review.couchbase.org/#/c/71319,3,3f6546bc6bfae7f6d71dfaffc6d5b5951e452e79,4562c40e9ba40a023a66f07d96dcc3f56bfbb38a,1,28/12/16,30/12/16,136,JCBC-974: Throw DesignDocumentDoesNotExist on bucket manager,"JCBC-974: Throw DesignDocumentDoesNotExist on bucket manager

Motivation
----------
Throw DesignDocumentDoesNotExist for consistency reasons on bucket
manager

Changes
-------
Add new exception DesignDocumentDoesNotExist and change design document
fetch, publish, remove apis to throw it if the design document does not
exist.

Result
------
Consistent with other apis for document, view, index which throw
DoesNotExist exception

Change-Id: Ie29dd53ebefd3e999b696cb15199353b382a2bc1",0,0,0,0,0,0,0,0,0
71322,I2bdef1fa1b584745e01069d03aad6cf167b20e84,http://review.couchbase.org/#/c/71322,2,8861d32a2683bec94d68852dbd1f81f0a159da7c,2e2bc405d9fb7c87070cd4009be13a23dc78a1ac,0,28/12/16,29/12/16,4,JCBC-1013: Make sub-document failures clear that server 4.5 is required,"JCBC-1013: Make sub-document failures clear that server 4.5 is required

Motivation
----------
Make error message more clear on acccess error when subdoc operations
are not supported

Changes
-------
Throw couchbase exception which indicates the server version required
for subdocument operations

Change-Id: I2bdef1fa1b584745e01069d03aad6cf167b20e84",0,0,0,0,0,0,0,NA,NA
71435,I357a9533692d705510018228fcadeec760f811f5,http://review.couchbase.org/#/c/71435,2,f31906f115c1d579473747e29abe3be6cc995842,a4d7dd0671a1716c3f6346f975df04625971d89a,1,30/12/16,02/01/17,334,JCBC-1012: Add support for BigInteger and BigDecimal,"JCBC-1012: Add support for BigInteger and BigDecimal

Motivation
----------
It has been reported several times (on the forums and through customer
interactions) that BigDecimal and BigInteger support through the JsonObject
and JsonArray types would be appreciated.

Modifications
-------------
This changeset enables this functionality and adds test cases. Both JsonObject
and JsonArray now have more getters and setters for these types, but there
is one gotcha. By default jackson will read the BigDecimal as a double, which
is the type returned. For very long numbers there might be precision loss.

To combat this, the system property com.couchbase.json.decimalForFloat has
been introduced which, when set to true, will always read doubles as BigDecimal
on the jackson side and therefore trade speed for accuracy. Separate tests
have been added to assert this on a unit-test level.

Result
------
It is now possible to use BigInteger and BigDecimal types the same way as
one would do with other already supported types.

Change-Id: I357a9533692d705510018228fcadeec760f811f5",0,0,0,0,0,0,0,2,1
71468,If9c048963233597f4f184d2ae01317dcd207eb2c,http://review.couchbase.org/#/c/71468,2,68b5856874fa1bfa2a01a7a2c9f0453a69ced97f,135194d377435218ef3759702ca5ed1e053e7acf,1,02/01/17,02/01/17,4,Prevent NPE on toString(),"Prevent NPE on toString()

Change-Id: If9c048963233597f4f184d2ae01317dcd207eb2c",0,0,0,1,0,0,1,0,0
71470,I257e3dc6181e0e1f472f91c5b12eaff99c04a79f,http://review.couchbase.org/#/c/71470,2,c5856ff04f829305fd80786da5bab84cae794221,cc71d4f72ce3800d9ca07bef3d24884da3f6b049,1,02/01/17,03/01/17,3,Ignore Guava collection tests by default.,"Ignore Guava collection tests by default.

When they are enabled by default and used with the maven command
line runner it seems like the test suite never ends. We need to
look into this separately but for now we can unblock the testing.

Change-Id: I257e3dc6181e0e1f472f91c5b12eaff99c04a79f",0,0,0,0,0,0,0,0,0
71474,Ia95ed19d11e9ae29f776f87a545d30c82b7304d3,http://review.couchbase.org/#/c/71474,3,681bb7aa195f341d6ccaa0bb2cbd8c8ac12f9aff,9ed3fe7c0c9c211ea158df4da0982e4240eb6bac,0,03/01/17,03/01/17,8,Fix failing N1QL units tests by changing response parse status,"Fix failing N1QL units tests by changing response parse status

Motivation
----------
Retry for failed N1ql prepared query now expects that the http response
status is a failure due to the fix for JCBC-1029

Changes
-------
Previously the stubbed response had a parse success as true indicating the
status code as success eventhough the query was not successful

Results
-------
N1ql prepared unit tests pass

Change-Id: Ia95ed19d11e9ae29f776f87a545d30c82b7304d3",0,0,0,0,0,0,0,NA,NA
71562,Iaf06b9c82dac8757fceb1575c23e84a583396206,http://review.couchbase.org/#/c/71562,3,8601fc09feb08d0a5f713e94a70e1089bf52e6c3,89b7e72289e927007b7806f02daaf5900300e773,1,04/01/17,05/01/17,94,JCBC-1035 Fix flaky N1QL cluster level query integration tests,"JCBC-1035 Fix flaky N1QL cluster level query integration tests

Motivation
----------
N1QL cluster level query tests were quite flaky because the buckets shared the
same cluster object which uses one of the open buckets in bucket cache to
execute the query. As the bucket cache is a concurrent hash map, there are
no order guarantees.

Changes
-------
Dont share cluster between the buckets. Also used request_plus scan
consistency as the read pretty soon after write.

Results
-------
Tests consistently pass

Change-Id: Iaf06b9c82dac8757fceb1575c23e84a583396206",0,0,0,0,0,0,0,0,0
71590,If48c7fad09c8043af6b5eb8077234a13f0344d17,http://review.couchbase.org/#/c/71590,2,39702275e56de5d6135de992757ac9d8335b2e12,63c5f075799ace6617f24af75e958ae54ef0305a,0,05/01/17,05/01/17,6,Prepare 2.4.0 Release,"Prepare 2.4.0 Release

Change-Id: If48c7fad09c8043af6b5eb8077234a13f0344d17",1,0,0,1,0,0,1,NA,NA
71598,I3b57ec404f02fbaafe9fc3e3db71b51d87a613b2,http://review.couchbase.org/#/c/71598,3,63c5f075799ace6617f24af75e958ae54ef0305a,a458f02179a838b65117b28e78c03c81f65b564a,0,05/01/17,05/01/17,4,Start 2.1.4 Development,"Start 2.1.4 Development

Change-Id: I3b57ec404f02fbaafe9fc3e3db71b51d87a613b2",1,0,0,1,0,0,1,NA,NA
71856,I721677bfbb489ebd92ee9b91ab7325fc2f71cf59,http://review.couchbase.org/#/c/71856,2,8e90b29aa4b08831515d96a2fc64b2e2fd682edc,b138012cb6b912f47fed5eb3bddc24aee9af6224,1,11/01/17,12/01/17,48,JCBC-1037: Fail FTS Query with IndexDoesNotExistException,"JCBC-1037: Fail FTS Query with IndexDoesNotExistException

Motivation
----------
Right now if an index does not exist we don't fail with the right
error message for FTS.

Modifications
-------------
This changeset makes the response explicitly check if the index
does not exist and if so raises an IndexDoesNotExistException
as part of the error chain with a FTS response.

By the way, this also fixes the longer standing issue that the
FTS queries should be skipped if the index is not found, leading
to failing tests.

Result
------
Proper awareness if an FTS index doesn't exist, and also fixing
failing tests and instead ignoring them.

Change-Id: I721677bfbb489ebd92ee9b91ab7325fc2f71cf59",0,0,0,0,0,0,0,0,0
71897,If27355d444fc411dd933a65e74c07816cb5dd376,http://review.couchbase.org/#/c/71897,2,b138012cb6b912f47fed5eb3bddc24aee9af6224,f2ac8d8f9eedcb591a128438d02c9501e302dca1,1,12/01/17,12/01/17,38,JCBC-999: Redispatch config messages if failed.,"JCBC-999: Redispatch config messages if failed.

Motivation
----------
If messages going down the config service in core-io, because the
sockets are opened dynamically and other components depend on this
fail fast mode (while not ideal), such messages need to be retried
aggressively to overcome issues where a node is down for example.

Modifications
-------------
Simple retry logic has been added to the config service messages,
retrying after 100ms and as a result providing a better experience,
even if a node is down or not reachable.

In the future, if needed, we can make this configurable but for
now lets just stick with sane defaults.

Result
------
Bucket and Cluster-level config messages have a much higher chance
of succeeding, even under individual node failures.

Change-Id: If27355d444fc411dd933a65e74c07816cb5dd376",0,0,0,0,0,0,0,0,0
71966,I24460e247cebc8d7b4275ec55f22cc7591693485,http://review.couchbase.org/#/c/71966,2,a0e89b278ca4ecd57fa10f5ddedde70b6e0b6c83,a34cc8162d64f93cd82102db65afd3b303599b61,1,13/01/17,13/01/17,21,Revision of the Exceptions constructors with no params,"Revision of the Exceptions constructors with no params

Motivation
----------
All the java client exceptions having a a method with no parameters dont make a super call.
The oracle compiler in compilation time add this call but all the exceptions have as father
 the CouchbaseException and his no params constructor nor have the super call.

This is a problem because the stack trace is never initialized.

Modifications
-------------
Add super() to all the constructors.

Result
------
The Exception is correctly initialized.

Change-Id: I24460e247cebc8d7b4275ec55f22cc7591693485
Reviewed-on: http://review.couchbase.org/71182
Reviewed-by: Michael Nitschinger <michael@nitschinger.at>
Tested-by: Michael Nitschinger <michael@nitschinger.at>",0,0,0,0,0,0,0,0,0
71967,If27355d444fc411dd933a65e74c07816cb5dd376,http://review.couchbase.org/#/c/71967,2,a34cc8162d64f93cd82102db65afd3b303599b61,85f474d1e4e133618eb0f62a899c421c394ae9ab,1,13/01/17,13/01/17,38,JCBC-999: Redispatch config messages if failed.,"JCBC-999: Redispatch config messages if failed.

Motivation
----------
If messages going down the config service in core-io, because the
sockets are opened dynamically and other components depend on this
fail fast mode (while not ideal), such messages need to be retried
aggressively to overcome issues where a node is down for example.

Modifications
-------------
Simple retry logic has been added to the config service messages,
retrying after 100ms and as a result providing a better experience,
even if a node is down or not reachable.

In the future, if needed, we can make this configurable but for
now lets just stick with sane defaults.

Result
------
Bucket and Cluster-level config messages have a much higher chance
of succeeding, even under individual node failures.

Change-Id: If27355d444fc411dd933a65e74c07816cb5dd376
Reviewed-on: http://review.couchbase.org/71897
Tested-by: Michael Nitschinger <michael@nitschinger.at>
Reviewed-by: Sergey Avseyev <sergey.avseyev@gmail.com>
Reviewed-by: Subhashni Balakrishnan <b.subhashni@gmail.com>",0,0,0,0,0,0,0,0,0
71968,I8513041c6c3bf1a4570c821bfd6c822a3b02fcfa,http://review.couchbase.org/#/c/71968,2,ee27309ff9fb499d9fe09773cbcd358eeef09854,f22e1655c33defc19fa0dada9cc8eb6b355fe9bb,0,13/01/17,13/01/17,4,Prepare 2.3.7 Release,"Prepare 2.3.7 Release

Change-Id: I8513041c6c3bf1a4570c821bfd6c822a3b02fcfa",0,0,0,1,0,0,1,NA,NA
71969,I257e3dc6181e0e1f472f91c5b12eaff99c04a79f,http://review.couchbase.org/#/c/71969,2,34b75db593288a8dd7d660201044994f7d9f27e8,6808d63c54679adfbfab916140b0dab017b8c872,1,13/01/17,13/01/17,3,Ignore Guava collection tests by default.,"Ignore Guava collection tests by default.

When they are enabled by default and used with the maven command
line runner it seems like the test suite never ends. We need to
look into this separately but for now we can unblock the testing.

Change-Id: I257e3dc6181e0e1f472f91c5b12eaff99c04a79f
Reviewed-on: http://review.couchbase.org/71470
Reviewed-by: Sergey Avseyev <sergey.avseyev@gmail.com>
Reviewed-by: Subhashni Balakrishnan <b.subhashni@gmail.com>
Tested-by: Michael Nitschinger <michael@nitschinger.at>",0,0,0,0,0,0,0,0,0
71970,Iaf06b9c82dac8757fceb1575c23e84a583396206,http://review.couchbase.org/#/c/71970,2,7059c25323a071c4536e0ab834751ebc9d3ad755,cf69d39c45ef7a2cdb065aaf3f221f592cd63411,1,13/01/17,13/01/17,94,JCBC-1035 Fix flaky N1QL cluster level query integration tests,"JCBC-1035 Fix flaky N1QL cluster level query integration tests

Motivation
----------
N1QL cluster level query tests were quite flaky because the buckets shared the
same cluster object which uses one of the open buckets in bucket cache to
execute the query. As the bucket cache is a concurrent hash map, there are
no order guarantees.

Changes
-------
Dont share cluster between the buckets. Also used request_plus scan
consistency as the read pretty soon after write.

Results
-------
Tests consistently pass

Change-Id: Iaf06b9c82dac8757fceb1575c23e84a583396206
Reviewed-on: http://review.couchbase.org/71562
Tested-by: Subhashni Balakrishnan <b.subhashni@gmail.com>
Reviewed-by: Michael Nitschinger <michael@nitschinger.at>",0,0,0,0,0,0,0,0,0
72179,I634b72a08d243eab3c09135222403224e9813d5b,http://review.couchbase.org/#/c/72179,2,f32a78cb6b21454eaca85aef0e4daaff06a6df3b,91b06639b258c99560ab249f2831021242929c4c,0,18/01/17,18/01/17,6,Prepare 2.4.1 Release,"Prepare 2.4.1 Release

Change-Id: I634b72a08d243eab3c09135222403224e9813d5b",1,0,0,1,0,0,1,NA,NA
72437,I260107b822795cd2a4360dc3b617bd6cce9a1fa1,http://review.couchbase.org/#/c/72437,4,91b06639b258c99560ab249f2831021242929c4c,9766530905d09ed86bfbb6cf97cbfd4c1f9d6ef0,1,25/01/17,07/02/17,1373,JCBC-1028 Add XATTR support,"JCBC-1028 Add XATTR support

Motivation
----------
Allow extened attribute access in subdocument api

Changes
-------
Builder for sub-document options. Moved createParents, added extended
attribute flag in the options builder. Deprecated the overloads with
createParents and added overloads with builder.

Results
-------
Extended attributes can be accessed by setting attributeAccess in
options.

Change-Id: I260107b822795cd2a4360dc3b617bd6cce9a1fa1",0,1,0,0,1,0,1,0,0
73194,Ie6e7dd984f75e5eb96d17472a4a7c4a4a4a13ca8,http://review.couchbase.org/#/c/73194,2,312cb3f56c28af445615f7f09acd7e0c41392f57,89da3b3e4de13a2b005611b080ae3ea63504ea9c,1,06/02/17,06/02/17,56,Override core-io CoreEnvironment builder APIs.,"Override core-io CoreEnvironment builder APIs.

Change-Id: Ie6e7dd984f75e5eb96d17472a4a7c4a4a4a13ca8",0,0,0,1,0,0,1,0,0
73426,Ib92efee8031ec82ffb9988c115276d7bf55ca548,http://review.couchbase.org/#/c/73426,2,9b21a5c0406725096e8062ddddfd40a90e2d01f0,dd275ec9e3a930c467d9bf2a0b28be476bb26725,0,09/02/17,09/02/17,8,Prepare 2.4.2 Release,"Prepare 2.4.2 Release

Change-Id: Ib92efee8031ec82ffb9988c115276d7bf55ca548",1,0,0,1,0,0,1,NA,NA
73513,I26c90531e8a60a0c467d559e17c5fac40f984f80,http://review.couchbase.org/#/c/73513,8,dd275ec9e3a930c467d9bf2a0b28be476bb26725,9f71a4ad1a35eda6047495b67fa28a27f33beb66,1,10/02/17,02/03/17,1340,WIP: Analytics Support,"WIP: Analytics Support

Change-Id: I26c90531e8a60a0c467d559e17c5fac40f984f80",0,1,0,1,1,0,1,3,1
74518,I40fd2ab89eec30cfe4cc3ac5292daf1e4cc46af3,http://review.couchbase.org/#/c/74518,2,9f71a4ad1a35eda6047495b67fa28a27f33beb66,fb05f305c74e24f852bc506b7fbd508c3f9c89df,1,02/03/17,03/03/17,4,JCBC-1045: Pre-check connection string to avoid IOOB exception,"JCBC-1045: Pre-check connection string to avoid IOOB exception

Motivation
----------
A community member reported an IndexOutOfBounds when working with
the cluster manager. Looking at the code it looks like the connection
string did not contain a single host.

Modifications
-------------
The code now checks if there is at least a hostname loadable from
the parsed connection string and if not fails with a helpful
message instead of IOOB.

Result
------
Better error diagnostics when the connection string is not correct.

Change-Id: I40fd2ab89eec30cfe4cc3ac5292daf1e4cc46af3",0,0,0,0,0,0,0,0,0
74519,Ib4103a42fb93fce9b83b82184dee6cacab4c3e82,http://review.couchbase.org/#/c/74519,2,82fb667ab7c7fe6432603d9f0debbb21a15e7bf3,645c644f029fe5193a86c4ce74ee855cac768984,1,02/03/17,03/03/17,20,JCBC-1043: Add toString for N1QL Rows and Sync Result,"JCBC-1043: Add toString for N1QL Rows and Sync Result

Motivation
----------
If SELECT RAW was used to print out a row, the code
would fail since it would not be parsable into a
JsonObject.

Modifications
-------------
The code has been fixed to just turn it into a string
and dump it that way, enabling all kinds of output
instead of just a JsonObject.

This change also adds a toString to the sync N1qlResult
since it makes sense to add it for utility purposes.

Result
------
Propery printing for Rows with Select RAW as well as
sync results.

Change-Id: Ib4103a42fb93fce9b83b82184dee6cacab4c3e82",0,0,0,0,0,0,0,0,0
74778,I04966004483905d8e64d523b995d7ec78f46aba2,http://review.couchbase.org/#/c/74778,2,60cdc92579634b3edce04a9b1da58e2a48b83990,409e7dd79e1d18908b2301de993c0c49e8eb19eb,0,07/03/17,07/03/17,6,Prepare 2.4.3 release,"Prepare 2.4.3 release

Change-Id: I04966004483905d8e64d523b995d7ec78f46aba2",1,0,0,1,0,0,1,NA,NA
75074,I90978ef11adae6101afa7552b29e948af9fcff59,http://review.couchbase.org/#/c/75074,2,409e7dd79e1d18908b2301de993c0c49e8eb19eb,380581683daece197a62592e573f73bea504eb81,0,13/03/17,15/03/17,4,Start 2.4.4 development,"Start 2.4.4 development

Change-Id: I90978ef11adae6101afa7552b29e948af9fcff59",0,0,0,1,0,0,1,NA,NA
75263,Ifaab236537c3629b3c6d82d5ce13501e0cbdeb04,http://review.couchbase.org/#/c/75263,11,380581683daece197a62592e573f73bea504eb81,287c4b40ff1450fa0569303aacf72c7de058f0ea,1,16/03/17,27/03/17,1034,Rbac wip,"Rbac wip

Change-Id: Ifaab236537c3629b3c6d82d5ce13501e0cbdeb04",0,1,1,1,1,0,1,0,0
75266,I7cc1f34c3e1cec71eba20dd81b449ef77ca30338,http://review.couchbase.org/#/c/75266,8,548c0f8304e360cfbdd307840b8910bc6cf9934d,fb5619dcf07d730b85beedae6689bc7186176a8f,1,16/03/17,27/03/17,710,JCBC-1058 User management wip,"JCBC-1058 User management wip

Change-Id: I7cc1f34c3e1cec71eba20dd81b449ef77ca30338",0,1,1,1,1,0,1,2,1
75774,Id67e7f7b905491b3bb5be5f1bf0552a3fd264b79,http://review.couchbase.org/#/c/75774,2,d9828ff86661f4d116d697c07fcd7339a67f19f7,113345c870ccf30a232d4509c30946753eaf78c4,1,27/03/17,28/03/17,62,JCBC-1062: Optimize LegacyTranscoder encoding for strings,"JCBC-1062: Optimize LegacyTranscoder encoding for strings

Motivation
----------
The LegacyTranscoder still uses the slower JVM-based encoding for
strings and it rather should use the same optimized encoding
path which we use for RawJsonDocument and others.

Modifications
-------------
This code adds a ""fastpath"" for the string encoding and moves
all the other options into a nested else block so that the buffer
is only allocated if needed (and not twice w/ overridden by the
optimized method).

Result
------
Faster encoding for the string path.

Change-Id: Id67e7f7b905491b3bb5be5f1bf0552a3fd264b79",0,0,0,0,0,0,0,0,0
75779,I00307701caf577d91cb7d351207c6c26897ee284,http://review.couchbase.org/#/c/75779,3,bfba7eb1acd4c0b8e4fab03f7d56c3019e30a827,a367bb6722c8c5fb8ec0796e9dacd08825c4a618,1,27/03/17,28/03/17,1398,JCBC-1063: Never compress JSON in LegacyDocument.,"JCBC-1063: Never compress JSON in LegacyDocument.

Motivation
----------
In spymemcached, the code checks if the string is JSON
and if it is it skips compression so the server can
understand it properly.

Modifications
-------------
Up until now the LegacyTranscoder didn't check for this
fact and as a result did compress larger JSON docs which
would then not be readable by the server properly.

This changeset ports the (not bulletproof) JSON check from
spymemcached and adds a test case to make sure that JSON is
indeed not compressed even if larger than the compression
threshold.

Result
------
better compatibility with spymemcache and making sure that
larger JSON docs are not compressed.

Change-Id: I00307701caf577d91cb7d351207c6c26897ee284",0,0,0,0,1,0,1,1,1
75839,I9389db46305b162108b319958c0a4a2c50b3a9a2,http://review.couchbase.org/#/c/75839,2,816ecd63d588af93f0bbcf0367c2f6bb16cfb4cc,64d938dac6d2bca0e3250e0277dfc4437cc20834,1,28/03/17,28/03/17,75,Fix cleanup on integration tests,"Fix cleanup on integration tests

If the tests are ignored based on cluster version number, the cleanup
ends up throwing NRE on some tests, so check if ctx is not null before calling
disconnect.

Change-Id: I9389db46305b162108b319958c0a4a2c50b3a9a2",0,0,0,0,0,0,0,0,0
76072,Ia077c7c3eac9a9f6d5fbe3e78ac34cf4c3d0c4a9,http://review.couchbase.org/#/c/76072,2,64d938dac6d2bca0e3250e0277dfc4437cc20834,98df58a6e3b461460011ea64a79303df56146afd,1,30/03/17,31/03/17,104,JCBC-1061 Add query profile info to N1qlQuery result,"JCBC-1061 Add query profile info to N1qlQuery result

Motivation
----------
If query profile info is requested using a raw param, the query response
contains profile information and it is parsed if using yasjl parser. Expose
this information on N1qlQueryResult.

Changes
-------
Add profileInfo JsonObject to N1qlQueryResult and the corresponding observable to
AsyncN1qlQueryResult. Map the bytebuf emitted by QueryResponse to jsonObject
by parsing it using objectMapper. Default is an empty object. Added changes to
existing tests to include profileInfo.

Results
-------
Query profile info should be available in N1qlResult and AsyncN1qlResult
if requested.

Change-Id: Ia077c7c3eac9a9f6d5fbe3e78ac34cf4c3d0c4a9",0,0,0,0,0,0,0,1,1
76074,Ied20aff750055ca2b8b9d38bceddfd077eaaa644,http://review.couchbase.org/#/c/76074,2,45d4eb960f06ca65fd8e7cb903b0af902d618824,b4996f9fd585010a3762a1e0f466c978b94eeab9,1,30/03/17,31/03/17,23,JCBC-1065 Fix api doc to correctly mention about DesignDocumentDoesNotExistException,"JCBC-1065 Fix api doc to correctly mention about
DesignDocumentDoesNotExistException

Changes
------
Fix api documentation which was not correctly updated to mention
DesignDocumentDoesNotExistException added by JCBC-974 in the design
document management api
(getDesignDocument, removeDesignDocument, publishDesignDocument).

Change-Id: Ied20aff750055ca2b8b9d38bceddfd077eaaa644",0,0,0,0,0,0,0,0,0
76246,I8f4caca1629925bc0caaacb82f39306aace87bf2,http://review.couchbase.org/#/c/76246,7,53d5f45c037f6c5a67c542fafde7a5d803905f3c,b530ef843a77deeb50f024e200e7c9b4cb6dc2d0,1,04/04/17,20/04/17,1019,JCBC-1066: Add support for FTS Geo & TermRange Queries.,"JCBC-1066: Add support for FTS Geo & TermRange Queries.

todo: verify, tests, commit msg, cleanup

Motivation
----------

Modifications
-------------

Result
------

Change-Id: I8f4caca1629925bc0caaacb82f39306aace87bf2",0,1,1,0,1,0,1,0,0
76268,I260c6cf4574c9a9c7cbd53c0cd0ddd0bc84a081e,http://review.couchbase.org/#/c/76268,2,2f5fc81c24b67490cfaa6c981094e7825184ee5e,13a3c3391f0b166b8daae6e699250be01c1e8dcb,0,04/04/17,04/04/17,6,Prepare 2.4.4 release,"Prepare 2.4.4 release

Change-Id: I260c6cf4574c9a9c7cbd53c0cd0ddd0bc84a081e",0,0,0,1,0,0,1,NA,NA
76433,Ibe072d79480d693920b106d4cad7016508a1b400,http://review.couchbase.org/#/c/76433,2,13a3c3391f0b166b8daae6e699250be01c1e8dcb,39c52089a37954020c4172bb32f822fcf901c912,1,06/04/17,07/04/17,6,JCBC-1067 Expose configPollInterval from CouchbaseEnvironment builder,"JCBC-1067 Expose configPollInterval from CouchbaseEnvironment builder

Motivation
----------
Past release added the tuneable in Core Environment, add this info as override
on Couchbase Environment builder so it correctly returns the current
CouchbaseEnvironment builder instead of the super class CoreEnvironment builder.

Changes
-------
Added an override on CouchbaseEnvironment builder.

Change-Id: Ibe072d79480d693920b106d4cad7016508a1b400",0,0,0,0,0,0,0,0,0
76435,Ib44e97cbfd449c002aed7713a6577d7bc04884e3,http://review.couchbase.org/#/c/76435,3,156237c42475169d038ac0e32c128017a33746de,c758c7ba9406bf59abd5a0653aef7513db0bdce4,0,06/04/17,07/04/17,4,Prepare for next development iteration,"Prepare for next development iteration

Change-Id: Ib44e97cbfd449c002aed7713a6577d7bc04884e3",0,0,0,1,0,0,1,NA,NA
76437,I680d2211b7b7e1f91d3bd617aef8c15b8859708f,http://review.couchbase.org/#/c/76437,2,239fc628d522d9570d12e5959cc4ddf59235b493,1aae59a5247619df1a9759802d6288fa7b65ba4d,1,06/04/17,07/04/17,21,JCBC-1068 Add dsl support to ANY AND EVERY expression,"JCBC-1068 Add dsl support to ANY AND EVERY expression

Thanks and Credits to the original author: uri.brodsky@gmail.com

Change-Id: I680d2211b7b7e1f91d3bd617aef8c15b8859708f",0,0,0,0,0,0,0,0,0
76560,Icd7c52c0c781248121f0c2c835312b7450994a1b,http://review.couchbase.org/#/c/76560,2,55bdb31616a71f0812bd19935f67b13cd77325d6,bd1b5511d2cf892e626e4eb4efa06898f42b08e9,1,10/04/17,07/08/17,45,JCBC-1070: Getter for object attributes added to DSL,"JCBC-1070: Getter for object attributes added to DSL

Motivation
----------
When using convenience methods in DSL such as meta, there's no way
for getting its attributes.

Modifications
-------------
Added 2 new methods called ""get"" to the DSL which accepts either a
string or an expression. Also added a unit test.

Change-Id: Icd7c52c0c781248121f0c2c835312b7450994a1b",0,0,1,0,0,0,1,0,0
76561,I118a337da2a3d53edb5b1e908035c227eedca804,http://review.couchbase.org/#/c/76561,4,be2dab4b812f47a520ef72e2c24a1bc64c94ca0f,73234684bc83c71f2df7eb55317c7e369d725a88,1,10/04/17,07/08/17,494,"JCBC-1069: Added union, intersect & except to DSL","JCBC-1069: Added union, intersect & except to DSL

Motivation
----------
DSL has union & unionAll methods in SelectResultPath interface. Even if they existed,
it's not possible to join multiple queries by using existing method signatures. In my
case, I'm joining dynamically generated queries assigned to variables. I think it's
best to allow DSL to chain queries like below:

result = query1.intersect(query2).except(query3)

Modifications
-------------
Added 2 new elements: ExceptElement & IntersectElement.
Changed UnionElement to allow a query to be added.
Added new methods to SelectResultPath for missing intersect & except methods which uses
the old method signature same as union & unionAll. Also added new chainable methods
which takes & returns SelectResultPath objects.

Change-Id: I118a337da2a3d53edb5b1e908035c227eedca804",0,1,1,0,0,0,1,0,0
76637,Icb8aa20fd5f3da44436dd5e8745ebdb95fe11173,http://review.couchbase.org/#/c/76637,2,ea5220a9ec9b790b5fbae4fcc37bbf870a254352,40609f6b818073d4927be925feea5f2956c0197c,1,11/04/17,11/04/17,37,JCBC-1072: Add covenient authenticate overload.,"JCBC-1072: Add covenient authenticate overload.

Motivation
----------
Most of the time when user-based authentication is used one just
needs to supply a username and a password. Right now this is only
possible by doing:

 cluster.authenticate(new PasswordAuthenticator(""user"", ""pw""));

This adds some friction to the user experience since the user
first needs to figure out what an authenticator is, which instance
one should be using and so forth.

Modifications
-------------
This changeset adds a simple overload which should suffice most
of the time and will allow the user just to authenticate with
a username and a password string like this:

 cluster.authenticate(""user"", ""pw"");

The old overload is still available for advanced use cases of
course.

Result
------
Much easier way to authenticate against a cluster with user
credentials.

Change-Id: Icb8aa20fd5f3da44436dd5e8745ebdb95fe11173",0,0,0,0,0,0,0,0,0
76638,I93f6c51af0665cd4530819f03523e4738fbc7759,http://review.couchbase.org/#/c/76638,2,189af4cb3b3f15999c09457f0f8eb7bde41afc83,2c5d043dacca11c185d1c0410f4527e7c1171f80,1,11/04/17,14/04/17,148,JCBC-1055: Add support for ephemeral bucket management.,"JCBC-1055: Add support for ephemeral bucket management.

Motivation
----------
This changeset adds support for ephemeral bucket management, since
adding and removing ephemeral buckets is needed once Couchbase
Server 5.0 ships.

Modifications
-------------
Both the encoding and decoding part of BucketSettings has been adapted
so that the new EPHEMERAL bucket type is respected.

Note that there are still advanced options missing on the builder for
all kinds of bucket types, but those can/will be added in subsequent
changesets.

Tests added for 5.0+.

Result
------
Support for ephemeral bucket management.

Change-Id: I93f6c51af0665cd4530819f03523e4738fbc7759",0,0,1,0,0,0,1,0,0
77007,Ie5a6b82241152d843eddea761057599a93f91abe,http://review.couchbase.org/#/c/77007,4,2c5d043dacca11c185d1c0410f4527e7c1171f80,15229c1710f155de1887deafb48ff288ed001a03,1,18/04/17,21/08/17,127,JCBC-1071 Use mock dep from core-io and add support,"JCBC-1071 Use mock dep from core-io and add support

Motivation
----------
KV error map test using mock is added to the core-io. Extend the support
for integration tests to java-client.

Changes
-------
This is an extension of JVMCBC-418.
Adds very similar mock support here for use on need.

Results
-------
Mock can be enabled by test properties.

Change-Id: Ie5a6b82241152d843eddea761057599a93f91abe",0,1,1,0,0,0,1,2,1
77257,I80b143282345a183368b5d46d141addd74b4132c,http://review.couchbase.org/#/c/77257,2,1ea681f5064ca4494cf704d9ff51700a0d93771e,31e24c78a75980da99f5619a14ceae9d030de958,1,24/04/17,27/04/17,16,JCBC-1074 Support GetUsers change in returning domain instead of type,"JCBC-1074 Support GetUsers change in returning domain instead of type

Motivation
----------
Server returns User's domain instead of type

Changes
-------
Read domain from server response. User object will also contain domain
instead of type.

Change-Id: I80b143282345a183368b5d46d141addd74b4132c",0,0,1,0,0,0,1,0,0
77432,Ie11efcd1a9e1cd5dc0b43acc89b5c9ca497fde30,http://review.couchbase.org/#/c/77432,3,96603a856166ec9f75733ab298b73ed1479d949c,0503b32e2eea78a4b4f17c9e923334286252fe82,1,27/04/17,27/04/17,17,Fix compilation errors,"Fix compilation errors

Change-Id: Ie11efcd1a9e1cd5dc0b43acc89b5c9ca497fde30",0,0,0,1,0,0,1,0,0
77516,Ifd71e5f8704c81d7fd20c64f2e2d08ce395b0505,http://review.couchbase.org/#/c/77516,9,2c3455f81bb1eae3e4dc9e737cbaba66934dcdf1,ab96f235c21402d3f9adf2a915d772eb6ec8c012,1,28/04/17,10/07/17,265,Supporting changes for JVMCBC-423,"Supporting changes for JVMCBC-423

Change-Id: Ifd71e5f8704c81d7fd20c64f2e2d08ce395b0505",0,1,1,1,0,0,1,1,1
77541,I94f5df56b0e5a08b77cd3229a42c21f012ea9cf3,http://review.couchbase.org/#/c/77541,2,1f89f00a4c1463ba875984e3b00f8631e0beb9bb,e1af1059363847cd8868802d05700bb0be340b3f,0,01/05/17,01/05/17,4,Update Spymemcached to 2.12.3,"Update Spymemcached to 2.12.3

Change-Id: I94f5df56b0e5a08b77cd3229a42c21f012ea9cf3",1,0,0,1,0,0,1,NA,NA
77612,I8469a68b4ea1c34adf8d1d955a6a76acd4281329,http://review.couchbase.org/#/c/77612,2,6230de78a6ea4a48dd952440a8bb1a2ca088940c,231a1f9896c272ac6d23cea1111b638720014098,0,02/05/17,02/05/17,6,Prepare 2.4.5 release,"Prepare 2.4.5 release

Change-Id: I8469a68b4ea1c34adf8d1d955a6a76acd4281329",1,0,0,1,0,0,1,NA,NA
77723,I4137729c664c7016b4e03b59f2436e8ca39f3c05,http://review.couchbase.org/#/c/77723,4,15f449f4734d8f52b14a9b13babfa1b6f8729b9d,1c1235f70a35e21bed91dea26dc171837eab6d89,1,04/05/17,02/06/17,126,JCBC-1080 Expose full doc set/get through subdoc builders,"JCBC-1080 Expose full doc set/get through subdoc builders

Motivation
----------
Support full doc set/get with xatts using subdoc

Changes
-------
Add upsert() and get() for full document set and get in MutateIn and
LookupIn builders respectively. Expose createDocument in MutateIn
builders for allowing to send docFlags through
SubMultiMutationDocOptionsBuilder.

Results
-------
Full document set/get is now possible. Tests are covered in
SubdocumentExtendedAttributesTest.

Change-Id: I4137729c664c7016b4e03b59f2436e8ca39f3c05",0,1,0,0,0,0,1,0,0
77737,I3eec47b3d02d249de957ec62e5b8832e33a337fd,http://review.couchbase.org/#/c/77737,2,17c79ee39eb2ec6c830645a748d29313049a4355,d8d105b272f95e55072a1d44e119b83ce8761555,1,04/05/17,05/05/17,149,JCBC-1078 Rename attributeAccess to xattr as per RFC change,"JCBC-1078 Rename attributeAccess to xattr as per RFC change

Change-Id: I3eec47b3d02d249de957ec62e5b8832e33a337fd",0,0,0,1,0,0,1,0,0
78197,I2bb8c14879106def32e145917fbf603e96523085,http://review.couchbase.org/#/c/78197,3,1b8ac2037388cef6ef245055722f6dec5ff0cfc8,7a2e6cacaeee8313874807f1b6d3fd3a9226341d,1,16/05/17,01/06/17,2,"Change data_reader_writer role to separate roles data_reader, data writer","Change data_reader_writer role to separate roles data_reader, data writer

Server has updated them to be separate roles
https://github.com/couchbase/ns_server/commit/0038200eddba441182cf1743420cef78bad88029

Change-Id: I2bb8c14879106def32e145917fbf603e96523085",0,0,0,0,0,0,0,0,0
78709,I25a4b48fe11c29b7de2732b2549b8694da08ccc1,http://review.couchbase.org/#/c/78709,2,1c3c66b1fcb86502aa7d936c01a95c607ee132ff,ef78695da3dab143a733335bfc5c0d8f9a1dc7f0,0,29/05/17,29/05/17,4,2.4.6 Development,"2.4.6 Development

Change-Id: I25a4b48fe11c29b7de2732b2549b8694da08ccc1",1,0,0,1,0,0,1,NA,NA
78720,Ib455c55a7e0f184b1085e6ed34c13396d0a723cb,http://review.couchbase.org/#/c/78720,3,ef78695da3dab143a733335bfc5c0d8f9a1dc7f0,47214072f5ae3b219ea2a0f88bff2ab892393a46,1,30/05/17,30/05/17,84,Adapt java-client for recent core-io changes.,"Adapt java-client for recent core-io changes.

Motivation
----------
This changeset makes changes to java-client in order to use the
changed internal API, modified in recent JVMCBC-* changes.

Change-Id: Ib455c55a7e0f184b1085e6ed34c13396d0a723cb",0,0,0,0,0,0,0,0,0
78765,I29bed3350cfb642c0bb6e75b2d95e0b65bd3f4c0,http://review.couchbase.org/#/c/78765,2,47214072f5ae3b219ea2a0f88bff2ab892393a46,be87d37ad2b6044f7bc11ef8a6faf1b4cd9891d5,1,30/05/17,30/05/17,10,JCBC-1079: Avoid implict reverse DNS lookups.,"JCBC-1079: Avoid implict reverse DNS lookups.

Motivation
----------
During bootstrap when assembling the seed nodes, we don't need
to use the hostname but can use the host address directly, which
will avoid reverse DNS lookups.

Modifications
-------------
Codepaths have been modified to use the address instead of the
hostname. Note that down in core-io the NetworkAddress has been
introduced but we don't need to force it into these codepaths
just yet.

Result
------
No implicit reverse DNS lookups.

Change-Id: I29bed3350cfb642c0bb6e75b2d95e0b65bd3f4c0",0,0,0,0,0,0,0,0,0
79116,I916a319045d9d708a68b86c5a3cf5fef07c16940,http://review.couchbase.org/#/c/79116,2,426a1861d403e6f41b6c6448c64673a0ae8a6fa3,d71222c1f3f1f2eb4044c7ae527a589248f11f52,0,06/06/17,06/06/17,6,Prepare 2.4.6 Release,"Prepare 2.4.6 Release

Change-Id: I916a319045d9d708a68b86c5a3cf5fef07c16940",1,0,0,1,0,0,1,NA,NA
79393,Id2d14dd3d2d1339eadbd4b953551cef0a05e5f3f,http://review.couchbase.org/#/c/79393,6,d71222c1f3f1f2eb4044c7ae527a589248f11f52,cc8b67bbc9beb2fbbd2878c245c324a5fd7a3dfa,1,12/06/17,10/07/17,138,Supporting client changes for JVMCBC-430,"Supporting client changes for JVMCBC-430

Motivation
----------
Set createdocument value in AsyncMutateInBuilder in Single path mutation
commands

Changes
-------
- Pass the createDocument value to Single path mutation requests in core

Results
-------
createDocument value is used. Verification tests in
SubDocumentDocumentFlagsTests pass.

Change-Id: Id2d14dd3d2d1339eadbd4b953551cef0a05e5f3f",0,1,0,0,0,0,1,0,0
79483,I7b687c959787790e7661b627d11a155f83cbda17,http://review.couchbase.org/#/c/79483,5,70960600b715afb371cc2c610887a9065dad3232,0e5a40742dbbd844690bb251329a7b6df7acfe73,1,14/06/17,10/07/17,127,WIP: enhanced error msgs,"WIP: enhanced error msgs

Change-Id: I7b687c959787790e7661b627d11a155f83cbda17",0,1,0,1,0,0,1,0,0
79520,I3c5b6bcaaa7699dffcb5c8377870705943f62385,http://review.couchbase.org/#/c/79520,7,fd48edb51b6b70a42a385bc8c79f05ba8bb72da9,9499652624e6d6ae48c3183fcd16ccc2af6a4550,1,14/06/17,21/08/17,275,User management recent changes,"User management recent changes

wip

Change-Id: I3c5b6bcaaa7699dffcb5c8377870705943f62385",0,1,0,0,0,0,1,0,0
79717,I68d37332d5eb1363f4a391b72b235841c6e808e2,http://review.couchbase.org/#/c/79717,2,a7962b811c6613ccc3fcc072fd30d9b99e008d9b,dfa42240b87253c15d45c35694acc842a04fd402,0,20/06/17,20/06/17,4,Start 2.4.7 Development,"Start 2.4.7 Development

Change-Id: I68d37332d5eb1363f4a391b72b235841c6e808e2",1,0,0,1,0,0,1,NA,NA
80007,Ie0e95a7b38c2f8b8e85118748971f247cbeb49e7,http://review.couchbase.org/#/c/80007,3,dfa42240b87253c15d45c35694acc842a04fd402,0950d1746073472e41f9e2c16fbc00bdf2ca344b,1,26/06/17,26/06/17,6,Override core-io builder.,"Override core-io builder.

Change-Id: Ie0e95a7b38c2f8b8e85118748971f247cbeb49e7",1,0,0,1,0,0,1,0,0
80008,Ibc42b763014656fa88b19de83f750218e45a3cf3,http://review.couchbase.org/#/c/80008,2,0950d1746073472e41f9e2c16fbc00bdf2ca344b,49acaf3c4fb3cd1d47eb4b249b671a378f50d8c6,0,26/06/17,30/06/17,2,JCBC-1090: Fixes DNS SRV Regression caused by JCBC-1079,"JCBC-1090: Fixes DNS SRV Regression caused by JCBC-1079

Motivation
----------
JCBC-1079 introduced a regression into DNS SRV bootstrap where
a NPE is raised incorrectly, preventing it from working correctly.

Modifications
-------------
It turns out when a DNS SRV host string is passed in it doesn't make
much sense to try to extract an IP address from it, since the whole
point is getting SRV records (its not an A-Record).

Result
------
Fixes the regression and restoring functionality back from 2.4.5 to
make DNS SRV work again.

Change-Id: Ibc42b763014656fa88b19de83f750218e45a3cf3",0,0,1,0,0,0,1,NA,NA
80433,Iba51930a4d6995772e8886856989d92e60eae665,http://review.couchbase.org/#/c/80433,2,49acaf3c4fb3cd1d47eb4b249b671a378f50d8c6,174d96da5854b42a66dead430c75595baef0885a,1,10/07/17,10/07/17,18,Override core-io Builder setters.,"Override core-io Builder setters.

Change-Id: Iba51930a4d6995772e8886856989d92e60eae665",0,0,0,1,0,0,1,0,0
80443,Ib1aa0f0276147977fe81bcfefb92f80f7906cc14,http://review.couchbase.org/#/c/80443,7,904fbd3452506fb9705327630ec892253979087f,e6489fb518cdd7ad8ff3635925d38963ec47322d,1,10/07/17,17/08/17,163,WIP: Experimental ReplicaGetHelper,"WIP: Experimental ReplicaGetHelper

Change-Id: Ib1aa0f0276147977fe81bcfefb92f80f7906cc14",0,1,0,1,0,0,1,0,0
80522,I96e436c8cdc9234f7d9dcd2b5fd8cc3b6e85aefc,http://review.couchbase.org/#/c/80522,2,778bb99153a5370009899445ed40bc1f209f2b2a,d4ce774481b6651c8dc31e1423aa55cd3421f20e,1,11/07/17,11/07/17,2,Fix hardcoded subdoc counter createDocument value,"Fix hardcoded subdoc counter createDocument value

Change-Id: I96e436c8cdc9234f7d9dcd2b5fd8cc3b6e85aefc",0,0,0,1,0,0,1,0,0
80556,Id3614b447d35adc9373e0857d731d947b625a458,http://review.couchbase.org/#/c/80556,2,d4ce774481b6651c8dc31e1423aa55cd3421f20e,7e9ed9e07fef0a94585cfd8e5e7dccc2afc13137,0,12/07/17,12/07/17,6,Prepare 2.4.7 Release,"Prepare 2.4.7 Release

Change-Id: Id3614b447d35adc9373e0857d731d947b625a458",1,0,0,1,0,0,1,NA,NA
80570,Ibaf1fe838548cf2ffd74da381b60176d894d5ed0,http://review.couchbase.org/#/c/80570,3,7e9ed9e07fef0a94585cfd8e5e7dccc2afc13137,92bb7277d2abb28eaa412e82d2eaf0fd4ec43da3,1,12/07/17,12/07/17,310,testing fixes...,"testing fixes...

Change-Id: Ibaf1fe838548cf2ffd74da381b60176d894d5ed0",1,0,0,1,0,0,1,0,0
80659,I46dc0dfc237c49effaae7c931e4ac01cbf18afaa,http://review.couchbase.org/#/c/80659,2,92bb7277d2abb28eaa412e82d2eaf0fd4ec43da3,f41c8febb8ec0b4ddb1f8f70030f3c830ffb2281,0,13/07/17,13/07/17,4,Start 2.4.8 Development,"Start 2.4.8 Development

Change-Id: I46dc0dfc237c49effaae7c931e4ac01cbf18afaa",1,0,0,1,0,0,1,NA,NA
81520,I50d70ac85b8a8844a279902299ddd97a490b5f71,http://review.couchbase.org/#/c/81520,3,c503b30d49f02d0fe7b46efeb6e872e00ea04cf7,823e52d361a4041eb94d007df2600f00aeab0d7e,1,28/07/17,17/08/17,7,Override CoreEnvironment hook changes on Builder API.,"Override CoreEnvironment hook changes on Builder API.

Change-Id: I50d70ac85b8a8844a279902299ddd97a490b5f71",0,0,0,1,0,0,1,0,0
81998,If87d7b7741366805bf97a0931c5d7d9c10cd8f53,http://review.couchbase.org/#/c/81998,2,a6977d9244eea7b5872459b816cc3ee52a8982e8,700c11b06e36379b955146413eb882e91fb0c0c1,1,07/08/17,08/08/17,28,Start 2.5.0 Development,"Start 2.5.0 Development

Change-Id: If87d7b7741366805bf97a0931c5d7d9c10cd8f53",0,0,0,1,0,0,1,0,0
82004,I96e22d864fbb527f3d0cf2448d741e9d6965d387,http://review.couchbase.org/#/c/82004,3,eff9582ed68ffab31d57e2afca7ef6610a6a7602,562b7311926cc4d37462a643a230fc1d794cc7d4,1,07/08/17,09/08/17,25,JCBC-1098 : N1qlQueryExecutor is allocating twice the memory it needs,"JCBC-1098 : N1qlQueryExecutor is allocating twice the memory it needs

Motivation
----------
When the netty ByteBuf is not backed by a byte array.
N1qlQueryExecutor#executeQuery is allocating the byte array twice.
the first time in TranscoderUtils#byteBufToByteArray
the second with Arrays#copyOfRange

Modifications
-------------
this patch add a specialized version of
TranscoderUtils#byteBufToByteArray (copyByteBufToByteArray) that only
call Arrays#copyOfRange if the ByteBuf is backed by a byte array.

Result
------
greatly reduce the n1ql memory allocation

Change-Id: I96e22d864fbb527f3d0cf2448d741e9d6965d387",0,0,0,0,0,0,0,0,0
82241,I8a8f33b4bef53eb9f704c462dfb3a93cfb63f22d,http://review.couchbase.org/#/c/82241,2,562b7311926cc4d37462a643a230fc1d794cc7d4,cc96bf9470482829333f3cc6a85407afa8e355c0,1,14/08/17,14/08/17,18,JCBC-1105: Make custom param settings deterministic in order.,"JCBC-1105: Make custom param settings deterministic in order.

Motivation
----------
Both the DefaultBucketSettings and the N1qlParams have HashMaps
which allow to store ""custom"" params which in turn get stored
in a JSON array on the wire. While the order for them ultimately
don't matter, there is a certain expectation that the insert
order is preserved, and it also helps with assertability
in unit tests.

Modifications
-------------
The HashMap instances are replaced with LinkedHashMap instances
that preserve the insertion order. This also resulted in small
changes for the N1qlParamsTest which now has unit tests (correctly)
failing on OSX (they always did on linux as CI showed) and they
are now corrected.

Result
------
Deterministic behavior based on insertion order for the N1ql custom
params as well as the bucket settings.

Change-Id: I8a8f33b4bef53eb9f704c462dfb3a93cfb63f22d",0,0,0,0,0,0,0,0,0
82344,I01d9a64e6314a24a46aa504838bde1aa6e6a6417,http://review.couchbase.org/#/c/82344,3,cc96bf9470482829333f3cc6a85407afa8e355c0,56d2d507f466ff19f9e4e2682a0cef3a8c8ceadd,1,16/08/17,17/08/17,135,JCBC-1106: Add additional N1QL Params.,"JCBC-1106: Add additional N1QL Params.

Motivation
----------
The server from time to time adds new query options which help
customizing behavior or optimize for certain scenarios. While
the Java SDK provides the possibility to add all kinds of custom
query params, exposing the common ones as first-class builder
methods is desired to steer the user in the right direction
and to also enforce some kind of typesafety.

Modifications
-------------
This changeset adds the following four query params:

 - readonly
 - pipeline_batch
 - pipeline_cap
 - scan_cap

The first one can be used to tighten security-concious apps and
the other three can be used to fine-tune query performance.

Result
------
Easier accessible query options following the addition of those
params from the server side. As a caveat, they might not be
available against all server versions though.

Change-Id: I01d9a64e6314a24a46aa504838bde1aa6e6a6417",0,0,0,0,0,0,0,0,0
82444,I8383a3017fe8cbd21d1b330a44c5020c5cfd61b1,http://review.couchbase.org/#/c/82444,3,56d2d507f466ff19f9e4e2682a0cef3a8c8ceadd,8daf62cf3a65613033ac212ab65b7eca2a337885,1,18/08/17,18/08/17,234,JCBC-1082: Implement support for Subdoc GetCount,"JCBC-1082: Implement support for Subdoc GetCount

Motivation
----------
In Couchbase Server 5.0, a new lookup command (get count) is introduced
which allows to fetch the number of items for a given path in a document.

Modifications
-------------
This changeset adds support for the lookup in builder (and async version)
so that they support taking getCount as arguments. Tests are adapted to
test both the single and multi case variants.

Result
------
java-client support for subdocument get count.

Change-Id: I8383a3017fe8cbd21d1b330a44c5020c5cfd61b1",0,0,0,0,0,0,0,1,1
82453,I96568b7f4ff952deb39a231b1d0625959f2a0ff4,http://review.couchbase.org/#/c/82453,3,8daf62cf3a65613033ac212ab65b7eca2a337885,be2831e36f2c1e620adc7eb95f0037ccdd25727d,1,18/08/17,18/08/17,78,JCBC-1115: Enforce Xattr first ordering on subdoc builders.,"JCBC-1115: Enforce Xattr first ordering on subdoc builders.

Motivation
----------
When using the subdoc xattr API, a server side constraint is that
the xattr-based commands always need to come before the non-xattr
ones.

This should be enforced on the client side to give rapid feedback
and not wait for cryptic errors at runtime.

Modifications
-------------
This changeset introduces a new subdoc exception and modifies both
the lookup and the mutation builder to enforce the constraint
at execute() time.

Result
------
The server-side requirement is enforced at the client side, leading
to rapid feedback.

Change-Id: I96568b7f4ff952deb39a231b1d0625959f2a0ff4",0,0,0,0,0,0,0,0,0
82495,Ie11cda1b605421d0f120e232dfba81c5cad82ec8,http://review.couchbase.org/#/c/82495,2,072e957331c17e5c33e0cf779b2f6a99c81fe1ec,8bb74cf76fb00dfa28d37ca978e222c5bb34ecac,0,21/08/17,21/08/17,2,Bump the mock to 1.5.9,"Bump the mock to 1.5.9

Change-Id: Ie11cda1b605421d0f120e232dfba81c5cad82ec8",0,0,0,1,0,0,1,NA,NA
82498,Ia898d9070c1082e9d76f3a6db673c9dbff1935e1,http://review.couchbase.org/#/c/82498,2,2eab1a1373ca3841a4538518c8420fde0b3b8be2,d9b841c8281aba05b97102cf909fa9cfa0fddeb1,1,21/08/17,21/08/17,76,JCBC-1100: Document that expiry on counter only works on creation.,"JCBC-1100: Document that expiry on counter only works on creation.

Motivation
----------
An edge case happens with counters and expiry in that the expiry
is only honored when the document is created, not updated. This
differs as with the other commands  but is currently a limitation
on the server.

Modifications
-------------
To clarify, all affected javadoc blocks have been updated with
a note.

Result
------
Less confusion when reading the javadoc about this edge case.

Change-Id: Ia898d9070c1082e9d76f3a6db673c9dbff1935e1",0,0,0,0,0,0,0,0,0
82507,I09dd37fd60034e49ce6f54b7e60cad9ade9fd839,http://review.couchbase.org/#/c/82507,2,350fa8fd662154e2595707e32f3626ab7a30d2bc,5208066bf046766f5b27e04cbaf1e1ae961fc250,1,21/08/17,22/08/17,150,JCBC-1111: Handle LOCKED in conversions.,"JCBC-1111: Handle LOCKED in conversions.

Motivation
----------
As port for XERROR and Couchbase Server 5.0, we need to properly
handle the LOCKED response code coming from core-io.

Modifications
-------------
First a new battery of tests has been added to avoid regressions
and cover all the previous use cases. Then the bucket and subdoc
helper converters are modified to map the LOCKED status to their
backwards compatible counterparts.

Result
------
Properly handling the new LOCKED status code in combination with
XERROR and 5.0

Change-Id: I09dd37fd60034e49ce6f54b7e60cad9ade9fd839",0,0,0,0,0,0,0,0,0
82626,I19c04696c1b217cac10089c3b0b91b2768e0ebb1,http://review.couchbase.org/#/c/82626,2,5208066bf046766f5b27e04cbaf1e1ae961fc250,9ccd9338993cc15e2ad25b9391dcc7a9defee2ef,1,23/08/17,23/08/17,107,JCBC-1117: Add test case for CoreSendHook,"JCBC-1117: Add test case for CoreSendHook

Motivation
----------
core-io added the send hook but a test case to both document and
make sure no regressions are introduced should be added.

Modifications
-------------
As part of adding the test is was discovered that the artificial
limitation added to deferAndWatch (only work on subjects) needs
to be lifted because chained in observables are not subjects
anymore at this point, but it has been stable enough to do just
that confidently.

The test adds a hook which records an upsert operation and its
latency, asserting on the result and also logging it, acting
as an example.

Result
------
Adding a core hook and recording operations as a regression test
as well as sample code.

Change-Id: I19c04696c1b217cac10089c3b0b91b2768e0ebb1",0,0,0,0,0,0,0,0,0
82684,Ia0ffd4c41daf9bafb872c7b98e8cdf734adbfd4b,http://review.couchbase.org/#/c/82684,2,9ccd9338993cc15e2ad25b9391dcc7a9defee2ef,2d1976f9b67377879647005a410167c0ee73a653,1,24/08/17,24/08/17,10,Extend SendHookTest to access opaque.,"Extend SendHookTest to access opaque.

Change-Id: Ia0ffd4c41daf9bafb872c7b98e8cdf734adbfd4b",0,0,0,1,0,0,1,0,0
83033,If1da08a38c8d879a799ee9fcc51920bb725188f6,http://review.couchbase.org/#/c/83033,2,2d1976f9b67377879647005a410167c0ee73a653,a26d36027061e9010de8903d227c716c85bb0b97,0,01/09/17,01/09/17,4,Add missing bracket to fix markdown link,"Add missing bracket to fix markdown link

Fixes #20

Change-Id: If1da08a38c8d879a799ee9fcc51920bb725188f6",0,0,0,0,0,0,0,NA,NA
83035,Id184d439c5fe9ceed712a6e41854a06e5a514fc4,http://review.couchbase.org/#/c/83035,4,62dd7c88872c7a13f286ee029751c13c12a22f37,57f9f5928297f2c4d700dda0984568994ff5ae2f,1,01/09/17,05/09/17,154,Supporting client changes for JVMCBC-431,"Supporting client changes for JVMCBC-431

Motivation
----------
Include support for insert document and access deleted in MutateIn and
LookupIn respectively.

Changes
-------
Add insertDocument and accessDeleted flags to be set on the subdoc
builders and pass it onto core.

Result
------
Subdocument additions now match the rfc and are verified through
integration tests.

Change-Id: Id184d439c5fe9ceed712a6e41854a06e5a514fc4",0,1,1,0,0,0,1,0,0
83081,Ibfd15a7b3cc786b2a162532fe93ca4535ddb5a74,http://review.couchbase.org/#/c/83081,6,d50de3b6d7acc9842c4ff4c8d498698fc3b75688,030ac033a522b91e7909f00cfdf6ba83bff9d089,1,04/09/17,05/09/17,42,WIP: Health Check from java-client,"WIP: Health Check from java-client

Change-Id: Ibfd15a7b3cc786b2a162532fe93ca4535ddb5a74",0,1,0,1,0,0,1,0,0
83129,I0f6db96d42ad1f2b44fa42e53652faf085de8403,http://review.couchbase.org/#/c/83129,2,030ac033a522b91e7909f00cfdf6ba83bff9d089,9772d4a962d697adb8ec1435f0ab0c75c6ea9834,1,06/09/17,06/09/17,108,JCBC-1126: Promote Experimental APIs where appropriate.,"JCBC-1126: Promote Experimental APIs where appropriate.

Motivation
----------
This changeset works through all the experimental APIs and promotes them to
uncommited & committed where appropriate.

Especially most of the FTS API has been mature enough so its worth promoting it
in 2.5.0.

Change-Id: I0f6db96d42ad1f2b44fa42e53652faf085de8403",0,0,0,0,0,0,0,0,0
83156,I5ca4f641d40753b83b5d05eefcd3bffa81667e51,http://review.couchbase.org/#/c/83156,2,9772d4a962d697adb8ec1435f0ab0c75c6ea9834,969653fa54f67a74cef640c0dde04d0700642a6f,0,06/09/17,06/09/17,6,Prepare 2.5.0 release,"Prepare 2.5.0 release

Change-Id: I5ca4f641d40753b83b5d05eefcd3bffa81667e51",0,0,0,1,0,0,1,NA,NA
83445,I3e1b1c12daa217dfcd3aa0092d47b11884d2b9d7,http://review.couchbase.org/#/c/83445,3,969653fa54f67a74cef640c0dde04d0700642a6f,471f31c96f12cc73cbe8b18018401a8114dcea1b,1,17/09/17,19/09/17,4,JCBC-1131: Registering a custom Transcoder has no effect,"JCBC-1131: Registering a custom Transcoder has no effect

Propagate openBucket's `transcoders` parameter instead of ignoring it.

Change-Id: I3e1b1c12daa217dfcd3aa0092d47b11884d2b9d7",0,0,0,0,0,0,0,0,0
83725,I5fd21a92f1202e88c4b34c99b3dc314a2cf56dab,http://review.couchbase.org/#/c/83725,2,bee16608a9c5a0a33559c98db68e00eb08910861,d633737b366d099e8f31e366c32a917c6f85d2b5,1,26/09/17,27/09/17,100,JCBC-1129: Update Subdoc API to match RFC,"JCBC-1129: Update Subdoc API to match RFC

Modifications
-------------
This changeset performs two changes:
  - it sets the API to committed
  - it update the createDocument to upsertDocument, deprecating the
    old one.

Change-Id: I5fd21a92f1202e88c4b34c99b3dc314a2cf56dab",0,0,0,0,0,0,0,0,0
83816,I4db5d29f6ef9d57976d7dc3e529a472f58afa1d1,http://review.couchbase.org/#/c/83816,2,d633737b366d099e8f31e366c32a917c6f85d2b5,f765e12ee63cb427e8f3343800071e6ec6259df8,0,28/09/17,29/09/17,1,JCBC-1137: CouchbaseMock needs to be a test dependency.,"JCBC-1137: CouchbaseMock needs to be a test dependency.

CouchbaseMock is used in testing, but the test scope modifier
has gone missing - this needs to be readded so its not pulled
in as a downstream dependency!

Change-Id: I4db5d29f6ef9d57976d7dc3e529a472f58afa1d1",0,0,0,0,0,0,0,NA,NA
83946,I780e1393ce5adf74e61a41b954bdfbd12442faab,http://review.couchbase.org/#/c/83946,2,f765e12ee63cb427e8f3343800071e6ec6259df8,b004e42ee9176d1367e4cd6753fa534ad0dd35e0,0,03/10/17,03/10/17,6,Prepare 2.5.1 Release,"Prepare 2.5.1 Release

Change-Id: I780e1393ce5adf74e61a41b954bdfbd12442faab",0,0,0,1,0,0,1,NA,NA
83964,I8a84947960ec9c7e508eef79b808936b6f7ee28f,http://review.couchbase.org/#/c/83964,2,b004e42ee9176d1367e4cd6753fa534ad0dd35e0,35ceb8fa62e5d79876f70d7952d0fe1609467df3,0,03/10/17,03/10/17,11,Update developer list in pomfile,"Update developer list in pomfile

Change-Id: I8a84947960ec9c7e508eef79b808936b6f7ee28f",0,0,0,1,0,0,1,NA,NA
83965,Ic4458d04971552709950a4315ffa8f9dc67decf2,http://review.couchbase.org/#/c/83965,3,35ceb8fa62e5d79876f70d7952d0fe1609467df3,454dd86eafa8a54de8da913b7cf120ec640c1b2d,0,03/10/17,03/10/17,4,Start 2.5.2 Development,"Start 2.5.2 Development

Change-Id: Ic4458d04971552709950a4315ffa8f9dc67decf2",0,0,0,1,0,0,1,NA,NA
84196,Ic7166a1dadaaefebc6b88c4397c893f30ebe81d1,http://review.couchbase.org/#/c/84196,2,61c930a838578c7e6eeb358119094dc7716e6c9f,bc09c209e20c2a06fe5a401a0854bddbd1c2d3e6,0,10/10/17,10/10/17,4,Start 2.4.8 Development,"Start 2.4.8 Development

Change-Id: Ic7166a1dadaaefebc6b88c4397c893f30ebe81d1",0,0,0,1,0,0,1,NA,NA
84198,Idaab0429d40774c3bc67eac294ab4e9c6f0c0a3c,http://review.couchbase.org/#/c/84198,3,57c88e200928003a0b122a5500326ad9900068cd,5e352bd3069a293f4f42b8b05ae21a22b58be0ee,1,10/10/17,12/10/17,301,JCBC-1141: Add ByteArrayDocument & Transcoder,"JCBC-1141: Add ByteArrayDocument & Transcoder

Motivation
----------
In the past, the canonical document type users were falling
back to when dealing with raw byte buffers is the BinaryDocument.
Because this document type puts the burden of refcounting on the
user, lots of edges can come up which need to be dealt with on
a case-by-case basis.

Modifications
-------------
This changeset introduces a new document & transcoder which
operates on a byte[] which, at the cost of a memcopy, allows
users to deal with raw data but don't have to care about
refcounting and edge cases. It has been useful in the past
in specific deployments, so it makes sense to provide it to
the broader public as well.

Result
------
A new document type which should be used in general over the
very specific BinaryDocument type.

Change-Id: Idaab0429d40774c3bc67eac294ab4e9c6f0c0a3c",0,0,0,0,0,0,0,0,0
84255,I2c215ad0beb05266f49f19874d4673b195695f03,http://review.couchbase.org/#/c/84255,3,2d76654313b068cf5a464adf359b0bade4516ce3,bcc6dd36c7ce1e38a8a74d287298c86e109c2cb2,1,11/10/17,11/10/17,48,JCBC-1140: Optimize object decoding from direct byte buffers.,"JCBC-1140: Optimize object decoding from direct byte buffers.

Motivation
----------
When retrieving a document Bucket#get the netty buffer content is
duplicated before the parsing by Jackson, since it is converted from
a direct buffer into a byte array.

Modifications
-------------
Wrap the ByteBuf in an inputstream. Jackson now directly parse the netty
ByteBuf content without having to do an additional memory copy.

Result
------
Reduced memory allocations
YMMV but in our test it was a ~10% reduction

Change-Id: I2c215ad0beb05266f49f19874d4673b195695f03",0,0,0,0,0,0,0,0,0
84365,Ia8595d3ab880558667ecd40a343e4867de588142,http://review.couchbase.org/#/c/84365,2,9d40c2b532e0e93c1fc19869b5c7a6a955d3c8a1,4dc25bd611a77eee80c54a952ac7bbaf5d36319e,1,13/10/17,16/10/17,18,Add sslTruststore overrides,"Add sslTruststore overrides

Change-Id: Ia8595d3ab880558667ecd40a343e4867de588142",0,0,1,1,0,0,1,0,0
84498,I24915a91f9f87e55bfc43f2c5ac6d9d56586f220,http://review.couchbase.org/#/c/84498,2,627baa4eaf9fde76a85c8b122317719ba1825e62,d00c3cbbbdbf790dd29a01e0c16db53ec35350bd,0,17/10/17,17/10/17,4,Prepare 2.4.8 Release,"Prepare 2.4.8 Release

Change-Id: I24915a91f9f87e55bfc43f2c5ac6d9d56586f220",1,0,0,1,0,0,1,NA,NA
84749,I966ae0fb940295004bce94d5a02a5458fd2c889b,http://review.couchbase.org/#/c/84749,3,b78a96b4028ffba8dd228ac3f6f09feb60f96a9f,58d00dcb1a657d7f054bd45e65994c0c5e3ba16f,1,24/10/17,30/10/17,335,JCBC-1142: Rename createParents to createPath,"JCBC-1142: Rename createParents to createPath

Motivation
----------
As part of the XATTR/Subdocument RFC it was decided
to unify the ""createParents"" attribute to ""createPath""
which better reflects the user intent.

Modifications
-------------
This changeset applies this change in a fully backwards-
compatible manner. API has been renamed where either internal
or just using boolean flags. In the other places where actually
method changes are needed, the appropriate methods have been
marked as deprecated and the right proper methods implemented
in addition.

Result
------
The Java SDK now properly exposes ""createPath"" instead of
""createParents"", but its still available for backwards
compatibility and will be only removed with the next major
SDK bump.

Change-Id: I966ae0fb940295004bce94d5a02a5458fd2c889b",0,0,1,0,0,0,1,0,0
84870,I4956c6a5fa59e5a8f06088379656d54d3bdf26ab,http://review.couchbase.org/#/c/84870,5,75e4f0aac00f02c91582442aa849f0e1329da9a6,293f728b5a6448a8fdc7e4cba1ff0797d354c1b2,1,29/10/17,30/10/17,32,JCBC-XXX: RetryBuilder - last error should not be caught.,"JCBC-XXX: RetryBuilder - last error should not be caught.

Motivation
----------
The RetryBuilder (and subsequently the RetryWhenFunction)
fails to propagate the source exception when its exactly
the last retry attempt.

Modifications
-------------
This changeset fixes this edge case by first checking if
the given exception is part of the list to accept and if
not it propagates it right away before first checking
if the number of attempts is over.

Result
------
If a different exception is raised at the last retry
attempt, it is now propagated directly and not turned
into a composite CannotRetryException.

Change-Id: I4956c6a5fa59e5a8f06088379656d54d3bdf26ab",0,1,0,0,0,0,1,0,0
84871,Ic79950c1e1c712a62be7816097ef9bdddf58db6d,http://review.couchbase.org/#/c/84871,2,e517e6b4fa7908963a0bb19191d01e3ea028065c,04e0a3e3d77ec50045ee1c7e5dc12fab4769b566,1,29/10/17,30/10/17,6,JCBC-1143: Remove outdated experimental javadoc for FTS.,"JCBC-1143: Remove outdated experimental javadoc for FTS.

It is already marked as committed, the leftover javadoc
is an oversight.

Change-Id: Ic79950c1e1c712a62be7816097ef9bdddf58db6d",0,0,0,0,0,0,0,0,0
84874,I9e1adfad503f6eadfe166ed573ec563734b120b2,http://review.couchbase.org/#/c/84874,2,229f1ea35f7fcdba472a19039be94340128fa89d,2dd0918811b2c8705dd1acc6badcb8450478c994,1,29/10/17,30/10/17,6,Override core-io configPollFloorInterval Builder.,"Override core-io configPollFloorInterval Builder.

Change-Id: I9e1adfad503f6eadfe166ed573ec563734b120b2",0,0,0,1,0,0,1,0,0
84887,Ie108b32ac82c01659ee54c0ea33ab89711b9393d,http://review.couchbase.org/#/c/84887,2,3d3a260f544633790e5dd013aaad97a4df56762f,561440759805f709f7e7cedebf2e2054e392d14f,1,30/10/17,30/10/17,8,JCBC-1141: Mark ByteArrayDocument/Transcoder as Uncommitted.,"JCBC-1141: Mark ByteArrayDocument/Transcoder as Uncommitted.

Marking this document/transcoder as uncommitted for now and plan
is to mark it as committed in the next minor version (2.6.0).

Change-Id: Ie108b32ac82c01659ee54c0ea33ab89711b9393d",0,0,0,0,0,0,0,0,0
85247,I845f89cb873ed721971e2aa80973dd301bd26dd7,http://review.couchbase.org/#/c/85247,2,561440759805f709f7e7cedebf2e2054e392d14f,147430dd1f67c9002d700443d819a69eb216f002,0,08/11/17,08/11/17,6,Prepare 2.5.2 Release,"Prepare 2.5.2 Release

Change-Id: I845f89cb873ed721971e2aa80973dd301bd26dd7",0,0,0,1,0,0,1,NA,NA
85841,I4c9b1b45d7111d1ddf4b7dfbea70d5ef501653f0,http://review.couchbase.org/#/c/85841,2,80fea0321136097cd3e89c9d69fbf99fd7fdcf52,a90b9fc1197bfe26f5e25b22eedfc0df436feebb,1,21/11/17,22/11/17,1,JCBC-1152: Handle LOCKED with GetAndLock,"JCBC-1152: Handle LOCKED with GetAndLock

Motivation
----------
Couchbase Server 5.1+ (and maybe a bugfix release post 5.0) will
also properly send LOCKED on GetAndLock which the SDK needs to
handle appropriately.

Change-Id: I4c9b1b45d7111d1ddf4b7dfbea70d5ef501653f0",0,0,0,0,0,0,0,0,0